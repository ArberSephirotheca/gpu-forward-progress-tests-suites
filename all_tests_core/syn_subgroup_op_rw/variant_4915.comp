#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))), _GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-25984))), min(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-25984))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-25984))), (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-25984)))) ^ 0)))) << 0, max((_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY(-25984, 0 | (-25984)))))) << 0, (_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_IDENTITY(_GLF_FUZZED(-25984), (_GLF_FUZZED(-25984)) * 1)))) << 0))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1))), 1, 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))))))), (bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))) || false)), true && (bool(_GLF_IDENTITY(bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))))))), (bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-616.458)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))) || false))))) || false) || false))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false), true))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), ! (! (_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), int(4)))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(int(2), int(2))))), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))) | (0 << _GLF_IDENTITY(int(4), int(4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true && (_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), (_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(17394) : 4)))))))))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), ! (! (_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), int(4)))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(int(2), int(2))))), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))) | (0 << _GLF_IDENTITY(int(4), int(4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true && (_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), (_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(17394) : 4)))))))))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), false)))), true, true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(int(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))))))))), (ivec4(_injected_loop_counter, 1, 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(int(_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))))))))) / ivec4(1, 1, 1, 1))) ^ ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0)))))) > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, false)), (bool(bvec3(bool(bvec4(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, false))) && true))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 & 80203) ^ (4))), min(int(_GLF_IDENTITY(4, (0 & 80203) ^ (4))), int(_GLF_IDENTITY(4, (0 & 80203) ^ (4)))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))) - (0 & 97277), ((0 << _GLF_IDENTITY(int(4), int(4))) - (0 & 97277)) | _GLF_IDENTITY(0, ~ (~ (0))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(int(4), int(4)))))))))))))), false), false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0)))))) > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4))), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(1, max(1, 1)), 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0), 0, 0, 0))), int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 0), (ivec4(_injected_loop_counter, 1, 1, 0)) ^ ivec4(0, 0, 0, 0)))))) > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 0)))), int(4)))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), 0 ^ ((0 << _GLF_IDENTITY(int(4), int(4)))))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), int(4)))))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))), (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))) && true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) - (0 & 97277)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), false), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true)))), true))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ _GLF_IDENTITY((int(4)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((int(4)))))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << (0 >> _GLF_IDENTITY(int(0), int(0))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) / 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))))))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4)))))))))))), false), false))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))) || false), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), int(4)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), true, false, true)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))), true, false, true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20634) : 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4))))))))))))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20634) : 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4))))))))))))))) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(int(4))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))))))))))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))), false))))))), false)))), ! (! (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), int(ivec2(int(4), 0))))), (int(4)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) >> 0, ((int(4)) >> 0) | ((int(4)) >> 0)))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), int(4)) : _GLF_FUZZED(_injected_loop_counter))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), true, true))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), true, true)))))))), true && (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), true, true))))))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false))))))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), int(4)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec3(_GLF_IDENTITY(4, (4) | (4)), 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), ~ (~ (_GLF_IDENTITY(4, (4) | (4)))))))) >> 0)), int(_GLF_IDENTITY(4, (4) >> 0))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), true && (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), true && (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | 0))))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))), true && (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)))))))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, 0 ^ (0)) << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), clamp(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-64946)))) >> 0) << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, _GLF_IDENTITY(0, 0 ^ (0)))))))))))) || false))))))))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (int(_GLF_IDENTITY(4, (4) | (4)))) / 1), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (int(_GLF_IDENTITY(4, (4) | (4)))) / 1), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (int(_GLF_IDENTITY(4, (4) | (4)))) / 1), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(ivec3(0 << _GLF_IDENTITY(int(4), int(4)), 0, (0 | 0))), 0 ^ (int(ivec3(0 << _GLF_IDENTITY(int(4), int(4)), 0, (0 | 0)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(32330)))) + 0)))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))))))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), 0 ^ ((0 << _GLF_IDENTITY(int(4), int(4)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) ^ 0))) << 0), int(4))))))))))) || false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), clamp(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), int(ivec2(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4)))), 1))), 0 << _GLF_IDENTITY(int(4), int(4)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0)))), clamp((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0)))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0)))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(82440)))) | 0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(82440)))) | 0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7712.6327)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4)))), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), _GLF_IDENTITY(bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0) : _GLF_FUZZED(-47675)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0) : _GLF_FUZZED(-47675)))))))), false || (bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0) : _GLF_FUZZED(-47675))))))))))))))) || false)))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4)))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 0 ^ (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) ^ 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) << 0) << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))), bool(_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), (_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), false || (bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))) || false)))))))) || false)), bool(bvec4((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 0 ^ (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) ^ 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) << 0) << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))), bool(_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), (_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), false || (bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))) || false)))))))) || false)), false, false, false)))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))))))), true && (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4)))))))))))))))))), false), false)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), true, true))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), true, true)))))))), true && (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), true, true))))))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false))))))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), int(4)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec3(_GLF_IDENTITY(4, (4) | (4)), 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), ~ (~ (_GLF_IDENTITY(4, (4) | (4)))))))) >> 0)), int(_GLF_IDENTITY(4, (4) >> 0))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), true && (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))), true && (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | 0))))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))), true && (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (1 ^ 1), 1)), min(int(ivec4(4, 1, (1 ^ 1), 1)), int(ivec4(4, 1, (1 ^ 1), 1)))))), int(4))) + 0)))))))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, 0 ^ (0)) << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), clamp(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-64946)))) >> 0) << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, _GLF_IDENTITY(0, 0 ^ (0)))))))))))) || false))))))))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (int(_GLF_IDENTITY(4, (4) | (4)))) / 1), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (int(_GLF_IDENTITY(4, (4) | (4)))) / 1), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (int(_GLF_IDENTITY(4, (4) | (4)))) / 1), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(ivec3(0 << _GLF_IDENTITY(int(4), int(4)), 0, (0 | 0))), 0 ^ (int(ivec3(0 << _GLF_IDENTITY(int(4), int(4)), 0, (0 | 0)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(32330)))) + 0)))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))))))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), 0 ^ ((0 << _GLF_IDENTITY(int(4), int(4)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) ^ 0))) << 0), int(4))))))))))) || false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), clamp(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), int(ivec2(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4)))), 1))), 0 << _GLF_IDENTITY(int(4), int(4)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0)))), clamp((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0)))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0)))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(82440)))) | 0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(82440)))) | 0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7712.6327)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4)))), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), _GLF_IDENTITY(bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0) : _GLF_FUZZED(-47675)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0) : _GLF_FUZZED(-47675)))))))), false || (bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0) : _GLF_FUZZED(-47675))))))))))))))) || false)))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(_GLF_IDENTITY(4, (4) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4)))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 0 ^ (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) ^ 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) << 0) << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))), bool(_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), (_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), false || (bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))) || false)))))))) || false)), bool(bvec4((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))), bool(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 0 ^ (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) ^ 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) << 0) << _GLF_IDENTITY(int(4), int(4))) + 0)))), (_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))), bool(_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), (_GLF_IDENTITY(bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0))))), false || (bool(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0)), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) + 0)))))))) || false)))) || false)))))))) || false)), false, false, false)))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))))))), true && (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-30930))), int(4))), (int(4)) << 0), int(4)))))))))))))))))), false), false))))))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), int(4)))))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), min((0 << _GLF_IDENTITY(int(4), int(4))), (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), min((0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, 4))))), (0 << _GLF_IDENTITY(int(4), int(4)))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4))))))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), int(ivec2((0 << _GLF_IDENTITY(int(4), int(4))), 1)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), int(ivec2((0 << _GLF_IDENTITY(int(4), int(4))), 1)))))), false)), bool(bvec3(bool(bvec2((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), int(ivec2((0 << _GLF_IDENTITY(int(4), int(4))), 1)))))), false)), false, false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ((_GLF_IDENTITY(4, min(4, 4)))) | ((_GLF_IDENTITY(4, min(4, 4))))) | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | 0), 2, 2))), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-52579) : _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))) | (int(4)), clamp((int(4)) | (int(4)), _GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | _GLF_IDENTITY((int(4)), ((int(4))) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1), clamp(_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1), _GLF_IDENTITY(_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1), ~ (~ (_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1)))), _GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1))))))), (int(4)) | (int(4)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), false, true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), true)), true, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((0 << _GLF_IDENTITY(int(4), int(4)))) | 0), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((0 << _GLF_IDENTITY(int(4), int(4)))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0)))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))))))), false || (_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), int(ivec4((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (0 ^ 1)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), int(ivec4((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (0 ^ 1))))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), int(ivec4((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (0 ^ 1))))))))))))))))))), false), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))))), (bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true && (_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), clamp(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), int(4)))))), (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), int(4))))))) || false))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), min((0 << _GLF_IDENTITY(int(4), int(4))), (0 << _GLF_IDENTITY(int(4), int(4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4))))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | 0), 2, 2))), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) | (int(4)), clamp((int(4)) | (int(4)), _GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) | (_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1))), (int(4)) | (int(4)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 1 * (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (true ? 0 << _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(_injected_loop_counter)))), (0 << _GLF_IDENTITY(int(4), int(4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), int(4))), 0 | (~ (_GLF_IDENTITY(int(4), int(4)))))))) | 0)) / 1)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))) >> _GLF_IDENTITY(int(6), int(6)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, (0) ^ 0)), 2, 2))), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(4)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) | (int(4)), clamp((int(4)) | (int(4)), _GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4))))) | (_GLF_IDENTITY((int(4)) | (int(4)), ((int(4)) | (int(4))) * 1))), (int(4)) | (int(4)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) / 1)) * 1)), 1 * (0 << _GLF_IDENTITY(int(4), int(4))))))))))))) && true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), false, false)), false))))), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), false, false)), false))))), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), 0 + (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))))))))), false), false, false)), false, false)), false))))), _GLF_IDENTITY(false, (false) && true)), false)))))))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-821.451)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0)))).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))).x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38), clamp(vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38), vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38), vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38)))))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))).x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38), clamp(vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38), vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38), vec2(_GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, float(mat2(-6.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0)))))), 38.38)))))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false)))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)))))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, 0u)));
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(429.639, 75.36)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) || false)))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))), true && ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))), true && ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, true)))))))))))))))))))), false), true, true)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(bvec3(bool(bool((! (false)))), false, true)))))))))), ! (! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), false, true)))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), false, true)))))), _GLF_IDENTITY(bool(bool((! (false)))), bool(bool(_GLF_IDENTITY(bool(bool((! (false)))), bool(bvec3(bool(bool((! (false)))), false, true))))))))))))))) || false)))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sqrt(-3.7)) : injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sqrt(-3.7)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sqrt(-3.7)) : injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))) - 0.0), (false ? _GLF_FUZZED(sqrt(-3.7)) : injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))), false, false, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, (false ? _GLF_FUZZED(-74.38) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, float(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.4, 9451.9058, 9.1, 1.5)) : mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, (false ? _GLF_FUZZED(-74.38) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2454.8664, 46.15, -78.52, 70.53)) : mat2(1.0)))) + sqrt(sin(vec2(0.0, 0.0))))), injectionSwitch)).x, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), (false ? _GLF_FUZZED(vec2(-194.340, 1.2)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).x))))) > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((mat4x2(9.7, -1.0, 5.0, -1.2, 44.72, -9.5, -7.6, -6.5) * vec4(-6.3, 9152.9314, 58.04, -3.7)).x)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((mat4x2(9.7, -1.0, 5.0, -1.2, 44.72, -9.5, -7.6, -6.5) * vec4(-6.3, 9152.9314, 58.04, -3.7)).x)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))), ((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((mat4x2(9.7, -1.0, 5.0, -1.2, 44.72, -9.5, -7.6, -6.5) * vec4(-6.3, _GLF_IDENTITY(9152.9314, 1.0 * (9152.9314)), 58.04, -3.7)).x)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((mat4x2(9.7, -1.0, 5.0, -1.2, 44.72, _GLF_IDENTITY(-9.5, (-9.5) + 0.0), -7.6, -6.5) * vec4(-6.3, 9152.9314, 58.04, -3.7)).x)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true)), true, true)))))))))))))))))))))) || false)), _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), true)))))))) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) * (1 ^ 0)))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) * 1u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | 0u) / 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((~ (0u)) >> 0u, ((~ (0u)) >> 0u) - 0u))))) << 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))), (true ? _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), min(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), clamp(max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)))), max(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))))) : _GLF_FUZZED(workgroup_size))), (true ? _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(max(uint(0u), uint(0u)), (max(_GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(uint(0u), 0u, 0u, 1u)), min(uint(uvec4(uint(0u), 0u, 0u, 1u)), uint(uvec4(uint(0u), 0u, 0u, 1u))))), uint(0u))), uint(0u))) ^ 0u)) : _GLF_FUZZED(workgroup_id))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), true, true, true)))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))) / 1.0)), cos(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(489.436)), bool(false))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, log(1.0), 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, log(1.0), 0.0, 1.0)), max(determinant(_GLF_IDENTITY(mat2(1.0, log(1.0), 0.0, 1.0), (mat2(1.0, log(1.0), 0.0, 1.0)) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), determinant(mat2(1.0, _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-1.7)), bool(false))), 0.0, 1.0))))) + 0.0), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 44.26))), float(injectionSwitch.y), bool(true)))))) * 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))))), round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))))), round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))))), round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.8, (false ? _GLF_FUZZED(534.394) : -8.8)), float(mat2x4(-8.8, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), _GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true)))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0 + (injectionSwitch.y))) * 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(91.40)), 0.0 + (float(_GLF_FUZZED(91.40)))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true)))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), _GLF_IDENTITY(1.0, float(float(1.0))), 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true)))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (true ? float(mat2x3(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-9245.6750)))), exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true)))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), (false ? _GLF_FUZZED(594.509) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(91.40)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(99.23)))))))), float(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-8.8, float(mat2x4(-8.8, 1.0, 0.0, exp(0.0), log(cos(0.0)), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true)))))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.y)), (false ? _GLF_FUZZED(724.075) : _GLF_IDENTITY(((injectionSwitch.y)), clamp(((injectionSwitch.y)), ((injectionSwitch.y)), ((injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), (true ? _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-699.685) : 1.0))))) : _GLF_FUZZED(-9.5))))) / 1.0)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, abs(1.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, abs(1.0), 0.0), transpose(transpose(mat2(injectionSwitch, abs(1.0), 0.0)))))))), vec2(mat3x4(vec2(_GLF_IDENTITY(mat2(injectionSwitch, abs(1.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, abs(1.0), 0.0), transpose(transpose(mat2(injectionSwitch, abs(1.0), 0.0)))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), true, false)))))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), (bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))) && true)))))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) || false))))), bool(bool(false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(bool(false)))) || false, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(bool(false)))) || false), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(bool(false)))) || false)), bool(bvec2(bool(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(bool(false)))) || false)), false))))) || false)) && true))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false)))))))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), max(uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), max(uint(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | (virtual_gid)), virtual_gid, virtual_gid))], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u)), uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), max(uint(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | (virtual_gid)), virtual_gid, virtual_gid))], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u)), uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)))), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), max(uint(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | (virtual_gid)), virtual_gid, virtual_gid))], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u)), uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)))), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)), max(uint(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid]))) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), (buf[virtual_gid]) - 0u)))))) >> 0u))))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y)))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(1u, (1u) << 0u) * (uint(5u)))), ~ (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(1u * (uint(5u)), ~ (~ (_GLF_IDENTITY(1u * (uint(5u)), (1u * (uint(5u))) << 0u)))))), uint(_GLF_IDENTITY(uvec3(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(1u * (uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))), (1u * _GLF_IDENTITY((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))), clamp((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))), ((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u))))) | ((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))), 0u | ((uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u))))))))) | _GLF_IDENTITY((1u * (uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u))))), ((1u * (uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (5u))), 5u)))))) - 0u)))), 0u, 1u), uvec3(uvec3(uvec3(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 1u * (uint(5u)))), 0u, 1u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 1u))) : _GLF_FUZZED(atomicAdd(virtual_gid, subgroup_size))))), ((next_virtual_gid)) | (_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((next_virtual_gid)), (~ ((next_virtual_gid))) | (~ ((next_virtual_gid))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((next_virtual_gid)), (~ ((next_virtual_gid))) | (~ ((next_virtual_gid))))), (~ (_GLF_IDENTITY(~ ((next_virtual_gid)), (~ ((next_virtual_gid))) | (~ ((next_virtual_gid)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u)))))], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (true ? _GLF_IDENTITY(1 * (64), clamp(1 * (64), 1 * (64), 1 * (64))) : _GLF_FUZZED(-36771)))))))), ~ (~ (64))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(_GLF_IDENTITY(4, min(4, 4)))) | (int(_GLF_IDENTITY(4, min(4, 4))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)) || _GLF_IDENTITY(false, true && (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) - 0.0)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))))));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), ((_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))))))) || false))) || _GLF_IDENTITY(false, ! (! (false)))))) && true))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(6.2, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2197.1349)), max(_GLF_IDENTITY(float(_GLF_FUZZED(2197.1349)), (float(_GLF_FUZZED(2197.1349))) + 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(2197.1349)), (float(_GLF_FUZZED(2197.1349))) - 0.0))), float(_GLF_IDENTITY(6.2, clamp(6.2, _GLF_IDENTITY(6.2, 0.0 + (6.2)), 6.2))), bool(true))))), bool(false))) > injectionSwitch.y)))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), false || (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-34.49), _GLF_FUZZED(1.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false || (true))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
               else
                {
                }
              }
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))), max(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875))))))) | (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))))))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44875)))))))), 64, 4);
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, true, true))))
        {
         subgroupAll(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}
