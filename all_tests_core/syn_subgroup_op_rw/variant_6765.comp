#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 ivec3 _f0;
 uint next_virtual_gid;
 vec2 _f1;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 mat3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat4x2 _f1;
 bool _f2;
 bool _f3;
 mat2 _f4;
 mat2x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4x2 _f1;
 vec4 _f2;
 vec2 _f3;
 ivec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 uint subgroup_size;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 uint _f1;
 bool _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 bvec2 _f1;
 mat3 _f2;
 _GLF_struct_0 _f3;
 mat4x2 _f4;
 _GLF_struct_1 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.y = subgroup_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat2(1.0), _GLF_struct_7(mat4(1.0), bvec3(true), mat4x3(1.0), gl_SubgroupSize, _GLF_struct_3(1.0, mat4x2(1.0), vec4(1.0), vec2(1.0), ivec3(1), mat4(1.0)), _GLF_struct_4(1, mat4x2(1.0), true, true, mat2(1.0), mat2x3(1.0), mat3x2(1.0)), _GLF_struct_5(mat3x4(1.0), mat3(1.0), uvec2(1u)), _GLF_struct_6(mat4(1.0), vec3(1.0), 1u)));
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z = _GLF_struct_replacement_8._f1.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.z = workgroup_id;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat4x2(1.0), bvec2(true), mat3(1.0), _GLF_struct_0(mat3x4(1.0), 1u), mat4x2(1.0), _GLF_struct_1(bvec3(true), 1u, true, workgroup_size * GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.z));
 uint subgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.y * GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z;
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.y = subgroup_base;
 uint virtual_gid = _GLF_struct_replacement_2._f5.workgroup_base + GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.y + subgroup_local_id;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(ivec3(1), _GLF_struct_replacement_2._f5.workgroup_base + GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.y + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z), vec2(1.0));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.x = read;
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_struct_replacement_9.next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_9.next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.x, 4, 64, 4);
}
