#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups)))) | _GLF_IDENTITY((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(176904u, 90019u, 29101u)))))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(176904u, 90019u, 29101u)))))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(176904u, 90019u, 29101u)))))))), ((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(176904u, 90019u, 29101u))))))))) >> uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 1u, 1u)), (true ? uint(_GLF_IDENTITY(uvec3(workgroup_size, 1u, 1u), min(uvec3(workgroup_size, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(131648u) : _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (1u) | (1u)))), _GLF_IDENTITY(1u, min(1u, 1u))), uvec3(workgroup_size, 1u, 1u)))) : _GLF_FUZZED(110653u)))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3376.6375) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3353.3268) : 0.0)), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), false, false), bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), false, false), false)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), false, false), bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), false, false), false))))) || false)), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(3376.6375), mix(float(_GLF_FUZZED(3376.6375)), float(_GLF_FUZZED(-2.5)), bool(false))) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3376.6375) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true), true)), true))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3376.6375) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sqrt(1.0))))) - 0.0), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3376.6375) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3376.6375) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sqrt(1.0))))) - 0.0), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3376.6375) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) / 1.0)))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))), clamp((subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))), (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))), _GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))), ((subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size))))) / 1u))), (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))), (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(clamp(workgroup_id, workgroup_id, subgroup_size)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.1) : injectionSwitch.y)))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bool(_GLF_IDENTITY(true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), (true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))) || false)), true && (! (_GLF_IDENTITY(true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), (true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))) || false))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, true, true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, true, true)))))))))))) && true)), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, true, true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, true, true)))))))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec4(false, false, true, true)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), _GLF_IDENTITY(false, ! (! (false))), true, false)))) || _GLF_IDENTITY(false, (false) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))) || false)))) && true))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))) / 1u, ((subgroup_local_id + 1) / 1u) * 1u))) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u)), 0u + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u))))) / 1u) % subgroup_size)))))) >> 0u), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))) / 1u, ((subgroup_local_id + 1) / 1u) * 1u))) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u)), 0u + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u))))) / 1u) % subgroup_size)))))) >> 0u), 0u ^ (((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))) / 1u, ((subgroup_local_id + 1) / 1u) * 1u))) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u)), 0u + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u))))) / 1u) % subgroup_size)))))) >> 0u))), 0u)))));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))], _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 1)), 0 | (int(ivec2(4, _GLF_IDENTITY(1, min(1, 1))))))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), bvec2(bvec3(bvec2(false, false), false)))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (0 << _GLF_IDENTITY(int(7), int(7)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, 0 | (1 ^ 1))), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, 0 ^ (1 ^ 1))), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1))))))) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(25654) : _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(4), int(4)))), (1) - 0))) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, (true ? -84312 : _GLF_FUZZED(45332)))) : (_GLF_IDENTITY(1, (1) | (1)) ^ 1)))) / 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), _GLF_IDENTITY(clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)), (clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1))) >> 0)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), _GLF_IDENTITY(clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)), (clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1))) >> 0)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), _GLF_IDENTITY(clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)), (clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1))) >> 0)))))), (((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1)))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1)))))))) ^ 0))), _GLF_IDENTITY(clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) | (0)))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(1), 0 ^ (int(1))) : _GLF_FUZZED(41283))))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ 1)), ((false ? _GLF_FUZZED(-84312) : (1 ^ 1))) << 0))) / 1)), (clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(int(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0))))) | (_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, (-84312) | 0)) : (1 ^ 1)))) / 1))) >> 0))))) | (((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))), _GLF_IDENTITY(clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(5.0, 2.7)))).x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, (_GLF_IDENTITY(-84312, 0 | (-84312))) | (-84312))) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 + (0)) + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, 0 ^ (1 ^ 1))), _GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0))), ((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0)))) | 0)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0))), ((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0)))) | 0))), (~ ((false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0))), ((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0)))) | 0)))) | (~ ((false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0))), ((1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) - 0)))) | 0)))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> (0 >> _GLF_IDENTITY(int(4), int(4)))))))) / 1)), (clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-84312) : (1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)) * 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1)), clamp((false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1)), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1)), _GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1)), ((false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))) << 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-547.254, 3.2, 3174.0147, -967.663, -1894.4627, -6774.0180, 509.537, -79.08, -741.249, -9230.3986, -538.915, -1.2, -413.353, -1.5, -52.44, -6112.4931)) : _GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)))))))))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) / 1), min(_GLF_IDENTITY(int(1), (int(1)) / 1), _GLF_IDENTITY(int(1), (int(1)) / 1)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, min(1, 1)))))) / 1))) >> 0)))))) | ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ 1)), max(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ 1)), ((false ? _GLF_FUZZED(-84312) : (1 ^ 1))) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ 1)), ((false ? _GLF_FUZZED(-84312) : (1 ^ 1))) ^ 0), (_GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ 1)), ((false ? _GLF_FUZZED(-84312) : (1 ^ 1))) ^ 0)) >> (0 >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(int(true)))), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), (1 ^ 1))))), (_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(-84312) : (1 ^ 1)))) << 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(3.5)), bool(false))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(0), int(0))))) | _GLF_IDENTITY((1), (false ? _GLF_FUZZED((97829 * 82363)) : _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-85916) : (1)))))))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)))), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)), ~ (~ ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))) ^ 1), (false ? _GLF_FUZZED(-84312) : _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39577))) ^ 1), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39577))) ^ 1)) << _GLF_IDENTITY(0, clamp(0, 0, 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(bitCount(-47191)) : (1 ^ 1)))))))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1)))) >> 0), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) * 1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0))) ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)))), ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0)), (int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0))) - 0)), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0)), (int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0))) - 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0)), (int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0))) - 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0)), (int(_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) * 1), (1 ^ _GLF_IDENTITY(1, (1) * 1)) >> 0))) - 0)))))))), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-48.43)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-84312), clamp(_GLF_FUZZED(-84312), _GLF_FUZZED(-84312), _GLF_FUZZED(-84312))) : (1 ^ _GLF_IDENTITY(1, ~ (~ (1)))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))))), 0.0)), injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1) ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, ~ (~ (0))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)), (int(1)) / 1), (true ? _GLF_IDENTITY(int(1), (int(1)) / 1) : _GLF_FUZZED(-89234)))))) ^ _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1))))) | ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-84312), (_GLF_FUZZED(-84312)) >> 0) : (1 ^ 1))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, int(int(-84312)))) : (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1), 0 ^ (clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, 1)))) ^ 1))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))) ^ 1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / _GLF_IDENTITY(1, (1) >> 0))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39577))) ^ 1))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5))))))), ~ (~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), 1 * (int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (0 & -1085)), 0, (0 >> _GLF_IDENTITY(int(5), int(5)))), ~ _GLF_IDENTITY((~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))), ((~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(5), int(5))))))) >> ivec3(0, 0, 0))))))))))), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) ^ 0)))), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(sign((5489 - -78928))) : min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))))), 1, 1)))) ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-84312), (_GLF_FUZZED(-84312)) + 0) : (1 ^ 1)))) / 1)))), ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-84312) : (1 ^ 1))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) / 1) : _GLF_FUZZED(72823)))), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-12.27)), bool(false)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), max((1) | (1), _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), false, true, false))))) ? _GLF_IDENTITY(_GLF_FUZZED(-84312), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-84312)), (~ (_GLF_FUZZED(-84312))) | 0))) : (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (1) | 0)), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1))))) | _GLF_IDENTITY(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -8.0)))), injectionSwitch)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) >> 0)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) - 0.0)))), injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) - 0))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43736))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))) / _GLF_IDENTITY(1, (1) >> 0)))))), max(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -8.0)))), injectionSwitch)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) >> 0)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) - 0.0)))), injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) - 0))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43736))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))) / _GLF_IDENTITY(1, (1) >> 0)))))), _GLF_IDENTITY(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -8.0)))), injectionSwitch)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) >> 0)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) - 0.0)))), injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) - 0))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43736))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))) / _GLF_IDENTITY(1, (1) >> 0)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -8.0)))), injectionSwitch)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) >> 0)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) - 0.0)))), injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) - 0))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43736))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))) / _GLF_IDENTITY(1, (1) >> 0)))))), (((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -8.0)))), injectionSwitch)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) >> 0)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) - 0.0)))), injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) - 0))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43736))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))) / _GLF_IDENTITY(1, (1) >> 0))))))) >> 0)) | (((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -8.0)))), injectionSwitch)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) + (1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))) >> 0)))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) - 0.0)))), injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) - 0))) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43736))))))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))) / _GLF_IDENTITY(1, (1) >> 0))))))))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39577))) ^ 1)))))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, (_GLF_IDENTITY(-84312, (-84312) | 0)) | (-84312))) : (1 ^ 1))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, ~ (~ (1)))), 0 + (0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), min((false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max((1), (1))))) ^ 0)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) >> 0), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)))), ((_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, (-84312) - 0)) : (1 ^ 1))), min(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), (_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) << 0))), _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), clamp(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0), _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) / 1), (1 ^ 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-84312, max(_GLF_IDENTITY(-84312, (-84312) | (-84312)), -84312))) : (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0)) | (_GLF_IDENTITY(1, min(1, 1))))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(7.7)), bool(false)))) - 0.0)))) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, 0, 0))))) ^ 1), ~ (~ (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))), 1, _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, 0, 0))))) ^ 1)))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))) >> 0), (false ? _GLF_FUZZED(-84312) : (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) ^ 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-44.99)), float(injectionSwitch.x), bool(true))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-44.99)), float(injectionSwitch.x), bool(true)))))) << 0), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1))))) | ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1))), 0 | (min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)))))), 1, 1)) ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, (1) ^ 0), 0 ^ (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))) / 1)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (1 ^ 1)))) / 1)))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(-84312) : (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39577))) ^ 1))))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) << 0, int(int((int(_GLF_ONE(1.0, injectionSwitch.y))) << 0))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-9656.5326)), bool(false))))) << 0)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)), _injected_loop_counter)) != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)))], uint(1), 4, 64, 4);
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     subgroupBarrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)) & 1, (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
    {
     atomicStore(buf[virtual_gid], read, 4, 64, 4);
    }
  }
}
