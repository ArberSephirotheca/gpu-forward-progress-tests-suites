#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id, 1u * (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id))) | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(128936u, subgroup_id, true)) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id, 1u * (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id))) | 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id, 1u * (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id))) | 0u) | 0u))));
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)))) || false), ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false)))), ((! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false))))) || false))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))))) || false)))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))))) || false)))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false))), false))))))) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)))) || false), ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false)))), ((! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false))))) || false))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))))) || false)))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))))) || false)))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false))), false))))))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)))) || false), ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), false || (! (_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false)))), ((! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false))))) || false))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))))) || false)))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))))) || false)))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false))), false))))))) || false), true)))), false, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))) && true))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true))))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)) || false), true)))) && true)))))), true && (true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true))))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false)) || false), true)))) && true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true), false, false)))))), false || ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))))), bool(bool(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), (false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))) || false), true), false))), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) || false, false || ((_GLF_IDENTITY(! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true)))))))), false || (_GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) && true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true)))) || false), _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true, ((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true) && true))))) && true)), true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))))) || false), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true)))) || false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))))))), false || (true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))) || false), true)))))))))))))) && true)))), _GLF_IDENTITY(bool(bvec4((false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true)))) && true)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true)))) && true)), true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))))) || false), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), (! (_GLF_IDENTITY(! (false), (! (false)) && true))) && true))) || false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))))))), true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true)))))))))))) && true)))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true)))) && true)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true)))) && true)), true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))))) || false), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), (! (_GLF_IDENTITY(! (false), (! (false)) && true))) && true))) || false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))))))), true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true)))))))))))) && true)))), false, false, true)), ! (! (bool(bvec4((false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true)))) && true)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) && true)))) && true)), true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))))) || false), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), (! (_GLF_IDENTITY(! (false), (! (false)) && true))) && true))) || false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))))))), true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), true)))))))))))) && true)))), false, false, true))))))))))), bool(bool(! (false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
        break;
       return;
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(71530u, 194409u, 42875u)))).x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       do
        {
         GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))))[1], mix(_GLF_IDENTITY(float(injectionSwitch[_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1))) | (1))]), (false ? _GLF_FUZZED(step(radians(-434.655), 72.35)) : float(injectionSwitch[1]))), float(_GLF_FUZZED((6.9 - -1776.2219))), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) && true))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))], mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1]), float(_GLF_FUZZED((6.9 - -1776.2219))), bool(false))))).x) * abs(1.0)) > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false)))))), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || ((bool(false))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), (bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))))))))), (bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! (_GLF_IDENTITY((false), ((false)) && true))) || false))) || false), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, false)))), false)))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true))), true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))) && true)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true) && true))))))), false, true, true)), (bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))) && true)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true) && true))))))), false, true, true))) || false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false)))))), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), (bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, false)))), false)))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, true))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, false, true))) && true), true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))) || false), false, false, false)))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(21.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)))) < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false))))))))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))), false, true)))) && true)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))), false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(false, true && (false)) || ((bool(false)))))), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) || false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(false, true && (false)) || ((bool(false)))))), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) || false)), true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(false, true && (false)) || ((bool(false)))))), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) || false)), true, true, true))), bool(bvec4(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(false, true && (false)) || ((bool(false)))))), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) || false)), true, true, true))), true, false, true)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), (bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), false)))))), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, false)))), false)))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true), true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true), true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false || (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))), false, true, _GLF_IDENTITY(true, false || (true)))))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), false || ((bool(false)))))), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))), (! _GLF_IDENTITY((! _GLF_IDENTITY((bool(false)), false || ((bool(_GLF_IDENTITY(false, true && (false))))))), bool(bool((! _GLF_IDENTITY((bool(false)), false || ((bool(_GLF_IDENTITY(false, true && (false))))))))))) || false))) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), (bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, true, false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))), false || (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, true, false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), true)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), true), true, false)))), false)))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true), true))))), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool((true)))), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool((true)))), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) && true), true), true))))))), (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))) && true)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))) && true)))))), false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id, (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id) | 0u);
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (false || ((injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2822.3313), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bvec2((false), false))))), ! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bvec2((false), false)))))))), false, true, false)), bool(bvec3(bool(bvec4(! (false), false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, false))))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(vec4(1071.4756, -8.3, -2.4, -60.59).t)), bvec2(false, false))) * mat2(1.0))[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(vec2(injectionSwitch[_GLF_IDENTITY(0, (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (0))], injectionSwitch[1]), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((0.0), ((0.0)) + 0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((0.0), ((0.0)) + 0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4x3(_GLF_IDENTITY((0.0), ((0.0)) + 0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4x3(_GLF_IDENTITY((0.0), ((0.0)) + 0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4x3(_GLF_IDENTITY((0.0), ((0.0)) + 0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4x3(_GLF_IDENTITY((0.0), ((0.0)) + 0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) + 0.0)))))), vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true)))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, uvec2(1u, 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))).y) << 0u) * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (0 >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) && true))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.w, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x) : GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.w));
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id)).z;
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1)))))), false))), true))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))))));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)).w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z), ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z)) << 0u)) * subgroup_size + GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.z = virtual_gid;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base), clamp(~ (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base), ~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ~ (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base)))))) | (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base)).z;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z, clamp(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z))), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z)))) * subgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : ~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size, 0u ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base))))) - uvec4(0u, 0u, 0u, 0u))))).z, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base))))) - uvec4(0u, 0u, 0u, 0u))))).z, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base))))) - uvec4(0u, 0u, 0u, 0u))))).z)))) * subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size), min(_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size), (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size)) ^ 0u), ~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + _GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y + 1) % subgroup_size), (_GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y + 1) % subgroup_size), uint(uvec2(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y, (true ? GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y : _GLF_FUZZED(workgroup_base))) + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 0u)))) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) / 1u)) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) >> 0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y, (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y) + 0u), GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y, GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y)) + _GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))))) % subgroup_size), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z) + 0u) * subgroup_size + ((GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y + 1) % subgroup_size)) / 1u)) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-27506))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.x = next_virtual_gid) / 1u);
 do
  {
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.x = GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.x;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = read, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = read, 0u ^ (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = read)))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, _GLF_IDENTITY(false, true && (false)), true, false))), (_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, true, false)))) || false))))
    return;
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.y = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || (bool(bvec3(_GLF_DEAD(false), true, false)))))) && true), false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(31.21)), bool(false))), 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(31.21)), bool(false))), 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0))))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(float(float(injectionSwitch.x))), float(_GLF_FUZZED(6927.1310)), bool(false)))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true, false)))))));
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0), (_injected_loop_counter ++) << 0))
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.x], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))), min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))))))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, 0)) | (1)))), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) / 1))))))))) + 0))), 4, 64, 4);
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) / 1), (0)))))))), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) ^ (0 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0)))))), int(0))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 1)))), min((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(0) : _GLF_FUZZED(-12567)))) << 0))) ^ (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) << 0)), ~ (~ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) << 0))))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), int(ivec4((~ (0)), 1, 0, (0 ^ 1)))))))), int(0))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))))) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0)) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0)) >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(0, 0 | (0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), (int(0)) << 0))), int(0)))) | 0)) / 1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))), (0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(int(_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_IDENTITY(0, clamp(0, 0, 0))))), ~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))))) * 1)) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(1, max(1, 1)) * (_GLF_IDENTITY(int(5), (int(5)) | (int(5))))), _GLF_IDENTITY(int(5), 0 ^ (int(5))))), ((0 >> _GLF_IDENTITY(int(0), int(0))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> 0))))) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
  {
   if(GLF_merged4_0_1_16_1_1_17_2_1_11_3_1_14next_virtual_gidsubgroup_local_idvirtual_gidworkgroup_base.y + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))), subgroup_size))))], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.y, _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0, (0 & 73634) ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0)))))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0, (0 & 73634) ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0)))))), 0 ^ (~ (_GLF_IDENTITY(~ (max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0, 1 * (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0, (0 & 73634) ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 + (4)))), 4)), min(_GLF_IDENTITY((max(4, 4)), ((max(4, 4))) >> (3436 & 0)), (max(4, 4))))), clamp((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), (~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), _GLF_IDENTITY((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), int(ivec4((~ _GLF_IDENTITY((max(4, 4)), min((max(4, 4)), (max(4, 4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) >> 0)))))))))))), 64, 4);
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(false);
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        break;
       break;
      }
     atomicStore(buf[GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.y, 4, 64, 4);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (true))))) && true)))
      continue;
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false))))))) && true))) || false))))
    return;
  }
}
