#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 vec4 _f0;
 ivec2 _f1;
 bvec2 _f2;
 vec2 _f3;
 mat2x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 _GLF_struct_13 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 bvec2 _f1;
 float _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 _GLF_struct_11 _f1;
 bool _f2;
 ivec3 _f3;
 mat3x4 _f4;
 uint _f5;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 bvec2 _f1;
 vec4 _f2;
 mat3x4 _f3;
 mat4x2 _f4;
 mat4x3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat4x3 _f1;
 bool _f2;
 vec2 _f3;
 bvec3 _f4;
 vec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 uint subgroup_size;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 int _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec2 _f1;
 ivec2 _f2;
 vec4 _f3;
 mat3x4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat2x3 _f1;
 vec3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 mat4x2 _f2;
 vec2 _f3;
 mat2x3 _f4;
 _GLF_struct_12 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 float _f1;
 float _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 vec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 _GLF_struct_2 _f1;
 uvec4 _f2;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_7(vec4(1.0), mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), (mat4x2(1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0))) - mat4x2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(79.81))), 0.0, 0.0, 0.0, 0.0, 0.0))))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_4(mat3x2(1.0), mat2x4(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), bvec4(true)), _GLF_struct_5(true, uvec2(1u), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))) >> 0), clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat3x4(1.0), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6570.8566)), float(1.0), bool(true)))) - 0.0, mix(float((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6570.8566)), float(1.0), bool(true)))) - 0.0), float(_GLF_FUZZED(-4.0)), bool(false)))))), _GLF_struct_6(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findLSB(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 0u, (1u & 1u), 1u)))))))))), 1, _GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(1u)), max(~ (uvec2(1u)), ~ (uvec2(1u)))), min(_GLF_IDENTITY(~ (uvec2(1u)), max(~ (uvec2(1u)), ~ (uvec2(1u)))), _GLF_IDENTITY(~ (uvec2(1u)), max(~ (uvec2(1u)), ~ (uvec2(1u)))))), ~ (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(1u, (1u) + 0u))), ~ (_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(1u, (1u) + 0u)))), min(~ ((uvec2(_GLF_IDENTITY(1u, (1u) + 0u)))), ~ ((uvec2(_GLF_IDENTITY(1u, (1u) + 0u)))))))) >> uvec2(0u, 0u))), ~ (uvec2(1u)))))))), _GLF_struct_10(_GLF_struct_8(mat2x3(1.0), mat4x3(1.0), true, vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), min(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (vec2(1.0, 0.0))))), vec2(1.0, 0.0)))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))), float(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), bvec3(true), vec2(1.0), uvec2(1u)), gl_SubgroupSize, _GLF_struct_9(ivec2(1), bvec2(true), vec4(1.0), mat3x4(1.0), mat4x2(1.0), mat4x3(1.0), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(-73.47)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(4416.7441, (true ? 4416.7441 : _GLF_FUZZED(cos(-764.361)))))), bool(false))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 1.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4416.7441)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(normalize(tanh(-2844.1011))) : 1.0)), 1.0, 1.0)))))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false))), 0.0, abs(0.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, sqrt(1.0), 1.0, 1.0))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(79.21)), bool(false))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(tan(vec3(0.0, 0.0, 0.0))) + (vec3(0.0, 0.0, 0.0)))), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, 0.0))))), float(_GLF_FUZZED(54.55)), bool(false))))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-458.479) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.1)), float(0.0), bool(true))), 0.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)))))))), mat4x2(1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (_GLF_IDENTITY((1.0) / 1.0, (true ? (1.0) / 1.0 : _GLF_FUZZED(-49.10)))) * 1.0))), mat2x3(1.0), _GLF_struct_12(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), transpose(_GLF_IDENTITY(transpose((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : mat2(1.0))), mat2(1.0) * (_GLF_IDENTITY(transpose((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.2, 4523.4006, 70.15, 3210.7150)))), (false ? _GLF_FUZZED(mat2(5.4, -5.0, 3.7, 417.225)) : _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.2, 4523.4006, 70.15, 3210.7150)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.2, 4523.4006, 70.15, 3210.7150)))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.2, 4523.4006, 70.15, 3210.7150))))) + mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(transpose(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : mat2(1.0)), mat2(1.0) * ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : mat2(1.0))))), (transpose((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat2(-146.263, -5.6, 0.1, -1.8)) : mat2(1.0)))) * mat2(1.0))))))))), _GLF_struct_11(vec4(1.0), bvec2(true), 1.0, mat4x2(1.0), ivec3(1)), true, ivec3(1), mat3x4(1.0), 1u), _GLF_struct_14(mat4x3(1.0), _GLF_struct_13(vec4(1.0), ivec2(1), bvec2(true), vec2(1.0), mat2x3(1.0), ivec3(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))))), mat4x3(1.0), uvec3(1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? 1u : _GLF_FUZZED(subgroup_id)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(0.6)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(0.6)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)), true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(1u)), min(~ (uvec4(1u)), ~ (uvec4(1u)))))), _GLF_struct_2(_GLF_struct_0(mat3x2(1.0), mat2x3(1.0), ivec2(1), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), bvec3(true), _GLF_struct_1(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0)))), mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(336.983, 218.616, -818.649, 67.71, -763.759, -7947.3251, -74.15, 8.8, 8566.5749, 8466.1323, 821.348, 6.4, -0.9, -0.7, -7331.8135, 6.4)) : mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(336.983, 218.616, -818.649, 67.71, -763.759, -7947.3251, -74.15, 8.8, 8566.5749, 8466.1323, 821.348, 6.4, -0.9, -0.7, -7331.8135, 6.4)) : mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0)))), max(float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))))))) * 1.0), float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat4(float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))))))), float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))))))))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0))), min(vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-57.01)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(6.9) : (0.0))) / cos(0.0)))), 0.0))), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0)))))))), mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, abs(0.0)), (mat2x4(1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, abs(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec3(1.0))), uvec4(1u), gl_WorkGroupSize.x);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9574.4836), _GLF_FUZZED(478.640)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))).y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), mat4x3(mat4(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(90.04)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false)))), bool(true))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-9640.2201)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), min(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size, (_GLF_struct_replacement_3.workgroup_size) | (_GLF_struct_replacement_3.workgroup_size)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size, (_GLF_struct_replacement_3.workgroup_size) | (_GLF_struct_replacement_3.workgroup_size)))), min((~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size, (_GLF_struct_replacement_3.workgroup_size) | (_GLF_struct_replacement_3.workgroup_size)))), (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size, (_GLF_struct_replacement_3.workgroup_size) | (_GLF_struct_replacement_3.workgroup_size))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) - 0u), min(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) ^ (0u | 0u))), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))), (uint(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) >> 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)))) | 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(0u, (0u) / 1u)))) + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) - 0u) + subgroup_local_id, 0u ^ (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u), ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u)))), 0u)))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, uint(uvec2(_GLF_struct_replacement_15._f1.subgroup_size, 1u))), _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, uint(uint(_GLF_struct_replacement_15._f1.subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)), max(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size))) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)))))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, max(_GLF_struct_replacement_15._f1.subgroup_size, _GLF_struct_replacement_15._f1.subgroup_size))) - 0u)) - 0u) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false || (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_15._f1.subgroup_size), 0u + (~ (_GLF_struct_replacement_15._f1.subgroup_size))))), (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_15._f1.subgroup_size)))) + 0u), (subgroup_id * _GLF_struct_replacement_15._f1.subgroup_size) | (subgroup_id * _GLF_struct_replacement_15._f1.subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), max((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), clamp((subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id)))) + 1) * 1u), subgroup_local_id + 1))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), 1u * (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0), 1, 1)), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0), 1, 1))))) * 1u), subgroup_local_id + 1)))))))) % _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_struct_replacement_15._f1.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, min(_GLF_struct_replacement_15._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_15._f1.subgroup_size, 1u, 0u), min(uvec3(_GLF_struct_replacement_15._f1.subgroup_size, 1u, 0u), uvec3(_GLF_struct_replacement_15._f1.subgroup_size, 1u, 0u))))))), _GLF_struct_replacement_15._f1.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (true ? _GLF_struct_replacement_15._f1.subgroup_size : _GLF_FUZZED(workgroup_id)))), clamp((_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (true ? _GLF_struct_replacement_15._f1.subgroup_size : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY((_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (true ? _GLF_struct_replacement_15._f1.subgroup_size : _GLF_FUZZED(workgroup_id)))), ((_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (true ? _GLF_struct_replacement_15._f1.subgroup_size : _GLF_FUZZED(workgroup_id))))) | 0u), (_GLF_struct_replacement_15._f1.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_15._f1.subgroup_size, (true ? _GLF_struct_replacement_15._f1.subgroup_size : _GLF_FUZZED(workgroup_id)))))))))))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / sqrt(1.0)), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ceil(vec2(-7.2, 9370.8665))) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(-2.9, 5.9))))))[1]))))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, max(0u, 0u))), clamp((_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, max(0u, 0u))))))], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < _GLF_struct_replacement_15._f1.subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(7730) : 4)), (0 | 0), 1))), 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-34.21), max(true ? injectionSwitch.y : _GLF_FUZZED(-34.21), true ? injectionSwitch.y : _GLF_FUZZED(-34.21))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 219.304)) : injectionSwitch)), injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 219.304)) : injectionSwitch)), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 219.304)) : injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 219.304)) : injectionSwitch)), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 219.304)) : injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)))))), false, true, false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (sqrt(vec2(1.0, 1.0))) - vec2(0.0, 0.0))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), true, false, true))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), true, false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(sqrt(vec2(0.0, 0.0)))).x)) > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(sqrt(vec2(0.0, 0.0)))).x)) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) - tan(sqrt(vec2(0.0, 0.0)))).x)) > injectionSwitch.y)))))) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true)))) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, ~ (~ (4)))))) ^ (0 << _GLF_IDENTITY(int(7), int(7)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (true && (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(false)))), bool(bool(! (! (true && (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(false)))), bool(bool(! (! (true && (_GLF_DEAD(false)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(false)))), bool(bool(! (! (true && (_GLF_DEAD(false)))))))), false, true))))))))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), bool(bvec4(_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
