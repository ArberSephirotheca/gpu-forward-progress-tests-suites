#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec3 GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_id;
 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz = GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_4num_workgroupread;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.xy = GLF_merged2_0_1_13_1_1_4num_workgroupread;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.xy.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z;
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
  barrier();
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x;
 uint virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.z * GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.w + GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x;
 uint next_virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.z * GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.w + ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.w);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.xy.y = read;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1 < GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.w)
  {
   atomicStore(checker[virtual_gid], GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.xy.y, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], GLF_merged2_0_3_77_3_1_13GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_13_1_1_4num_workgroupreadsubgroup_idsubgroup_size.xyz.xy.y, 4, 64, 4);
   subgroupAll(true);
  }
}
