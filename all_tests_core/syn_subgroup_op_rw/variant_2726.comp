#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), 0u)), 0u, 0u) ^ (gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 0u)), 0u + (uint(uvec2(gl_WorkGroupID.x, 0u)))))) ^ 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], uint(uvec4(gl_WorkGroupID[0], 1u, 1u, 1u))), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 0u)), 0u + (uint(uvec2(gl_WorkGroupID.x, 0u)))))) ^ 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], uint(uvec4(gl_WorkGroupID[0], 1u, 1u, 1u))), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u), (false ? _GLF_FUZZED(usubBorrow(subgroup_size, num_workgroup, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 0u)), 0u + (uint(uvec2(gl_WorkGroupID.x, 0u)))))) ^ 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], uint(uvec4(gl_WorkGroupID[0], 1u, 1u, 1u))), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)), bvec2(true, false))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-63.95)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0) + (injectionSwitch)).x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) / sqrt(vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(8.6, 212.955))))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)))), bvec2(true, false))).y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, log(1.0))), (false ? _GLF_FUZZED(mat2(96.98, 7583.9815, -7.4, -6.2)[0]) : vec2(vec4(injectionSwitch, 1.0, log(1.0)))))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant(mat4(135.896, 35.82, 31.97, 899.092, -9.0, -408.037, 640.251, -2.2, -7534.2753, -97.17, -2.1, -8424.3647, 93.69, -642.505, -58.32, 7.2))) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) ^ 0u)) << (0u ^ 0u)) * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size) ^ 0u), max(~ ((subgroup_id * subgroup_size) ^ 0u), ~ ((subgroup_id * subgroup_size) ^ 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), ~ (~ (min(0u, 0u))))), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), ~ (~ (min(0u, 0u))))) : _GLF_FUZZED(num_workgroup))), 0u)), 0u)), 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, max(5u, 5u))) << 0u)), uint(5u)), ~ (~ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), max(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))), workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))), ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_base)))))), ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))), (false ? _GLF_FUZZED((workgroup_size << num_workgroup)) : _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))))))), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), clamp(~ (~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), uint(uvec3(~ (~ (workgroup_base + subgroup_base)), 1u, 1u))), ~ (~ (workgroup_base + subgroup_base)))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size)))) ^ 0u) : _GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(workgroup_base) : true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_base)))))), ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))), (false ? _GLF_FUZZED((workgroup_size << num_workgroup)) : _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) + _GLF_IDENTITY(0u, (0u) ^ 0u))))))), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), clamp(~ (~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), uint(uvec3(~ (~ (workgroup_base + subgroup_base)), 1u, 1u))), ~ (~ (workgroup_base + subgroup_base)))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size)))) ^ 0u) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(342.804)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-837.946) : injectionSwitch.x)))))), _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u, ((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u) << 0u)), workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (true ? ~ ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_id)))))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_base) : workgroup_base), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_base) : workgroup_base), ((false ? _GLF_FUZZED(subgroup_base) : workgroup_base)) * 1u)) / 1u)), min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(0u, 0u)), 0u)), 0u ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(0u, 0u)), 0u)))), 0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u)))))) | 0u)))), workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), ! (! (true && (true))))) || false)) ? workgroup_base + subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))))))))) | 0u))), ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) << 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) + 0u, clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) + 0u, max(((subgroup_local_id + 1) % subgroup_size) + 0u, ((subgroup_local_id + 1) % subgroup_size) + 0u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) + 0u, (((subgroup_local_id + 1) % subgroup_size) + 0u) | (((subgroup_local_id + 1) % subgroup_size) + 0u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) + 0u, (((subgroup_local_id + 1) % subgroup_size) + 0u) + 0u))))))), 0u | (((subgroup_local_id + 1) % subgroup_size))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))), ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), uint(uvec2(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), 0u ^ ((~ (workgroup_base + subgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size)))) + 0u)), 0u | (((subgroup_local_id + _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))) % subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) : _GLF_FUZZED(workgroup_size))), ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED((++ subgroup_size)))) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) + 0u, (((subgroup_local_id + 1) % subgroup_size) + 0u) | 0u)) >> 0u))), 0u | (((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))), ~ (~ (workgroup_base + subgroup_base))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))), ~ (~ (workgroup_base + subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))), ~ (~ (workgroup_base + subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))), ~ (~ (workgroup_base + subgroup_base))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) % subgroup_size))), ((~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) % subgroup_size)))) << 0u)) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size))))))), _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) + 0u))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))), ((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))) ^ (0u & 58180u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))), (false ? _GLF_FUZZED(uvec3(157578u, 105307u, 84496u)[0]) : _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))))))))), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) / 1u) + 0u) / 1u)) - (132141u & 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))))), 1u))))) / 1u))) % subgroup_size), (true ? (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) + 0u))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))), ((~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))) ^ (0u & 58180u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))), (false ? _GLF_FUZZED(uvec3(157578u, 105307u, 84496u)[0]) : _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))))))))), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) / 1u) + 0u) / 1u)) - (132141u & 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))))), 1u))))) / 1u))) % subgroup_size) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) >> 0u), _GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(0u ^ (~ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (~ (workgroup_base)), (0u ^ (~ (workgroup_base))) | 0u), 0u ^ (~ (workgroup_base))))))), min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u ^ (0u)), 0u)), 0u)), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)), (_GLF_IDENTITY((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)), ((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u))) | ((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u))))) * 1u))))), workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), max((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1)))))) % subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base)))))) * 1u))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), max((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))))) | ((subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95781)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95781)))) % subgroup_size)) >> 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) >> 0u), _GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(0u ^ (~ (workgroup_base)), max(_GLF_IDENTITY(0u ^ (~ (workgroup_base)), (0u ^ (~ (workgroup_base))) | 0u), 0u ^ (~ (workgroup_base))))))), min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u ^ (0u)), 0u)), 0u)), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)), (_GLF_IDENTITY((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)), ((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u))) | ((0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u))))) * 1u))))), workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), max((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1)))))) % subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) << (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))), (workgroup_base + subgroup_base)))))) * 1u))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) + 0u)), 0u | (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), max((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))))) | ((subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95781)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95781)))) % subgroup_size)) >> 0u))))) - 0u) | 0u), 0u, 1u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(426.392), _GLF_FUZZED((940.655 + -70.74))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(bool(bvec4(false, false, true, true)), true, false, true)))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-3.7))))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec2(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true))))))))), false || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true))))))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec3(! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), true, true, false)))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), true, true, false))), false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), true, true, false))), false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))), true, true, _GLF_IDENTITY(false, true && (false))))), false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true))))))), true, true, false))), false), true))))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), true, true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false)))) || false)), true))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), true, true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), false))))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), false))))))), true, true, false)))))), _GLF_IDENTITY(false, ! (! (false)))), true))))), false, true), false))))) || false))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || _GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true))))), ! (! (((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true))))))))))), ! (! (bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch))))))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)))))))))).x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)).x, 1.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-874.961)), vec2(_GLF_FUZZED((2.6 + 5648.5099)), ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(false, true)))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(2.9, min(2.9, _GLF_IDENTITY(2.9, min(2.9, _GLF_IDENTITY(2.9, mix(float(2.9), float(_GLF_FUZZED(-20.17)), bool(false))))))), 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch))))))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_FUZZED(vec2(2.9, 28.62)))[0], max((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[0])), (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), mix(vec2((vec2(_GLF_IDENTITY((_GLF_FUZZED(vec2(2.9, 28.62)))[0], max((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[0])), (_GLF_FUZZED(vec2(2.9, 28.62)))[1]))[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(-2.2), (vec2(_GLF_IDENTITY((_GLF_FUZZED(vec2(2.9, 28.62)))[0], max((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[0])), (_GLF_FUZZED(vec2(2.9, 28.62)))[1]))[1]), bvec2(false, true))), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(404.893, (404.893) * cos(0.0)), _GLF_IDENTITY(891.445, (891.445) - 0.0))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(cos(vec2(0.0, 0.0))))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false)))))), false))))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2(_GLF_IDENTITY((_GLF_FUZZED(vec2(2.9, 28.62)))[0], abs(1.0) * ((_GLF_FUZZED(vec2(2.9, 28.62)))[0])), (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0)), min(_GLF_IDENTITY(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0)), (false ? _GLF_FUZZED(log(vec2(-13.90, -5.1))) : vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0)))), vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))))) : injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.9, 28.62)), mix(vec2(_GLF_FUZZED(-3349.5629), _GLF_FUZZED(5.8)), vec2((_GLF_FUZZED(vec2(2.9, 28.62)))[0], (_GLF_FUZZED(vec2(2.9, 28.62)))[1]), bvec2(true, true))) : _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))), clamp(_GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))), _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))), _GLF_FUZZED(vec2(404.893, _GLF_IDENTITY(891.445, (891.445) - 0.0))))) : injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)))))))))).x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(404.893, 891.445)) : injectionSwitch)).x, 1.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-874.961)), vec2(_GLF_FUZZED((2.6 + 5648.5099)), ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(false, true)))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(1, (1) | (1)))))) >> 0u), uint(1)), (_GLF_IDENTITY(_GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) / 1u), max(_GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) / 1u), _GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) / 1u))), _GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) / 1u)))) << 0u)), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), min(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (false ? _GLF_FUZZED(83982) : _GLF_IDENTITY(4, 0 | (4)))))), 4), 0 | (clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(246.281)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0)))), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), (bool(bvec4((false), true, true, false))) || false))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-476.038)), float(_GLF_IDENTITY(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * (injectionSwitch.y))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) / 1), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(-593.051)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY((false), ! (! ((false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), clamp(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (0 & 95892) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), clamp(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))))))), (int(int(_GLF_IDENTITY(4, ~ (~ (4)))))) / 1)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(-4.8)), bool(false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), false))))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), false)))))))))))))) && true)) || false)), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), false))))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))), true), false), false)))))))))))))) && true)) || false))) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true)))))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0))), mix(float(_GLF_FUZZED(6.6)), float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0)))), bool(true)))) > injectionSwitch.y)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-3.7, -3.7, 5508.5406, -7.9, -8435.8329, 18.68, 543.026, -3.5, 6.0)) : _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true)))))) || false))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-60.99)), vec2((abs(exp(vec2(0.0, 0.0))))[0], (abs(exp(vec2(0.0, 0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.46)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), true))), false))), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-3.7, -3.7, 5508.5406, -7.9, -8435.8329, 18.68, 543.026, -3.5, 6.0)) : _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true)))))) || false))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-60.99)), vec2((abs(exp(vec2(0.0, 0.0))))[0], (abs(exp(vec2(0.0, 0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.46)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), true))), false))), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-3.7, -3.7, 5508.5406, -7.9, -8435.8329, 18.68, 543.026, -3.5, 6.0)) : _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true)))))) || false))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-60.99)), vec2((abs(exp(vec2(0.0, 0.0))))[0], (abs(exp(vec2(0.0, 0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.46)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), true))), false))), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-3.7, -3.7, 5508.5406, -7.9, -8435.8329, 18.68, 543.026, -3.5, 6.0)) : _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true)))))) || false))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(exp(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-60.99)), vec2((abs(exp(vec2(0.0, 0.0))))[0], (abs(exp(vec2(0.0, 0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.46)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.2))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, true), true))), false))), false)))))), true))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY((false), ((false)) || false))) && true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.6) : injectionSwitch.y))))) || false) || (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, true, true)), bool(bvec3(bool(bvec4(! (true), false, true, true)), false, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec2((true), true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false || (! (true))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)))), ! (_GLF_IDENTITY(! ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), bool(bvec4(! (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), bool(bvec4(! (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false || ((! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), bool(bvec4(! (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))) && true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) || false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_IDENTITY(! ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ! (! ((! (true))))), ! (! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, ((_GLF_IDENTITY(true, true && (true))) && true) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0) > injectionSwitch.y)), false)))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || ((! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-33.10)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true))))))), ! (! (_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || ((! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-33.10)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true))))))), ! (! (_GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), false)))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), ! (! ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), bool(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))), false || (! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false))))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), ! (! ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), bool(bvec3((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false)))), false || (! (! (_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false))))), ((! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)))))) || false))))))))))))), false))))))) && true))))))), ! (! ((false) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), false))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.33), _GLF_FUZZED(50.46)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
