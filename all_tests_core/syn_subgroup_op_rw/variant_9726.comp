#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
            continue;
           if(_GLF_DEAD(false))
            continue;
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (false) && true)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (false) && true)), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (false) && true))))))))) || false))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)), true, true))), true)))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               return;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                              }
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        break;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                    }
                   else
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, vec2(230.737, _GLF_IDENTITY(-1.7, (true ? -1.7 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(4.6), 1.0 * (_GLF_FUZZED(4.6))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_FUZZED(4.6)))))))) : injectionSwitch)).x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> 0, max(_GLF_IDENTITY((int(2)) >> 0, int(int((int(2)) >> 0))), (int(2)) >> 0))), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> _GLF_IDENTITY(0, (0) ^ 0), ((int(2)) >> _GLF_IDENTITY(0, (0) ^ 0)) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1), min(ivec2(~ (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1), ivec2(~ (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1))))))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> 0, ((int(2)) >> 0) - 0))))), 0, 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), max(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) >> 0)))) / 1)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)))), (int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 0, 1, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED((- 40514)) : 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> 0, _GLF_IDENTITY((_GLF_IDENTITY(true ? (int(2)) >> 0 : _GLF_FUZZED(-69187), 0 | (true ? (int(2)) >> 0 : _GLF_IDENTITY(_GLF_FUZZED(-69187), (_GLF_FUZZED(-69187)) / 1)))), int(ivec4((_GLF_IDENTITY(true ? (int(2)) >> 0 : _GLF_FUZZED(-69187), 0 | (true ? (int(2)) >> 0 : _GLF_IDENTITY(_GLF_FUZZED(-69187), (_GLF_FUZZED(-69187)) / 1)))), 0, 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))), (int(2)) >> 0)), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))), (int(2)) >> 0)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-98812)))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-98812)))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-98812)))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(int(2), (int(2)) >> 0))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-98812)))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-98812)))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(int(2), (int(2)) >> 0))))) * 1))), _GLF_IDENTITY(0, 0 ^ (0)), 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> 0, min((int(2)) >> 0, (int(2)) >> 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) - (0 << _GLF_IDENTITY(int(5), int(5))))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), (_GLF_IDENTITY(true, ! (! (true))) ? (int(2)) : _GLF_FUZZED((true ? 86871 : 18555)))) | (int(2))), int(2))), (int(2)) >> 0)))), 0, 1, 0)))), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 0, 1, 0))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), ~ (~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))), 0 ^ ((int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 0, 1, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), 1)), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), int(2)))), clamp((_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (2)), 2))), int(2)), (_GLF_IDENTITY(max(int(2), int(2)), 0 ^ (max(int(2), int(2))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)))))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(-90978, min(-90978, -90978))))), max(int(2), int(2)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), int(2)))), clamp((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(-90978, min(-90978, -90978))))), max(int(2), int(2)))), 1)))), int(2))) & 1), clamp((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (true ? _GLF_IDENTITY(int(2), (int(2)) >> 0) : _GLF_FUZZED(22484)))) | (_GLF_IDENTITY(int(2), (int(2)) >> 0))), clamp(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) - 0))), 2, 2)))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) >> 0)) | _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) >> 0)), ((_GLF_IDENTITY(int(2), (int(2)) >> 0))) | ((_GLF_IDENTITY(int(2), (int(2)) >> 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2)))) >> 0)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, min(2, 2))))), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) >> 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), int(ivec2(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), int(ivec2(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))))))), (max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), int(ivec2(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))))))) ^ 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(15437))), (0 | 0) ^ (2))), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) / 1)), (int(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), 1, (82266 & (0 << _GLF_IDENTITY(int(4), int(4)))), 1))))) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, 0 | (2)))) / 1)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-52322))))), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 0, 1, 0), ~ (~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-52322))))), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 0, 1, 0)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), min(int(2), int(2))), _GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2)))))), max(int(2), int(_GLF_IDENTITY(2, (2) >> 0))))), clamp((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), clamp(_GLF_IDENTITY(max(int(2), int(2)), int(ivec3(max(int(2), int(2)), 1, 1))), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), 0 | (int(2)))), (max(int(2), int(2))) >> 0), _GLF_IDENTITY(max(int(2), int(2)), clamp(max(int(2), int(2)), max(int(2), int(2)), max(int(2), int(2)))))))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(-90978, min(-90978, _GLF_IDENTITY(-90978, min(-90978, -90978))))))), max(int(2), int(2))))), int(2))) & 1), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec2(2, 0)))), _GLF_IDENTITY((int(2)) >> 0, ((int(2)) >> 0) - 0)), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(96702) : 2))), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) - _GLF_IDENTITY(0, 1 * (0))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED((-53399 + -89418))))), (false ? _GLF_FUZZED(-59482) : ~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED((-53399 + -89418)))))))), 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) << 0)), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)))), (int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), min(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), (int(2)) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / 1), (int(2)) >> 0)))))), 0, 1, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) | (int(2))), 1))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)), (int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))) ^ (1 ^ 1)), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), (true ? _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), min((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), ~ (~ ((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)))))))) : _GLF_FUZZED((-54906 ^ 50194)))) | 0)), _GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), _GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), int(2)))), clamp((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(87935))))))), (_GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))))))))), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(-90978, min(-90978, -90978))))), max(int(2), int(2))))), int(2))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec2(2, 0)))), _GLF_IDENTITY((int(2)) >> 0, ((int(2)) >> 0) - 0)), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(96702) : 2))), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) - _GLF_IDENTITY(0, 1 * (0))) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED((-53399 + -89418))))), (false ? _GLF_FUZZED(-59482) : ~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED((-53399 + -89418)))))))), 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) << 0)), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)))), (int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), min(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), (int(2)) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / 1), (int(2)) >> 0)))))), 0, 1, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) | (int(2))), 1))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)), (int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))) ^ (1 ^ 1)), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), (true ? _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), min((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), ~ (~ ((int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)))))))) : _GLF_FUZZED((-54906 ^ 50194)))) | 0)), _GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))), _GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), int(2)))), clamp((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(87935))))))), (_GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))))))))), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(-90978, min(-90978, -90978))))), max(int(2), int(2))))), int(2)))) | (0 & 12353)) & 1), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2))), (int(2)) >> 0), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) / 1))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) | 0)))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), 1, 1))), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) >> 0)) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(2), (int(2)) >> 0), 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(2), (int(2)) >> 0), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(int(2), (int(2)) >> 0), 1)))))), 0 + (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(2), (int(2)) >> 0), 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(2), (int(2)) >> 0), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(int(2), (int(2)) >> 0), 1))))))))), clamp(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-89573) : int(2)))) >> 0), _GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(75158))), (_GLF_IDENTITY(int(2), int(ivec3(_GLF_IDENTITY(int(2), min(int(2), int(2))), (1 & 1), 1)))) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) / 1)))) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2))))), 0 | (~ (_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2))))))))) >> 0)))), 0, 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(0, 0 | (0))))), (max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(0, 0 | (0)))))) / 1)), 0, 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0, 1, 0)))), (int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 0, 1, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2)))), min(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2)))), (_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2))))) | (_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2)))))), _GLF_IDENTITY((int(2)), ((int(2))) | ((int(2))))))) | (_GLF_IDENTITY((int(2)), ((int(2))) | ((int(2))))))))))) >> 0)))), 0, 1, 0)), min(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 0 | (0)))))))), 0, 1, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) + 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))), (max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))), min(max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))))))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)))))), 0, 1, 0)))), (int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, int(ivec4(2, 0, 0, 0))))) >> 0)), 0, 1, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(53365) : _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(_GLF_IDENTITY(~ (2), (~ (2)) | (~ (2))), _GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)) / 1)))))))), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, 2))))), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)))), (_GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)), 1 * (int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)))))), int(ivec4(max(int(2), _GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1)))), 1, 1, 1)))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))))), clamp((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec3(_GLF_IDENTITY(int(2), 1 * (int(2))), 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-4911) : int(3)))), (false ? _GLF_FUZZED(-26268) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-4911) : int(3))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / 1)), int(3)))))), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(-90978, min(-90978, -90978))))), max(int(2), int(2))))), int(2))) & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
        continue;
       continue;
      }
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w = subgroup_local_id;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))) || false))
      continue;
     continue;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9621.1847, 425.855)) : injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), ~ (~ ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))))) | ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))) / 1) > (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), int(8)))))); _injected_loop_counter --)
          {
           GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.y = num_workgroup;
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))))), false))))))))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, false), false))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))), false)))))))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), 0 | (1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), 0 | (1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))) << 0) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << _GLF_IDENTITY(0, (0) ^ 0))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
            break;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   if(_GLF_DEAD(false))
    break;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))))), _GLF_IDENTITY(min(subgroup_id, subgroup_id), max(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, (15941u & 0u) ^ (subgroup_size)))))) >> 0u))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x = _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x = _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))))) * (injectionSwitch))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / cos(sqrt(0.0)))), 1.0, 0.0)))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(4.8, mix(float(4.8), float(_GLF_FUZZED(vec4(-47.59, -8.7, 531.157, 0.1).g)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))) && true)))))))), _GLF_FUZZED(-2.8)), bvec2(false, false)))).y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.z = _GLF_IDENTITY(read, uint(uvec3(read, 0u, 0u)));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) + 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, (true ? GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x : _GLF_FUZZED(workgroup_base))), ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x), (~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x)) ^ 0u))), max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x), _GLF_IDENTITY(uint(uvec3((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))), uint(0u))))))))))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | 0u))))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x), 0u, 0u)), (uint(uvec3((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u)))))))) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u)))))))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u)))))))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u)))))))) / 1u)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x))))))), 0u, 0u))) / 1u)))))], uint(1), 4, 64, _GLF_IDENTITY(4, (4) << 0));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, _GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3]), min(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[_GLF_IDENTITY(0, max(0, 0))], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3]), (true ? uvec4(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3], uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3], (true ? GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3] : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), (_GLF_IDENTITY(((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), clamp(((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))), ((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uint(uint(1u)), uint(uvec4(uint(uint(1u)), 1u, 1u, 1u))))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((_GLF_IDENTITY(1u, (1u) | (1u)) & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))) - 0u) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))), (_GLF_IDENTITY((((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), 0u ^ (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), ((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | (_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), uint(uint((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))))), (uint((((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))) >> 0u)), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint((((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))))), (uint((((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))) >> 0u))), uint(uvec2(uint(uint(_GLF_IDENTITY(uint((((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))))), (uint((((1u & 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))) >> 0u))), 0u))))))) | ((((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(72293u, 70813u, _GLF_IDENTITY(39507u, 0u | (39507u)), 105378u)), (true ? _GLF_FUZZED(uvec4(72293u, 70813u, 39507u, 105378u)) : _GLF_FUZZED(uvec4(163372u, 136601u, 162417u, 91114u)))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id))[0], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3]), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3])))))).w + 1 < subgroup_size)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)), bool(bvec4(bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)), true, false, false)))))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, _GLF_IDENTITY(0, min(0, 0)))) / 1)), min(0, _GLF_IDENTITY(0, (0) | (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             do
              {
               return;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.z, 4, 64, 4);
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(int(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))))), (int(int(0 >> _GLF_IDENTITY(int(3), int(3))))) << 0))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))) ^ (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             do
              {
               subgroupAll(false);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bool(_injected_loop_counter != 0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7315.3485)), float(0.0), bool(true)))))) * round(length(normalize(1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))).x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))) && true)))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))), bool(bvec4(! (! (false)), false, true, true))))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                continue;
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 atomicStore(buf[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, (false ? _GLF_FUZZED(min(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, read)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id[3])))).z, 4, _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) ^ 0))), ((~ (_GLF_IDENTITY(64, (64) ^ 0)))) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), 4);
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)))
                  continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-17.64, -3.2, 4102.5158).p)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED((0.0 * -46.65)) : injectionSwitch.x), mix(float(_GLF_FUZZED(-6.0)), float((false ? _GLF_FUZZED((0.0 * -46.65)) : injectionSwitch.x)), bool(true)))) > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch)).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch)).y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bool(true))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, ! (! (true))) && ((! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)) || false)))))))) && true)))), false || _GLF_IDENTITY(((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), true && (! (! _GLF_IDENTITY(((! (false))), (_GLF_IDENTITY(((! (false))), (((! (false)))) && true)) && true))))))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) && true)) && true))))) || false))), true, false)))))))) || false)))) && true))))) && true))))), (((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))) && true)))))))))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), true && (! (! ((! (false))))))))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), true, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), true, false)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), true, false)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))) && true))))) && true)))))) && true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bool(true))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, true)), (bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), false, false, true))) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)) || false)))))))) && true)))), false || _GLF_IDENTITY(((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), true && (! (! ((! (false))))))))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), true, false)))))))) || false)))) && true))))) && true))))), (((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), true && (! (! (! (! (false))))))))))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), true && (! (! ((! (false))))))))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))))))), bool(bvec4(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))))))), false, false, false)))) || false))))))) || false)))) && true))))) && true)))))) && true)))), false, false, false))))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            }
           else
            {
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) * _GLF_ONE(1.0, injectionSwitch.y))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))).y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, false)))) || false) || false))))))
                return;
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       subgroupAll(true);
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}
