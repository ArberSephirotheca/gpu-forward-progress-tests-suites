#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(15.13)), bool(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y, float(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)))).y, 1.0)))) * 1.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2885.5923)), bvec2(true, false))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(_GLF_IDENTITY(acosh(6.4), (_GLF_IDENTITY(acosh(6.4), (acosh(6.4)) + 0.0)) - length(vec2(0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(7.4, (7.4) / 1.0))), bool(false)))))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2885.5923)), bvec2(true, false))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(_GLF_IDENTITY(acosh(_GLF_IDENTITY(6.4, (6.4) / 1.0)), (_GLF_IDENTITY(acosh(6.4), (acosh(6.4)) + 0.0)) - length(vec2(0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(7.4, (7.4) / 1.0))), bool(false)))))), true, true)), true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-9.2, -3.1)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), ! (! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), false, false))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.7)))))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0)))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 1.0, 1.0))), _GLF_FUZZED(-19.21)), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), vec2(vec3(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), 0.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(mat2x4(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0), mat2x4(mat4(mat2x4(vec2(_GLF_FUZZED(float(153745u)), (injectionSwitch)[1]), 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0)))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) * vec2(1.0, 1.0)).y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6.6)), vec2(_GLF_FUZZED(-805.461), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 1.0))) : _GLF_FUZZED(normalize(99.96)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 1.0))) : _GLF_FUZZED(normalize(99.96))))), float(_GLF_FUZZED(-0.6)), bool(false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / uvec3(1u, 1u, 1u))))))) << uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)), max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize)))), (gl_WorkGroupSize), (gl_WorkGroupSize))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x) + 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY((~ (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u), ((~ (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / uvec3(1u, 1u, 1u))))))) << uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)), max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x) + 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), max(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) + (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))))), ~ (~ (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | ((max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))))), (false ? _GLF_FUZZED(uvec3(185817u, 67187u, 57915u)) : _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), max(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), _GLF_IDENTITY(uvec3(2u), uvec3(2u))))) + (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)) / uvec3(1u, 1u, 1u)))))), ~ (~ (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY((max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | ((max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + 0u))))), gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))))))))) << uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)))), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (true ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(min(uvec3(194461u, 193786u, 92288u), 184307u)))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(0u, 0u, 0u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)), max(gl_WorkGroupSize, gl_WorkGroupSize))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).x), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)).x), 0u, 0u, 0u))) + 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize), max(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize), uvec3(uvec4(max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize), 0u)))) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) & uvec3(63482u, 160209u, 63727u)))))))), gl_WorkGroupSize)))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(149909u, 36319u, 117140u)) : max(gl_WorkGroupSize, gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (true ? ~ (~ (gl_WorkGroupSize)) : _GLF_FUZZED(uvec3(60317u, 101586u, 186223u))))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false, false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false)))))) && true))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false)))))), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6133.1090), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) - 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) << 0))))))]) - 0.0) / 1.0)), _GLF_FUZZED(6.6)), bvec2(true, false))).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))), false)))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true))))))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), false))) || false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (next_virtual_gid))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))) | ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (0 | 0)) * 1)))), max(max(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((-37971 ^ -47856)))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(-74036))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), 0 | ((4))), (4), _GLF_IDENTITY((4), ((4)) * 1))), ((4)) | (0 | 0)) * 1)))), max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) >> 0), _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) | 0)))))), 0 ^ (int(3))))), max((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) >> 0), _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) | 0)))))), 0 ^ (int(3))))), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) >> 0), _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) | 0)))))), 0 ^ (int(3)))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), (4))) : _GLF_FUZZED(23711)))) / 1, max((_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), (4))) : _GLF_FUZZED(23711)))) / 1, (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), (4))) : _GLF_FUZZED(23711)))) / 1))), int(ivec4(_GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), (4))) : _GLF_FUZZED(23711)))) / 1, max((_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), (4))) : _GLF_FUZZED(23711)))) / 1, (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), (4))) : _GLF_FUZZED(23711)))) / 1))), 0, 0, 1)))) | (0 | 0)) * 1))))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(78.30)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), ! (! (_GLF_IDENTITY(bool(bvec2((true), false)), bool(bool(bool(bvec2((true), false))))))))))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, cos(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1))), max(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1))), uint(_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(4, (4) - 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(598.445)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))))))), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(598.445)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))))), bool(_GLF_IDENTITY(true, true && (true))))), injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(598.445, clamp(_GLF_IDENTITY(598.445, min(598.445, 598.445)), 598.445, 598.445)))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))))), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) * 1.0), injectionSwitch.y)) * determinant(mat4(1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)))))), float(_GLF_FUZZED(-0.4)), bool(false))), (injectionSwitch.y) - _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(-26.13, -0.0)) : sqrt(0.0))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(-662.345), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), false, true))))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(598.445)), _GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), false || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true))))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(-662.345), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), false, true))))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(598.445)), _GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), false || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true))))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(-662.345), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), false, true))))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(598.445)), _GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), false || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true))))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(-662.345), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), false, true))))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(598.445)), _GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true)))), false || (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true))))))) && (true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, false || (true))))) && (true))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (injectionSwitch.y) - sqrt(0.0)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(-662.345), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) + 0)))))))]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), true, false, true))), true))))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(598.445)), _GLF_IDENTITY(_GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(_GLF_IDENTITY(598.445, min(_GLF_IDENTITY(598.445, clamp(598.445, 598.445, _GLF_IDENTITY(598.445, min(_GLF_IDENTITY(598.445, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-52.92) : _GLF_IDENTITY(598.445, float(mat2(598.445, 1.0, 1.0, 0.0))))), 598.445)))), _GLF_IDENTITY(598.445, float(mat4x2(598.445, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))), max(_GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(_GLF_IDENTITY(598.445, min(_GLF_IDENTITY(598.445, clamp(598.445, 598.445, _GLF_IDENTITY(598.445, min(_GLF_IDENTITY(598.445, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-52.92) : _GLF_IDENTITY(598.445, float(mat2(598.445, 1.0, 1.0, 0.0))))), 598.445)))), _GLF_IDENTITY(598.445, float(mat4x2(598.445, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))), _GLF_IDENTITY(min(float(_GLF_FUZZED(598.445)), float(_GLF_FUZZED(598.445))), mix(float(_GLF_FUZZED(7.1)), float(min(float(_GLF_FUZZED(_GLF_IDENTITY(598.445, min(_GLF_IDENTITY(598.445, clamp(598.445, 598.445, _GLF_IDENTITY(598.445, min(_GLF_IDENTITY(598.445, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-52.92) : _GLF_IDENTITY(598.445, float(mat2(598.445, 1.0, 1.0, 0.0))))), 598.445)))), _GLF_IDENTITY(598.445, float(mat4x2(598.445, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))), float(_GLF_FUZZED(598.445)))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((true ? -6415.0335 : -3.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)))))), 0.0, 1.0, 0.0))))))))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && (true))))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (sqrt(0.0)) / sqrt(1.0)))) || false))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))) || _GLF_IDENTITY(false, ! (! (false)))) || false) || false))), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))), (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(1.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), ! (! _GLF_IDENTITY((true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bool(! (! ((false)))))))), bool(bool((true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bool(! (! ((false))))))))))))), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, _GLF_IDENTITY(false, false || (false)))), (bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false))) || false)), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false)))) || (false)))), (bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false))) || false))) || false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, false)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, false))) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true)))))))))) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.7)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))))), (float(mat2x4(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)))), dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)))))) - 0.0)))), false))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), min(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid), (_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid), min(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), ~ (~ (virtual_gid))), virtual_gid), clamp(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid), _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid), ~ (~ (max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)))), _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), min(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec3((virtual_gid), 1u, 1u))))))), virtual_gid), (max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)) << 0u)))))), ~ (~ (max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)))), max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)))) / _GLF_IDENTITY(1u, ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (1u))))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
