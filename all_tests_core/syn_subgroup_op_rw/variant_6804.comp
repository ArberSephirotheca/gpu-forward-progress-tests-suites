#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_32 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_31 {
 bvec3 _f0;
 mat3x2 _f1;
 int _f2;
 mat4x3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_30 {
 bool _f0;
 vec2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_33 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 bvec2 _f2;
 _GLF_struct_32 _f3;
 int _f4;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 vec4 _f1;
 bvec3 _f2;
 uint subgroup_id;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
 mat3x2 _f1;
 int _f2;
} ;

struct _GLF_struct_34 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 mat2x4 _f2;
 _GLF_struct_33 _f3;
 mat4 _f4;
 mat2x4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_25 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 ivec3 _f3;
 int _f4;
 mat3 _f5;
} ;

struct _GLF_struct_26 {
 uint _f0;
 _GLF_struct_25 _f1;
} ;

struct _GLF_struct_23 {
 uint workgroup_base;
 vec4 _f0;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 int _f1;
 _GLF_struct_23 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_24 _f0;
 bvec4 _f1;
 _GLF_struct_26 _f2;
 int _f3;
 uvec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_19 {
 bvec4 _f0;
 uint read;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 _GLF_struct_19 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 _GLF_struct_21 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 vec2 _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
 _GLF_struct_16 _f1;
 float _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_14 {
 uint _f0;
 mat4x3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_13 {
 bool _f0;
 mat3x4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat4x3 _f1;
 ivec2 _f2;
 vec2 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 mat2x3 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
 bool _f5;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
} ;

struct _GLF_struct_9 {
 bool _f0;
 vec2 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 bvec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 vec4 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 uint _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 bvec2 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_11 _f0;
 uint _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_17 _f3;
 uint _f4;
 ivec4 _f5;
 uvec3 _f6;
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat3 _f1;
 vec2 _f2;
 mat4x3 _f3;
 ivec2 _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 vec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_1 {
 float _f0;
 bool _f1;
 mat4x2 _f2;
 ivec4 _f3;
 vec3 _f4;
 bool _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat2x3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 vec4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 vec2 _f3;
 mat4 _f4;
 int _f5;
 _GLF_struct_5 _f6;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_struct_18 _GLF_struct_replacement_18;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_28(mat3x2(1.0), mat3x2(1.0), 1), _GLF_struct_29(ivec2(1), vec4(1.0), bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), gl_SubgroupID), mat2x4(1.0), _GLF_struct_33(_GLF_struct_30(true, vec2(1.0), vec2(1.0)), _GLF_struct_31(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat3x2(1.0), 1, mat4x3(1.0), bvec4(true)), bvec2(true), _GLF_struct_32(ivec3(1), vec3(1.0)), 1), mat4(1.0), mat2x4(1.0), ivec3(1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = _GLF_struct_replacement_34._f1.subgroup_id, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = _GLF_struct_replacement_34._f1.subgroup_id));
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 ^ (int(int(0))))), _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), 0 | ((0))))) - 0) ^ 0), (_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 ^ (int(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (int(0)) - 0), int(0))))))), _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), 0 | ((0))))) - 0) ^ 0)) || false)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x = subgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (((-44089 << 17627) * 18738) & (0 << _GLF_IDENTITY(int(8), int(8)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), min(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(int(4), int(4)))), 1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) | 0)); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(286.664))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = subgroup_local_id;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(bvec4(true), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-70.40)), float(1.0), bool(true)))), mat3x4(1.0), vec2(1.0), mat4(1.0), 1, _GLF_struct_5(mat2(1.0), vec4(1.0), _GLF_struct_0(vec2(1.0), mat2x3(1.0), ivec3(1)), _GLF_struct_1(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0)), _GLF_IDENTITY(mix(float(float(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0))), float(_GLF_FUZZED(22.38)), bool(false)), max(mix(float(float(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0))), float(_GLF_FUZZED(22.38)), bool(false)), mix(float(float(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0))), float(_GLF_FUZZED(22.38)), bool(false)))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(378.214) : 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))) / 1.0), true, mat4x2(1.0), ivec4(1), vec3(1.0), true, ivec4(_GLF_IDENTITY(1, (1) | (1)))), _GLF_struct_2(ivec2(1), mat2x3(1.0)), _GLF_struct_3(mat3(1.0), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.6)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true))))))), uvec2(1u), vec2(1.0), mat3(1.0)), _GLF_struct_4(vec2(1.0), mat3(1.0), vec2(1.0), mat4x3(1.0), ivec2(1), bvec2(_GLF_IDENTITY(true, false || (true))), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(7105.2649)), bool(false))), 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))))))), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((gl_NumWorkGroups)))))))))), _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (false ? _GLF_FUZZED(uvec3(178679u, _GLF_IDENTITY(148635u, max(148635u, 148635u)), 148547u)) : uvec3(uvec4(gl_NumWorkGroups, 0u))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) * uvec3(1u, 1u, 1u))))))))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u)))))).x);
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = _GLF_struct_replacement_6.num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), (min(1, 1)) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(ivec4(-26728, -38343, 45439, 95984)[1]) : int(3))), int(3), int(3))), int(3))))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(49567, (49567) << 0)) : int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), 0 ^ (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), max((int(5)), (int(5)))) >> 0)))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))))))); _injected_loop_counter --)
          {
           _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.z = workgroup_size;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8112.6820)), bool(false))), injectionSwitch.y))))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_24(ivec4(1), 1, _GLF_struct_23(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.y, vec4(1.0))), bvec4(true), _GLF_struct_26(1u, _GLF_struct_25(mat3x2(1.0), mat4x2(1.0), mat4x2(1.0), ivec3(1), 1, mat3(1.0))), 1, uvec3(1u), uvec2(1u));
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)), 0u, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, 1u * (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, clamp(_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, min(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size)).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)).z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))), (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id))).z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, 1u * (_GLF_struct_replacement_27._f0._f2.workgroup_base))))), _GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, 0u ^ (_GLF_struct_replacement_27._f0._f2.workgroup_base)))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), (true ? ~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | 0u)))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), max(~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, ~ (~ (_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size))).x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) | 0u), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, 0u, 1u, 0u))))) * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), clamp(~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), ~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), ~ (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, (_GLF_struct_replacement_27._f0._f2.workgroup_base) | (_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, (_GLF_struct_replacement_27._f0._f2.workgroup_base) | 0u))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) | (_GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))))))))), _GLF_struct_replacement_27._f0._f2.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_27._f0._f2.workgroup_base, (_GLF_struct_replacement_27._f0._f2.workgroup_base) | _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_struct_replacement_27._f0._f2.workgroup_base)) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w : _GLF_FUZZED(subgroup_size))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)) << uvec4(0u, 0u, 0u, 0u))) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id))) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))).w))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w) | 0u))), _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w), ~ (~ (_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w), 0u ^ (clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w)))))), _GLF_IDENTITY((clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w)), ((clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))), _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))), uint(uvec2(clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))), 1u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_27._f0._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, (_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size) ^ uvec3(0u, 0u, 0u)).x), (_GLF_IDENTITY(0u, (0u) >> 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z : _GLF_FUZZED(virtual_gid)))))) * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) >> 0u) * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(0u, (0u) >> 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) : _GLF_FUZZED(virtual_gid))) >> 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))))) + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)).w + 1), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)).w + 1), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)).w + 1))) % _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) && true)))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_20(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_IDENTITY((vec4(1.0))[0], 1.0 * (_GLF_IDENTITY((vec4(1.0))[0], float(mat2x3((vec4(1.0))[0], 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_FUZZED(-9711.5195), (vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0)), min((vec4(1.0)), _GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-4.2, 293.819, -3746.1565, 705.815)) : (vec4(1.0)), _GLF_IDENTITY(vec4(mat3(false ? _GLF_FUZZED(vec4(-4.2, 293.819, -3746.1565, 705.815)) : (vec4(1.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0, 1.0)), max(vec4(mat3(false ? _GLF_FUZZED(vec4(-4.2, 293.819, -3746.1565, 705.815)) : (vec4(1.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0, 1.0)), vec4(mat3(false ? _GLF_FUZZED(vec4(-4.2, 293.819, -3746.1565, 705.815)) : (vec4(1.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0, 1.0)))))))) / vec4(1.0, 1.0, 1.0, 1.0))))[_GLF_IDENTITY(3, (3) >> 0)]), vec4(_GLF_FUZZED(-3765.5429), (vec4(1.0))[1], _GLF_FUZZED(9855.6062), _GLF_FUZZED(-8798.7496)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), _GLF_struct_19(bvec4(true), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, 64, 64)))), 0))), uvec3(1u), mat2x3(1.0), uvec3(1u), _GLF_struct_21(bvec2(true), mat2x3(1.0), bvec3(true), mat2x4(1.0)), vec4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, clamp(6, 6, 6)))) / 1)), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, clamp(6, 6, 6)))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, clamp(6, 6, 6)))) / 1)), (true ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, clamp(6, 6, 6)))) / 1)) : _GLF_FUZZED(67443))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), min(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))) / 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) / 1), (_GLF_IDENTITY(int(6), (int(6)) / 1)) | (_GLF_IDENTITY(int(6), (int(6)) / 1)))), (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (2))), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ (1 ^ 1))))))) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), ~ (~ (int(6))))))))) / 1)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) / 1, ((int(6)) / 1) | 0)))) ^ 0)))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))), ((! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY((! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))), ((! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))) || false)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))) || (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))) || false)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))) || (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), true, true)), (bool(bvec3(! (_GLF_DEAD(false)), true, true))) && true), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))))))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true)))))) || false, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) || false))))) && true, true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))) || false), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))) || false)) && true))))) && true)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + _GLF_IDENTITY(1, ~ (~ (1))) < _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, min(_GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, max(_GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x) - 0u), _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)), _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, clamp(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, max(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, clamp(_GLF_IDENTITY(_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, 0u ^ (_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)), _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, _GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))))))) | (_GLF_struct_replacement_18.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(! (false), false, false, false)))))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true)), (_GLF_DEAD(false)) && true)))))
              barrier();
             atomicStore(checker[virtual_gid], _GLF_struct_replacement_22._f0._f1.read, 4, 64, 4);
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(5.0, -555.605)) : injectionSwitch)).y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))))))) || false)))))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             atomicStore(buf[virtual_gid], _GLF_struct_replacement_22._f0._f1.read, 4, 64, 4);
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))))) * 1.0) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false))) || false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))))) * 1.0) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false))) || false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), false))))) || false)))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))));
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), true), true, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), true, false)), true, false))), false, true)))))))))))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))))))))[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(vec4(-6523.5197, 7.3, -228.678, -0.3).b), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))))))))[0], _GLF_FUZZED(757.360)), vec2(_GLF_FUZZED(9.5), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))))))))[1]), bvec2(false, true))))[1]), bvec2(false, true)))).x)) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-496.844)), float(injectionSwitch.x), bool(true))))) | (_injected_loop_counter --)))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                  {
                   subgroupAll(true);
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4270.5442) : injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
