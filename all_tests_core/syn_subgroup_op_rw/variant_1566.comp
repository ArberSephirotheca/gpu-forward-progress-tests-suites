#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * round(length(normalize(1.0))))))))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.51), _GLF_FUZZED(-948.238)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.8) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))), false))))) && true))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), _GLF_IDENTITY(false, ! (! (false))), true)))), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0)))))), (_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0))))))) / exp(vec2(0.0, 0.0))), 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, cos(0.0), 0.0)))), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(mix(-9.2, mod(-3675.0940, -701.922), true)))), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0), (true ? mat3(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(-636.406, 5162.0690, 21.60, -0.0, -402.519, 62.23, 26.99, 281.217, -136.959))))), (transpose(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0), (true ? mat3(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(-636.406, 5162.0690, 21.60, -0.0, -402.519, 62.23, 26.99, 281.217, -136.959)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.9)), bool(false))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-71.94))))), 0.0))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))).x < injectionSwitch.y)))))) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)))))))))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.x = _GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup)), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.x = _GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) >> 0u);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
    barrier();
  }
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[_GLF_IDENTITY(1, (0 ^ 0) ^ (_GLF_IDENTITY(1, min(1, 1))))])).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)) | (clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))));
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, bool(bvec2(true, true)))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, bool(bvec2(true, true)))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false, true)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, bool(bvec2(true, true)))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false, true)), false, false)))), true))), true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false, true)), false, false)))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(96102) : _injected_loop_counter --)), (_injected_loop_counter --) << 0))
  {
   _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.w = workgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.w = workgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.w = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(82213u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), (max(workgroup_size, workgroup_size)) | (_GLF_IDENTITY(max(workgroup_size, workgroup_size), (max(workgroup_size, workgroup_size)) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), max(workgroup_size, workgroup_size))) << 0u))), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), (_GLF_IDENTITY(workgroup_size, 0u ^ _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))) | 0u))))))), workgroup_size))) >> 0u)) | 0u);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, false, false)), true)), ! (! (bool(bvec2(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))), true))))))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))), bool(bool(false)))) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), false), true, false))))), true, false, false)), true)), _GLF_IDENTITY(! (! (bool(bvec2(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))), true)))), (! (! (bool(bvec2(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))), true))))) || false)))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))) || ((_GLF_IDENTITY(false, bool(bool(false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, false, false)), true)), ! (! (bool(bvec2(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))), true))))))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))) || ((_GLF_IDENTITY(false, bool(bool(false))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) && true))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) && true)))))))), true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, false, false)), true)), ! (! (bool(bvec2(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))), true))))))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))) || ((_GLF_IDENTITY(false, bool(bool(false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, false, false)), true)), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))), true))))))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bool(false)))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))) || ((_GLF_IDENTITY(false, bool(bool(false))))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = (1 & _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(481.122)), bool(false))))))), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(int(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), (_injected_loop_counter) / 1), _injected_loop_counter), min(_GLF_IDENTITY(clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), (_injected_loop_counter) / 1), _injected_loop_counter), (clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), (_injected_loop_counter) / 1), _injected_loop_counter)) ^ 0), clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), (_injected_loop_counter) / 1), _injected_loop_counter)))) != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1)) << 0)))) << (0 ^ 0)) : _GLF_FUZZED(_injected_loop_counter)))) >> 0))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) && true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), false || (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(81.48), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(98.94)), bvec2(true, false))).y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), false || (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(81.48), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(98.94)), bvec2(true, false))).y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), false || (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(81.48), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(98.94)), bvec2(true, false))).y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))))))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9933.2513 / 4.3))), float(injectionSwitch.y), bool(true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.w * workgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
          }
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), bvec3(bvec4(bvec3(bvec2(false, true), false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), bvec3(bvec4(bvec3(bvec2(false, true), false), true))))), false))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1334.5972)), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-76.60), (_GLF_FUZZED(-76.60)) / 1.0) : injectionSwitch.y))))))), float(_GLF_FUZZED(793.042)), bool(false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-366.981))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-76.60) : injectionSwitch.y))))), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-76.60) : injectionSwitch.y))))), 0.0, tan(0.0), determinant(mat3(0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))))), float(_GLF_FUZZED(793.042)), bool(false)))))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))) && true)) || false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)))))), _GLF_IDENTITY(int(2), int(2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | 0), 2)))))))), _GLF_IDENTITY(int(2), int(2))))))))), (0 << _GLF_IDENTITY(int(1), int(1))))))) << 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y = subgroup_base;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true))))))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4625.5729)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) / (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u))).y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) / (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u))).y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) / (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u))).y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) / (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 1u), ~ (~ (uvec3(workgroup_base, 1u, 1u)))))), (workgroup_base) ^ _GLF_IDENTITY(0u, 0u + (0u))) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))).y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y), min(max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y), max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)))) + subgroup_local_id)), (uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u)))) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y) ^ 0u), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), clamp(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y))) | (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y))) - 0u))) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (true ? _GLF_IDENTITY(uvec4(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) : _GLF_FUZZED((subgroup_size + uvec4(116379u, 154693u, 179597u, 101302u))))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), clamp(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y))) | (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y))) - 0u))) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (true ? _GLF_IDENTITY(uvec4(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) : _GLF_FUZZED((subgroup_size + uvec4(116379u, 154693u, 179597u, 101302u)))))))))) / 1u), (uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u | 1u)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (workgroup_base)))) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u | 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) | (workgroup_base)))) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y))) - 0u) + subgroup_local_id)))))) | 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, clamp(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y))) | (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)), max(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size)).y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y)) + subgroup_local_id)), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)))) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (true ? GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y : _GLF_FUZZED(subgroup_base))))))) + subgroup_local_id))), ((uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)))) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (true ? GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y : _GLF_FUZZED(subgroup_base))))))) + subgroup_local_id)))) | ((uint(uint(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)))) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, (true ? GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y : _GLF_FUZZED(subgroup_base))))))) + subgroup_local_id))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (workgroup_base)))) + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y, workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size[0], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size[1], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size[2], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size[3])))))) | uvec4(0u, 0u, 0u, 0u)).y)) + subgroup_local_id)))))) | 0u)))) | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), (_GLF_IDENTITY(int(5), (int(5)) << 0)) | 0), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), false, true, true))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), false, true, true))))), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(0 | _GLF_IDENTITY((int(6)), ((int(6))) | (_GLF_IDENTITY((int(6)), ((int(6))) ^ 0))), (0 | _GLF_IDENTITY((int(6)), ((int(6))) | (_GLF_IDENTITY((int(6)), ((_GLF_IDENTITY(int(6), 0 ^ (int(6))))) ^ 0)))) + 0)))), ((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), max(int(6), int(6))), _GLF_IDENTITY(int(6), (int(6)) - 0))), 0 | (int(6)))))) ^ 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y))) || false))))))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     else
      {
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec4(1u, 1u, 1u, 1u)))), GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size)).y + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), (false ? _GLF_FUZZED(182500u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, (0 ^ (0 | 1)))), (int(ivec4(1, 0, 0, (0 ^ (0 | 1))))) | 0))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))))) + 0u)) - 0u))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size[1])))) | ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), 0u ^ ((subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))))))), ~ (~ (clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0)), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size[1])))) | ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), 0u ^ ((subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, max(1, 1)))))) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(1u, max(1u, 1u))) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1), 0u ^ ((subgroup_local_id + 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) | _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) * 1u))))))))))))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), min(0u << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))) % subgroup_size), (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) | (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.y + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) * 1u)) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), uint(uvec3(~ (subgroup_local_id + 1), 1u, 0u)))))) * 1u), subgroup_local_id + 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u), (subgroup_local_id + 1) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u), (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u), (subgroup_local_id + 1) | 0u)) / 1u))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))))) * 1u), subgroup_local_id + 1)) * 1u)), uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(182853u)))))) / 1u), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) * 1u), subgroup_local_id + 1))))), subgroup_local_id + 1))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-5161.0441)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0)) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(630.452)), bool(false))), 0.0, 0.0)))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(8717.7979)), float(_GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (true ? determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(tan(4.2))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))), GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size)).z], _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) << 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), (int(4)) >> 0))), 64, 2);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if((subgroup_local_id % 2) == 0)
    {
     subgroupAll(false);
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1), max(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1), _GLF_IDENTITY(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1), ivec4(1, 1, 1, 1) * (ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1))))), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(69375) : int(4)))) - 0), int(4)))), 1)), (ivec4(0, 0, 0, 0) | (ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1))) / ((ivec4(1, 1, _GLF_IDENTITY(1, 0 | (1)), 1) << _GLF_IDENTITY(ivec4(1), ivec4(1))) >> _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) ^ 0)))))) / 1), int(_GLF_IDENTITY(ivec4(4, 1, (1 & _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), int(int(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))) << 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)), ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 0) | (ivec4(4, 1, (1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), clamp(int(_GLF_IDENTITY(4, min(4, 4))), int(_GLF_IDENTITY(4, min(4, 4))), int(_GLF_IDENTITY(4, min(4, 4))))), int(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(1, max(1, 1)) * (4))) / 1))))))) | 0) >> _GLF_IDENTITY(int(4), int(4)))), 1)))))), (~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4))))) >> _GLF_IDENTITY(int(4), int(4)))), 1), ivec4(0, 0, 0, 0) | (ivec4(4, 1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))) | ivec3(0, 0, 0))) << ivec3(0, 0, 0)), (ivec3(1, 1, 0)) | (ivec3(1, 1, 0))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4))), min((_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))) | ivec3(0, 0, 0))) << ivec3(0, 0, 0)), (ivec3(1, 1, 0)) | (ivec3(1, 1, 0))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, 1, 0))))) | ivec3(0, 0, 0))) << ivec3(0, 0, 0)), (ivec3(1, 1, 0)) | (ivec3(1, 1, 0))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4))))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) | (ivec3(1, 1, 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(-73399) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) | (4))))))))))), 1))))))) | 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), int(_GLF_IDENTITY(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), 0)), ~ (~ (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), 0)))))))), 1)), (ivec4(0, 0, 0, 0) | (ivec4(4, 1, (1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), int(ivec2((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 0))))), 1))) / ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(1), ivec4(1))) >> _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(ivec2((4) / 1, 1), (true ? ivec2((4) / 1, 1) : _GLF_FUZZED(ivec2(-1944, 62766))))))), 0 | (~ (_GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(ivec2((4) / 1, 1), (true ? ivec2((4) / 1, 1) : _GLF_FUZZED(ivec2(-1944, 62766)))))))))))), int(_GLF_IDENTITY(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | 0)))))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)), ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 0) | (ivec4(4, 1, (1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5))))), clamp((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5))))), ~ (~ ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))))))), (1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1)))))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1))), min(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1))), (_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1)))) / 1)))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1))), min(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1))), (_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) / 1)))) / 1))))))))) | 0) >> _GLF_IDENTITY(int(4), int(4)))), 1)))))), (~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1), ivec4(0, 0, 0, 0) | (ivec4(4, 1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))) & _GLF_IDENTITY(((_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (ivec3(1, _GLF_IDENTITY(1, 0 ^ (1)), 0))))) | ivec3(0, 0, 0)), (ivec3(_GLF_IDENTITY(1, (1) | 0), 1, 0)) | (ivec3(1, 1, 0))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) | (ivec3(1, 1, 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-73399, (false ? _GLF_FUZZED(38932) : -73399))) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), int(4))))))), 1))))))) | 0))))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), false, false, false))))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)), (true ? int(ivec2(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)) : _GLF_FUZZED(-38413))))))), (_GLF_IDENTITY((1), ((1)) ^ 0)) | (_GLF_IDENTITY((1), ~ (~ ((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))))))) | (1))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)), (true ? int(ivec2(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)) : _GLF_FUZZED(-38413))))))), (_GLF_IDENTITY((1), ((1)) ^ 0)) | (_GLF_IDENTITY((1), ~ (~ ((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))))))) | (1))))), (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)), (true ? int(ivec2(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)) : _GLF_FUZZED(-38413))))))), (_GLF_IDENTITY((1), ((1)) ^ 0)) | (_GLF_IDENTITY((1), ~ (~ ((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))))))) | (1)))))) | (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)), (true ? int(ivec2(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)) : _GLF_FUZZED(-38413))))))), (_GLF_IDENTITY((1), ((1)) ^ 0)) | (_GLF_IDENTITY((1), ~ (~ ((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))))))) | (1))))))), uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)), (true ? int(ivec2(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) << 0), 0)) : _GLF_FUZZED(-38413))))))), (_GLF_IDENTITY((1), ((1)) ^ 0)) | (_GLF_IDENTITY((1), ~ (~ ((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))))))) | (1))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-91589) : 4))))) | (_GLF_IDENTITY(4, (4) - 0))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) + 0)) >> 0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0)))) ^ ivec2(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0)))) ^ ivec2(0, 0))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1)), _GLF_IDENTITY(0, (0) ^ 0))) ^ _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0)))) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1)), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0)))) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0)))) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1)))), _GLF_IDENTITY(0, (0) ^ 0))) ^ _GLF_IDENTITY(0, (0) | (0))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0)))))), (false ? _GLF_FUZZED(ivec2(84870, 75242)) : (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0))))))))) / ivec2(1, 1)) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1)), _GLF_IDENTITY(0, (0) ^ 0))) ^ _GLF_IDENTITY(0, (0) | (0))), (0 | 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((+ -72723)) : _GLF_IDENTITY(1, (0 | 0) ^ (1)))), 0), ~ (_GLF_IDENTITY(~ (ivec4((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0)))))), (false ? _GLF_FUZZED(ivec2(84870, 75242)) : (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0))))))))) / ivec2(1, 1)) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1)), _GLF_IDENTITY(0, (0) ^ 0))) ^ _GLF_IDENTITY(0, (0) | (0))), (0 | 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((+ -72723)) : _GLF_IDENTITY(1, (0 | 0) ^ (1)))), 0)), ~ (~ (~ (ivec4((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0)))))), (false ? _GLF_FUZZED(ivec2(84870, 75242)) : (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(13907))), 0, 0))))))))) / ivec2(1, 1)) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))) / 1)), _GLF_IDENTITY(0, (0) ^ 0))) ^ _GLF_IDENTITY(0, (0) | (0))), (0 | 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((+ -72723)) : _GLF_IDENTITY(1, (0 | 0) ^ (1)))), 0)))))))))) * 1)));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) || false), false, true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true))))), bool(bvec2(bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true))))), true))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true))))), bool(bvec2(bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true))))), true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true))))), bool(bvec2(bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true))))), true))))), false), false))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), true))), false))))), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1722.7316)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && _GLF_IDENTITY(true, true && (true))), false)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0))), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(9.3)), vec2(_GLF_FUZZED(912.831), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), (false ? _GLF_FUZZED(-3517.8619) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true))) && true), false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.70)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.2) : injectionSwitch.x)) > injectionSwitch.y) || false), false, true, true))) && true), false)))))) && true)) || false))));
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-658.180)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, 1u, 0u))), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, 1u, 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size), ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size)) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u), (true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(79818u, 1821u, 27259u, 102275u))))))).z, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z), (1u | 1u) * ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z) << 0u))), uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, 1u, 0u))), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u)))).z, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u)))).z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u)))).z, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u)))).z, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0u), GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, uint(uvec3(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z, 1u, 0u))), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size)), GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size))) + uvec4(0u, 0u, 0u, 0u)))).z, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_basevirtual_gidworkgroup_size.z))))) | 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true)))), (bool(bvec2(_GLF_DEAD(false), true))) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false)))))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))
        barrier();
       return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), (false ? _GLF_FUZZED(2570.1589) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((-82738 << _GLF_IDENTITY(-15947, clamp(_GLF_IDENTITY(-15947, (false ? _GLF_FUZZED(_injected_loop_counter) : -15947)), -15947, -15947))))))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
