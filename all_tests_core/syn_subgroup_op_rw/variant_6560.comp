#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(trunc(899.174)))))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (false))))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.3) : injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-46.78)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bool(true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) + 0.0)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.43)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.43)), float(injectionSwitch.y), bool(true))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.43)), float(injectionSwitch.y), bool(true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(77816u))), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sin((vec3(-71.04, 87.95, -45.72) * mat2x3(1.6, 909.683, 433.643, -448.032, -3.1, 9.3)))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(49.68)))) - 0.0), 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-6.6)), bool(false))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), false || (false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(8.3))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9618.8729) : 1.0))))) * (injectionSwitch)) / abs(vec2(1.0, 1.0))), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sin(log(1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), abs(0.0))), 0.0))).y, mix(float(_GLF_FUZZED(-82.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sin(log(1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), abs(0.0))), 0.0))).y, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sin(log(1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), abs(0.0))), 0.0))).y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) * 1.0))), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0))))))))), true, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, (false) || false), ! (! ((_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, (false) || false))))), (true && (bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, (false) || false)))))) || false)) && true))) && _GLF_IDENTITY(true, true && (true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat4(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, ~ (~ (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y))), 0u | (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)), _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u)))), 0u ^ (min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid) / uvec3(1u, 1u, 1u)), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)).y, 0u | (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)), _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, ~ (~ (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))), (~ (_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, ~ (~ (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y))))) | (~ (_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, ~ (~ (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))))))), 0u, 0u, 0u))))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y) >> 0u), uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y) >> 0u), uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u)), (uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))) / 1u)), (_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u)), (uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))) / 1u))) / 1u))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), _GLF_FUZZED(-258.618)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-107.595) : tan(0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, cos(0.0))), mix(float(_GLF_FUZZED(-1.3)), float(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, cos(0.0))), (float(mat3(injectionSwitch.y, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), float(mat3x4(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(9.1)), bool(false))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0)))) - 0.0)), bool(true)))))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y))), 0u, 0u, 0u))), (true ? _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_size))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u)))), (min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(_GLF_IDENTITY(uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u), (uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u)) | (uvec4(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, 0u, 0u, 0u))))))) | 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), bool(bvec4(! (false), false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) | (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))))))))) | ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid) * uvec3(1u, 1u, 1u))), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) << uvec3(0u, 0u, 0u)), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))))) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))) + uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))) << uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))) - uvec3(0u, 0u, 0u))))), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))).y, clamp(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) | (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))))))))) | ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid) * uvec3(1u, 1u, 1u))), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) << uvec3(0u, 0u, 0u)), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))))) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))) + uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))) << uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))) - uvec3(0u, 0u, 0u))))), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))).y, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) | (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))))))))) | ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid) * uvec3(1u, 1u, 1u))), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) << uvec3(0u, 0u, 0u)), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))))) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))) + uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))) << uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))) - uvec3(0u, 0u, 0u))))), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))).y, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) | (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))))))))) | ((~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(clamp((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid) * uvec3(1u, 1u, 1u))), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) << uvec3(0u, 0u, 0u)), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)))), ~ (~ (clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))))) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), clamp((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), min((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))))) + uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))) << uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))) - uvec3(0u, 0u, 0u))))), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid))))))).y)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false))))))))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938)), ((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938))) / sqrt(1.0))))) - _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-9372.4101, -7.2, -2527.3260, -5.9)) : mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938)), ((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938))) / sqrt(1.0))))) - _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-9372.4101, -7.2, -2527.3260, -5.9)) : mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938)), ((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938))) / sqrt(1.0))))) - _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-9372.4101, -7.2, -2527.3260, -5.9)) : mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))) && true)))), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938)), ((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938))) / sqrt(1.0))))) - _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-9372.4101, -7.2, -2527.3260, -5.9)) : mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938)), ((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938))) / sqrt(1.0))))) - _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-9372.4101, -7.2, -2527.3260, -5.9)) : mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938)), ((true ? (injectionSwitch.x) : _GLF_FUZZED(340.938))) / sqrt(1.0))))) - _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-9372.4101, -7.2, -2527.3260, -5.9)) : mat2(determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, sqrt(0.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))) && true)))), true))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z], _GLF_IDENTITY(4, (4) + (0 & -64399)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((false ? 9771.4962 : 579.559))), bool(false))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.x = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uint(55.01))))), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(reflect(1.1, atan(369.165))) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true))))) || false))))
    barrier();
  }
 if(subgroup_local_id + 1 < GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_DEAD(false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z) | 0u), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z))], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.x, _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 1 * (4)), _GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ((_GLF_IDENTITY(4, (4) / 1))) - 0)))), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), ((4)) >> 0)))), _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), 1 * (~ ((4))))))), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) / 1)))))) ^ 0) : _GLF_FUZZED(78464))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bool(false))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z))], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.x, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false))))))))), false, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))) && true)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))) && true))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))), true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(1.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bool(false || (true))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
