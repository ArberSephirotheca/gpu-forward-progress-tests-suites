#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), true && (false || (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false), true)))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false), true)))))))))) || false)), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && ((false) || false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) || false), true && ((false) || false)), false), true, false))), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && ((false) || false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) || false), true && ((false) || false)), false), true, false))), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && ((false) || false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) || false), true && ((false) || false)), false), true, false))), true)))))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))) || false) && ((false) || false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true, false))), true)))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(true && ((false) || false), ! (! (true && ((false) || false))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)))))))) && true))), (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(true && ((false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && ((false) || false), (_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && ((false) || false), (_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(true && ((false) || false), (_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)))))))) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(true && (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && ((false) || false), (_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && ((false) || false), (_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(true && ((false) || false), _GLF_IDENTITY((_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false)))), ! (! ((_GLF_IDENTITY(true && ((false) || false), true && (true && ((false) || false))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)))))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)))))))), false || ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)))))))))), true, true)))))) && true)))) || false), (false) && true)), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))))), true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true))))))))) || false, true && ((false) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))), (false) && true))))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && (_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false, true && ((false) || false))) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, true && ((false) || false)), false), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), true && ((false) || false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || _GLF_IDENTITY(false, false || (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true && ((false) || false)), false), true)))))))) && true))), (false) && true))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat3x2(mat2(injectionSwitch, 0.0, 0.0)))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), bool(bool(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4756.2924, 245.016)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y, (injectionSwitch.y) - abs(0.0))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))) | (0u ^ (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))))), 0u ^ (0u ^ (0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, (0u) << 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(95281u)))), clamp(_GLF_IDENTITY((0u), min((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << (0u & 159207u)))))), _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_id) : (0u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)), min(_GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u + ((0u)))))), (0u))), (0u)))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), max((uint(uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (0u), uint(uvec2(_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(subgroup_size))), 0u))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), false))))) ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size), 1u * (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size))), true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (uint(0u)) | (uint(0u)))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))))) ^ (0u))), 0u ^ (0u ^ (0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u)))))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))), (_GLF_IDENTITY(uint(uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))) | (0u ^ (0u))), 0u ^ (0u ^ (0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) | ((0u))) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) | ((0u))) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) | ((0u))) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), (0u))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) | ((0u))) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), (0u))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u ^ ((0u)))) | ((0u))) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), (0u)))))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), _GLF_IDENTITY(~ (0u), 0u | (~ (0u))), ~ (0u))))), 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), _GLF_IDENTITY(~ (0u), 0u | (~ (0u))), ~ (0u))))), 0u ^ (0u))))))), 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))) | (0u ^ (0u))), 0u ^ (0u ^ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))) | (0u ^ (0u))), 0u ^ (0u ^ (0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))) | (0u ^ (0u))), 0u ^ (0u ^ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_size)))) | (0u ^ (0u))), 0u ^ (0u ^ (0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))), min(_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY((0u), min((0u), (0u))))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) << 0u)))), 0u | (~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) << 0u)))))))))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u)))), (~ (_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), _GLF_IDENTITY(min((0u), (0u)), (min((0u), (0u))) | (min((0u), (0u))))), (0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))), clamp(_GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))), _GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))), _GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u))))))))))))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u ^ (0u)), 1u * (_GLF_IDENTITY(0u ^ (0u ^ (0u)), (0u ^ (_GLF_IDENTITY(0u, (0u) + 0u) ^ (0u))) / 1u)))), (_GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u ^ (0u)), 1u * (_GLF_IDENTITY(0u ^ (0u ^ (0u)), (0u ^ (_GLF_IDENTITY(0u, (0u) + 0u) ^ (0u))) / 1u))))) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u))), 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u ^ (0u)), 1u * (_GLF_IDENTITY(0u ^ (0u ^ (0u)), (0u ^ (_GLF_IDENTITY(0u, (0u) + 0u) ^ (0u))) / 1u)))), (_GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u ^ (0u)), 1u * (_GLF_IDENTITY(0u ^ (0u ^ (0u)), (0u ^ (_GLF_IDENTITY(0u, (0u) + 0u) ^ (0u))) / 1u))))) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), (0u))), (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u))), 1u))))), ~ (~ ((uint(uvec3(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), _GLF_IDENTITY(0u ^ (0u), 0u ^ (0u ^ (0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), 1u * (_GLF_IDENTITY((0u), min((0u), (0u))))), (0u)))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), _GLF_IDENTITY(0u ^ (0u), 0u ^ (0u ^ (0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uint((0u)), clamp(uint((0u)), uint((0u)), _GLF_IDENTITY(uint((0u)), max(uint((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))))), uint((0u))))))))), 0u | (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec3((0u), 0u, 0u)), (uint(uvec3((0u), 0u, 0u))) >> 0u)))))), (0u)))))), _GLF_IDENTITY(0u, 0u ^ (0u)))))), 1u))))))) | 0u) / 1u, ((uint(uvec3(_GLF_IDENTITY(workgroup_size, (workgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), 0u | (_GLF_IDENTITY(0u ^ (0u), (true ? 0u ^ (0u) : _GLF_FUZZED(workgroup_id)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u + (_GLF_IDENTITY(0u, 0u ^ (0u)))), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), 0u ^ (0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))), 0u ^ _GLF_IDENTITY((0u), ((0u)) / 1u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u))))))) << (0u & 1995u)), 0u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), 0u ^ (0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, 0u ^ (0u))))))) << (0u & 1995u)), 0u))), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), 0u ^ (0u)), 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), clamp(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) >> 0u)))))), 0u)))) ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1u), uint(uvec4((1u), 0u, 0u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))))), max(~ _GLF_IDENTITY((1u), uint(uvec4((1u), 0u, 0u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))))), ~ _GLF_IDENTITY((1u), uint(uvec4((1u), 0u, 0u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))))))))), 1u))))))), _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), ((0u)) << 0u)))), (0u), (0u)))))), 1u))) / _GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u))) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) - 0u))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, (0) >> 0)), (true ? _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)) : _GLF_FUZZED(ivec2(-1154, _GLF_IDENTITY(_GLF_IDENTITY(11749, min(11749, 11749)), max(_GLF_IDENTITY(11749, min(_GLF_IDENTITY(11749, 0 + (_GLF_IDENTITY(11749, (11749) | (11749)))), 11749)), _GLF_IDENTITY(11749, min(11749, 11749))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 0), (true ? ivec2(0, 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(-1154, _GLF_IDENTITY(11749, int(int(_GLF_IDENTITY(_GLF_IDENTITY(11749, (11749) | 0), (true ? _GLF_IDENTITY(11749, (11749) | 0) : _GLF_FUZZED(72873)))))))), (true ? _GLF_FUZZED(ivec2(-1154, _GLF_IDENTITY(11749, (11749) / 1))) : _GLF_FUZZED(ivec2(61801, -25336))))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))))))), 0)), 0), (true ? ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(0, 0, 0, 1)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY((ivec4(0, 0, 0, 1)), ivec4(1, 1, _GLF_IDENTITY(1, 0 + (1)), 1) * ((ivec4(0, 0, 0, 1)))))), ((ivec4(0, 0, 0, 1))) + ivec4(0, 0, 0, 0)) | ivec4(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) / _GLF_IDENTITY(1, 1 * (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-23574, ~ (~ (-23574)))) : (~ (0)) / 1))))), 0, 0, 0)))), 0) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(-1154, max(_GLF_IDENTITY(-1154, _GLF_IDENTITY(int(int(-1154)), (_GLF_IDENTITY(int(int(-1154)), (false ? _GLF_FUZZED(75859) : int(int(-1154))))) >> 0)), -1154)), 11749)))))) >> 0)) / 1)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-867.884, -7863.9377)))).x, (false ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2139.9383)), vec2(_GLF_FUZZED((-86.08 - (54.61))), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((smoothstep(-6.5, 64.02, vec2(-5.7, 74.54)) - -4160.2092)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((- float(193984u))), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-556.625)), bvec2(true, false)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0)))))))), 0.0 + (min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), (float(mat4(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0 + (min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-978.876, max(-978.876, -978.876)))))), sqrt(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(mat4(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0 + (min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0), sqrt(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), (float(mat4(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0 + (min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat4x3(mat4(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), transpose(transpose(mat4x3(mat4(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.65)), float(injectionSwitch.y), bool(true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-382.877)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))) << 0), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0])))), _GLF_FUZZED(8.7)), bvec2(true, false))), 0.0, 0.0, sqrt(0.0), abs(1.0), 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))), 1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0))))))))), true, false, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) | 0u)), 0u))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (82286 & 0) | (_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (4)), 4)), 4), ((1 & 1) ^ _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (0)))))) * (max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (4)), 4)), 4)))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         subgroupAll(false);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 7.3)))).y)))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, true, true)))))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(50.64), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.1)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) + abs(vec2(0.0, 0.0))), clamp((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9714.9856), _GLF_FUZZED(562.650)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), _GLF_ONE(1.0, injectionSwitch.y)), clamp((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(min(-229.900, -192.279)))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch)))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch)))[1]), bvec2(false, true)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))) * vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) + vec2(0.0, 0.0)))), injectionSwitch)).x) - _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0)))) > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
        return;
       continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true && (bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))), bool(bvec2(false, true))))))))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, _GLF_IDENTITY(vec2(-426.650, 12.99), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(-426.650, 12.99), mix(vec2(_GLF_FUZZED(-20.77), _GLF_FUZZED(7.1)), vec2((vec2(-426.650, 12.99))[0], _GLF_IDENTITY((vec2(-426.650, 12.99))[1], _GLF_IDENTITY(float(mat2x3((vec2(-426.650, 12.99))[1], 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-7400.7207)), bool(false)))), 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))))), min(float(mat2x3((vec2(-426.650, 12.99))[1], 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-7400.7207)), bool(false)))), 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))))), float(mat2x3((vec2(-426.650, 12.99))[1], 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-7400.7207)), bool(false)))), 0.0, 0.0, tan(length(vec3(0.0, 0.0, 0.0))))))))), bvec2(true, true))))))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, _GLF_IDENTITY(vec2(-426.650, 12.99), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(-426.650, 12.99), mix(vec2(_GLF_FUZZED(-20.77), _GLF_FUZZED(7.1)), vec2((vec2(-426.650, 12.99))[0], (vec2(-426.650, 12.99))[1]), bvec2(true, true))))))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) * cos(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) * cos(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0), (mat3x2(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) * cos(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0)) * mat3(1.0))))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, _GLF_IDENTITY(vec2(-426.650, 12.99), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(-426.650, 12.99), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-20.77, float(mat4x3(_GLF_IDENTITY(-20.77, max(_GLF_IDENTITY(-20.77, min(-20.77, -20.77)), _GLF_IDENTITY(-20.77, float(mat4x2(-20.77, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, abs(1.0), 0.0, 1.0)))), _GLF_FUZZED(7.1)), vec2((vec2(-426.650, 12.99))[0], (vec2(-426.650, 12.99))[1]), bvec2(true, true))))))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5145.2634) : 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), true, false, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6628.2103), _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(-426.650, 12.99), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(-426.650, 12.99), mix(vec2(_GLF_FUZZED(-20.77), _GLF_FUZZED(7.1)), vec2((vec2(-426.650, 12.99))[0], (vec2(_GLF_IDENTITY(-426.650, mix(float(-426.650), float(_GLF_FUZZED(-645.250)), bool(false))), 12.99))[1]), bvec2(true, true))))))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, _GLF_IDENTITY(vec2(-426.650, 12.99), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(-426.650, 12.99), mix(vec2(_GLF_FUZZED(-20.77), _GLF_FUZZED(7.1)), vec2((vec2(-426.650, 12.99))[0], (vec2(-426.650, 12.99))[1]), bvec2(true, true))))))) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(943.171, 2127.6373)) : injectionSwitch)).y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0))))))), true, false, false))))) || false)))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true && (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(false, (false) || false)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), true && (_GLF_IDENTITY((false), bool(bool((false)))))) || false), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, (false) || false)))), false), true)), true, _GLF_IDENTITY(true, true && (true)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && (! ((false) || false)))))), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), false || (false || (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))) || false)))))))))), false), true), false))))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
}
