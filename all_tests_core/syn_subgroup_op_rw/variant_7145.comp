#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) && true)) && (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))))), (bool(bvec4(false, false, false, false))) && true)), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))), ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))), ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))), ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), bool(bool(! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false, true)))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))))))) && true, (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))) && true)))))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true)))))))))) && true) || false))) && true))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), true)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) && true), false)))) || false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 1 * (1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, false))), false, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, true, false))), false, false)))), true)))))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))), false || (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(45919), min(_GLF_FUZZED(45919), _GLF_FUZZED(45919))), 0 + (_GLF_IDENTITY(_GLF_FUZZED(45919), int(int(_GLF_IDENTITY(_GLF_FUZZED(45919), (_GLF_FUZZED(45919)) / 1)))))))))), max((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_FUZZED(45919), 0 + (_GLF_FUZZED(45919)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_FUZZED(45919), 0 + (_GLF_FUZZED(45919)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_FUZZED(45919), 0 + (_GLF_FUZZED(45919))))))))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_FUZZED(45919), 0 + (_GLF_FUZZED(45919))))))), 0 ^ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_IDENTITY(_GLF_FUZZED(45919), 0 + (_GLF_FUZZED(45919))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ((! _GLF_IDENTITY((false), true && ((false))))) || false), ! (! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(false || (! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (! ((! (false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (! ((! (false)))), true), bvec2(bvec4(bvec2(false || (! ((! (false)))), true), true, true))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false || (! ((! (false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (! ((! (false)))), true), bvec2(bvec4(bvec2(false || (! ((! (false)))), true), true, true))), true)))), true, true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-7955.0822, -7862.9861, _GLF_IDENTITY(-4.0, (-4.0) + 0.0), -5.6).z), _GLF_FUZZED(194.074)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (uvec3(workgroup_size, 0u, 1u)) | (uvec3(workgroup_size, 0u, 1u))))), workgroup_size, _GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))))))) / 1u), (workgroup_size) | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED((workgroup_id << (_GLF_IDENTITY(false ? subgroup_size : subgroup_size, 0u | (false ? subgroup_size : subgroup_size)))))), ((true ? workgroup_id : _GLF_FUZZED((workgroup_id << (false ? subgroup_size : subgroup_size))))) - 0u));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))))), false || (bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))))))))), (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || false)), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || false))))))), false || (bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) || false)))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.27), _GLF_FUZZED(-2767.0616)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(0.0, 0.0) + (injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.27), _GLF_FUZZED(-2767.0616)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), bvec2(true, true))), vec2(0.0, 0.0) + (injectionSwitch)).y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), 0u, 0u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) ^ 0u), 0u, 0u), uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), 0u, 0u))))))), min(~ (~ (workgroup_base + subgroup_base)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), (((workgroup_base + subgroup_base))) / 1u) ^ 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u | 0u))) ^ 0u)) : ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), uint(uvec3((workgroup_base + subgroup_base), 0u, 0u))))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) - 0))), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((+ _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))), ((99353u / 194745u) & 0u) | (_GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))))))))) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(142243u) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) | (subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(uint(77804))), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_base)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(uint(77804)), (_GLF_FUZZED(uint(77804))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), min((true ? subgroup_local_id : _GLF_FUZZED(uint(77804))), (true ? subgroup_local_id : _GLF_FUZZED(uint(77804))))))))))) + 1) : _GLF_FUZZED(_GLF_IDENTITY((+ _GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(num_workgroup), (true ? uint(num_workgroup) : _GLF_FUZZED(2069u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(num_workgroup), (true ? uint(num_workgroup) : _GLF_FUZZED(2069u)))))))), (_GLF_IDENTITY((+ _GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(num_workgroup), (true ? uint(num_workgroup) : _GLF_FUZZED(2069u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(num_workgroup), (true ? uint(num_workgroup) : _GLF_FUZZED(2069u)))))))), 1u * ((+ _GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(num_workgroup), (true ? uint(num_workgroup) : _GLF_FUZZED(2069u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(num_workgroup), (true ? uint(num_workgroup) : _GLF_FUZZED(2069u))))))))))) * (0u ^ 1u))))) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.4) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / abs(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) / abs(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-7518.5168)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), max((injectionSwitch) / abs(vec2(1.0, 1.0)), (injectionSwitch) / abs(vec2(1.0, 1.0))))))).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))).x) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))).x) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(transpose(mat4x3(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))).x) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, sin(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y), false, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : injectionSwitch.y))))))))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))) & ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) - 0), 7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))))), _GLF_IDENTITY(int(7), int(7)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * ((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) << 0)), ((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))))) & (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), max(min(int(7), int(7)), min(int(7), int(7))))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))))) << (0 << _GLF_IDENTITY(int(6), int(6)))), (_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + (1 ^ 1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(min(int(7), int(7)), (min(int(7), int(7))) | (min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), clamp(clamp(int(7), int(7), int(7)), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), (clamp(int(7), int(7), int(7))) | 0), clamp(int(7), int(7), int(7))))), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(7), int(7))), min(int(_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(7))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) * (1 & 1))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))) & ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) - 0), 7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))))), _GLF_IDENTITY(int(7), int(7)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * ((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) << 0)), ((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))))) & (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), max(min(int(7), int(7)), min(int(7), int(7))))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))))) << (0 << _GLF_IDENTITY(int(6), int(6)))), (_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + (1 ^ 1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(min(int(7), int(7)), (min(int(7), int(7))) | (min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), clamp(clamp(int(7), int(7), int(7)), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), (clamp(int(7), int(7), int(7))) | 0), clamp(int(7), int(7), int(7))))), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(7), int(7))), min(int(_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(7))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) * (1 & 1))))) && true)))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))) & ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) - 0), 7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) - 0), 7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))))))), _GLF_IDENTITY(int(7), int(7)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * ((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) << 0), ~ (~ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * ((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) << 0), (int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * ((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 | 1) * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), min(min(int(7), int(7)), min(int(7), int(7))))))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1)) | ivec3(0, 0, 0)))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) << 0)) | 0))))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))))), max(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))))))) & (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), _GLF_IDENTITY(~ (~ (ivec2(int(int(7)), 1))), (_GLF_IDENTITY(~ (~ (ivec2(int(int(7)), 1))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(int(int(7)), 1)))), (false ? _GLF_FUZZED(ivec2(-28862, 49075)) : ~ (~ (~ (ivec2(int(int(7)), 1))))))))) + ivec2(0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) >> 0), min(int(7), int(7))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(_GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1)))))), (_GLF_IDENTITY(int(int(7)), int(_GLF_IDENTITY(ivec2(int(int(7)), 1), ~ (~ (ivec2(int(int(7)), 1))))))) / 1))), _GLF_IDENTITY(int(7), min(int(7), int(7))))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(min(int(7), int(7)), max(min(int(7), int(7)), min(int(7), int(7))))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))))) << (0 << _GLF_IDENTITY(int(6), int(6)))), (_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) & (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + (1 ^ 1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(min(int(7), int(7)), (min(int(7), int(7))) | (min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), clamp(clamp(int(7), int(7), int(7)), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), (clamp(int(7), int(7), int(7))) | 0), clamp(int(7), int(7), int(7))))), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(7), int(7))), min(int(_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(7))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) * (1 & 1))), (int(_GLF_ONE(1.0, injectionSwitch.y)) & (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + (1 ^ 1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_injected_loop_counter))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(98406) : int(7))), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(7))))))), int(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), (int(7)) | 0))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7)))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7)))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) - 0)) | (0 & -95721)), min(int(7), int(7))))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(min(int(7), _GLF_IDENTITY(int(7), (int(7)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (min(int(7), int(7))) | (min(int(7), int(7))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), 0 | (int(7))))), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), clamp(clamp(int(7), int(7), int(7)), _GLF_IDENTITY(clamp(int(7), int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((clamp(int(7), int(7), int(7))) | 0, clamp((clamp(int(7), int(7), int(7))) | 0, (clamp(int(7), int(7), int(7))) | 0, (clamp(int(7), int(7), int(7))) | 0))), clamp(int(7), int(7), int(7))))), min(int(7), int(7))))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), clamp(int(7), int(7), int(7))), min(int(7), int(7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(int(7)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(7), int(7)), (clamp(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(7), int(7))) | (clamp(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(7), int(7))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (7)), (7) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(7))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7))), min(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))))), 1, 1))) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))) >> _GLF_IDENTITY(int(7), int(7)))))) * (1 & 1)))) - 0))) && true)))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), false || (! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(faceforward(injectionSwitch, vec2(-451.963, 879.947), vec2(804.841, -75.16))) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0))))).y), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if((subgroup_local_id % 2) == 0)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))), max(~ (_GLF_IDENTITY(0, max(0, 0))), ~ (_GLF_IDENTITY(0, max(0, 0))))))) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-9199)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (42592 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
                barrier();
               barrier();
              }
            }
           subgroupAll(false);
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) << 0))))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(0 | (_injected_loop_counter --), (0 | (_injected_loop_counter --)) ^ 0)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) * 1.0) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
             barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_WRAPPED_LOOP(false))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bvec3(bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)))))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))) || false, ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))) || false, ((! (_GLF_WRAPPED_IF_FALSE(false))) || false) && true))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         do
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(1, ~ (~ (1))), 1))) / 1)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   do
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (! (true)) || false)), bool(bvec4((_GLF_IDENTITY(! (true), (! (true)) || false)), false, false, true))))))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) < 1) && true)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))))))))
              {
              }
             else
              {
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0)))), uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 1u)))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), 64, 4);
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) && true)))))), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))))), false, false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.98)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), abs(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-1144.7140)))), abs(0.0), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.0)), bool(false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0)))))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, abs(1.0), 0.0, 1.0)))[0], injectionSwitch[1])), vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), abs(0.0), abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-714.959))))))), _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 1.0))), (injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))))))).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(mat3x4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sin(0.0), 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-260.859)), float(0.0), bool(true)))), abs(0.0), abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 0.0)), (float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 0.0))) - 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), (injectionSwitch))) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), _GLF_IDENTITY((abs(vec2(0.0, 0.0))), vec2(0.0, 0.0) + ((abs(vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))).y) / 1.0)), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), abs(0.0), abs(0.0), _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)))), (false ? _GLF_FUZZED(8591.4814) : float(_GLF_IDENTITY(mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sqrt(7612.2040)) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(789.250) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))))), _GLF_IDENTITY(1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + (1.0)), 1.0))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - _GLF_IDENTITY(_GLF_IDENTITY(abs(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))))))).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), abs(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-260.859)), clamp(float(_GLF_FUZZED(-260.859)), float(_GLF_FUZZED(-260.859)), float(_GLF_FUZZED(-260.859)))), float(0.0), bool(true)))), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), (injectionSwitch))) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), _GLF_IDENTITY((abs(vec2(0.0, 0.0))), vec2(0.0, 0.0) + ((abs(vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), _GLF_IDENTITY(vec2(vec3((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), 0.0)), vec2(1.0, 1.0) * (vec2(vec3((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), 0.0)))))), (injectionSwitch))) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), _GLF_IDENTITY((abs(vec2(0.0, 0.0))), vec2(0.0, 0.0) + ((abs(vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))))).y) / 1.0))), float(_GLF_FUZZED(93.40)), bool(_GLF_IDENTITY(false, true && (false))))) - 0.0)))))
          {
           for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * (_GLF_IDENTITY(int(5), (int(5)) >> 0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), ~ (~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))))))))) != (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) & 1)); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))));
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), min(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) >> (1 ^ 1)) << 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> (0 << _GLF_IDENTITY(int(3), int(3)))) != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(42548) : _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(32718))))))), bool(bvec3(true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))), true, true)))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             subgroupAll(false);
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))
              barrier();
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(trunc(injectionSwitch)), (_GLF_FUZZED(_GLF_IDENTITY(trunc(injectionSwitch), max(trunc(injectionSwitch), _GLF_IDENTITY(trunc(injectionSwitch), mix(vec2(_GLF_FUZZED(661.170), (trunc(injectionSwitch))[1]), vec2((trunc(injectionSwitch))[0], _GLF_IDENTITY(_GLF_FUZZED(-868.271), (_GLF_FUZZED(-868.271)) * 1.0)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (! (bool(bvec4(true, false, true, false)))))), false))))))) * vec2(1.0, 1.0)) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           subgroupBarrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
    {
     barrier();
    }
   else
    {
    }
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, clamp(6, 6, 6))))), _GLF_IDENTITY(int(6), (int(6)) / 1)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) | 0)) >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(sqrt(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(sqrt(vec2(0.0, 0.0)))).y) - 0.0)))) && true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true))), true, false)))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) && true)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
        }
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-2219.6139), _GLF_FUZZED(_GLF_IDENTITY((1024.5700), ((1024.5700)) - 0.0))), vec2((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], float(mat2((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], 0.0, tan(0.0), 1.0))), (_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], float(mat2((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], 0.0, tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.1) : 0.0)), 0.0))), 1.0)))) * 1.0)), bvec2(true, true))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-2219.6139), _GLF_FUZZED(_GLF_IDENTITY((1024.5700), ((1024.5700)) - 0.0))), vec2((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], float(mat2((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], 0.0, tan(0.0), 1.0))), (_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], float(mat2((vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))[1], 0.0, tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.1) : 0.0)), 0.0))), 1.0)))) * 1.0)), bvec2(true, true))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, false))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
}
