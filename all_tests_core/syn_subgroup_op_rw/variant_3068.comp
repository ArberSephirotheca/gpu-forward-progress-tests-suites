#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec2(bvec2((! ((false))), false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))), true, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(0.0, 0.7, -7.1))))), (true ? vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.7, -7.1))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * _GLF_IDENTITY(-7681.3819, 0.0 + (-7681.3819)))), max(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), float(vec4(_GLF_FUZZED((-3.6 * -7681.3819)), 0.0, 1.0, exp(0.0)))), _GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), max(_GLF_FUZZED((-3.6 * -7681.3819)), _GLF_FUZZED((-3.6 * -7681.3819)))))), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), min(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), mix(vec2(_GLF_FUZZED(670.205), (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[0], _GLF_FUZZED(518.176)), bvec2(true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(0.0, 0.7, -7.1))))), (true ? vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.7, -7.1))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED((-224.278))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[0], _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), max(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), float(vec4(_GLF_FUZZED((-3.6 * -7681.3819)), 0.0, 1.0, exp(0.0)))), _GLF_FUZZED((-3.6 * -7681.3819)))), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), min(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(670.205), (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[0], _GLF_FUZZED(518.176)), bvec2(true, false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(0.0, 0.7, -7.1))))), (true ? vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-4.7), (min(injectionSwitch, injectionSwitch))[1]), vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED((- float(42394u)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.7, -7.1))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), max(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), float(vec4(_GLF_FUZZED((-3.6 * -7681.3819)), 0.0, 1.0, exp(0.0)))), _GLF_FUZZED((-3.6 * -7681.3819)))), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), min(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), min(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), mix(vec2(_GLF_FUZZED(670.205), (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[0], _GLF_FUZZED(518.176)), bvec2(true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(0.0, 0.7, -7.1))))), (true ? vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), 1.0), (true ? vec3(min(injectionSwitch, injectionSwitch), 1.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(54.46)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(0.0, 0.0, 0.0)))))), 0.7, -7.1))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), max(_GLF_IDENTITY(_GLF_FUZZED((-3.6 * -7681.3819)), float(vec4(_GLF_FUZZED((-3.6 * -7681.3819)), 0.0, 1.0, exp(0.0)))), _GLF_FUZZED((-3.6 * -7681.3819)))), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), min(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), mix(vec2(_GLF_FUZZED(670.205), (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[_GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))]), vec2((_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(1.0, 1.0) * (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))[0], _GLF_FUZZED(518.176)), bvec2(true, false)))))))) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.1)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))), true && ((_GLF_DEAD(false)) || false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.5)))), float(_GLF_FUZZED(240.318)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, false)))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-46.31)), float(injectionSwitch.y), bool(true))), false, false)), bool(bvec4(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, false, false)), false, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)))))))) && true))), bool(bool(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false))), false)), false, true))))))), true)))))), bool(bvec3((! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), cos(0.0)), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)))))), true, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, true)), true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true))))), (bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true)))))) || false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(47.44, max(_GLF_IDENTITY(47.44, (47.44) - 0.0), 47.44)), _GLF_IDENTITY(float(mat4x3(47.44, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 1.0)), clamp(float(mat4x3(47.44, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), max(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))))), 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-387.414) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), float(mat4x3(47.44, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x3(47.44, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9023.0198))), 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), determinant(mat2(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 1.0)), (float(mat4x3(47.44, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9023.0198))), 0.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), determinant(mat2(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.0))), 0.0))))))) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, ! (! (true))), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) : _GLF_FUZZED(subgroup_size))) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x))) + 0u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))))), bool(bool(bool(bvec3(false, true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.y), bool(true)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (bool(false)), bool(bvec3(false || (bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.9, -60.41, 74.11, 9.0, -1.3, -116.870, 9.0, 3271.0467))))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.9, -60.41, 74.11, 9.0, -1.3, -116.870, 9.0, 3271.0467))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.9, -60.41, 74.11, 9.0, -1.3, -116.870, 9.0, 3271.0467)))))))))[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.9, -60.41, 74.11, 9.0, -1.3, -116.870, 9.0, 3271.0467))))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.9, -60.41, 74.11, 9.0, -1.3, -116.870, 9.0, 3271.0467))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.9, -60.41, 74.11, 9.0, -1.3, -116.870, 9.0, 3271.0467)))))))))[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))) : _GLF_FUZZED(unpackHalf2x16(workgroup_size)))), bvec2(true, false)))) / vec2(1.0, 1.0)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-9310.4816, 899.427)) : mat2(1.0) * (injectionSwitch))))[1], 1.0, 0.0, 1.0, 1.0, 1.0))))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false)))) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-70.36)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9472.1737, -97.74), mix(vec2(_GLF_FUZZED(266.497), (vec2(-9472.1737, -97.74))[1]), vec2((vec2(-9472.1737, -97.74))[0], _GLF_FUZZED(7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false)))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.0) : 1.0)), 1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false)), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))) * mat2(1.0), min((mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))) * mat2(1.0), (mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))) * mat2(1.0))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((false ? 4.7 : 8087.7364)), (true ? _GLF_IDENTITY(_GLF_FUZZED((false ? 4.7 : 8087.7364)), mix(float(_GLF_FUZZED(8.1)), float(_GLF_FUZZED((false ? 4.7 : 8087.7364))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(81.33)))), bvec2(true, false)))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false)))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), vec2(_GLF_IDENTITY(vec4(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), exp(0.0), 1.0), (vec4(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), exp(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false)))) / vec2(1.0, 1.0)).x))), bool(true))) : _GLF_FUZZED(-8.3))), mix(float(_GLF_FUZZED(float(25166))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 4.7 : 8087.7364))), bvec2(true, false))).x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (bool(bool((bool(_GLF_DEAD(false)))))))))), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) ^ 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ (~ ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)))))))) | 0u)) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ (~ ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)))))))) | 0u)) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ (~ ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)))))))) | 0u)) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, (0u) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (subgroup_id) | 0u)))) - 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), uint(uvec4(_GLF_IDENTITY(~ ((subgroup_id)), (~ ((subgroup_id))) | 0u), 1u, 1u, 1u))))), _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(subgroup_id) : (~ (subgroup_id)))) >> 0u)))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u))))))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)), clamp(~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)), ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)), ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(uvec4(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, 0u)))[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[2])), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)).x)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id))))))), max((~ ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id))))))), (~ ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, (122145u & 0u), 0u))), (subgroup_id) << 0u), subgroup_id)))))))))) | 0u)) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, (0u) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (subgroup_id) | 0u)))) - 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | 0u) * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[2])), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)).x))))) << 0u), 0u + (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED(subgroup_id))), (subgroup_id) | 0u)) - 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ (~ ((subgroup_id)))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ (~ ((_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))))) | 0u))) | (1u ^ 1u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((subgroup_id))), (_GLF_IDENTITY((~ ((subgroup_id))), clamp((~ ((subgroup_id))), (~ ((subgroup_id))), (~ ((subgroup_id)))))) << 0u), (~ (~ ((subgroup_id)))) | 0u))), ((_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(~ (~ ((subgroup_id))), (~ (~ ((subgroup_id)))) | 0u)))) | 0u) | (1u ^ 1u)) ^ 0u)) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, _GLF_IDENTITY((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup)), 0u ^ ((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, _GLF_IDENTITY((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup)), 0u ^ ((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup)))))), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, _GLF_IDENTITY((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup)), 0u ^ ((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup))))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, _GLF_IDENTITY((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup)), 0u ^ ((true ? (subgroup_id) | 0u : _GLF_FUZZED(num_workgroup))))))))))) - 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.0)), float(injectionSwitch.y), bool(true))))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id))))) << 0u))) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))) | (subgroup_id))))) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[2])), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[2])), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[2])), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size))) + uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(175.472)), bool(false))), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(175.472)), bool(false))), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(175.472)), bool(false))), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(175.472)), bool(false))), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(175.472)), bool(false))), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, (true ? GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x : _GLF_FUZZED(workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), false, false)))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), _GLF_IDENTITY(max(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), float(vec3(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), (-82.46 * (-9.9 * 0.9)) - tan(0.0)), 1.0, 1.0))), -82.46 * (-9.9 * 0.9)), (max(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), float(vec3(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), (-82.46 * (-9.9 * 0.9)) - tan(0.0)), 1.0, 1.0))), -82.46 * (-9.9 * 0.9))) / 1.0)))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat4(float(vec3((injectionSwitch)[1], 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.5) : 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(832.873)), float(0.0), bool(true)))) - 0.0))), (float(mat4(float(vec3((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-3762) : int(int(1)))))], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) - 0.0), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-82.46 * (-9.9 * 0.9))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[1], 0.0, 0.0)), max(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-82.46 * (-9.9 * 0.9))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(772.843)), float(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))), bool(true)))))), (false ? _GLF_FUZZED(97.88) : 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((-82.46 * (_GLF_IDENTITY(-9.9 * 0.9, float(vec2(-9.9 * 0.9, 1.0)))))), (false ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(_GLF_FUZZED((-82.46 * (-9.9 * 0.9))), (_GLF_FUZZED((-82.46 * (-9.9 * 0.9)))) / 1.0))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(mat4(_GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), min(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), _GLF_IDENTITY(max(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), (-82.46 * (-9.9 * 0.9)) - tan(0.0)), 1.0, 1.0), max(vec3(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), (-82.46 * (-9.9 * 0.9)) - tan(0.0)), 1.0, 1.0), vec3(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), (-82.46 * (-9.9 * 0.9)) - tan(0.0)), 1.0, 1.0))))), -82.46 * (-9.9 * 0.9)), (max(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), float(vec3(_GLF_IDENTITY(-82.46 * (-9.9 * 0.9), (-82.46 * (-9.9 * 0.9)) - tan(0.0)), 1.0, 1.0))), -82.46 * (-9.9 * 0.9))) / 1.0)))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-592.999)), bool(false))))), 1.0 * (_GLF_IDENTITY(float(mat4(float(vec3((injectionSwitch)[1], 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.5) : 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(832.873)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))) - 0.0))), (float(mat4(float(vec3((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-3762) : int(int(1)))))], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) - 0.0), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-82.46 * (-9.9 * 0.9))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[1], 0.0, 0.0)), max(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[1], 0.0, 0.0)), max(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0), (_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[1], 0.0, 0.0)), max(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)) - 0.0), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[1], 0.0, 0.0)), max(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-82.46 * (-9.9 * 0.9))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(mat4(float(vec3((injectionSwitch)[1], 0.0, 0.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(772.843)), float(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))), bool(true)))))), (false ? _GLF_FUZZED(97.88) : 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((-82.46 * (_GLF_IDENTITY(-9.9 * 0.9, float(vec2(-9.9 * 0.9, 1.0)))))), (false ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(_GLF_FUZZED((-82.46 * (-9.9 * 0.9))), (_GLF_FUZZED((-82.46 * (-9.9 * 0.9)))) / 1.0))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(mat4(_GLF_IDENTITY(float(vec3((injectionSwitch)[1], 0.0, 0.0)), min(float(vec3((injectionSwitch)[1], 0.0, 0.0)), float(vec3((injectionSwitch)[1], 0.0, 0.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-88.11)), bvec2(true, false))).y)))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true), false))), bool(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true), false))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u) : _GLF_FUZZED(floatBitsToUint(92.61))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ (3u), max(_GLF_IDENTITY(~ (3u), clamp(~ (3u), ~ (3u), _GLF_IDENTITY(~ (3u), 0u | (~ (3u))))), ~ _GLF_IDENTITY((3u), 0u ^ ((3u)))))))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u) << 0u, ((3u) << 0u) | ((3u) << 0u))))) : _GLF_FUZZED((subgroup_local_id / subgroup_size))))))], uint(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-23695))) < GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(8.6, -2.5, -4.2, 47.75) * vec2(1.9, 390.711))[_GLF_IDENTITY(0, ~ (~ (0)))]) : injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-842.467), clamp(_GLF_IDENTITY(_GLF_FUZZED(-842.467), min(_GLF_FUZZED(-842.467), _GLF_FUZZED(-842.467))), _GLF_FUZZED(-842.467), _GLF_FUZZED(-842.467))) : 0.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x), 1.0 * (clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-842.467), clamp(_GLF_IDENTITY(_GLF_FUZZED(-842.467), min(_GLF_FUZZED(-842.467), _GLF_FUZZED(_GLF_IDENTITY(-842.467, min(-842.467, -842.467))))), _GLF_FUZZED(-842.467), _GLF_FUZZED(-842.467))) : 0.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(min(abs(1.0), abs(1.0)), (_GLF_IDENTITY(min(abs(1.0), abs(1.0)), float(mat4x3(min(abs(1.0), abs(1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)))) + _GLF_ZERO(0.0, injectionSwitch.x))), abs(1.0))), 1.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)) ? _GLF_FUZZED((_GLF_IDENTITY(mat2(8.6, -2.5, _GLF_IDENTITY(_GLF_IDENTITY(-4.2, max(_GLF_IDENTITY(-4.2, max(-4.2, _GLF_IDENTITY(-4.2, mix(float(-4.2), float(_GLF_FUZZED(-39.27)), bool(false))))), -4.2)), max(_GLF_IDENTITY(-4.2, float(_GLF_IDENTITY(vec4(-4.2, 1.0, 0.0, 1.0), (vec4(-4.2, 1.0, 0.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(-4.2, _GLF_IDENTITY((true ? -4.2 : _GLF_FUZZED(0.4)), clamp((_GLF_IDENTITY(true ? -4.2 : _GLF_FUZZED(0.4), 1.0 * (true ? -4.2 : _GLF_FUZZED(0.4)))), _GLF_IDENTITY((true ? -4.2 : _GLF_FUZZED(0.4)), 0.0 + ((true ? -4.2 : _GLF_FUZZED(0.4)))), _GLF_IDENTITY((true ? -4.2 : _GLF_FUZZED(_GLF_IDENTITY(0.4, max(_GLF_IDENTITY(0.4, max(0.4, 0.4)), 0.4)))), 1.0 * (_GLF_IDENTITY((true ? -4.2 : _GLF_FUZZED(0.4)), ((true ? -4.2 : _GLF_FUZZED(0.4))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))), _GLF_IDENTITY(47.75, min(47.75, 47.75))), (mat2(8.6, -2.5, _GLF_IDENTITY(-4.2, max(_GLF_IDENTITY(-4.2, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-4.2, (-4.2) / 1.0), 1.0, 0.0, 1.0), (vec4(-4.2, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(0.4))))), _GLF_IDENTITY(47.75, min(_GLF_IDENTITY(47.75, exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, 0.0 + (0.0)), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))))) * (47.75)), 47.75)))) - mat2(0.0, 0.0, 0.0, 0.0)) * vec2(1.9, 390.711))[0]) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY((-5.3 + 0.4), ((-5.3 + 0.4)) - 0.0)) : _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.2) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1417.6135) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? _GLF_FUZZED(_GLF_IDENTITY((mat2(8.6, -2.5, -4.2, 47.75) * vec2(1.9, 390.711)), vec2(mat3x2((mat2(8.6, -2.5, -4.2, 47.75) * vec2(1.9, 390.711)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0)))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)]) : injectionSwitch.x))) - 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) && true), bool(bool(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), (! ((false))) && true)) && true))))) && true)))) && true) && true) || (false)))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || (false))))))), false)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))), clamp((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))), int(int((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))))))), _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED(-84281))))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, true))))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), false))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)) || false))))))) || false)), false), false))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -892.451)), _GLF_FUZZED(2.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true))))))) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), false)))))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -892.451)), _GLF_FUZZED(2.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && (false))))))))) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), false)))))) || false), (bool((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -892.451)), _GLF_FUZZED(2.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && (false))))))))) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), false), false)))))) || false)) && true), ! (! (bool((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -892.451)), _GLF_FUZZED(2.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))))) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) || false))))))))) || false)), false), false)))))) || false)))))))))))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))), true))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) || false))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) || false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || false)))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec3(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), bool(bool(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))))), true, true)))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))))), ! (_GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))), _GLF_IDENTITY(bool(bvec4(! (! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))), true, true, true)), true && (bool(bvec4(! (! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))), true, true, true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) || false))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)) || (false)), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))), true))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (false))), ! (! (false))))) || false))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) || false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || false)))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec3(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), bool(bool(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), true, true)), (bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), true, true))) || false))))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), bool(bvec4(bool(bool(_GLF_IDENTITY(true, false || (true)))), true, true, false)))))))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))))))), false || (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))) || false))))) || false)))))))))))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) || false))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ! (! ((false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), true && (true && (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, ! (! (true))) && (true && (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), true && (true && (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (false))))) && true), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))) && true)), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), cos(0.0), 1.0, 0.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), cos(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), cos(0.0), 1.0, 0.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), cos(0.0), 1.0, 0.0))) - 0.0)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-83.86) : injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), ! (! (bool(false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(false, ! (! (false))), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))) || (false)), false)), true, _GLF_IDENTITY(true, (true) || false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)) && true)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-17.66)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-17.66)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) | 0))))], injectionSwitch[1])).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2371.8848)), bool(false))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), min(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(-2371.8848)), bool(false))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y)), bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2371.8848)), bool(false)), mix(float(_GLF_FUZZED(-94.61)), float(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2371.8848)), bool(false))), bool(true)))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y)), false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y)))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y))))))))) && true), _GLF_IDENTITY(bool(bvec2(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).y)))))), true)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec2(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), int(4))) ^ (1))) | 0)])) + log(vec2(1.0, 1.0)))).y)))))), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) && true))))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
