#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, true, false, true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y) && true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y) && true))))), false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-55.75, -118.822)))).x > injectionSwitch.y) && true)))))))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), gl_WorkGroupSize.x), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (true ? ~ (~ (gl_WorkGroupSize.x)) : _GLF_FUZZED(subgroup_size)))), gl_WorkGroupSize.x), max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (true ? ~ (gl_WorkGroupSize.x) : _GLF_FUZZED(subgroup_size)))) * (1u & 1u)))), gl_WorkGroupSize.x)))) ^ 0u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x) + 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))), gl_WorkGroupSize.x), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), gl_WorkGroupSize.x), max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))))) ^ 0u)) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), max(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(mat3x4(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2(_GLF_FUZZED(-95.76), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[1]), vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[0], _GLF_FUZZED(65.73)), bvec2(true, false))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))) ^ 0u), subgroup_id)) * subgroup_size) * _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 0u)), 0u ^ (uint(uvec4(1u, 0u, 1u, 0u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 0u)), 0u ^ (uint(uvec4(1u, 0u, 1u, 0u)))))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u & 162650u, uint(uint(_GLF_IDENTITY(0u & 162650u, 0u ^ (_GLF_IDENTITY(0u & 162650u, max(0u & 162650u, 0u & 162650u)))))))) ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u & 162650u, (true ? 0u & 162650u : _GLF_FUZZED(subgroup_local_id)))) ^ (subgroup_base))) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * 1), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((- bitfieldExtract(58561, 69904, -88550))) : 1))))))) * 1)))) : _GLF_FUZZED((_GLF_IDENTITY(-434, clamp(-434, -434, _GLF_IDENTITY(-434, max(-434, -434)))) >> atomicLoad(87866, 73942, -73607, 88320)))))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * 1)) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ 0)))) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ 0)))) - 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ 0)))) - 0)) + 0)))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * 1)) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * 1)) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED((-84727 ^ (39453))))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | ivec3(0, 0, 0)))))) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))), (! (false)) || false))) ? _GLF_FUZZED(length(vec4(0.1, 7.7, -1254.1728, -67.98))) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(17.65)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-10.34), (_GLF_FUZZED(-10.34)) / 1.0))), 0.0)), 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-8160.7589)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), true && (bool(bvec2(bool(false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(float(uvec2(13980u, 171327u).t))), float(_GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))), bool(true)))))), bool(true)))), injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(17.65)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)) + (injectionSwitch.y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-8160.7589)), bool(false))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(float(uvec2(13980u, 171327u).t))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)) + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))), bool(true)))))), bool(true)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[0], injectionSwitch[1])).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(17.65)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)), clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)))) + (injectionSwitch.y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-8160.7589)), bool(false))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(float(uvec2(13980u, 171327u).t))), float(_GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))), bool(true)))))), bool(true)))), injectionSwitch.y), (true ? clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(-22.08))), mix(float(_GLF_FUZZED(17.65)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)) + (injectionSwitch.y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-8160.7589)), bool(false))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(float(uvec2(13980u, 171327u).t))), float(_GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))), bool(true)))))), bool(true)))), injectionSwitch.y) : _GLF_FUZZED(1.8))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.3, 88.30)) : injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(17.65)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-10.34))), 0.0)), 0.0)) + (injectionSwitch.y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-8160.7589)), bool(false))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(float(uvec2(13980u, 171327u).t))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.y), (false ? _GLF_FUZZED(8.0) : 0.0 + (injectionSwitch.y))), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))), bool(true)))))), bool(true)))), injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(_GLF_IDENTITY(17.65, (false ? _GLF_FUZZED(clamp(-44.35, 9.5, 6.3)) : 17.65)))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-10.34))), 0.0)), 0.0)) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, 8.4))))) - vec2(0.0, 0.0)).y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch.y)), float(_GLF_FUZZED(-8160.7589)), bool(false))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(float(uvec2(13980u, 171327u).t))), float(_GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8402.4925), _GLF_FUZZED(float(12916))), bvec2(false, false))).y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))), bool(true)))))), bool(true)))), injectionSwitch.y)) - 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3872.0981)), float(0.0), bool(true)))), bool(true))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5493.3368) : 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))) / 1.0)), 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5493.3368) : 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))) / 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))), false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      return;
    }
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2) / 1u, clamp(_GLF_IDENTITY((subgroup_local_id % 2) / 1u, (true ? (subgroup_local_id % 2) / 1u : _GLF_FUZZED(next_virtual_gid))), (subgroup_local_id % 2) / 1u, (subgroup_local_id % 2) / 1u)))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : 1u))) | (1u))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) * 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u), ~ (~ _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u)), ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u))) * 1u)))))) : (subgroup_local_id % 2), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) * 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u), ~ (~ _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u)), ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u))) * 1u)))))) : (subgroup_local_id % _GLF_IDENTITY(2, int(int(2))))) | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) * 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u), ~ (~ _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(read, (read) * 1u), max(_GLF_IDENTITY(read, (read) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) * 1u), min(_GLF_IDENTITY(read, (read) * 1u), _GLF_IDENTITY(read, (read) * 1u)))))), ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read, (read) * 1u))) * 1u)))))) : (subgroup_local_id % 2))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) << 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(read, (read) * _GLF_IDENTITY(1u, (1u) ^ 0u))) : (subgroup_local_id % _GLF_IDENTITY(2, (2) * 1)))), (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(read, (read) * 1u)) : (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(read, (read) * 1u)) : (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2))) - 0u))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uvec3(read, 1u, 0u))), (read) * 1u)) : (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)))) ^ 0u))))) / (1u ^ 0u))) / 1u)) << 0u) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat2(vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(injectionSwitch, 3487.7741)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4)), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) | (4))))) : _GLF_FUZZED(89497)))) >> 0)), ~ (~ (4))), 4)) : _GLF_FUZZED((-89646 & 58112))), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)) : _GLF_FUZZED((-89646 & 58112))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (4) : _GLF_FUZZED(57348))))), _GLF_IDENTITY(4, int(ivec2(4, 1))))) : _GLF_FUZZED((-89646 & 58112))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) ? _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)) : _GLF_FUZZED((-89646 & 58112)))) - 0)) + 0)) ^ 0)), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2113.5802), _GLF_FUZZED(713.607)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5)))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0))))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) && true))))))), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)))), min(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5)))), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5)))), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-0.0, -9.2, 34.93, 2.7, -87.33, 4771.4977, -2093.3828, -99.25, 51.90, -3.2, -4.5, -8514.4489)) : mat4x3(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5)))), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false)), _GLF_IDENTITY(float(mat4(mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false)), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0))), float(mat2x4(float(mat4(mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false)), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))))), 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5)))), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0))))))).y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), injectionSwitch.y, injectionSwitch.y))) + 0.0)) - 0.0)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) || (! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true, true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), false, false)))))))))
    return;
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u, 0u))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uvec4(read, 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(read, uint(uvec4(read, 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read, _GLF_IDENTITY((read) << 0u, min((read) << 0u, (read) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))) || (true)), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(true, true && (true)), true), bvec3(bvec3(bvec3(! (false), true, true)))), _GLF_IDENTITY(true, bool(bool(true)))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))) && true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))) && true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))) && true)))))), true))))))), true))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), true, true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), true, true)), bvec3(bvec3(bvec3(bvec3(! (false), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), true, true)), bvec3(bvec3(bvec3(bvec3(! (false), true, true)))))), true))))))), true))), true))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(! (false), true, true)))), true)))))))))))), true))), true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), true, true))))))), true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false)), bvec3(bvec3(bvec3(! (false), true, true)))), true))), true))), true)))), true)), true))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, true), false))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, bool(bool(true))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, bool(bool(true))), true))), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, bool(bool(true))), true)))))) && true), true, _GLF_IDENTITY(false, (false) && true))))))), true, true), bvec3(bvec3(bvec3(! (false), true, true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ! (! ((false)))), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ! (! ((false)))), true, true), bvec3(bvec3(bvec3(! (false), true, true)))))))))))))) || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), true, false))))))), true, true)), ! (! (bool(bvec3((true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true))))))), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bool(false || (true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (true)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))) ? _GLF_IDENTITY(_GLF_IDENTITY((~ (read)), ((~ (_GLF_IDENTITY(read, ~ (~ (read)))))) - 0u), (_GLF_IDENTITY((~ (read)), ((~ (_GLF_IDENTITY(read, ~ (~ (read)))))) - 0u)) * 1u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)))))), _GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(2), int(2)))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
}
