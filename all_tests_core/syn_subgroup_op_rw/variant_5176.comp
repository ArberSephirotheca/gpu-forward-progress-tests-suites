#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false, true, true)), false, false)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))), false, true, true)), false, false))) || false)))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4014.2605)), float(injectionSwitch.y), bool(true)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), sqrt(vec4(1.0, 1.0, 1.0, 1.0)) * (vec4(injectionSwitch.x, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-97.52)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, max(6u, 6u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u)))), ((false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) / uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(138874u))))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), min((gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), _GLF_IDENTITY((gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), min((gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (_GLF_IDENTITY(uvec3(6u), clamp(uvec3(6u), uvec3(6u), uvec3(6u)))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) * 1u), _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) / 1u), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : _GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) + (uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)))), 1u))))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x)), (~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x)), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) | (uvec3(6u))), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, 48797u)) : uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(190917u, 14641u, _GLF_IDENTITY(48797u, (48797u) << 0u))) : uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u))))) : _GLF_FUZZED(uvec3(123789u, 5575u, 129788u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x))))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9733.6805), float(mat4x2(_GLF_FUZZED(-9733.6805), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_FUZZED(2293.1987)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) | 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-610.841, 4.3)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.8) : injectionSwitch.x))), float(_GLF_FUZZED(-573.107)), bool(false)))) / 1.0) > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), false))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.3) : injectionSwitch[1])))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-610.841, 4.3)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-75.15) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-74470))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.1, -990.566)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))))).x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) >> 0)))) ^ 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(false)), true, _GLF_IDENTITY(false, (false) || false), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(vec2(3.9, -4.2))) : injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) || false))))), (_GLF_IDENTITY(false, (false) || false)) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false)))))), (bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true)))))))))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, max(read, read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(2.0), float(float(_GLF_FUZZED(2.0))))), bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(cos(0.0), (cos(0.0)) + sin(0.0))) > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-280.554), _GLF_IDENTITY(_GLF_FUZZED(313.208), float(mat4x2(_GLF_FUZZED(313.208), round(length(normalize(cos(0.0)))), 0.0, 0.0, cos(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), bvec2(false, false))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-582.197))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
