#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5497.9451)), bool(false))), (false ? _GLF_FUZZED(-484.104) : 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0))), 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), vec2(mat3x2(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(2101.7051, 99.56, 3.3, 586.313)) : _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(inverse(mat2(-6.0, -5.7, -67.75, -216.121)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0))))) - vec2(0.0, 0.0))))).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(947.739), mix(float(_GLF_FUZZED(947.739)), float(_GLF_FUZZED(float(bool(-75873)))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(947.739), mix(float(_GLF_FUZZED(947.739)), float(_GLF_FUZZED(float(bool(-75873)))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)), clamp(mix(float(_GLF_IDENTITY(_GLF_FUZZED(947.739), mix(float(_GLF_FUZZED(947.739)), float(_GLF_FUZZED(float(bool(-75873)))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(947.739), mix(float(_GLF_FUZZED(947.739)), float(_GLF_FUZZED(float(bool(-75873)))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(947.739), mix(float(_GLF_FUZZED(947.739)), float(_GLF_FUZZED(float(bool(-75873)))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), float(_GLF_FUZZED(476.962)), bool(false)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(76729) : _GLF_IDENTITY(1, (1) >> 0))), 0 ^ (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED((28343 << _injected_loop_counter))))) + 0) > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) >> 0)))) / 1))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), (false) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, true && (((injectionSwitch.x > injectionSwitch.y)) || false)), false, true)))) && true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, true && (((injectionSwitch.x > injectionSwitch.y)) || false)), false, true)))) && true)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, true && (((injectionSwitch.x > injectionSwitch.y)) || false)), false, true)))) && true))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (((injectionSwitch.x > injectionSwitch.y)) || false)), false, true)))) && true))))))))) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true))))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true))))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true)))))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), false, true))))))))))))))) || false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-58.40, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -58.40 : _GLF_FUZZED(8.3))), -1.5)) : injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-58.40, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -58.40 : _GLF_FUZZED(8.3))), -1.5)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-58.40, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -58.40 : _GLF_FUZZED(8.3))), -1.5)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-58.40, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -58.40 : _GLF_FUZZED(8.3))), -1.5)) : injectionSwitch)))))).x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.78), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((4.7 * 64.43))), bvec2(true, false))).y))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (false)), bool(bool(bool(false || (false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false || (false)), bool(bool(bool(false || (false)))))), true, false, true)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) < injectionSwitch.y), true, false)), _GLF_IDENTITY(bool(bool(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) < injectionSwitch.y), true, false)))), bool(bvec4(bool(bool(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) < injectionSwitch.y), true, false)))), true, false, true))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(0.0), 1.0), mat2(1.0) * (mat4x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(0.0), 1.0))))).x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           for(int _injected_loop_counter = ((0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (1))])).x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + 0.0)))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, determinant(mat3(0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))))))))
        {
         for(int _injected_loop_counter = ((0 & 59806) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) * 1))), int(1)))), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))), 0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))), 0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))), 0 << _GLF_IDENTITY(int(1), int(1))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))))))), 0 << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 + (1))))) / 1), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_IDENTITY(_GLF_FUZZED(46745), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))))))))), 0 << _GLF_IDENTITY(int(1), int(1)))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))))))), 0 << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 + (1))))) / 1), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_IDENTITY(_GLF_FUZZED(46745), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))))))))), 0 << _GLF_IDENTITY(int(1), int(1)))))))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))))))), 0 << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 + (1))))) / 1), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_IDENTITY(_GLF_FUZZED(46745), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))))))))), 0 << _GLF_IDENTITY(int(1), int(1)))))))) || false)), true, true, true))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))))))), 0 << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 + (1))))) / 1), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_IDENTITY(_GLF_FUZZED(46745), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))))))))), 0 << _GLF_IDENTITY(int(1), int(1)))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))))))), 0 << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 + (1))))) / 1), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_IDENTITY(_GLF_FUZZED(46745), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))))))))), 0 << _GLF_IDENTITY(int(1), int(1)))))))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745)), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(46745))))))), 0 << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 + (1))))) / 1), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_IDENTITY(_GLF_FUZZED(46745), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(46745), int(ivec3(_GLF_FUZZED(46745), 1, 0)))))))))), 0 << _GLF_IDENTITY(int(1), int(1)))))))) || false)), true, true, true))))))), false, true, true)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, true))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)) && true))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(97762) : 0)) >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))), bool(bool(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))))) || false)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u ^ 0u))) / 1u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u ^ 0u) | _GLF_IDENTITY((uint(0u)), ~ (~ ((uint(0u)))))), uint(0u)))), (subgroup_size) + 0u), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (subgroup_size) + 0u)) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u)))), uint(uvec2((subgroup_local_id + 1), 1u))) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u)), min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u)), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / (0u ^ 1u)))), _GLF_IDENTITY(4, int(ivec4(4, 1, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6226.5961)), vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), bvec2(false, true))).y))))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), next_virtual_gid))], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 64, 4);
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1)), 0u | _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(next_virtual_gid) : (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(116862u))))))))), 0u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1)), 0u | _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(next_virtual_gid) : (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(116862u))))))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1)), 0u | _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(next_virtual_gid) : (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(116862u))))))))), 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))))) ^ 0u)), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))))) ^ 0u)) : _GLF_FUZZED(read))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))) | (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup)))), true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))), min(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75471))), 1)), 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 0u, 0u)))))) : _GLF_FUZZED((workgroup_id + num_workgroup))))))))) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) / 1u))
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1246.5745, -6.8)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), true && (bool((false) || false)))))) || false))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))), (injectionSwitch.x > injectionSwitch.y)), false)))))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         atomicStore(buf[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(1 | 1, int(ivec2(1 | 1, 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), true, true))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) - 0)) * 1), int(5)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))))), min(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0)))))))).y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                 subgroupAll(_GLF_IDENTITY(true, true && (true)));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0)))))); _injected_loop_counter --)
          {
           barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
}
