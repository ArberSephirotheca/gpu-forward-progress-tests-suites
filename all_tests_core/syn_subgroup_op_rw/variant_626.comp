#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(2508.6286) : (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(2508.6286) : (injectionSwitch)[0]))) * 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-446.478), _GLF_FUZZED(vec4(533.650, 274.208, 962.620, -306.570).t)), bvec2(false, false))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(2508.6286) : (injectionSwitch)[0])))), (true ? _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(2508.6286) : (injectionSwitch)[0])))) : _GLF_FUZZED(-6893.5447))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-446.478), _GLF_FUZZED(_GLF_IDENTITY(vec4(533.650, 274.208, 962.620, -306.570), max(vec4(533.650, 274.208, 962.620, -306.570), _GLF_IDENTITY(vec4(533.650, 274.208, 962.620, -306.570), (vec4(533.650, 274.208, 962.620, -306.570)) * mat4(1.0)))).t)), bvec2(false, false))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(2508.6286) : (injectionSwitch)[0])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2((injectionSwitch))), (vec2(vec2((injectionSwitch)))) / vec2(1.0, 1.0)))[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(2508.6286) : (injectionSwitch)[0])))) : _GLF_FUZZED(_GLF_IDENTITY(-6893.5447, min(-6893.5447, -6893.5447))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-446.478), _GLF_FUZZED(vec4(533.650, 274.208, _GLF_IDENTITY(962.620, 1.0 * (962.620)), -306.570).t)), bvec2(false, false))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))).x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, true)), (bool(bvec3(bool(false), false, true))) && true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true))))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, ! (! (true)))))))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))))))), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, sin(0.0), sqrt(1.0), 0.0, 0.0))).y)), false, true))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-5.2))) > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), false, true))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))), true, false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), false, false, false))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), false, false, false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false)))))))))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), false, _GLF_IDENTITY(false, false || (false)), false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 0.0, 1.0))))), _GLF_IDENTITY(vec2(vec2(vec2(1.0, 1.0))), vec2(0.0, 0.0) + (vec2(vec2(vec2(1.0, 1.0)))))) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, mix(float(_GLF_FUZZED(1812.3724)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x) / 1.0)), bool(true))) < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))), bool(bool(! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))))))) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((false), true), true)))))))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((false), true), true)))))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((false), true), true)))))))))), false))) && true)) || false), true && (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, ! (! ((_GLF_IDENTITY(false, (false) && true)) || false)))), (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) || false), ((false) || false) && true)))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) || false), ((false) || false) && true))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(true, (true) || false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false)))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false))))))))) && true)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), min(float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))))))), injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), true, false, true)), bool(bvec4(bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), true, false, true)), false, false, false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), false, true, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), false, true, false)))), true, false, true)), bool(bvec4(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (true)), false)), true, false, true)), false, false, false)))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) + vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(57.48, 6137.6945)) : (injectionSwitch) - vec2(0.0, 0.0)))).x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7697.0009), _GLF_FUZZED(float(82940u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) + vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(57.48, 6137.6945)) : (injectionSwitch) - vec2(0.0, 0.0)))).x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7697.0009), _GLF_FUZZED(float(82940u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(88.03), (injectionSwitch)[1]), bvec2(false, true))))))[0], _GLF_FUZZED(34.33)), vec2(_GLF_FUZZED((true ? 2604.6680 : -8.4)), (injectionSwitch)[1]), bvec2(false, true))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (! (false)))))), true && (false))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false), true, false, false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true, false, true))))), ! (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)) || false), true, false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, (true) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(true, (true) && true)))))))))), false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false)))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false)))))), (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! ((false)), true, false))))))) && true)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7995.5023)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bool(! (bool(true)))))))))) / 1.0) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x))), (float(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0)), (injectionSwitch.y) / 1.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), bool(bvec3(! (false), true, false)))))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size))) ^ 0u)), max(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, (1u | 0u), 0u), ~ (~ (uvec4(workgroup_id, 0u, (1u | 0u), 0u))))))) : subgroup_size, uint(uint(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, (1u | 0u), 0u), ~ (~ (uvec4(workgroup_id, 0u, (1u | 0u), 0u))))))) : subgroup_size)))))) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size))) + 0u)) ^ 0u)), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size))) + 0u)) ^ 0u))) * 1u))), _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size))) ^ 0u)), clamp(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), max(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, _GLF_IDENTITY(0u, 0u ^ (0u)), (1u | 0u), 0u)))))))) : subgroup_size), min((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), max(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, _GLF_IDENTITY(0u, 0u ^ (0u)), (1u | 0u), 0u)))))))) : subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), max(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, _GLF_IDENTITY(0u, 0u ^ (0u)), (1u | 0u), 0u)))))))) : subgroup_size))))) ^ 0u)), 1u * (max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))), ~ (~ (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u))))))) : subgroup_size))) ^ 0u)))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, (1u | 0u), 0u)))) : subgroup_size))) ^ 0u)), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, (_GLF_IDENTITY(1u | 0u, max(1u | 0u, 1u | 0u))), 0u), (uvec4(workgroup_id, 0u, (_GLF_IDENTITY(1u | 0u, max(1u | 0u, 1u | 0u))), 0u)) << uvec4(0u, 0u, 0u, 0u))))) : subgroup_size))) ^ 0u)))))), (_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_size))) - 0u)) ^ 0u)), 1u * (_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) ^ 0u)), min(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) ^ 0u)), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) ^ 0u))))))) / 1u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) || false), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u, _GLF_IDENTITY(0u, 0u | (0u))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1501.5335) : injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(658.736)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1501.5335) : injectionSwitch.x))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), false || (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + 1 < subgroup_size))), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, _GLF_IDENTITY(false, true && (false))))), false))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, ! (! (false))), true, true)))), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1 < subgroup_size), true, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1 < subgroup_size), true, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), true, false), true))))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), true && ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), true, false, false))), false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) / 1u) < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), ((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))) || false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0) < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), false || (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(94044u))))))) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), false, true, false)))))), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, min(1, 1)))) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), false, true, false)))))), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, min(1, 1)))) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), false)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, (false) && true) || (subgroup_local_id + 1 < subgroup_size))), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) / 1u) < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), ((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))) || false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0) < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), false || (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(94044u))))))) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), false, true, false)))))), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, min(1, 1)))) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), false, true, false)))))), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(1, min(1, 1)))) < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), bool(bvec2(! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), false)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false, (false) && true) || (subgroup_local_id + 1 < subgroup_size))), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, false, false))), false))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)))), bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)) : _GLF_FUZZED(subgroup_size)))], _GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ (~ _GLF_IDENTITY((read), uint(uvec2((read), 1u))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (~ (read)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (~ (read))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((read), (_GLF_IDENTITY((read), clamp((read), (read), _GLF_IDENTITY((read), max((read), _GLF_IDENTITY((read), ((read)) - 0u)))))) * 1u), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (~ (read))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | 0u)), _GLF_FUZZED(workgroup_id)))) | (_GLF_FUZZED(workgroup_id))) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))))), min(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))))), min(_GLF_IDENTITY(_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id)))))))) * ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))), 0u + (_GLF_IDENTITY((read), (true ? (read) : _GLF_FUZZED(subgroup_local_id))))))), 0u ^ _GLF_IDENTITY((~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ _GLF_IDENTITY((read), _GLF_IDENTITY(((read)), clamp(((read)), ((read)), ((read)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (virtual_gid) | _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), min(_GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))))))], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))).y, false, true))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.9)), bool(false)))), float(_GLF_FUZZED((-4.0))), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.9)), bool(false)))), float(_GLF_FUZZED((-4.0))), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, abs(1.0), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))).y)))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), ((! (_GLF_IDENTITY(true, (true) || false)))) || false), (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))), true && ((true)))), true && (! (_GLF_IDENTITY((true), true && ((true)))))))) || false)))) && true)));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (true ? min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)))), true)))) : _GLF_FUZZED(min(injectionSwitch, 715.143)))))), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, max(1, 1))))], 0.0 + ((injectionSwitch)[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, max(1, 1))))]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y)), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED((-647.731 + 1.6)), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))))))) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), false))))))), (false) || _GLF_IDENTITY(false, true && (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(930.569), _GLF_FUZZED(-4.6)), vec2(mat2(vec2(_GLF_FUZZED(930.569), _GLF_FUZZED(-4.6)), 1.0, 0.0))), bvec2(false, false)))))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-149.223)), float(1.0), bool(true))))))) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)))), (_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)), vec2(mat3x2((injectionSwitch), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0))))))) - vec2(0.0, 0.0)), vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)), vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0)))))).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 4.2)) : injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
}
