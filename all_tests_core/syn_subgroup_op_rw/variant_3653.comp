#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-2.1, 4.8))))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.7))))) * (injectionSwitch))[1])).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch))) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(inversesqrt(-9.8)))), 0.0))[0], mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_FUZZED(9.4)), bool(false)))), float(mat3x4(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]) - abs(0.0)), mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_FUZZED(9.4)), bool(false)))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), mix(float(_GLF_FUZZED(51.50)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]))), float(_GLF_FUZZED(9.4)), bool(false)))), _GLF_IDENTITY(float(mat3x4(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_FUZZED(9.4)), bool(false)))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(float(mat3x4(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_FUZZED(9.4)), bool(false)))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(mat3x4(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0]), float(_GLF_FUZZED(9.4)), bool(false)))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))), bool(true)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[1])).y) || false)))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(5.4) : dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))), 1.0), (mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(1083.9448)))), vec2(0.0, 1.0))))), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (! (_GLF_IDENTITY(false, ! (! (false)))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.3) : injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(3.7)), bool(false))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])).y))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.75)), vec2(_GLF_FUZZED(-3555.7925), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), min(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), float(mat3(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.75)), vec2(_GLF_FUZZED(-3555.7925), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), min(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), float(mat3(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.75)), vec2(_GLF_FUZZED(-3555.7925), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), min(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), float(mat3(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-22.45)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || false))))) || false)), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), vec3(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), 0.0)), length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))])).y))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))), 0.0), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(! (! ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(_GLF_IDENTITY(! (! ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (! (! ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), ! (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), 0.0 + (_GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-761.155)), bool(false))) : _GLF_FUZZED(1.2))))) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(vec2(0.0, round(length(normalize(1.0)))))), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])).y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.2) : injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-0.3))), bool(false))), (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), float(_GLF_FUZZED(-8.3)), bool(false))), 1.0, 0.0), max(vec3(_GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), float(_GLF_FUZZED(-8.3)), bool(false))), 1.0, 0.0), vec3(_GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), float(_GLF_FUZZED(-8.3)), bool(false))), 1.0, 0.0))))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])), mix(vec2(_GLF_FUZZED(941.389), _GLF_FUZZED(-7382.8789)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1])))[1]), bvec2(true, true))).y))) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), mix(float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED(8.5)), bool(false))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat3x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-4.8) : dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(5.9)), float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), bool(true))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-882.291)), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-564.820)), bool(false)))))), bool(true)))), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(0.0), 1.0))), 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-14.72 - 912.390))), float(1.0), bool(true))), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (true ? dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(-345.979))), mix(float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED(8.5)), bool(false))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat3x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.8, _GLF_IDENTITY(float(vec2(-4.8, 1.0)), max(float(vec2(-4.8, 1.0)), float(vec2(-4.8, 1.0)))))) : dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(5.9), mix(float(_GLF_FUZZED(5.9)), float(_GLF_FUZZED(-1958.0524)), bool(false)))), float(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat2x4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))), bool(true))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3968.1157)), bool(false))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(18.20))) : _GLF_FUZZED(-8626.7208))), 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-882.291)), mix(float(float(_GLF_FUZZED(-882.291))), float(_GLF_FUZZED(-29.54)), bool(false))), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-564.820)), bool(false)))))), bool(true)))), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))) || false)) || _GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), clamp(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), (true ? float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)) : _GLF_FUZZED(348.999))), float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(43.09)))), bool(true))))) * (injectionSwitch))[1])).y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (1.0) * abs(1.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6.2))), 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(4764.6527)), bool(false)))) / 1.0)) * (injectionSwitch))[1])).y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) - length(0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(vec3(-24.88, 1.1, -160.794), vec3(-31.19, -7.8, 5.9))))) > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(4764.6527)), bool(false)))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0))) * (injectionSwitch))[1])).y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), clamp(min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))) - 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.6)), float(1.0), bool(true)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / determinant(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) - length(0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) + vec3(0.0, 0.0, 0.0)), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) + vec3(0.0, 0.0, 0.0)), 1.0))))))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-3.7, -36.93).r)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))) - 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(vec3(-24.88, 1.1, -160.794), vec3(-31.19, -7.8, 5.9))))) > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (0u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 1u, 0u)), (false ? _GLF_FUZZED(53720u) : uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 1u, 0u))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 1u, 0u)), (false ? _GLF_FUZZED(53720u) : uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 1u, 0u))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 1u, 0u)), (false ? _GLF_FUZZED(53720u) : uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 1u, 0u)))))))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u)))), 1u, 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 1u, 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) ? _GLF_FUZZED(30864u) : uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))) | (uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), uint(uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(uvec2(_GLF_IDENTITY(53942u, (53942u) | 0u), 86017u)[0]))), subgroup_id)) * subgroup_size, 1u, 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) << 0u))))), 0u, 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), 1u))) * 1u)), 1u, 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) << 0u), 0u, 0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) ^ _GLF_IDENTITY(1u, (1u) * 1u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) ^ _GLF_IDENTITY((76506u & 0u), ((76506u & 0u)) | _GLF_IDENTITY(((76506u & 0u)), 1u * (((76506u & 0u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, true && ((false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id)))))) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) - _GLF_IDENTITY(0u, (0u) << 0u), (((subgroup_local_id)) - _GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u))) + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))) && true) && true), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(4, max(4, 4)))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.6)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, int(int(0)))), uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u), ((subgroup_local_id)) + 0u) ^ 0u) % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(4488) : 2))))), clamp(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))), uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, max(0u, 0u))) % _GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(4488) : _GLF_IDENTITY(2, (2) ^ 0)), ((false ? _GLF_FUZZED(4488) : _GLF_IDENTITY(2, (2) ^ 0))) + 0))))), _GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(4488) : _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 ^ (~ (2))))), 2))))), min(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(4488) : 2))), uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (false ? _GLF_FUZZED(4488) : 2))))))), _GLF_IDENTITY(subgroup_local_id % 2, uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))))) ? _GLF_FUZZED(4488) : 2)))))))) / 1u)) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || false))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), (! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))) || false), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, false || ((_GLF_IDENTITY(false, (false) || false)) || false))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, false || ((_GLF_IDENTITY(false, (false) || false)) || false))), true, true)))))));
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)) ^ (uint(1)), min(0u ^ (uint(1)), 0u ^ (uint(1))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
