#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))) || _GLF_IDENTITY(false, false || (false))))), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true, _GLF_IDENTITY(true, ! (! (true))), false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)) && true)), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)) && true)), false, false, false)), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), false))))))), ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))), true))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)), bool(bool(_GLF_DEAD(false)))))), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))) || false)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-2.1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED((-0.0 * 4.0))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED((-0.0 * 4.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED((-0.0 * 4.0)))))))) ? _GLF_FUZZED(3.9) : -2.1))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.8, -83.49)) : injectionSwitch)), 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(1.6, 879.729)) : vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.8, -83.49)) : injectionSwitch)), 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))))).x > injectionSwitch.y)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))) >> 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / (0u ^ 1u)), gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false))), true, true))))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)), false, false)), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, true)), ! (! (bool(bvec4(false, true, true, true))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true))))))), false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false)), false || (bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))))), bool(bvec2(bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec3(-1.0, -4158.7248, 2416.6794)[2])))) - 0.0), injectionSwitch.y)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false, ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (subgroup_size))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, injectionSwitch)) : injectionSwitch)))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))), true, true), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true)), true && (bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true)))), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true))))))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6))), injectionSwitch.x)) < injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bool(! (bool(bvec4(false, false, false, false))))))))), false))), true, false, true)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) && true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y)), false))))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u * (subgroup_size)));
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), ((_GLF_IDENTITY(4, (4) << 0))) - (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (6), ~ (~ (_GLF_IDENTITY(~ (6), ~ (~ (~ (6)))))))))), (int(6)) | (int(6))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (0 | 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ 0) / 1), _GLF_IDENTITY((0 ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0 ^ 0), 0 ^ ((0 ^ 0)))), (~ (_GLF_IDENTITY((0 ^ 0), 0 ^ ((0 ^ 0))))) << (0 & -31743)))) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | 0), 1, 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | 0), 1, 0))))), max(_GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | 0), 1, 0))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | 0), 1, 0))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | 0), 1, 0))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | 0), 1, 0)))))))) / 1)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-46281) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (0 ^ 0) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, clamp((64) / 1, (64) / 1, _GLF_IDENTITY((64) / 1, 1 * ((64) / 1)))), ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) | (((64))))) ^ 0), min(((64)), ((64)))) | ((64))) / 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, (64) / 1) : _GLF_FUZZED(58519))), (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23696) : 0 ^ 0)), _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0)) ^ 0)) - (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-52778) : int(4)))))), (0 ^ 0) ^ 0))), _GLF_IDENTITY(0 ^ 0, (0 ^ 0) ^ 0), 0 ^ 0))) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, 1, 0)), int(ivec3(int(ivec4(64, 0, 1, 0)), 0, 0))))), (_GLF_IDENTITY((64), max((64), (64)))) >> 0))) / 1, int(ivec4(_GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((64), ((64)) >> 0))) / 1, 1, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, 0 | ((64) / 1)), (_GLF_IDENTITY((64) / 1, int(ivec4(_GLF_IDENTITY((64) / 1, min((64) / 1, (64) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(int(1))) : _GLF_FUZZED(-27745))))), 1, 1, 0)))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ((3) | (_GLF_IDENTITY(3, (3) | (3)))) * 1))) * 1)))) * ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) | ((64)))), _GLF_IDENTITY(min(((64)), ((64))), max(min(((64)), ((64))), min(((64)), ((64)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) + 0))) | ((64))) / 1, int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) | ((64)))), _GLF_IDENTITY(min(((64)), ((64))), max(min(((64)), ((64))), min(((64)), ((64)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) + 0))) | ((64))) / 1, 0)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY((0 ^ 0), ~ (~ (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) / 1)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((64))) / 1))), max(_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((64))) / 1))), _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), _GLF_IDENTITY(((64)), (((64))) + (1 ^ 1)))) | ((64))) / 1)))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, (_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(99397))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), (false ? _GLF_FUZZED(39079) : _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), ~ (~ ((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1)))))), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1)))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY((64) / 1, _GLF_IDENTITY(((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1), (_GLF_IDENTITY(((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1), 0 | (((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1)))) | (((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1))))))))))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-46281) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (0 ^ 0) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, clamp((64) / 1, (64) / 1, _GLF_IDENTITY((64) / 1, 1 * ((64) / 1)))), ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) | (((64))))) ^ 0), min(((64)), ((64)))) | ((64))) / 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, (64) / 1) : _GLF_FUZZED(58519))), (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23696) : 0 ^ 0)), _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0)) ^ 0)) - (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-52778) : int(4)))))), (0 ^ 0) ^ 0))), _GLF_IDENTITY(0 ^ 0, (0 ^ 0) ^ 0), 0 ^ 0))) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, 1, 0)), int(ivec3(int(ivec4(64, 0, 1, 0)), 0, 0))))), (_GLF_IDENTITY((64), max((64), (64)))) >> 0))) / 1, int(ivec4(_GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((64), ((64)) >> 0))) / 1, 1, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, 0 | ((64) / 1)), (_GLF_IDENTITY((64) / 1, int(ivec4(_GLF_IDENTITY((64) / 1, min((64) / 1, (64) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(int(1))) : _GLF_FUZZED(-27745))))), 1, 1, 0)))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ((3) | (_GLF_IDENTITY(3, (3) | (3)))) * 1))) * 1)))) * ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) | ((64)))), _GLF_IDENTITY(min(((64)), ((64))), max(min(((64)), ((64))), min(((64)), ((64)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) + 0))) | ((64))) / 1, int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) | ((64)))), _GLF_IDENTITY(min(((64)), ((64))), max(min(((64)), ((64))), min(((64)), ((64)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) + 0))) | ((64))) / 1, 0)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY((0 ^ 0), ~ (~ (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) / 1)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((64))) / 1))), max(_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((64))) / 1))), _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), _GLF_IDENTITY(((64)), (((64))) + (1 ^ 1)))) | ((64))) / 1)))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, (_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(99397))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), (false ? _GLF_FUZZED(39079) : _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), ~ (~ ((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1)))))), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1)))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY((64) / 1, _GLF_IDENTITY(((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1), (_GLF_IDENTITY(((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1), 0 | (((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1)))) | (((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1))))))))))))))), 1 * ((false ? _GLF_FUZZED(-46281) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (0 ^ 0) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, clamp((64) / 1, (64) / 1, _GLF_IDENTITY((64) / 1, 1 * ((64) / 1)))), ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) | (((64))))) ^ 0), min(((64)), ((64)))) | ((64))) / 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, (64) / 1) : _GLF_FUZZED(58519))), (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23696) : 0 ^ 0)), _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0)) ^ 0)) - (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-52778) : int(4)))))), (0 ^ 0) ^ 0))), _GLF_IDENTITY(0 ^ 0, (0 ^ 0) ^ 0), 0 ^ 0))) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, 1, 0)), int(ivec3(int(ivec4(64, 0, 1, 0)), 0, 0))))), (_GLF_IDENTITY((64), max((64), (64)))) >> 0))) / 1, int(ivec4(_GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((64), ((64)) >> 0))) / 1, 1, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, 0 | ((64) / 1)), (_GLF_IDENTITY((64) / 1, int(ivec4(_GLF_IDENTITY((64) / 1, min((64) / 1, (64) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(int(1))) : _GLF_FUZZED(-27745))))), 1, 1, 0)))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((3) | (3), ((3) | (_GLF_IDENTITY(3, (3) | (3)))) * 1))) * 1)))) * ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) | ((64)))), _GLF_IDENTITY(min(((64)), ((64))), max(min(((64)), ((64))), min(((64)), ((64)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) + 0))) | ((64))) / 1, int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) | ((64)))), _GLF_IDENTITY(min(((64)), ((64))), max(min(((64)), ((64))), min(((64)), ((64)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), 0 | (_GLF_IDENTITY(((64)), min(((64)), ((64)))))))), _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), ((64)))), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) + 0))) | ((64))) / 1, 0)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY((0 ^ 0), ~ (~ (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) / 1)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((64))) / 1))), max(_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), ((64)))) | ((64))) / 1))), _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), min(((64)), _GLF_IDENTITY(((64)), (((64))) + (1 ^ 1)))) | ((64))) / 1)))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, (_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(99397))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), (false ? _GLF_FUZZED(39079) : _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), ~ (~ ((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1)))))), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64))) / 1)))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY((64) / 1, _GLF_IDENTITY(((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1), (_GLF_IDENTITY(((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1), 0 | (((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1)))) | (((64) / 1) | (_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), 0 ^ ((64)))), min(((64)), ((64)))) | ((64)), (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), min(_GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) << 0), 0 ^ ((64)))))), min(((64)), ((64)))) | ((64))) - 0)) / 1)))))))))))))))))) / 1))), 2), (true ? _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (0 | 0) ^ (_GLF_IDENTITY(64, (64) / 1))), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (0 | 0) ^ (_GLF_IDENTITY(64, (64) / 1))), 2)) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(atomicExchange(subgroup_id, subgroup_local_id), (atomicExchange(subgroup_id, subgroup_local_id)) / 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u, 1u)), (false ? _GLF_FUZZED(atomicCompSwap(next_virtual_gid, subgroup_local_id, subgroup_base)) : uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u, 1u)))), _GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u, 1u)))), ~ (~ (~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u, 1u))))))))) % 2, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), false)))))))), false, true, true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.9), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.2)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-2.2)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (true))))) && _GLF_IDENTITY(((false)), ! (! (((false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec3(70.23, -5.8, -2719.8360))) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec4(injectionSwitch[1], 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch[1], 0.0, 1.0, 0.0)), 0.0 + (float(vec4(injectionSwitch[1], 0.0, 1.0, 0.0))))) / 1.0)))))).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | 0u)), uint(4u)))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) >> (0 & 1512)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) ^ 0))), 4, 4))) | (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1))) > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), mix(float(_GLF_FUZZED(74.17)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(true))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(772.428), _GLF_FUZZED(81.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1))) > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(virtual_gid)))), (injectionSwitch) * vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(true, (true) || false), true), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)), (_GLF_IDENTITY((true && (false)), ((true && (false))) || false)) || false) && true)), (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED((323.352 * 6.5))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.7, 9.1)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.7, 9.1)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y)) && true))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false)), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false)), false)))), (bool(bool(bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false)), false))))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(_GLF_IDENTITY(ivec4(~ (~ (1)), 0, 0, 0), min(ivec4(~ (~ (1)), 0, 0, 0), ivec4(~ (~ (1)), 0, 0, 0)))))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) | (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(1, ~ (~ (1)))))), 4, 64, _GLF_IDENTITY(4, 0 + (4)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2080.4415)), bool(false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) || false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(bool(bvec3(false, true, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false)))))), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false)))))), true))))))), true)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, (false) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(-52329)))) | 0) | (4)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))) | 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, _GLF_IDENTITY(0, min(0, 0))))) * 1))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))), int(8))), clamp(int(8), int(8), int(8))))) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(-52329)))) | 0) | (4)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))) | 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, _GLF_IDENTITY(0, min(0, 0))))) * 1))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))), int(8))), clamp(int(8), int(8), int(8))))) + (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(-52329)))) | 0) | (4)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))) | 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, _GLF_IDENTITY(0, min(0, 0))))) * 1))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))), int(8))), clamp(int(8), int(8), int(8))))) + (4)))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))) && true)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (! (false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), ! (! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))), ! (! ((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))))))) && true))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), ! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), true)))), false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), true)))), false)))))))), (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(96.69), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(42.05)), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), float(mat4(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) + (_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat4x3((injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x3((injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-132.643)), float(injectionSwitch.x), bool(true)))) / 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(round(-560.069)))))))))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(true, bool(bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), true, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), true, true))))), false || (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), true, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), true, true)))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, false || (false)), true))))) && true)), false, false, false))) || false))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(75.82) : injectionSwitch.x)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}
