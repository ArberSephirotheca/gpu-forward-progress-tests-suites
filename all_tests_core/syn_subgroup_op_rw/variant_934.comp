#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))))))
    return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.5)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uint(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))))))) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, max(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id)).y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), min(min(workgroup_base, workgroup_base), _GLF_IDENTITY(min(workgroup_base, workgroup_base), ~ (~ (min(workgroup_base, workgroup_base))))))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))), min((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.5) : 0.0)), 0.0))))) / 1.0))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6893.4200)))) + 0.0), injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))))), 0u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))), min((uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), min(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.32)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(6.6)), bool(false)))))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, log(1.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))))), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u)))))) / 1u) | ((subgroup_local_id + 1) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 53:
     case 74:
     case 37:
     case 47:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) && true))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 54:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     case 72:
     case 13:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 66:
     case 20:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 78:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(false)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        return;
       while((uvec4(179700u, 117567u, 5643u, 117815u) == uvec4(35864u, 70354u, 191319u, 101462u)))
        {
         if(_GLF_DEAD(false))
          break;
         mat4(-18.30, 422.888, 2649.9143, 23.29, -45.87, 44.91, 7.8, -1780.3030, -4.3, -63.04, 3.1, -1043.0521, -6.4, 78.51, -8122.8939, -7.8);
         if(_GLF_DEAD(false))
          break;
         ivec3(25696, 98497, -82195);
         while(true)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           ivec3 _GLF_SWITCH_0_0v[4];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           mat3x4(-0.5, -2335.3100, -4.5, 12.47, 789.006, 33.62, -3.7, 3936.6797, 7025.0114, 94.36, 6.7, 736.347);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(519.668), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-3394.9621)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), false, false, true))) || false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-85.81 + _GLF_IDENTITY(8.7, (8.7) / 1.0))), _GLF_FUZZED(-8716.9945)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], 0.0, 1.0))), _GLF_FUZZED(2.5)), vec2(_GLF_FUZZED(-59.64), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), false, true, false))))))))))))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           ;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, true)))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_DEAD(false))
          return;
         for(         ivec4(-1798, -91672, 85488, 96381);
 (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(39873u, (39873u) / 1u), (39873u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 145773u, 127322u, 29421u) == _GLF_IDENTITY(uvec4(98521u, 169487u, 188247u, 161933u), clamp(_GLF_IDENTITY(uvec4(98521u, 169487u, 188247u, 161933u), clamp(uvec4(98521u, 169487u, 188247u, 161933u), uvec4(98521u, 169487u, 188247u, 161933u), uvec4(98521u, 169487u, 188247u, 161933u))), uvec4(98521u, 169487u, 188247u, 161933u), uvec4(98521u, 169487u, 188247u, 161933u)))); mat4x3(35.77, -469.321, 441.526, _GLF_IDENTITY(-1962.2300, _GLF_IDENTITY((-1962.2300) / abs(1.0), (true ? (-1962.2300) / abs(1.0) : _GLF_FUZZED(-1231.5845)))), 8264.3422, -4.0, -0.7, -8.7, -1545.7269, _GLF_IDENTITY(_GLF_IDENTITY(-71.59, min(-71.59, -71.59)), mix(float(_GLF_IDENTITY(-71.59, min(-71.59, -71.59))), float(_GLF_FUZZED(8.3)), bool(false))), 85.55, 74.79))
          {
           vec2 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[88], _GLF_SWITCH_0_3v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-666.454) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6592.2575) : injectionSwitch.y)))), true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))
              continue;
             break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               if(_GLF_DEAD(false))
                break;
               break;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           -8293.8284;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))[0], _GLF_FUZZED(-254.953)), _GLF_IDENTITY(vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1])) - vec2(0.0, 0.0)), (_GLF_IDENTITY(vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1])) - vec2(0.0, 0.0))) * mat2(1.0)), vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), mix(vec2(_GLF_FUZZED(6396.4434), _GLF_FUZZED(-9149.4750)), vec2((vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]))[1]), bvec2(true, true))), vec2(_GLF_FUZZED((-5.1 - 9962.3057)), (injectionSwitch)[1]))), bvec2(false, true))).y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                  continue;
                 break;
                }
               break;
               if(_GLF_DEAD(false))
                continue;
              }
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           log2(dot(injectionSwitch, _GLF_SWITCH_0_3v));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
              break;
             continue;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             break;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) || false)))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           mat2x4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
           (mat3x4(2.8, -8.4, _GLF_IDENTITY(3002.0689, max(3002.0689, 3002.0689)), -499.881, 6.2, 0.9, -8946.1529, -942.314, 45.53, 29.57, 65.99, -697.149) * mat4x3(9215.6187, -8827.8111, -5.7, 0.8, -897.492, -8437.2050, -5.6, _GLF_IDENTITY(4534.4718, clamp(4534.4718, 4534.4718, _GLF_IDENTITY(4534.4718, max(_GLF_IDENTITY(4534.4718, float(vec4(4534.4718, 1.0, 0.0, 0.0))), _GLF_IDENTITY(4534.4718, (true ? 4534.4718 : _GLF_FUZZED(315.088))))))), 9.6, -9.3, 4.6, -649.452));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
              }
             return;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                return;
               return;
              }
             break;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           mat2 _GLF_SWITCH_0_6v;
           if(_GLF_DEAD(false))
            return;
          }
         true;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))), clamp(float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))), float(vec4(float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))), (true ? float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat3x2(mix(float(_GLF_FUZZED(-735.373)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(true)), 0.0, tan(0.0), 1.0, 0.0, 1.0)))))))) : _GLF_FUZZED(-3.5))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          continue;
         ;
         for(bool _GLF_SWITCH_0_7v[99], _GLF_SWITCH_0_8v; _GLF_SWITCH_0_8v; mat3x4(_GLF_IDENTITY(-57.99, mix(float(_GLF_FUZZED((true ? -9.2 : 6.3))), float(_GLF_IDENTITY(_GLF_IDENTITY(-57.99, (_GLF_IDENTITY(-57.99, (-57.99) / exp(0.0))) / 1.0), min(_GLF_IDENTITY(-57.99, (-57.99) * 1.0), -57.99))), bool(true))), -724.771, _GLF_IDENTITY(-7.6, 1.0 * (-7.6)), -2837.0024, -906.641, -5.2, 1.5, 1.8, 160.839, 18.42, -0.2, _GLF_IDENTITY(77.24, mix(float(_GLF_FUZZED(-29.48)), float(_GLF_IDENTITY(77.24, (true ? _GLF_IDENTITY(77.24, mix(float(_GLF_FUZZED(2.5)), float(77.24), bool(true))) : _GLF_FUZZED(-35.46)))), bool(true)))))
          {
           mat3x4 _GLF_SWITCH_0_9v;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(false)
          {
           ;
           greaterThanEqual(uvec4(5955u, 104961u, 114149u, 37642u), (uvec4(195718u, 144319u, 22183u, 105668u)));
           mat4x3 _GLF_SWITCH_0_10v;
           clamp((ivec3(78519, -76197, -10472) << ivec3(-54541, -24044, -14630)), ivec3(52370, 50294, -65943).r, -74533);
           mat3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
           ((ivec3(-37144, 38578, -70264)) + ivec3(-51105, -15045, -13181));
           (_GLF_IDENTITY(dot(vec3(-2.5, -3492.9883, _GLF_IDENTITY(-0.1, min(-0.1, -0.1))), vec3(5929.3582, 4.3, 208.436)) + mat2(-9.0, 2.5, 2.7, -6.6), _GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(-9.0, 2.5, 2.7, -6.6), (true ? dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, _GLF_IDENTITY(208.436, 0.0 + (_GLF_IDENTITY(208.436, (true ? 208.436 : _GLF_FUZZED(-303.015))))))) + mat2(-9.0, 2.5, 2.7, -6.6) : _GLF_FUZZED(mat2(-4007.4359, 0.5, _GLF_IDENTITY(0.2, (true ? _GLF_IDENTITY(0.2, 0.0 + (0.2)) : _GLF_FUZZED(-3449.0344))), -4.3)))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(_GLF_IDENTITY(-9.0, abs(1.0) * (_GLF_IDENTITY(-9.0, max(-9.0, -9.0)))), 2.5, 2.7, -6.6), (true ? dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(-9.0, 2.5, 2.7, -6.6) : _GLF_IDENTITY(_GLF_FUZZED(mat2(-4007.4359, 0.5, 0.2, -4.3)), (_GLF_FUZZED(_GLF_IDENTITY(mat2(-4007.4359, 0.5, 0.2, -4.3), (mat2(-4007.4359, 0.5, 0.2, -4.3)) / mat2(1.0, 1.0, 1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(mat2(_GLF_IDENTITY(dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(_GLF_IDENTITY(-9.0, abs(1.0) * (_GLF_IDENTITY(-9.0, max(-9.0, -9.0)))), 2.5, 2.7, -6.6), (true ? dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(-9.0, 2.5, 2.7, -6.6) : _GLF_IDENTITY(_GLF_FUZZED(mat2(-4007.4359, 0.5, 0.2, -4.3)), (_GLF_FUZZED(_GLF_IDENTITY(mat2(-4007.4359, 0.5, 0.2, -4.3), (mat2(-4007.4359, 0.5, 0.2, -4.3)) / mat2(1.0, 1.0, 1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))))), transpose(transpose(transpose(mat2(mat2(_GLF_IDENTITY(dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(_GLF_IDENTITY(-9.0, abs(1.0) * (_GLF_IDENTITY(-9.0, max(-9.0, -9.0)))), 2.5, 2.7, -6.6), (true ? dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(-9.0, 2.5, 2.7, -6.6) : _GLF_IDENTITY(_GLF_FUZZED(mat2(-4007.4359, 0.5, 0.2, -4.3)), (_GLF_FUZZED(_GLF_IDENTITY(mat2(-4007.4359, 0.5, 0.2, -4.3), (mat2(-4007.4359, 0.5, 0.2, -4.3)) / mat2(1.0, 1.0, 1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))))), (transpose(mat2(mat2(_GLF_IDENTITY(dot(vec3(-2.5, -3492.9883, -0.1), vec3(5929.3582, 4.3, 208.436)) + mat2(-9.0, 2.5, 2.7, -6.6), (true ? dot(vec3(-2.5, -3492.9883, -0.1), _GLF_IDENTITY(vec3(5929.3582, 4.3, 208.436), clamp(vec3(5929.3582, 4.3, 208.436), vec3(5929.3582, 4.3, 208.436), vec3(5929.3582, 4.3, _GLF_IDENTITY(208.436, 0.0 + (208.436)))))) + mat2(-9.0, 2.5, 2.7, -6.6) : _GLF_FUZZED(mat2(-4007.4359, _GLF_IDENTITY(0.5, (false ? _GLF_FUZZED(5.3) : 0.5)), 0.2, -4.3)))))))) / mat2(1.0, 1.0, 1.0, 1.0))))));
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(11.39) : _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-49.24) : length(normalize(vec2(1.0, 1.0)))))))), 0.0, 0.0))).x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
            return;
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       while(false)
        {
         vec3(-9.1, 92.86, -601.981);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            continue;
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            continue;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             continue;
            break;
           }
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))))
             break;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             {
              if(_GLF_DEAD(false))
               break;
              return;
              if(_GLF_DEAD(false))
               break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                return;
               }
              break;
             }
            break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               break;
              return;
             }
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            continue;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            return;
           }
          uvec4 _GLF_SWITCH_0_13v[63], _GLF_SWITCH_0_14v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             continue;
            continue;
           }
         }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       ;
       bvec4(false, true, true, true);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       mat4x2(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, (_GLF_IDENTITY(-1.9, min(-1.9, -1.9))) + _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(98.28) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (1.0) - 0.0))), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), -1.9)), 0.8, -9081.0557, _GLF_IDENTITY(53.07, min(_GLF_IDENTITY(53.07, float(vec2(53.07, 1.0))), _GLF_IDENTITY(53.07, min(53.07, 53.07)))), 5.8, 54.23, 69.21, -501.004);
       mat2(4464.6390, -2.1, 3541.9297, -92.31);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       ivec4(-56713, 63426, -3984, -71090);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
        }
       if((mat3x4(3.1, 4.8, -5.8, -7.1, -6.9, 8976.7526, -8423.4149, 843.302, _GLF_IDENTITY(_GLF_IDENTITY(-2.6, mix(float(-2.6), float(_GLF_FUZZED(-2.1)), bool(false))), max(-2.6, _GLF_IDENTITY(-2.6, _GLF_IDENTITY(clamp(-2.6, -2.6, -2.6), 1.0 * (clamp(-2.6, -2.6, -2.6)))))), -3.9, -6.4, -925.879) == mat3x4(46.99, -22.16, 2.8, 799.459, _GLF_IDENTITY(-3.4, (false ? _GLF_FUZZED(-2.2) : _GLF_IDENTITY(-3.4, max(-3.4, -3.4)))), 76.95, 746.398, -3.9, -288.580, -3.7, 7.6, -364.835)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         (7177.2729 / vec4(5.0, -93.79, 49.85, _GLF_IDENTITY(197.235, min(197.235, _GLF_IDENTITY(197.235, min(197.235, 197.235))))));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          (mat4x2(-76.61, -173.520, -2.8, -2.7, -6323.5565, -3.2, 644.271, 2.0) * mat3x4(60.33, 52.37, -0.6, -41.61, _GLF_IDENTITY(13.32, (false ? _GLF_FUZZED(-5361.6451) : 13.32)), 309.113, -7513.2991, 60.97, 147.653, -6435.6792, -1.1, _GLF_IDENTITY(-85.18, float(mat2(-85.18, 0.0, 0.0, 1.0)))));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
           return;
          mat4x3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
          mat2(-619.964, _GLF_IDENTITY(3078.1563, (3078.1563) + 0.0), -25.88, -25.44);
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5873.2385)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), bvec2(bvec3(bvec2(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), false)))))))), false, true, true)), false || (bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), false, false)))))))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) + sin(0.0))) + 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(1.9)), float(injectionSwitch.y), bool(true)))))) && true)))
             return;
            return;
            if(_GLF_DEAD(false))
             return;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          ;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           return;
          ivec3 _GLF_SWITCH_0_17v[45], _GLF_SWITCH_0_18v[82], _GLF_SWITCH_0_19v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
               return;
              if(_GLF_DEAD(false))
               return;
              return;
              if(_GLF_DEAD(false))
               return;
             }
            return;
           }
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true)))))
           return;
          if(_GLF_DEAD(false))
           return;
          bitCount(ivec4(-66471, _GLF_IDENTITY(22798, max(_GLF_IDENTITY(22798, min(22798, _GLF_IDENTITY(22798, ~ (~ (_GLF_IDENTITY(22798, (22798) << 0)))))), 22798)), 59203, -85887));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          outerProduct(vec2(4.9, 314.890), (_GLF_IDENTITY(vec2(1.1, -131.884), min(vec2(1.1, -131.884), vec2(1.1, -131.884))) - -1.8));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
           return;
          if(_GLF_DEAD(false))
           return;
          _GLF_IDENTITY((- -85.19), float(mat4x3((_GLF_IDENTITY(- -85.19, (- -85.19) - 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, abs(0.0)), vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, abs(0.0)), vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(7008.9941)), bool(false))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(516.617)), bool(false))), injectionSwitch.x), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(fract(5.2), clamp(_GLF_IDENTITY(fract(5.2), (false ? _GLF_FUZZED(7795.7022) : fract(5.2))), fract(_GLF_IDENTITY(5.2, max(5.2, 5.2))), fract(5.2)))) : 0.0)), (0.0) * 1.0), 0.0, 0.0))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0)) : _GLF_FUZZED(mix(-6.5, -3302.0588, -828.161)))), 0.0, 0.0, 1.0, cos(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, log(1.0))), 1.0, 1.0, 1.0)));
         }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         uvec3(32899u, 110837u, 74274u);
         (_GLF_IDENTITY(uvec3(39021u, 101910u, _GLF_IDENTITY(69796u, (69796u) | (_GLF_IDENTITY(69796u, (_GLF_IDENTITY(69796u, min(69796u, 69796u))) / 1u)))), (uvec3(39021u, 101910u, _GLF_IDENTITY(69796u, (69796u) | (_GLF_IDENTITY(69796u, (_GLF_IDENTITY(69796u, min(69796u, 69796u))) / 1u))))) | (uvec3(39021u, 101910u, _GLF_IDENTITY(69796u, (69796u) | (_GLF_IDENTITY(69796u, (_GLF_IDENTITY(69796u, min(69796u, 69796u))) / 1u)))))) == uvec3(48867u, 164036u, 145604u));
         if(_GLF_DEAD(false))
          return;
         true;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(true)
          {
           uvec3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[38];
           greaterThan((-6701 & (ivec2(-18624, 11282) << ivec2(44640, 22739))), ivec2(73826, 32657));
           _GLF_SWITCH_0_20v;
           if(_GLF_DEAD(false))
            return;
           bvec3 _GLF_SWITCH_0_22v[26];
           if(_GLF_DEAD(false))
            return;
           greaterThanEqual((uvec4(143871u, 11744u, 199100u, 103228u) / workgroup_base), uvec4(113078u, 54414u, 185992u, 106997u));
           if(_GLF_DEAD(false))
            return;
           bvec2 _GLF_SWITCH_0_23v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           (mat2x3(331.105, 953.263, -6.3, -0.7, -2.9, -0.6) , bvec3(true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))) && true)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))) && true))))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           mat2x3(55.10, 7.8, -8.2, _GLF_IDENTITY(-39.02, max(-39.02, -39.02)), 5.2, 25.20);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         while(false)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
            return;
           (uvec4(_GLF_IDENTITY(67712u, _GLF_IDENTITY((_GLF_IDENTITY(67712u, ~ (~ (67712u)))) | (_GLF_IDENTITY(67712u, (67712u) | 0u)), clamp((_GLF_IDENTITY(67712u, ~ _GLF_IDENTITY((~ (67712u)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((67712u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (67712u) : _GLF_FUZZED(bitfieldExtract(virtual_gid, 3310, -59400))))), 1u * ((~ (67712u)))), (~ (67712u)))))) | (_GLF_IDENTITY(67712u, (67712u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(67712u, ~ (~ (67712u)))) | (_GLF_IDENTITY(67712u, (67712u) | 0u)), uint(uvec4((_GLF_IDENTITY(67712u, ~ (~ (67712u)))) | (_GLF_IDENTITY(67712u, (67712u) | 0u)), 1u, 1u, 0u))), (_GLF_IDENTITY(67712u, ~ (~ (67712u)))) | (_GLF_IDENTITY(67712u, (67712u) | 0u))))), _GLF_IDENTITY(55381u, clamp(55381u, 55381u, 55381u)), 12132u, 141611u) & (+ GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y));
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             continue;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         mat3 _GLF_SWITCH_0_24v[82], _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[70];
         ;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                  break;
                 return;
                }
               return;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && _GLF_IDENTITY(true, false || (true)))) || false)), true)), false || (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && _GLF_IDENTITY(true, false || (true)))) || false)), true)), false || (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && _GLF_IDENTITY(true, false || (true)))) || false)), true)), false || (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && _GLF_IDENTITY(true, false || (true)))) || false)), true)), false || _GLF_IDENTITY((bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))), ((bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))) || false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              return;
             continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), false || ((false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false, false)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               continue;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              continue;
            }
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(false);
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), uint(uint(uint(1))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), uint(uint(uint(1))))), clamp(uint(_GLF_IDENTITY(uint(1), uint(uint(uint(1))))), uint(_GLF_IDENTITY(uint(1), uint(uint(uint(1))))), uint(_GLF_IDENTITY(uint(1), uint(uint(uint(1))))))))))), (uint(uint(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))) ? _GLF_FUZZED(-80675) : 1)), (1) + 0)), (false ? _GLF_FUZZED(79952) : ~ (_GLF_IDENTITY(1, (1) + 0))))))) + (_GLF_IDENTITY(0, min(0, 0)) | 0)))))) << 0u)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
