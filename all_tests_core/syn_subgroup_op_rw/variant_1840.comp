#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 ivec3 _f0;
 int _injected_loop_counter;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 bvec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 uvec4 _f1;
 uvec2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_16 {
 float _f0;
 _GLF_struct_11 _f1;
 mat3x4 _f2;
 _GLF_struct_15 _f3;
 mat3 _f4;
 uint workgroup_base;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 vec2 _f1;
 uint next_virtual_gid;
 mat2x3 _f2;
 mat2x3 _f3;
 uvec3 _f4;
 ivec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 int _f1;
 uvec2 _f2;
 mat4 _f3;
 mat4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 vec3 _f1;
 uint _f2;
 vec3 _f3;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
 uvec3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_4 _f0;
 mat2 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_8 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))), max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 0u), (uvec4(uvec3(0u, 0u, 0u), 0u)) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), ((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) | ((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6428.2990) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (false ? _GLF_FUZZED(-9298.1677) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x)))))))).x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(1.0, _GLF_struct_11(_GLF_struct_10(vec2(1.0), true), ivec4(1)), mat3x4(1.0), _GLF_struct_15(_GLF_struct_12(bvec4(true), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) / 1u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) / 1u))))), uvec2(1u), mat3x4(1.0)), _GLF_struct_13(uvec3(1u), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), vec3(1.0)), _GLF_struct_14(vec4(1.0), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) | (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u)))))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(0u, 0u, 0u) & uvec3(_GLF_IDENTITY(124189u, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u) | (124189u)), 69214u, 150559u))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))) - uvec3(0u, 0u, 0u))))), max((_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) | (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u)))))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(0u, 0u, 0u) & uvec3(_GLF_IDENTITY(124189u, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u) | (124189u)), 69214u, 150559u))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) | (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(uvec3(1u), uvec3(1u), uvec3(1u)), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u)))))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(0u, 0u, 0u) & uvec3(_GLF_IDENTITY(124189u, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u) | (124189u)), 69214u, 150559u))))), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))) - uvec3(0u, 0u, 0u))))))) ^ uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), 0u, 0u)), mat2x3(1.0), bvec3(true))), mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4047.2836)), bool(false)))), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)))), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))))))))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-10.29))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-10.29))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-10.29)))))) || false)))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_struct_replacement_16.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY((_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1))) << _GLF_IDENTITY(int(2), int(2))), max(_GLF_IDENTITY((_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1))) << _GLF_IDENTITY(int(2), int(2))), max((_GLF_IDENTITY(_GLF_IDENTITY((0 | 1), (false ? _GLF_FUZZED(bitCount(bitfieldReverse(19927))) : _GLF_IDENTITY((0 | 1), 0 | ((0 | 1))))), min((0 | 1), (0 | 1))) << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))))), (_GLF_IDENTITY((0 | 1), min((_GLF_IDENTITY(0, 0 ^ (0)) | 1), (0 | _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)))) << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) >> 0))) | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(1u, min(1u, 1u)), mat2(1.0)), _GLF_struct_1(mat2x3(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-6277.5388), (vec3(1.0))[1], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))), mix(vec3((vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))[0], _GLF_FUZZED(-58.03), _GLF_FUZZED(6.2)), vec3(_GLF_FUZZED(-764.425), (vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))[1], (vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))[2]), bvec3(false, true, true)))))[2]), vec3((vec3(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(923.248, max(923.248, 923.248))), _GLF_FUZZED(float(56368))), bvec3(true, false, false))), 1u, vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.2) : 1.0)))), vec4(1.0), uvec3(1u), _GLF_struct_2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.3, (_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : -6.3, mix(float(_GLF_FUZZED(7.0)), float(false ? _GLF_FUZZED(5.9) : -6.3), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)))), false, false))) && _GLF_IDENTITY(true, false || (true)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec3((bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), false, false))), false, false))) && true))), false || (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec3((bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), false, false))), false, false))) && true)))))))), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec3((bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), false, false))), false, false))) && true))), false || (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec3((bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), false, false))), false, false))) && true)))))))))), clamp(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))))), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), 1.0, length(0.0), 1.0, cos(0.0))))) || false))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), 1.0, length(0.0), 1.0, cos(0.0))))) || false))), false, false)), true && (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), 1.0, length(0.0), 1.0, cos(0.0))))) || false))), false, false))))))) && true)))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9763.4061))), mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true))), false, false))) && true)))))))), clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.3, mix(float(_GLF_FUZZED(75.65)), float(_GLF_IDENTITY(-6.3, max(_GLF_IDENTITY(-6.3, (-6.3) / 1.0), -6.3))), bool(true))))), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(250.784)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(13.01)), vec2(_GLF_FUZZED((-9701.4100)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(13.01)), vec2(_GLF_FUZZED((-9701.4100)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), true, true)))), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))), 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bvec4(bool(bvec4(true, false, false, true)), false, false, false))))) || false), _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(244.457)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false) && true))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), max(mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))))))), float(_GLF_FUZZED(-804.342)), bool(false)))))), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))) && true)))))), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(atan(-143.355, -927.329)))))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))) && true)))))))))), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec4(bool(bvec3(true, false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), false, false))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), bool(bvec4(! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), true, false, false))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, false))) && true)))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), true, false, false)), false || (bool(bvec4(! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), true, false, false)))))) || false)))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), max(mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), false, false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) || false)))))), mix(float(_GLF_FUZZED(-3.6)), float(mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))), bool(true))))))), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), false)), (bool(bvec2(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), false))) && true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), false)), (bool(bvec2(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), false))) && true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false)), false)), (bool(bvec2(bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0))))), false, false)), false))) && true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))) || false))))))))) / vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_struct_3(mat3x4(1.0)), uvec2(1u)), mat2(1.0), _GLF_struct_5(uvec4(1u)), _GLF_struct_8(bvec3(true), _GLF_struct_6(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, _GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(1u), 1u)), (uvec2(uvec3(uvec2(1u), 1u))) | uvec2(0u, 0u))), mat4(1.0), mat4(1.0), bvec4(true)), _GLF_struct_7(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(max(vec2(1.0), vec2(1.0)), max(_GLF_IDENTITY(max(vec2(1.0), vec2(1.0)), max(max(vec2(1.0), vec2(1.0)), max(vec2(1.0), vec2(1.0)))), max(vec2(1.0), vec2(1.0))))), _GLF_IDENTITY(_GLF_struct_replacement_16.workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))) ^ 0u) : _GLF_FUZZED(packHalf2x16(injectionSwitch))))) / 1u), subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_16.workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_FUZZED(packHalf2x16(injectionSwitch)), min(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_FUZZED(packHalf2x16(injectionSwitch)), true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_FUZZED(packHalf2x16(injectionSwitch))))))) / 1u), subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_16.workgroup_base, (false ? _GLF_FUZZED(58236u) : _GLF_struct_replacement_16.workgroup_base)) + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u | (1u)), 0u, 1u))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_FUZZED(packHalf2x16(injectionSwitch))))) / 1u), subgroup_size))))), _GLF_struct_replacement_16.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id))) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))), subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(packHalf2x16(injectionSwitch)), uint(uvec3(_GLF_FUZZED(packHalf2x16(injectionSwitch)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) / 1u), subgroup_size)))) + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(int(1))), 1, _GLF_IDENTITY(1, (1) >> 0)))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), mat2x3(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat2x3(1.0), uvec3(1u), ivec2(1), bvec4(true))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(17.20)), vec2(_GLF_FUZZED(-5.0), (injectionSwitch)[1]), bvec2(false, true))).y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(((mat2x4(3.2, -4779.7699, -7730.9173, -3.4, -147.694, -3.3, -71.89, -449.574) * vec2(-26.83, 4.0)) * mat2x4(-5.9, 615.153, 4.0, 6493.0922, -3.6, 9095.6549, 2.8, 632.951))) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) + sqrt(vec2(0.0, 0.0)))[0], _GLF_FUZZED(vec2(-5.5, 699.824).t)), vec2(_GLF_FUZZED(-28.20), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))).y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(0, min(0, 0)), 0))), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((1 | int(_GLF_ONE(1.0, injectionSwitch.y))), ((1 | int(_GLF_ONE(1.0, injectionSwitch.y)))) | ((1 | int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_DEAD(false))) && true) && true))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              continue;
            }
          }
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   atomicStore(buf[_GLF_struct_replacement_9._f3._f2.next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))))) < subgroup_size)
      {
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u | (read)), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(93209)))) | (int(7)))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ~ (~ _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) / 1)), int(7))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) >> (73067 & 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) >> (73067 & 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) >> (73067 & 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) >> (73067 & 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) - 0), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) >> (73067 & 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) - 0)))))) - (0 >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) - (0 << _GLF_IDENTITY(int(8), int(8))))))) >> 0)) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 7 : _GLF_FUZZED(abs(-96313)))), min(_GLF_IDENTITY(7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 7 : _GLF_FUZZED(abs(-96313)))), _GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 7 : _GLF_FUZZED(abs(-96313)))), 0 | (_GLF_IDENTITY(7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 7 : _GLF_FUZZED(abs(-96313)))))))))), ~ (~ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, 0 ^ (7)), 7))), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) / _GLF_IDENTITY(1, 0 | (1)))) ^ 0), int(7))))))))) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (7)), max(7, _GLF_IDENTITY(7, (7) | (7))))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(_GLF_IDENTITY(-43223, (_GLF_IDENTITY(-43223, (-43223) / 1)) ^ 0)) : 7)), _GLF_IDENTITY(7, max(7, 7))))), _GLF_IDENTITY((int(7)), 0 | ((int(7)))) | (int(7))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 1 * (_GLF_IDENTITY(7, int(int(7)))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), (int(_GLF_IDENTITY(0, min(0, 0)))) | (int(_GLF_IDENTITY(0, min(0, 0)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(0, 0, 0))), _GLF_IDENTITY((int(0)), (_GLF_IDENTITY((int(0)), 0 + ((int(0))))) - 0) | (int(0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(0, 0, 0))), (_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), min(int(0), int(0))), int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))) | (int(0))))) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(0, 0, 0))), (int(0)) | (int(0))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(0), int(0))))), int(0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, _GLF_IDENTITY(-817.167, (-817.167) + 0.0)).x)), bool(false)))) / 1.0))) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_FUZZED(-6.7))), injectionSwitch.x)), _GLF_IDENTITY(int(ivec2(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0))) ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0)) : _GLF_FUZZED(-6.7))), injectionSwitch.x)), 1)), (int(ivec2(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(1.6, -3.0, -817.167), mix(vec3(_GLF_FUZZED(273.601), _GLF_FUZZED(vec4(426.019, 36.65, -95.51, 7.3).w), _GLF_FUZZED(-7787.9918)), vec3((vec3(1.6, -3.0, -817.167))[0], (vec3(1.6, -3.0, -817.167))[1], (vec3(1.6, -3.0, -817.167))[2]), bvec3(true, true, true))).x)), bool(false)))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, ! (! (false))))))) / 1.0), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) / 1.0), (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))), min((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))))) / 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0, (false ? _GLF_FUZZED((+ -1.7)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0, mix(float(_GLF_FUZZED(-11.92)), float((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0)), float(_GLF_FUZZED(-54.35)), bool(false)))))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(1.6, -3.0, -817.167), mix(vec3(_GLF_FUZZED(273.601), _GLF_FUZZED(vec4(426.019, 36.65, -95.51, 7.3).w), _GLF_FUZZED(-7787.9918)), vec3((vec3(1.6, -3.0, -817.167))[0], (vec3(1.6, -3.0, -817.167))[1], (vec3(1.6, -3.0, -817.167))[2]), bvec3(true, true, true))).x)), bool(false)))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, ! (! (false))))))) / 1.0), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) / 1.0), (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))), min((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))))) / 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0, (false ? _GLF_FUZZED((+ -1.7)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0, mix(float(_GLF_FUZZED(-11.92)), float((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0)), float(_GLF_FUZZED(-54.35)), bool(false)))))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(1.6, -3.0, -817.167), mix(vec3(_GLF_FUZZED(273.601), _GLF_FUZZED(vec4(426.019, 36.65, -95.51, 7.3).w), _GLF_FUZZED(-7787.9918)), vec3((vec3(1.6, -3.0, -817.167))[0], (vec3(1.6, -3.0, -817.167))[1], (vec3(1.6, -3.0, -817.167))[2]), bvec3(true, true, true))).x)), bool(false)))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, ! (! (false))))))) / 1.0), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) / 1.0), (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))), min((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))))) / 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0, (false ? _GLF_FUZZED((+ -1.7)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0, mix(float(_GLF_FUZZED(-11.92)), float((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(1.6, -3.0, -817.167).x)), bool(false)))) / 1.0)), float(_GLF_FUZZED(-54.35)), bool(false)))))), false, false, true)))) && true)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-6.7))), injectionSwitch.x)), 1))) ^ 0))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), clamp(float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0))))))) < injectionSwitch.y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false)))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), clamp(float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0))))))) < injectionSwitch.y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), clamp(float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0))))))) < injectionSwitch.y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false)))), true))))) || false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, false), true))))), true, true), false))))))))))
              continue;
             break;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       for(_GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_18(_GLF_struct_17(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), ivec3(1))), 0)), ivec4(1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f0._injected_loop_counter < 1, ! (! (_GLF_struct_replacement_19._f0._f0._injected_loop_counter < 1)))); _GLF_struct_replacement_19._f0._f0._injected_loop_counter ++)
        {
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          continue;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       atomicStore(buf[virtual_gid], read, 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))), mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false)))), bool(true)))) - tan(0.0))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(min(injectionSwitch, injectionSwitch), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0))))), 1.0, 0.0)), 0.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), 1.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), max(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0))) + _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-2101.2151))), bool(false)))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(4.4)), bool(_GLF_IDENTITY(false, (false) || false)))), (false ? _GLF_FUZZED(71.46) : dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0))))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.5), _GLF_FUZZED((true ? -6.6 : -66.48))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(5.2, -0.1), ivec2(-24196, -48999))) : injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) / abs(vec2(1.0, 1.0))).y), float(_GLF_FUZZED(46.89)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (! (! (bool(false)))) && true)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-396.439, -4.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) - vec2(0.0, 0.0))))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(-0.7), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2606.1524, max(2606.1524, 2606.1524)))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), log(1.0), 1.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 1.0), vec4(log(1.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec4(log(1.0), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), log(1.0), 0.0, 0.0, 1.0, sin(0.0)))), 0.0, 0.0)), mix(float(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec4(log(1.0), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), log(1.0), 0.0, 0.0, 1.0, sin(0.0)))), 0.0, 0.0))), float(_GLF_FUZZED(-7099.0935)), bool(false)))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) - vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))), abs(1.0), 1.0))))) / abs(vec2(1.0, 1.0))).y), float(_GLF_FUZZED(46.89)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(injectionSwitch, injectionSwitch)).y))))))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), false || ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), bool(bvec3(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0))))) * 1.0)))))
          return;
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(_GLF_IDENTITY(2, (2) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(729.733, _GLF_IDENTITY(float(mat3x4(729.733, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0))), round(length(normalize(1.0))), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3x4(729.733, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0))), round(length(normalize(1.0))), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)))))), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(729.733)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(729.733)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_FUZZED(729.733)), float(injectionSwitch.x), bool(true)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sqrt(1.0), 1.0), mat2x3(mat4x3(mat2x3(mix(float(_GLF_FUZZED(729.733)), float(injectionSwitch.x), bool(true)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sqrt(1.0), 1.0))))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(729.733)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-9.3)), bool(false)))) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-82101)), _GLF_FUZZED(7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))).x, mix(float(_GLF_FUZZED(729.733)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(729.733)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_FUZZED(9.9) : _GLF_FUZZED(min(-9.9, 92.29)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(-7088.3871)), bool(false))), (injectionSwitch)[0])), _GLF_FUZZED(vec4(-24.44, -1.2, -82.28, -415.714).q)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false || (bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- 9.5))), bool(false))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), false, true, false)))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))).x > injectionSwitch.y)))))) || false))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), false, false, false))))))))))))))))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                  continue;
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       return;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))
                            {
                             if(_GLF_DEAD(false))
                              return;
                             return;
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (bool(bool(false))), (true && (bool(bool(false)))) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (bool(bool(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(bool(false))), false || (true && (bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(bool(false))), false || (true && (bool(bool(false)))))), (! (_GLF_IDENTITY(true && (bool(bool(false))), false || (true && (bool(bool(false))))))) && true)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(bool(false))), false || (true && (bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(bool(false))), false || (true && (bool(bool(false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((bool(bool(false))), bool(bvec3((bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (true && (bool(bool(false))))))) && true)))))))))) && true)));
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))), (bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))))) && true)), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))), false || ((! (true)))))))))) && true)), true, true))));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) || false) ? _GLF_FUZZED(5091.6360) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     return;
    }
   else
    {
    }
  }
}
