#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 uint _f0;
 mat4x3 _f1;
 mat4 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 float _f1;
} ;

struct _GLF_struct_28 {
 uvec2 _f0;
 vec2 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 int _f1;
 uvec3 _f2;
 _GLF_struct_29 _f3;
 _GLF_struct_30 _f4;
} ;

struct _GLF_struct_26 {
 mat4x2 _f0;
 vec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_25 {
 int _f0;
 uvec2 _f1;
 mat4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_27 {
 mat3 _f0;
 _GLF_struct_25 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
 _GLF_struct_26 _f4;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
} ;

struct _GLF_struct_22 {
 int _f0;
 uvec3 _f1;
 int _f2;
 mat2 _f3;
} ;

struct _GLF_struct_21 {
 uvec4 _f0;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_24 {
 bvec3 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
 uint _f5;
 float _f6;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 mat4x2 _f1;
 uint _f2;
 int _f3;
 vec4 _f4;
 bvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 vec4 _f1;
 bool _f2;
 bvec3 _f3;
 uvec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_19 {
 mat3x4 _f0;
 _GLF_struct_17 _f1;
 uvec2 _f2;
 _GLF_struct_18 _f3;
 mat3x2 _f4;
 uint subgroup_base;
} ;

struct _GLF_struct_32 {
 _GLF_struct_19 _f0;
 _GLF_struct_24 _f1;
 mat3 _f2;
 vec4 _f3;
 _GLF_struct_27 _f4;
 _GLF_struct_31 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_16 {
 uint workgroup_base;
 int _f0;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 mat3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 ivec4 _f1;
 uvec3 _f2;
 ivec4 _f3;
 bool _f4;
 int _f5;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 mat4 _f1;
 int _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 float _f1;
 int _f2;
 ivec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat4x2 _f1;
 uint _f2;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 uvec3 _f1;
 ivec3 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 ivec3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
} ;

struct _GLF_struct_4 {
 int _f0;
 uint _f1;
 vec3 _f2;
 uvec2 _f3;
 ivec2 _f4;
 mat4 _f5;
 uint _f6;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 uvec2 _f3;
 mat4x2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_15 {
 uint read;
 _GLF_struct_6 _f0;
 ivec2 _f1;
 _GLF_struct_12 _f2;
 vec2 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_0 {
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid;
 bvec3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.z = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(637.892))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3321.0300)), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(-438.659)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3321.0300)), float(injectionSwitch.x), bool(true)))), bool(true)))) / determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / cos(0.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false))) || false), bool(bvec2(! (false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true))))), (bool(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), 1);
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_19(mat3x4(1.0), _GLF_struct_17(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(_GLF_IDENTITY(true, true && (true)))), min(mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))), mix(vec4(_GLF_FUZZED(351.891), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true)))))[1], _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true)))))[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(min(_GLF_IDENTITY(2, 0 ^ (2)), 2), (true ? min(_GLF_IDENTITY(2, 0 ^ (2)), 2) : _GLF_FUZZED(81483))))), _GLF_IDENTITY(0 ^ ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2)))), min(0 ^ ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2)))), 0 ^ ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2))))))) - 0)], max((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true)))))[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 0 ^ ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2))))) - 0)], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true)))))[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 0 ^ ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2))))) - 0)])), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-7721.1424), mix(float(_GLF_FUZZED((- 29.25))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-7721.1424, mix(float(_GLF_FUZZED(-2420.8034)), float(-7721.1424), bool(true)))), max(_GLF_FUZZED(_GLF_IDENTITY(-7721.1424, mix(float(_GLF_FUZZED(-2420.8034)), float(-7721.1424), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(-7721.1424, mix(float(_GLF_FUZZED(-2420.8034)), float(-7721.1424), bool(true))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false)))), 0.0 + (float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-7721.1424, (true ? -7721.1424 : _GLF_FUZZED(-7.4))))), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), bool(true)))))[3]), vec4((vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522))))), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.1, (false ? _GLF_FUZZED(log2(-6888.7238)) : 7.1)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(_GLF_IDENTITY(7.1, min(7.1, 7.1)), (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(_GLF_IDENTITY(7.1, min(7.1, 7.1)), (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522))) - 0.0)))), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.y)))) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(7.1, _GLF_IDENTITY(min(7.1, 7.1), min(min(7.1, 7.1), _GLF_IDENTITY(min(7.1, 7.1), max(min(7.1, 7.1), min(7.1, 7.1))))))) - 0.0), 7.1)) : _GLF_FUZZED(-132.522), (false ? _GLF_FUZZED(383.023) : _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.y)))) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(7.1, _GLF_IDENTITY(min(7.1, 7.1), min(min(7.1, 7.1), _GLF_IDENTITY(min(7.1, 7.1), max(min(7.1, 7.1), min(7.1, 7.1))))))) - 0.0), 7.1)) : _GLF_FUZZED(-132.522))))))), float(1.0), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(7.1, _GLF_IDENTITY(max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1), max(max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1), max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)))) : _GLF_FUZZED(_GLF_IDENTITY(-132.522, (_GLF_IDENTITY(-132.522, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.1))), 1.0)) * (-132.522))) - 0.0)))))), float(1.0), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(_GLF_IDENTITY(7.1, (7.1) - 0.0), (true ? _GLF_IDENTITY(7.1, (7.1) - 0.0) : _GLF_FUZZED(-4.8))), 7.1)) : _GLF_FUZZED(-132.522))))), float(1.0), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522)))), float(vec4(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), _GLF_IDENTITY(7.1, clamp(7.1, 7.1, _GLF_IDENTITY(7.1, float(mat2(7.1, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(-132.522)))), 1.0, determinant(mat3(round(length(normalize(1.0))), 0.0, sin(0.0), 0.0, 1.0, abs(0.0), 0.0, log(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), 0.0)))), float(1.0), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(_GLF_IDENTITY(7.1, (7.1) - 0.0), mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.1, (7.1) - 0.0)), bool(true))), 7.1)) : _GLF_FUZZED(-132.522)))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522))))), float(_GLF_FUZZED(50.56)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522)))), float(mat4x2(_GLF_FUZZED(_GLF_IDENTITY(7.1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(7.1, max(_GLF_IDENTITY(7.1, (7.1) - 0.0), 7.1)) : _GLF_FUZZED(-132.522)))), 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0)))))), float(1.0), bool(true)))))))[0], _GLF_FUZZED(_GLF_IDENTITY(-4.8, min(-4.8, _GLF_IDENTITY(-4.8, mix(float(_GLF_IDENTITY(-4.8, (-4.8) / cos(0.0))), float(_GLF_FUZZED(286.821)), bool(false)))))), _GLF_FUZZED(3.6), _GLF_FUZZED(float(2250u))), bvec4(true, false, false, false))), true, bvec3(true), uvec4(1u), mat2x4(1.0)), uvec2(1u), _GLF_struct_18(ivec2(1), mat4x2(1.0), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u)))), 1, vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bvec4(true), 1u), mat3x2(1.0), _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.z * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_struct_24(bvec3(true), _GLF_struct_20(vec4(1.0), bvec4(true), bvec3(true), mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0)))), _GLF_struct_21(uvec4(_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_struct_22(1, uvec3(1u), 1, mat2(1.0)), _GLF_struct_23(mat2x3(1.0)), 1u, 1.0), mat3(1.0), vec4(1.0), _GLF_struct_27(mat3(1.0), _GLF_struct_25(1, uvec2(1u), mat4(1.0), uvec2(1u)), mat3x4(1.0), mat3x4(1.0), _GLF_struct_26(mat4x2(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), bvec3(true))), _GLF_struct_31(_GLF_struct_28(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u)), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)))), mat3x4(1.0), mat3x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), true))))))))), 1, uvec3(1u), _GLF_struct_29(bvec4(true), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((mat3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), ((mat3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat3(1.0))), 0.0, 1.0))))), _GLF_struct_30(1u, mat4x3(1.0), mat4(1.0), mat3x4(1.0), mat2x3(1.0))), vec4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_16.workgroup_base + _GLF_struct_replacement_32._f0.subgroup_base + subgroup_local_id, (_GLF_struct_replacement_16.workgroup_base + _GLF_struct_replacement_32._f0.subgroup_base + subgroup_local_id) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u))))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, uint(uvec4(8u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u))))), max(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u))))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u)))), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u)))), 0u, 0u)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))) - 0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), _GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(8u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w = _GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u | ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) - 0u)), min(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), max(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_16.workgroup_base + _GLF_struct_replacement_32._f0.subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))
  barrier();
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5653.9378)))) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(atomicCompSwap(virtual_gid, subgroup_local_id, subgroup_id)) : _GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w, clamp(_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w, _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w, _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w))) / 1u, ~ (~ ((_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w) / 1u))))))], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_struct_6(_GLF_struct_1(mat4(1.0), uvec2(1u), mat2x4(1.0), mat3(1.0)), _GLF_struct_2(mat3x2(_GLF_IDENTITY(1.0, cos(0.0) * (_GLF_IDENTITY(1.0, (1.0) - 0.0)))), mat2x3(1.0), uvec3(1u), uvec2(1u), mat4x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_struct_3(mat2(1.0), vec2(1.0)), _GLF_struct_4(1, 1u, vec3(1.0), uvec2(1u), ivec2(1), mat4(1.0), 1u), _GLF_struct_5(vec3(1.0))), ivec2(1), _GLF_struct_12(_GLF_struct_7(mat4x2(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) + (uvec3(1u))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-91024)))))), int(ivec3(_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-91024)))))), 0, 1)))), mat3x2(1.0), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), ivec3(1), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(_GLF_IDENTITY(1, (1) / (1 | 1)))))), _GLF_struct_8(uvec4(1u), mat4x2(1.0), 1u), _GLF_struct_9(mat2x3(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1, ivec2(1), mat2x3(1.0)), _GLF_struct_10(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), mat4(1.0), 1, mat4x3(1.0)), _GLF_struct_11(mat4x2(1.0), ivec4(_GLF_IDENTITY(1, (1) | (1))), uvec3(1u), ivec4(1), true, 1)), vec2(1.0), _GLF_struct_13(mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8135.7067)), bool(false)))), mat3(1.0), bvec4(true)), _GLF_struct_14(mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-4.3, 3.4, 9464.8218).z), _GLF_FUZZED(-20.57)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true))), _GLF_IDENTITY(true && (true), false || (true && (true))))) || false), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))) || false), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, ! (! (false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-12.72)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-12.72)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), 0.0))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(1027.6441)), bvec2(false, false)))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.x], uint(1), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.483), _GLF_FUZZED(vec3(4358.6366, 91.82, 2.8).z)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], sqrt(1.0) * ((injectionSwitch)[1]))), float(_GLF_FUZZED(4.1)), bool(false))), ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))), injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float((~ 90599u)), min(float((~ 90599u)), float((~ 90599u))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.483), _GLF_FUZZED(vec3(4358.6366, 91.82, _GLF_IDENTITY(2.8, (false ? _GLF_FUZZED(-55.00) : 2.8))).z)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], cos(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0))), ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.483), _GLF_FUZZED(vec3(4358.6366, 91.82, 2.8).z)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))), injectionSwitch)))[0], _GLF_FUZZED(-664.981)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
      continue;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.x, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.x))], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))) || false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_11next_virtual_gidnum_workgroupsubgroup_idvirtual_gid.w], _GLF_struct_replacement_15.read, _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | 0))) & 1))) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / (1 & 1))) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 & 1)), min(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 & 1)), clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (4) / (1 & 1))))))) / 1), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / (1 & 1))) / 1)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 & 1)), min(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 & 1)), clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (4) / (1 & 1))))))) / 1), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / (1 & 1))) / 1)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 & 1)), min(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 & 1)), clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (4) / (1 & 1))))))) / 1), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / (1 & 1))) / 1)) << 0)) * 1)) << 0)))))), _GLF_IDENTITY(4, max(4, 4)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))))) > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
