#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y = subgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y + GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y + ((GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) << 0)))
      {
       case 23:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(all(equal(vec4(-23.70, 9.9, -81.89, -8.4), vec4(-2817.4960, 9093.5182, 626.275, -304.199))))
        {
         vec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         mat2x4 _GLF_SWITCH_0_2v[35], _GLF_SWITCH_0_3v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(true)
          {
           while((bvec3(false, true, true) != bvec3(true, false, true)))
            {
             mat4 _GLF_SWITCH_0_4v[24], _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
             mat2(-2725.7295, -1.4, 21.42, 26.62);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             -59874;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             (_GLF_SWITCH_0_6v - _GLF_SWITCH_0_5v);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              continue;
             mat4x3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v[88], _GLF_SWITCH_0_9v[19];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             uvec4(num_workgroup, num_workgroup, uvec2(148313u, 199554u));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           while(false)
            {
             if(_GLF_DEAD(false))
              return;
             mat3x4(-92.76, -158.765, 2.5, -90.16, 3641.7482, 4.0, 2364.9274, 9.4, -56.52, 299.345, 829.811, -6.1);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat2x3 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
             ivec4(49540, 95994, -67847, 84197).q;
             mat2x4(-51.78, -64.74, 8886.3971, -152.163, 5.7, -73.12, -2.2, 346.522);
             uvec3 _GLF_SWITCH_0_13v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
             mat3x4 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
             transpose(mat4x2(-4036.1706, 8960.7180, 2.8, 3.3, -640.966, 4219.9341, 4.0, -7440.0185));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
            }
           injectionSwitch;
           mat3x4 _GLF_SWITCH_0_17v[42];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           while(false)
            {
             mat2(26.31, 19.04, -16.63, 89.50);
             subgroup_id;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                }
               continue;
              }
             atomicExchange(next_virtual_gid, atomicOr(next_virtual_gid, GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           for(ivec4 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v; true; mat2(-4203.6670, 2.3, 13.89, -95.09))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec4 _GLF_SWITCH_0_21v;
             if(_GLF_DEAD(false))
              break;
            }
           if((-99399 < 78294))
            {
             if(_GLF_DEAD(false))
              barrier();
             (vec3(-9.6, -4.7, -235.659) == vec3(2489.1375, -5.1, -981.576));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             ((mat3(-7212.8841, 9935.0566, 909.277, 0.0, -4602.5070, 0.7, 5.6, -387.491, -9402.0560) == mat3(vec3(74.88, 921.941, -5.2), vec3(-2609.0027, 217.014, -4596.1968), vec3(-2.0, -2.0, -2838.3423))) ? mat4x3(-55.92, -9.2, 2.6, -8524.4708, 9.0, -87.02, 301.091, -714.643, 856.265, 339.685, -414.108, 61.17) : mat4x3(4760.5222, -4.5, 62.08, -33.13, 6.3, -85.20, -8298.2983, -7.1, -7894.1813, 3.5, 4.9, -103.366));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             ivec2(86453, -30977);
             mat3x4 _GLF_SWITCH_0_22v;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               atomicMin(subgroup_id, workgroup_size);
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
          while(true)
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             return;
            ;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  return;
                 }
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  continue;
                 }
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 break;
                continue;
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                barrier();
               }
              break;
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            vec4 _GLF_SWITCH_0_23v[96], _GLF_SWITCH_0_24v;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                return;
               }
              ;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                 continue;
                return;
               }
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                 {
                  barrier();
                 }
               }
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             break;
            for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                do
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 continue;
               }
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
              break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  barrier();
                 }
                return;
               }
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              do
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    return;
                   }
                  break;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                 }
                -27.25;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            do
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                continue;
               }
              if(_GLF_DEAD(false))
               barrier();
              do
               {
                51241;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            uvec4 _GLF_SWITCH_0_25v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            uint _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
            if(_GLF_DEAD(false))
             break;
            ;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            vec3 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              return;
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             break;
           }
          if(_GLF_DEAD(false))
           return;
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
           return;
          if(_GLF_DEAD(false))
           return;
          do
           {
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              continue;
             }
            uvec2(138025u, 134940u);
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          true;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
            if(_GLF_DEAD(false))
             return;
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
             }
            else
             {
              return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          for(          num_workgroup;
 true; greaterThan(ivec3(25942, 67323, 40837), ivec3(50756, 90567, 99769)))
           {
            mat4x3(-52.82, -424.826, 963.609, -446.238, -4033.0110, -670.183, -9.2, -8.1, 0.2, 82.61, 38.14, -942.849);
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            ;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             continue;
            bvec3 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v[76];
            ;
            (radians(-9.9) / mat4(-3219.6896, -11.50, -4.2, -198.667, 4.7, -688.443, 3.4, 92.69, 259.685, -7.0, 129.109, -34.59, 0.1, -9.5, 4.3, 15.28));
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            uvec3(185303u, 27359u, 17624u);
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                break;
               }
              if(_GLF_DEAD(false))
               break;
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            do
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              ivec4(-8610, -22223, -36601, 48317);
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              return;
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
         }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         (++ _GLF_SWITCH_0_3v);
         cosh(exp2(_GLF_SWITCH_0_0v));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         bvec2(false, false);
         (+ uvec2(187319u, 87720u));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         ((mat2x3(-40.49, 6.7, -175.895, 7340.2934, 560.594, 71.08) / mat2x3(445.460, -99.82, -130.383, 807.272, -902.643, -8106.2686)) / -971.722);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         mat3 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
         if(_GLF_DEAD(false))
          return;
         if(bool(8583.0815))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       case 0:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 6:
       case 49:
       if(_GLF_DEAD(false))
        return;
       subgroupAll(false);
       if(_GLF_DEAD(false))
        return;
       case 92:
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
        }
       break;
       case 31:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       while(true)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         while((notEqual(injectionSwitch, vec2(8.4, 74.64)) != bvec2(true, true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           float(num_workgroup);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           ;
           float _GLF_SWITCH_0_35v;
           while(false)
            {
             bvec2 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
             if(_GLF_DEAD(false))
              return;
             (ivec2(-22451, 35457) ^ ivec2(-57172, 99466));
             mat3 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
             mat4x3 _GLF_SWITCH_0_40v[36];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             ivec2 _GLF_SWITCH_0_41v[25], _GLF_SWITCH_0_42v;
             bvec3 _GLF_SWITCH_0_43v[79], _GLF_SWITCH_0_44v[97], _GLF_SWITCH_0_45v;
             vec4(1829.8393, 856.535, 2.2, -4037.9720);
            }
           smoothstep(injectionSwitch, injectionSwitch, injectionSwitch);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
            }
           while(false)
            {
             for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               bvec3(true, true, false);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               continue;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     continue;
                    }
                   break;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
               uvec3(103611u, 54774u, 63712u);
               if(_GLF_DEAD(false))
                continue;
              }
             bvec2(true, true);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             bool _GLF_SWITCH_0_46v[63];
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             injectionSwitch;
             if(_GLF_DEAD(false))
              barrier();
             bvec3 _GLF_SWITCH_0_47v[95], _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v[49];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               mat2(-373.871, -7.9, 0.4, -56.26);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            continue;
           (uvec4(96214u, 139636u, 46965u, 20982u) / (next_virtual_gid));
           if(_GLF_DEAD(false))
            continue;
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                barrier();
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
               continue;
              barrier();
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             continue;
            vec3(4523.8999, 870.483, 5.6);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               break;
              continue;
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             continue;
            37872;
            do
             {
              ivec3(-10340, 63360, -48367);
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              break;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               break;
              if(_GLF_DEAD(false))
               barrier();
             }
            ivec2(-8182, 39312);
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 continue;
                barrier();
               }
              return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                break;
                if(_GLF_DEAD(false))
                 return;
               }
              barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
                continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_DEAD(false))
               continue;
             }
            (false ? mat2x4(5.5, -9.2, -72.95, -544.905, 412.207, 8.4, -7.6, 9.0) : mat2x4(-764.829, 8788.0011, 9582.9234, 281.688, 21.51, -8.3, 5.1, -1.8));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              do
               {
                return;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            mat3x4(mat4(87.48, -8.5, -8.6, -8.0, 1772.4371, -88.90, -562.205, -511.871, 8846.4430, -2.9, -7901.7088, -2248.8808, -89.49, 5937.8026, 8.1, 5863.0548));
           }
           ivec4(3902, -76104, 1636, -33407);
          }
         ivec2(-80634, 79728);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         uvec2 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v[13], _GLF_SWITCH_0_52v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
          {
           mat4x2(mat2x4(-4104.3057, 3.4, 557.532, 8.1, -5.8, 1.0, -5.8, -715.723));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            break;
           notEqual(bvec4(true, false, true, false), bvec4(true, true, false, false));
           ivec4 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[60];
           if(_GLF_DEAD(false))
            continue;
           bvec3 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v[83], _GLF_SWITCH_0_57v[26];
           {
            (mat2x3(-6.4, 9448.9935, 0.3, -1028.7227, 5.4, -932.869) / asin(690.614));
            uvec3 _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
            bvec4 _GLF_SWITCH_0_60v, _GLF_SWITCH_0_61v[31];
            mat2 _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v[20];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             continue;
            equal(uvec4(42304u, 66733u, 197215u, 88473u), uvec4(7398u, 149168u, 4838u, 149319u));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             continue;
           }
           if(false)
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   barrier();
                  }
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             lessThan(vec4(-625.652, 1366.6498, 4.4, 1.6), sign(vec4(7297.3279, -77.61, 512.020, -2.9)));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             ivec4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[55];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             mat3x4 _GLF_SWITCH_0_66v[10];
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             mat2x4 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               matrixCompMult((8.5 - mat4(8.8, -6.0, -7742.1197, 744.629, -0.6, 5.4, -230.482, 8871.8370, -8.6, -24.35, 85.96, 1019.7091, -8.3, 4.7, -8.4, 6.8)), mat4(8.9, -7445.8937, -8.3, 496.117, 46.97, 3047.5814, 73.10, -1.4, 13.58, 9.3, 7.2, -0.1, -387.137, -5528.3603, -9914.7497, 89.48));
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (subgroup_id & atomicOr(GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y, next_virtual_gid));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4x2(3.7, 6917.4201, -4.9, 18.09, -0.4, -3.4, 6.2, 0.4);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat4(mat3x4(2.0, 2.5, 6.9, 42.60, 97.99, 10.60, 649.370, -9.9, 0.8, 7.2, 23.44, -7.3));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             mat4x2(-32.68, -9.1, -1.8, 8.5, 91.07, 9.9, 43.26, -9.2);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             mat2 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v[61], _GLF_SWITCH_0_72v[47];
             mat3x4(-2.8, 309.233, 7.6, -2.8, -678.479, -414.606, -122.771, -2387.9652, -2.4, 477.767, -7.6, -67.92);
             _GLF_SWITCH_0_70v;
             bvec2 _GLF_SWITCH_0_73v[2];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            break;
           return;
          }
         for(         (bvec4(false, false, true, false));
 (-84967 < 31056); (+ packSnorm2x16(vec2(-2.9, -46.79))))
          {
           do
            {
             for(             mat3x2(-6345.3576, 2.0, 7157.5688, -555.302, -8567.0432, -4.9);
 (ivec4(-98192, -21006, -11196, -49235) == (-54100 % bitfieldExtract(ivec4(-38132, 9168, -26304, -18826), 8752, 34955))); mat3(-4.2, 0.0, -5787.5996, -5330.2945, 3.5, 4208.0929, 3.9, -1.2, 1921.6306))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               bvec3 _GLF_SWITCH_0_74v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                  }
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   continue;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               continue;
              break;
             }
            if(_GLF_DEAD(false))
             return;
            -0.1;
            if(_GLF_DEAD(false))
             barrier();
           }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           bvec3 _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v, _GLF_SWITCH_0_77v;
          }
         if(_GLF_DEAD(false))
          barrier();
         bvec4 _GLF_SWITCH_0_78v, _GLF_SWITCH_0_79v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         while((true != false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           ivec2 _GLF_SWITCH_0_80v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           vec3 _GLF_SWITCH_0_81v, _GLF_SWITCH_0_82v;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           while((mat3x4(9339.8230, -510.088, -9290.8800, 0.5, 5949.5562, 6810.2372, -6.3, 4.2, 8.1, -444.454, -592.148, -65.23) == mat3x4(-359.093, 49.51, 1.8, -4.6, -882.414, 2.8, -4.5, -0.0, 11.53, 1.1, 1.1, 2.0)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             mat4x2 _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v[51];
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              continue;
             uvec3 _GLF_SWITCH_0_85v[56], _GLF_SWITCH_0_86v[74];
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                return;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
                    continue;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 barrier();
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             ivec3 _GLF_SWITCH_0_87v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             bvec3(false, false, false);
             int _GLF_SWITCH_0_88v;
             mat4(-4257.5493, 0.9, -9664.8360, -85.97, 1.3, 79.36, 6.5, 7.9, 3191.1343, -20.48, 2.6, -4625.2493, -6.5, -662.238, -7.7, -1.8);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             uvec2 _GLF_SWITCH_0_89v[59], _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                barrier();
              }
             else
              {
               (uvec4(9704u, 69437u, 6271u, 191528u) << GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z);
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w;
             float _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v;
            }
           if(_GLF_DEAD(false))
            return;
           mat4x3(363.023, -7.9, -421.657, 8844.5400, 2823.9258, -9.7, 8639.3477, 8455.2390, -74.19, 0.7, -3424.5575, 5.0);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              return;
            }
           while(false)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             float _GLF_SWITCH_0_94v;
             ;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             uint _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v, _GLF_SWITCH_0_97v;
             _GLF_SWITCH_0_80v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                continue;
              }
             isinf(ceil(vec4(335.455, -584.201, 4.0, 7.5)));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             mat4 _GLF_SWITCH_0_98v, _GLF_SWITCH_0_99v, _GLF_SWITCH_0_100v;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         uvec2(uvec3(97972u, 137618u, 59643u));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         false;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            continue;
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          return;
         return;
        }
       default:
       1;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
