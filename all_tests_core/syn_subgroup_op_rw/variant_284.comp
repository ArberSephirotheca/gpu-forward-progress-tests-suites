#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x4 _f0;
 mat3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 bool _f1;
 mat3x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_5 {
 bool _f0;
 _GLF_struct_3 _f1;
 uint subgroup_size;
 ivec4 _f2;
 bvec2 _f3;
 mat2 _f4;
 mat2 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 vec2 _f1;
 mat3x2 _f2;
 float _f3;
 ivec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 vec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_5 _f3;
 ivec4 _f4;
 bvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false || (true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))), mix(vec2(_GLF_FUZZED(-577.107), _GLF_FUZZED(-64.08)), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[0], (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[1]), bvec2(true, true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))), mix(vec2(_GLF_FUZZED(-577.107), _GLF_FUZZED(-64.08)), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[0], (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[1]), bvec2(true, true))))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))), mix(vec2(_GLF_FUZZED(-577.107), _GLF_FUZZED(-64.08)), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[0], (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))), mix(vec2(_GLF_FUZZED(-577.107), _GLF_FUZZED(-64.08)), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[0], (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))), mix(vec2(_GLF_FUZZED(-577.107), _GLF_FUZZED(-64.08)), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[0], (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[1]), bvec2(true, true))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))), mix(vec2(_GLF_FUZZED(-577.107), _GLF_FUZZED(-64.08)), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[0], (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), min(true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))), true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))))[1]), bvec2(true, true))))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944)))), ((true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-94279, 79944))))) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, max((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))))), (bool(bool(false || (false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (true)) ? 1 : _GLF_FUZZED((-58416 | -31473))))), _GLF_struct_0(mat3x2(1.0), vec2(1.0), uvec3(_GLF_IDENTITY(1u, (1u) << (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))) | (0u)))))), _GLF_struct_2(_GLF_struct_1(mat2x4(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(abs(0.0), (abs(0.0)) + abs(0.0)))), vec2(1.0), mat3x2(1.0), 1.0, ivec2(1), mat3x2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0))))), _GLF_struct_5(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_struct_3(uvec3(1u), true, mat3x4(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0)), 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.3)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))) : _GLF_FUZZED(8.1)))))), float(mat4x3(_GLF_IDENTITY((0.0) + log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(mat4((0.0) + log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), log(exp(0.0)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0)))), 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), sin(0.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), length(vec3(0.0, 0.0, 0.0)))))), mat2x4(1.0)), gl_SubgroupSize, ivec4(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mat2(1.0), mat2(1.0), _GLF_struct_4(mat3x4(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(mat4x2(max(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0))))), mat3(mat4x3(mat3(1.0)))), vec3(1.0))), ivec4(1), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(false, ! (! (false))), false)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))), true)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), 0.0, 0.0), vec4(_GLF_IDENTITY(mat3x4(vec4(injectionSwitch, 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(1.0) * (mat3x4(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))))))))).y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), ! (! (bool(bvec4(! (false), false, false, false)))))))), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, true, true, true)), false, true, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true, false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), max(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)))))), bool(true)))) + 0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))[2])).x, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) * (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))[2])).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) + 0)], _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) + 0)], 0u)), 0u | (uint(uvec2(gl_NumWorkGroups[_GLF_IDENTITY(0, (0) + 0)], 0u))))), gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, int(ivec2(2, 0)))))])).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true))))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-92.75 / float(79831u)))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))), (uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), max(uint(_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))), (uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), uint(_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))), (uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_id)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size)), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size)), 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size)), 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_id))) / 1u) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size)), 1u))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))) * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY(uint(uint(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), (uint(uint(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))) | (uint(uint(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_6._f3.subgroup_size, (true ? _GLF_struct_replacement_6._f3.subgroup_size : _GLF_FUZZED(workgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size))))))), max(~ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size))))), max((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size))))))), ~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size)))))))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), ((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))) : _GLF_FUZZED(workgroup_id))))) / 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), uint(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), 1u, 0u))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), subgroup_id)), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id))) ^ 0u))) * _GLF_struct_replacement_6._f3.subgroup_size, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), subgroup_id)), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id))) ^ 0u))) * _GLF_struct_replacement_6._f3.subgroup_size) << 0u)))))), max(~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), false, true))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size))))), ~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / (((1u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), subgroup_id))) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), subgroup_id))) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) * 1u))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size)))))))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), ((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / (0u | 1u)))) ^ (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) / 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f3.subgroup_size, (_GLF_struct_replacement_6._f3.subgroup_size) << 0u) + subgroup_local_id), max(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))) * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), _GLF_IDENTITY(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), clamp(_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), max(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), _GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), min(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size) - 0u)))))), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size))))) + subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u)), (true ? _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u)), clamp(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u)), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u)), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u)))) : _GLF_FUZZED(workgroup_size))))) << 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), max(uint(_GLF_IDENTITY(uvec4(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size) | 0u), (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u, max(0u, 0u)), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 0u) | _GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_id) : uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - uvec4(0u, 0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - uvec4(0u, 0u, 0u, 0u))), max(uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - uvec4(0u, 0u, 0u, 0u))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) - uvec4(0u, 0u, 0u, 0u))))))))))), uint(_GLF_IDENTITY(uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(uint(3u), uint(3u))))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) * _GLF_IDENTITY(1u, min(1u, 1u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))), (1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id)) | (1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f3.subgroup_size, (_GLF_struct_replacement_6._f3.subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f3.subgroup_size, (_GLF_struct_replacement_6._f3.subgroup_size) << 0u), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_6._f3.subgroup_size, (_GLF_struct_replacement_6._f3.subgroup_size) << 0u)))) ^ 0u) + subgroup_local_id), max(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))) * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), _GLF_IDENTITY(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), max(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), _GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), min(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size))))), max(_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), max(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), _GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), min(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size))))), _GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), max(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), _GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), min(~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size))))))), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size), ~ (subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size))))) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u, min(0u, 0u)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) >> 0u)), uint(3u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, max(3u, 3u))) | (3u))) >> 0u)), uint(3u)))) << 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), max(uint(_GLF_IDENTITY(uvec4(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size) | 0u), (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(0u, max(0u, 0u)), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) * 1u)), uint(3u))))), max((_GLF_IDENTITY(uvec4(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> uvec4(0u, 0u, 0u, 0u))), (uvec4(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size) | 0u) + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id))) - 0u)), 0u, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))))))))) - uvec4(0u, 0u, 0u, 0u)))))), uint(_GLF_IDENTITY(uvec4(1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f3.subgroup_size, (_GLF_struct_replacement_6._f3.subgroup_size) | 0u))) + subgroup_local_id), 0u, 1u, ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(1u, max(1u, 1u)))), 1u)) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(62490u) : uint(3u))), uint(3u))))))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) * _GLF_IDENTITY(1u, min(1u, 1u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) * _GLF_IDENTITY(1u, min(1u, 1u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) * _GLF_IDENTITY(1u, min(1u, 1u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + subgroup_local_id), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) * _GLF_IDENTITY(1u, min(1u, 1u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))))), (1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u | 0u)), subgroup_local_id)))) | (_GLF_IDENTITY(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), max(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))), (~ (_GLF_IDENTITY(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), max(1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_6._f3.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))) | 0u))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, abs(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), cos(0.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))).y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-1215.0633, 4246.9500)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_6._f3.subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, 1u * ((subgroup_local_id) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, (true ? (subgroup_local_id) / 1u : _GLF_FUZZED(virtual_gid)))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))) >> 0u), (1u ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, (true ? (subgroup_local_id) / 1u : _GLF_FUZZED(virtual_gid)))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))) >> 0u))))) | 0u) % _GLF_struct_replacement_6._f3.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false || (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-27.08, float(mat3x4(-27.08, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-587.615))))) > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), bool(bvec4(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, true && (false)) || ((false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true))), true && (false)), true))))), false || (true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || ((false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || ((false))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((false)))))))), _GLF_IDENTITY(false, true && (false)), true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), _GLF_IDENTITY(false, true && (false)), true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), ! (! (false)))), false || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), _GLF_IDENTITY(false, true && (false)), true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), false || ((false)))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(true && (bool(bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || ((false)))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && true))))), true && (true && (bool(_GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || ((false)))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && true))), false || (bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || ((false)))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && true)))))))))), false, true), bvec3(bvec4(bvec3(bool(bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), false || ((false)))), _GLF_IDENTITY(false, true && (false)), true))), false, true), false)))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(43.46)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-0.5)), bool(false))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(43.46)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-0.5)), bool(false))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(43.46), max(_GLF_FUZZED(43.46), _GLF_FUZZED(43.46)))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-0.5)), bool(false))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-375.164))), cos(0.0)), max(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-375.164))), cos(0.0)), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-375.164))), cos(0.0))))))) / 1.0)))))), bool(bvec2(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(43.46)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-0.5)), bool(false))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), _GLF_IDENTITY(true, ! (! (true)))))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x3(mat2(1.0)), (mat2x3(mat2(1.0))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(1.0)), (mat2x3(mat2(1.0))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-58.67))), cos(0.0), 1.0), clamp(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-58.67))), cos(0.0), 1.0), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-58.67))), cos(0.0), 1.0), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-58.67))), cos(0.0), 1.0)))))) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) * (1u | 1u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + 0.0)))) * (_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (mat2(1.0)))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- mat2(3.5, 85.80, -5.4, 75.12))) : mat2(1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)) + (mat2(1.0)))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (true ? mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(mat2(-1.4, -161.270, 429.100, 6.6))))), (mat4(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (true ? mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0))) + _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(mat2(-1.4, -161.270, 429.100, _GLF_IDENTITY(6.6, (6.6) - 0.0))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), sqrt(0.0) + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max((min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max((min(injectionSwitch.y, injectionSwitch.y)), (min(injectionSwitch.y, injectionSwitch.y)))), (min(injectionSwitch.y, injectionSwitch.y))))))))) / 1.0), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (0.0)))), sqrt(1.0))), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), sqrt(0.0) + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max((min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max((min(injectionSwitch.y, injectionSwitch.y)), (min(injectionSwitch.y, injectionSwitch.y)))), (min(injectionSwitch.y, injectionSwitch.y))))))))) / 1.0), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (0.0)))), sqrt(1.0))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), sqrt(0.0) + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max((min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), max((min(injectionSwitch.y, injectionSwitch.y)), (min(injectionSwitch.y, injectionSwitch.y)))), (min(injectionSwitch.y, injectionSwitch.y))))))))) / 1.0), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (0.0)))), sqrt(1.0))))), _GLF_IDENTITY(clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, sqrt(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.87))) > injectionSwitch.y)) ? _GLF_FUZZED(87.29) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0), transpose(transpose(mat4x2(1.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0)))))), _GLF_IDENTITY((1.0) * 1.0, clamp((1.0) * 1.0, (1.0) * 1.0, (1.0) * 1.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))))), 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, sqrt(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(0.0, float(vec4(0.0, exp(tan(0.0)), 1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0))), 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0))))), mix(float(_GLF_FUZZED((float(29125u) * 0.6))), float(clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, sqrt(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.87))) > injectionSwitch.y)) ? _GLF_FUZZED(87.29) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0), transpose(transpose(mat4x2(1.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0)))))), _GLF_IDENTITY((1.0) * 1.0, clamp((1.0) * 1.0, (1.0) * 1.0, (1.0) * 1.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))))), 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, sqrt(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(0.0, float(vec4(0.0, exp(tan(0.0)), 1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0))), 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)))))), bool(true))))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(false)))) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))), true))))))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, tan(0.0))), (true ? dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, tan(0.0))) : _GLF_FUZZED(-7092.4996)))), 1.0, 1.0))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-4.5)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), true && (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), tan(0.0), 1.0)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u), (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1 < _GLF_struct_replacement_6._f3.subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-584.824), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-584.824), 0.0), min(vec2(_GLF_FUZZED(-584.824), 0.0), vec2(_GLF_FUZZED(-584.824), 0.0)))), clamp(float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-584.824), 0.0), min(vec2(_GLF_FUZZED(-584.824), 0.0), vec2(_GLF_FUZZED(-584.824), 0.0)))), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-584.824), 0.0), min(vec2(_GLF_FUZZED(-584.824), 0.0), vec2(_GLF_FUZZED(-584.824), 0.0)))), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-584.824), 0.0), min(vec2(_GLF_FUZZED(-584.824), 0.0), vec2(_GLF_FUZZED(-584.824), 0.0))))))), clamp(_GLF_FUZZED(-584.824), _GLF_FUZZED(-584.824), _GLF_FUZZED(-584.824))), _GLF_FUZZED(307.718)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, tan(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, tan(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]) + _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), float(_GLF_FUZZED(18.95)), bool(false))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED((64.77 / 7564.0355)), _GLF_FUZZED(4531.9371)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED((64.77 / 7564.0355)), _GLF_FUZZED(4531.9371)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((64.77 / 7564.0355)), _GLF_FUZZED(4531.9371)))), tan(0.0), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-94.29, 77.99, -9.3, 0.3)) : mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED((64.77 / 7564.0355)), _GLF_FUZZED(4531.9371)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((64.77 / 7564.0355)), _GLF_FUZZED(4531.9371)))), tan(0.0), 1.0))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))) - _GLF_IDENTITY(sqrt(sqrt(0.0)), mix(float(sqrt(sqrt(0.0))), float(_GLF_FUZZED(3.6)), bool(false)))) > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_IDENTITY(false, ! (! (false))))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y))))))))))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(true))), 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0))), injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-2.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch))))[0], 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0))), injectionSwitch[1])).y) / 1.0), false || (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec4(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(64, int(ivec4(64, 1, 0, 1))), _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, _GLF_IDENTITY(false, ! (! (false))), false))))))))), bool(bool(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) || (_GLF_IDENTITY(true, (true) && true))) && (true)))))), bool(bvec3(bool(bool(true)), false, true)))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false)))))), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), false || (bool(bvec3(bool(bool(true)), false, true)))), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false)))))), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false)))), bool(bvec2(true && (_GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false)), (bool(bvec4(bool(bvec3(bool(bool(true)), false, true)), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))) && (true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && true))), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))) && (true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && true))), false, true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))) && (true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && true))), false, true)))), false, false)), (bool(bvec3(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))) && (true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && true))), false, true)))), false, false))) || false))))))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false, true)), bool(bvec4(bool(bvec3(bool(bool(true)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bool(! (_GLF_IDENTITY(true, (true) || false))))))))), false, false, false))))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), false, true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true), true)))))))))), bool(bvec4(bool(bvec3(bool(bool(true)), _GLF_IDENTITY(false, false || (false)), true)), false, false, false))))))))), bool(bool(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), false))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false, true), false)), false)))))), false || (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), false)))))), false || (_GLF_IDENTITY(true, (true) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), false)))))), false || (_GLF_IDENTITY(true, (true) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))), false || (_GLF_IDENTITY(true, (true) && true))))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), false)), false)))))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))) && true))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false))))) && true))))))), true)), bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), false)), false)))))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))) && true))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false))))) && true))))))), true)))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), false)))))), false || (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, false))), true && (! (bool(bvec4(false, true, false, false)))))))))), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, true, false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), false)))))), false || (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, false))), true && (! (bool(bvec4(false, true, false, false)))))))))), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, true, false))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(true, false, true), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(true, false, true), false))), true))))), false)))))), false || (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, true, false, false))), true && (! (bool(bvec4(false, true, false, false)))))))))))), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, true, false)))))))) && true))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, true), false)), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false), true))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, false)))))))), true)))))) || false))))), bool(bvec3(bool(bool(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), true))))))))))))))) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(361.851)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
          return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
