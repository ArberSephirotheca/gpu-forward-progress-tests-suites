#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_46 {
 mat2 _f0;
 bvec3 _f1;
 bvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_47 {
 _GLF_struct_46 _f0;
} ;

struct _GLF_struct_48 {
 bvec2 _f0;
 _GLF_struct_47 _f1;
 mat3x4 _f2;
 uvec4 _f3;
 uint workgroup_base;
 mat2x4 _f4;
} ;

struct _GLF_struct_43 {
 mat2 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_42 {
 mat4 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 mat4 _f3;
 ivec3 _f4;
 bool _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_44 {
 _GLF_struct_42 _f0;
 mat4x2 _f1;
 _GLF_struct_43 _f2;
} ;

struct _GLF_struct_41 {
 uint subgroup_id;
 uvec3 _f0;
} ;

struct _GLF_struct_39 {
 float _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 vec4 _f3;
 mat3x2 _f4;
 float _f5;
} ;

struct _GLF_struct_38 {
 vec2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 float _f3;
 vec4 _f4;
} ;

struct _GLF_struct_37 {
 float _f0;
 mat3 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 mat2x3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_40 {
 _GLF_struct_37 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 _GLF_struct_38 _f3;
 ivec4 _f4;
 bvec3 _f5;
 _GLF_struct_39 _f6;
} ;

struct _GLF_struct_45 {
 _GLF_struct_40 _f0;
 uint _f1;
 _GLF_struct_41 _f2;
 uvec4 _f3;
 _GLF_struct_44 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_34 {
 uvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
} ;

struct _GLF_struct_32 {
 mat3x4 _f0;
 mat3x2 _f1;
 mat2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_33 {
 _GLF_struct_32 _f0;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
} ;

struct _GLF_struct_36 {
 _GLF_struct_33 _f0;
 int _f1;
 _GLF_struct_35 _f2;
 vec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_30 {
 uvec4 _f0;
 int _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_28 {
 uvec3 _f0;
 uvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_27 {
 mat3x4 _f0;
 bvec2 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 mat3x2 _f4;
 vec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_29 {
 ivec3 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
} ;

struct _GLF_struct_25 {
 ivec4 _f0;
 bool _f1;
 uint _f2;
 uint _f3;
 bvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 ivec3 _f1;
 bvec2 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 ivec2 _f2;
 _GLF_struct_25 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_31 {
 mat4x3 _f0;
 _GLF_struct_26 _f1;
 ivec2 _f2;
 _GLF_struct_29 _f3;
 mat3x2 _f4;
 _GLF_struct_30 _f5;
 uint subgroup_base;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
 uint _f1;
 vec4 _f2;
 int _f3;
 int _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 uvec2 _f1;
 int _f2;
} ;

struct _GLF_struct_19 {
 bool _f0;
} ;

struct _GLF_struct_17 {
 uvec4 _f0;
 uint workgroup_id;
 uvec2 _f1;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 mat3 _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 _GLF_struct_17 _f3;
 ivec4 _f4;
 mat4x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_22 {
 mat4x2 _f0;
 mat3 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 ivec2 _f4;
 mat4x2 _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_13 {
 vec4 _f0;
 vec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 uvec2 _f1;
 mat3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_14 {
 uint _f0;
 _GLF_struct_12 _f1;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 _GLF_struct_13 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_11 {
 int _f0;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 ivec2 _f3;
 bvec4 _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 _GLF_struct_8 _f1;
 int _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
 mat2 _f1;
 vec2 _f2;
 uvec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 ivec2 _f1;
 bool _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 ivec3 _f5;
 uint _f6;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 bool _f4;
} ;

struct _GLF_struct_7 {
 int _injected_loop_counter;
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_15 _GLF_struct_replacement_15;
 _GLF_struct_36 _GLF_struct_replacement_36;
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_40(_GLF_struct_37(1.0, mat3(1.0), mat4x2(1.0), bvec3(true), mat2x3(1.0), mat4x2(1.0)), mat3x2(1.0), mat3x2(1.0), _GLF_struct_38(vec2(1.0), mat3x2(1.0), mat2x3(1.0), 1.0, vec4(1.0)), ivec4(1), bvec3(true), _GLF_struct_39(1.0, mat2x3(1.0), mat4x3(1.0), vec4(1.0), mat3x2(1.0), 1.0)), 1u, _GLF_struct_41(gl_SubgroupID, uvec3(1u)), uvec4(1u), _GLF_struct_44(_GLF_struct_42(mat4(1.0), mat2x4(1.0), mat2x3(1.0), mat4(1.0), ivec3(1), true, mat3x4(1.0)), mat4x2(1.0), _GLF_struct_43(mat2(1.0), mat4x3(1.0), mat3x2(1.0), uvec4(1u), mat2x3(1.0), true)), mat4x2(1.0));
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(vec3(1.0), _GLF_struct_9(mat3(1.0), _GLF_struct_8(ivec4(1), mat3x2(1.0), ivec2(1), ivec2(1), bvec4(true), gl_SubgroupSize), 1, bvec2(true)));
 _GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = _GLF_struct_replacement_10._f1._f1.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(mat4x2(1.0), mat3(1.0), _GLF_struct_18(_GLF_struct_16(mat4(1.0), mat3(1.0), uvec3(1u), bvec4(true)), ivec2(1), mat2x4(1.0), _GLF_struct_17(uvec4(1u), gl_WorkGroupID.x, uvec2(1u)), ivec4(1), mat4x2(1.0), vec2(1.0)), _GLF_struct_19(true), ivec2(1), mat4x2(1.0), _GLF_struct_21(_GLF_struct_20(mat3(1.0), 1u, vec4(1.0), 1, 1, mat3x2(1.0)), uvec2(1u), 1));
 _GLF_struct_48 _GLF_struct_replacement_48 = _GLF_struct_48(bvec2(true), _GLF_struct_47(_GLF_struct_46(mat2(1.0), bvec3(true), bvec2(true), vec4(1.0))), mat3x4(1.0), uvec4(1u), workgroup_size * _GLF_struct_replacement_22._f2._f3.workgroup_id, mat2x4(1.0));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z = _GLF_struct_replacement_48.workgroup_base;
  }
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(mat4x3(1.0), _GLF_struct_26(_GLF_struct_23(mat2x3(1.0), mat4x2(1.0), uvec4(1u), mat2x3(1.0)), _GLF_struct_24(mat2(1.0), ivec3(1), bvec2(true), bvec4(true), vec4(1.0)), ivec2(1), _GLF_struct_25(ivec4(1), true, 1u, 1u, bvec3(true), ivec2(1)), uvec2(1u)), ivec2(1), _GLF_struct_29(ivec3(1), _GLF_struct_27(mat3x4(1.0), bvec2(true), ivec4(1), mat4x2(1.0), mat3x2(1.0), vec4(1.0), uvec4(1u)), _GLF_struct_28(uvec3(1u), uvec4(1u), ivec2(1))), mat3x2(1.0), _GLF_struct_30(uvec4(1u), 1, bvec2(true)), _GLF_struct_replacement_45._f2.subgroup_id * _GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y);
 uint virtual_gid = _GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + _GLF_struct_replacement_31.subgroup_base + _GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 _GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y = virtual_gid;
 uint next_virtual_gid = _GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + _GLF_struct_replacement_31.subgroup_base + ((_GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % _GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    barrier();
   _GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y], 4, 64, 2);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if((_GLF_struct_replacement_15._f2.GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(_GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7((_GLF_IDENTITY(0, (0) + 0) << _GLF_IDENTITY(int(1), int(1))), _GLF_struct_3(_GLF_struct_0(vec3(1.0), ivec3(1), mat2(1.0)), ivec4(1), _GLF_struct_1(mat3x4(1.0), ivec2(1), true, mat2x4(1.0), mat4x3(1.0), ivec3(1), 1u), _GLF_struct_2(1.0, mat2(1.0), vec2(1.0), uvec2(1u), uvec4(1u)), true), _GLF_struct_6(_GLF_struct_4(1.0, mat4x3(1.0)), _GLF_struct_5(mat4(1.0), ivec3(1)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_7._injected_loop_counter < 1); _GLF_struct_replacement_7._injected_loop_counter ++)
    {
     atomicStore(buf[_GLF_struct_replacement_36._f0.GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y], read, 4, 64, 4);
    }
  }
}
