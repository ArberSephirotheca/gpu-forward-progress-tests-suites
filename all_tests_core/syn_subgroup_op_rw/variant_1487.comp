#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     subgroupAll(false);
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 66:
           if(_GLF_DEAD(false))
            barrier();
           min(uvec4(75242u, 119438u, 68928u, 99276u), uvec4(23552u, 108289u, 67915u, 30963u));
           case 90:
           if(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             ;
             ivec3(-24033, 15670, 4658);
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             trunc(-89.90);
             if(_GLF_DEAD(false))
              barrier();
             int _GLF_SWITCH_2_0v;
             uint _GLF_SWITCH_2_1v;
            }
           else
            {
             mat3((mat3x4(mat4x2(-26.68, -2751.1424, -7.7, -6.0, 740.624, 345.116, -6.9, 225.883)) / mat3x4(-0.7, -62.25, 7961.9479, 3.7, -2126.2302, 97.71, -7.8, 1.0, -9.2, -698.237, -926.717, -1.1)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             vec4 _GLF_SWITCH_2_2v[79], _GLF_SWITCH_2_3v;
             mat3 _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
             uvec4(10400u, 94144u, 163464u, 66473u);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               (mat4(1246.4882, -1790.9646, -9573.0383, 49.28, 6.2, 7.2, -34.86, -4280.7362, -2424.0145, -5.4, 358.735, -7283.4694, -0.4, 8025.5401, -58.30, 9.4) == mat4(-8.5, -969.333, 8807.8336, 856.376, -3.5, -84.98, -3.4, -6330.2073, 10.92, 399.057, -650.836, -619.135, -40.07, -7.0, 3.1, -0.4));
              }
             (mat4x2(48.52, -461.794, 9968.5362, 5.4, -7807.6428, -2.7, 5.4, 406.719) * mat3x4(-8.2, -8.4, -9123.7752, 2.7, -2.7, 87.86, 6.0, 790.106, 8.2, 9962.8932, -40.31, -0.6));
            }
           case 0:
           case 46:
           case 17:
           case 26:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           case 16:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           case 55:
           barrier();
           break;
           case 15:
           ;
           if(_GLF_DEAD(false))
            barrier();
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           1;
          }
        }
       subgroupAll(false);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 37:
       while(true)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
          }
         if(bvec4(true, true, true, false).t)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(mat4x3 _GLF_SWITCH_0_0v; false; vec2(1.5, -6083.1115))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(false)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat3x2(-408.374, -50.90, -6.4, 1.6, 7.6, 39.90);
             ;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
             ;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 mat3x2(17.49, -6.1, -0.7, 1.0, 7.5, -7.3);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 8:
                   uint _GLF_SWITCH_2_0v;
                   case 22:
                   vec4(9.7, 1.8, -7.4, 8784.4437);
                   case 0:
                   case 55:
                   case 86:
                   case 24:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   case 13:
                   case 53:
                   case 90:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 28:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   case 99:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                   bitfieldReverse(ivec4(20510, -5401, 4320, -23981));
                   case 66:
                   mat3x2(-745.517, -5727.0576, -26.10, -570.862, 13.94, 2844.7713);
                   if(_GLF_DEAD(false))
                    barrier();
                   default:
                   1;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             (uvec4(3528u, 57798u, 29306u, 173226u) * max(uvec4(1521u, 8766u, 82312u, 53003u), (uvec4(158579u, 115896u, 187235u, 54926u) * subgroup_base)));
            }
           else
            {
             vec2(88.56, 83.48);
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               uvec2(38545u, 110914u);
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))));
             bvec4(false, true, false, true);
             next_virtual_gid;
             inversesqrt(faceforward(vec4(-526.089, 79.92, -928.192, -7.5), vec4(-622.278, -3.0, 6254.4888, -982.971), vec4(-6173.3131, -7024.3382, 876.592, -32.29)));
             mat3(-149.347, -6.5, -84.77, -2.4, -6134.1315, -1.6, 6.8, 96.13, -28.67);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             ;
             if(_GLF_DEAD(false))
              barrier();
             mat4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             mix(bvec2(bvec4(false, bvec2(false, true), true)), bvec2(true, false), bvec2(false, true));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             while((false ? true : (mat4x3(49.91, -3.1, -660.160, 615.299, -8600.7261, -7.2, 2.6, -89.54, 406.058, 608.891, -2.5, -90.63) != mat4x3(-468.855, -75.29, 2.3, -13.21, -5451.6864, -1.9, -8701.1804, -5.7, -2329.5630, 8.1, 18.19, -4.1))))
              {
               vec2 _GLF_SWITCH_0_3v[96], _GLF_SWITCH_0_4v[77], _GLF_SWITCH_0_5v[62];
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(bvec2(false, true).s)
              {
               float _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[89], _GLF_SWITCH_0_8v;
               mat3x4 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[31];
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 | 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   vec2(98.32, -2.4);
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               (3.8 - mat2(8067.9934, -755.707, 21.44, -119.886));
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               vec4 _GLF_SWITCH_0_11v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 ;
                }
               int _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[2];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
              barrier();
            }
          }
         smoothstep(mix(vec3(-0.9, -389.498, 382.996), vec3(2045.0044, 802.229, -8.1), bvec3(false, false, false)), vec3(802.079, -3.3, -5.9), vec3(-7.3, -5.8, -40.09));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         mat2x3(mat3x2(4.3, 29.28, -8.7, -432.445, -339.177, 24.75));
         bool _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[39], _GLF_SWITCH_0_17v;
         {
          if(_GLF_DEAD(false))
           barrier();
          uvec3 _GLF_SWITCH_0_18v;
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH((0 | (0 << _GLF_IDENTITY(int(4), int(4))))))
              {
               case 0:
               case 74:
               case 78:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 ;
                }
               else
                {
                }
               case 67:
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               case 17:
               if(_GLF_DEAD(false))
                barrier();
               mat2(mat4x2(62.07, -9.6, -6.8, 6440.7775, -3.7, 61.14, 7.8, -1535.5518));
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 27:
               ((workgroup_id | workgroup_size) % uvec4(2633u, 124783u, 187968u, 116883u));
               case 8:
               float _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
               default:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 1;
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 63:
                vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                case 45:
                -74021;
                case 0:
                case 73:
                case 36:
                case 83:
                case 67:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 92:
                case 30:
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
                break;
                default:
                1;
               }
             }
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             barrier();
            read;
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
             {
              switch(_GLF_SWITCH(0))
               {
                case 79:
                uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                case 84:
                float _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[17], _GLF_SWITCH_2_4v[27];
                case 0:
                case 98:
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                     barrier();
                    case 35:
                    case 95:
                    case 49:
                    case 81:
                    case 86:
                    if(_GLF_DEAD(false))
                     barrier();
                    do
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    break;
                    case 60:
                    vec3 _GLF_SWITCH_2_0v[8];
                    case 76:
                    uint _GLF_SWITCH_2_1v;
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                     barrier();
                    default:
                    1;
                   }
                 }
                break;
                case 10:
                mat2x4(1.1, 673.533, 1.0, -2104.4303, -802.390, 34.32, -19.69, -9.7);
                default:
                if(_GLF_DEAD(false))
                 barrier();
                1;
               }
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          bvec2(false, false).yyxy;
          do
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  barrier();
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
               }
              barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          uvec3(53916u, 129067u, 66579u);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          for(          vec4(-4964.1613, 80.82, -7341.9880, -6.0);
 (-89.18 < -7.4); bvec2(false, true))
           {
            uvec3 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
            ivec3 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          bvec2 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
          if(_GLF_DEAD(false))
           {
            for(int _injected_loop_counter = ((75118 & 0) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              barrier();
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
         }
         if(_GLF_SWITCH_0_15v)
          {
           (mat3x4(-4821.6406, -7.5, -918.490, -7060.1101, 3.6, 49.94, 612.967, -1.3, 71.69, 47.17, -6.3, 6981.4164) / (_GLF_SWITCH_0_17v ? mat3x4(51.55, 152.954, -5.0, -2.1, -5033.7830, 3410.7341, -8.4, -527.772, -71.06, 57.06, 9.2, 6.5) : (-6.4 / mat3x4(3.4, 507.822, 8.7, 5410.7425, 26.40, -8.6, 8.3, -55.80, 8023.6762, -872.383, -8.3, 0.5))));
           if(_GLF_DEAD(false))
            barrier();
           ivec2(-41164, -64856);
           vec4 _GLF_SWITCH_0_26v[37], _GLF_SWITCH_0_27v[13], _GLF_SWITCH_0_28v[21];
           false;
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           uvec4((next_virtual_gid), uaddCarry(read, subgroup_base, workgroup_size), uvec2(111910u, 14650u));
          }
         int _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[47], _GLF_SWITCH_0_31v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       case 28:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
          }
         else
          {
          }
        }
       else
        {
        }
       do
        {
         for(mat2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v; (-92427 > 55990); vec3(96.71, -60.07, 2.9))
          {
           if(_GLF_DEAD(false))
            barrier();
           float _GLF_SWITCH_0_35v[82], _GLF_SWITCH_0_36v;
           if(_GLF_DEAD(false))
            barrier();
           for(           mat2x3(_GLF_SWITCH_0_36v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_36v, -5313.0391, 9497.1606, _GLF_SWITCH_0_36v);
 (false); uvec3(171491u, 49759u, 80503u).p)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
             ;
             114198u;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec4 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v[25], _GLF_SWITCH_0_39v;
             ivec3 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v[95], _GLF_SWITCH_0_42v[59];
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             float _GLF_SWITCH_0_43v[80];
             uvec3(31461u, 55605u, 24723u);
             mat2x3 _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v[64];
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               mix(-42832, 72621, true);
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             bvec4 _GLF_SWITCH_0_47v;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))));
           bvec2 _GLF_SWITCH_0_48v;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             (_GLF_SWITCH_0_36v + mat4x2(3.0, 6.6, 2817.9503, -8.1, -86.89, -9608.8282, 76.18, -0.4));
            }
           else
            {
            }
           vec4 _GLF_SWITCH_0_49v;
           mat4x3(-4.2, 459.308, 610.045, -497.903, 3451.8287, 2.2, -4.7, -9.2, 4.4, -4.4, -3.5, 0.1);
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 ;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 66:
                     uvec4(171357u, 101539u, 101622u, 148806u);
                     case 0:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 8:
                     (+ mat4x2(4994.5893, 2793.6154, 2.8, 2.8, -216.295, 529.637, -3112.8499, 5854.4227));
                     break;
                     case 74:
                     uvec2 _GLF_SWITCH_2_0v[84], _GLF_SWITCH_2_1v;
                     case 90:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                        barrier();
                       (_GLF_SWITCH_0_36v + mat3(-4.2, 2738.4657, -27.41, -8.2, 8345.1167, 424.012, 361.305, 403.171, 820.186));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               (mat3(56.26, 8325.2850, -2465.9511, -8113.6855, -80.64, 8.1, -8.5, 2.0, -85.81) - -2.4);
               do
                {
                 injectionSwitch;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                {
                 mat2x4(-9.2, -70.51, 58.86, -4.0, 3.6, -889.847, -9.9, 9.4);
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 bvec4(_GLF_SWITCH_0_48v, bvec2(true, true));
                }
               mat4x2 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((-82907 & 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (int(1)))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 (ivec4(36203, 4267, -76351, 29146).yxyw << -20575);
                }
              }
             while(false);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           _GLF_SWITCH_0_33v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           float _GLF_SWITCH_0_52v;
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               switch(_GLF_SWITCH(((0 | 1) ^ 1)))
                {
                 case 99:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 ;
                 case 62:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))); _injected_loop_counter ++)
                  {
                   ;
                  }
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 33:
                 case 97:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 60:
                 case 29:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(4), int(4))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 | 0) ^ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   1;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                }
               break;
               case 3:
               ;
               case 32:
               bvec4 _GLF_SWITCH_2_0v[99];
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               1;
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if((vec3(7067.9176, -2.1, -282.807) != step(vec3(-5.5, 755.186, -91.76), vec3(398.123, 3.7, -4.8))))
          {
           (mat2x3(8.6, -87.30, -4.3, -8.8, -249.095, 652.399) / mat2x3(mat3(1.9, -0.8, -99.99, -0.4, 436.184, -4.6, -19.23, 62.34, -983.838)));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           while(((ivec2(64843, 56521) + ivec2(-93983, -36762)) != ivec2(9433, 95420)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               7.7;
              }
             else
              {
              }
             injectionSwitch;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             vec2(-0.3, 4.6);
             if(_GLF_DEAD(false))
              barrier();
             mat3 _GLF_SWITCH_0_53v[9];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec4 _GLF_SWITCH_0_54v;
             ivec4(-21352, 16339, 17915, 71234);
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             float _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v;
            }
           vec4 _GLF_SWITCH_0_57v;
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           do
            {
             while(false)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               mat2x4(-4127.1467, 478.822, 368.656, -4.1, -9.2, 6.7, -7.2, 3179.3505);
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               bvec3 _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v[60];
               uvec3 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v[13];
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               mat2x4(-4.7, 8.3, -3018.5980, -76.79, 39.45, 3.6, -368.233, -593.464);
               ;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(false)
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5)))))); _injected_loop_counter --)
                {
                 bvec3(false, true, false);
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if((mat4(81.47, -5.5, 7158.9460, 52.40, 49.94, 29.26, -6.1, 8949.6497, -9.1, 37.33, -45.69, 3409.6231, 2383.1744, 288.789, 95.04, -8.2) != mat4(3.5, 7719.3435, -56.18, -9141.7846, 9.5, -49.76, -8610.6789, 17.35, 9890.0375, -321.879, -6.7, -17.68, -2.0, -6011.7914, 44.25, -44.14)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               float _GLF_SWITCH_0_63v[34], _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[27];
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 66:
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       bvec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                       case 0:
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       break;
                       if(_GLF_DEAD(false))
                        barrier();
                       case 97:
                       mat4x2 _GLF_SWITCH_1_2v[72], _GLF_SWITCH_1_3v;
                       default:
                       1;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               transpose(mat2(0.4, 32.15, -44.72, 522.584));
               bvec4(true, false, true, true).gag;
               mat3 _GLF_SWITCH_0_66v[67];
               ;
               (mat4x3(-9.6, 435.642, 41.43, -76.40, -162.945, 0.8, 6748.1387, 227.915, 180.338, -4.6, -6.4, -516.539) * mat2x4(45.86, -2672.2297, 7748.0294, -5.3, -799.725, 2.6, 3.5, 1.1));
               uvec2 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v;
               ;
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           for(           bvec3(true, false, false);
 (uvec2(workgroup_base) != (uvec2(164313u, 71484u) * uvec2(58070u, 18753u))); ivec4(-82687, 31032, -43506, 72757))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat2x4(transpose(mat2(2.4, -3649.7760, 2555.8608, -5380.8698)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat2x4 _GLF_SWITCH_0_69v, _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v[21];
             while(false)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     mat4x3(mat4x2(44.58, 9.1, -3541.2488, 1.3, -7036.7756, -3856.6249, -1.9, 4.5));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat3(-2.0, -549.078, -5.0, -9026.2949, 2089.1080, -0.1, -116.534, 9891.7325, 7.2);
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 mat2(-22.68, 0.6, -1.4, 832.422);
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
                {
                 (87835 ^ ivec4(-64560, -40163, 4997, 64198));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             (mat4x2(-9.5, -8030.1314, 6.9, -72.31, -6700.2250, -6.9, 2.0, -1.8) , mat4x2(-39.09, 2825.8790, -7411.1406, -265.190, -446.262, -27.68, 9535.4488, 8.3));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             bvec3 _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v[44];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             while((uvec3(173516u, 56217u, 117153u) == uvec3(183011u, 176165u, 108588u)))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               subgroup_local_id;
               bvec2 _GLF_SWITCH_0_74v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               inverse(mat2(-522.623, -9.3, -4.4, 77.60));
               mat2 _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v[83];
               if(_GLF_DEAD(false))
                barrier();
               mat2(-0.9, 827.138, -0.2, -8.1);
               mat3x4(-43.80, 6.1, 647.157, 1450.4841, -7272.0343, 8133.5558, -975.496, -2.6, -14.88, 7.2, 4.7, 7388.7198);
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 98:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 97:
                   case 63:
                   case 65:
                   case 3:
                   case 60:
                   case 5:
                   case 79:
                   case 85:
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   default:
                   1;
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             float _GLF_SWITCH_0_77v[58];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ivec2 _GLF_SWITCH_0_78v, _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         while(true)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             (mat2x4(mat3x4(-0.2, -991.802, -21.20, -1.5, 77.39, 45.62, -2.5, 743.248, -7.6, -1.2, -9293.2291, 76.90)) , mat3(5.1, 3913.0730, -151.864, -47.82, 8012.5868, -17.64, -5.5, -4.7, 3.9));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           ivec3(53206, -70200, 93648);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           for(           next_virtual_gid;
 (2.1 > 1.7); (~ ivec4(95778, 59865, 363, 12807)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _GLF_SWITCH_0_81v[90]; (mat4x3(2.1, -98.11, -37.93, 25.15, -629.502, 6375.6478, 8257.8208, 2.6, -899.039, -0.3, 684.630, 945.158) != mat4x3(55.31, -0.0, -33.08, -915.909, 5.7, -4562.5921, -8.3, -0.0, 38.95, 6616.0492, 2193.5139, 8.4)); (mat2(-0.7, -6.0, -2.4, 9432.5170) / mat2(-6699.3221, 9.2, -4.5, 193.000)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   mat4x3 _GLF_SWITCH_0_82v;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
                {
                 case 70:
                 if(_GLF_DEAD(false))
                  barrier();
                 min(uvec3(104866u, 85658u, 41534u), uvec3(124103u, 113169u, 179152u));
                 case 48:
                 ;
                 case 0:
                 case 30:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 case 55:
                 case 3:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 77:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mat3x2(102.066, 113.525, -1.4, -7.8, -148.372, -5.3);
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 case 54:
                 (mat3x2(92.41, -50.54, -97.59, -6298.2510, -9.7, -322.792) , mat4x3(-4.1, -8.5, -33.98, 429.086, 2.9, -4.8, -8.0, -339.209, -7.3, -358.876, 1.2, -70.10));
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             {
              switch(_GLF_SWITCH(0))
               {
                case 78:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                mat2(4645.4169, -42.88, 6163.5669, 9.3);
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                case 0:
                case 21:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                     barrier();
                   }
                  else
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                int _GLF_SWITCH_0_83v[16], _GLF_SWITCH_0_84v;
                mod(vec4(8.8, 9.8, 49.78, 99.10), -441.419);
                if(_GLF_DEAD(false))
                 barrier();
                ;
                break;
                default:
                1;
               }
             }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             for(vec4 _GLF_SWITCH_0_85v[67], _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v; true; (vec2(861.376, -8088.1585) - faceforward(vec2(4.5, -10.88), vec2(-903.426, 2.7), vec2(5.1, 62.09))))
              {
               uvec3(131011u, 31741u, 154056u);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 mat4x3(mat4(4597.2818, -3.4, -7036.3064, 6.0, -0.8, 949.366, 86.16, -37.01, 5.9, 3.6, -291.020, 8527.2809, -852.117, -2.5, 1.9, -6.0));
                }
               while(_GLF_WRAPPED_LOOP(false));
               vec3 _GLF_SWITCH_0_88v, _GLF_SWITCH_0_89v;
               (mat2x3(8681.4442, -9.8, -4.0, 7.0, -3315.3981, 83.83) + mat2x3(2.8, 1.8, -53.98, -35.15, -24.13, 11.07));
               -57799;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
               uvec4 _GLF_SWITCH_0_90v[50], _GLF_SWITCH_0_91v[93];
               if(_GLF_DEAD(false))
                barrier();
               mat3x4 _GLF_SWITCH_0_92v[36], _GLF_SWITCH_0_93v, _GLF_SWITCH_0_94v;
              }
             vec4(-884.704, 6.2, 2.7, 4.1);
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 28:
                 true;
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                 case 72:
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 90:
                 mat3x2 _GLF_SWITCH_2_0v[89];
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7)))))))
                {
                 case 31:
                 ivec3 _GLF_SWITCH_2_0v;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 75:
                 ;
                 case 0:
                 case 82:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 61:
                 case 63:
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 case 12:
                 case 10:
                 case 74:
                 case 47:
                 case 64:
                 barrier();
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 1;
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(71227) : _GLF_IDENTITY(int(0), min(int(0), int(0)))))))); _injected_loop_counter --)
                {
                 for(                 vec4(93.21, 2.9, -56.52, -8819.8217);
 (ivec4(70340, -36147, 49313, -22049) == ivec4(82595, -99778, 80486, -46623)); vec3(8.2, -258.821, 404.856))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             while(true)
              {
               mat3x2 _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v[89];
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               bool _GLF_SWITCH_0_97v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               uvec2 _GLF_SWITCH_0_98v, _GLF_SWITCH_0_99v, _GLF_SWITCH_0_100v;
               mat3(9.4, -1.6, -4730.3869, -2987.8737, -24.77, -976.539, 3384.6730, 6828.6373, 986.613);
              }
             (bvec3(false, true, true));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             mat4x2(-0.2, -4.4, 54.84, 27.78, 80.80, -555.450, -543.420, -0.7);
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              do
               {
                fma(vec4(-30.35, -5.8, 8003.4538, 2.9), vec4(3.0, -1.9, -3.1, -75.55), vec4(-62.97, -847.332, -7616.3271, 2495.9876));
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              uvec3 _GLF_SWITCH_0_101v[47], _GLF_SWITCH_0_102v[23], _GLF_SWITCH_0_103v;
              float _GLF_SWITCH_0_104v[47];
              mat2(-429.066, 5.4, 702.092, -4.5);
              if(_GLF_DEAD(false))
               barrier();
              float _GLF_SWITCH_0_105v[50], _GLF_SWITCH_0_106v;
              mat3x4 _GLF_SWITCH_0_107v[24];
             }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(true)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             case 37:
             case 23:
             case 71:
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             break;
             case 85:
             mat3(4665.5282, -5596.8121, -2.4, -7.8, -4.2, -884.369, 4.6, -9.4, -52.69);
             case 64:
             ;
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         mat3 _GLF_SWITCH_0_108v, _GLF_SWITCH_0_109v, _GLF_SWITCH_0_110v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 0:
       case 67:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       subgroupBarrier();
       break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       case 62:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         ivec3(-84362, 64991, 66679);
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       case 55:
       mat2x3(mat4x2(-8.9, 7484.6234, -0.1, -2212.1090, 2.6, -1.9, -145.633, 9.9));
       default:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       1;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
