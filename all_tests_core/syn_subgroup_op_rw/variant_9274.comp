#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   switch(_GLF_SWITCH((0 & -88381)))
    {
     case 37:
     {
      while(false)
       {
        switch(_GLF_SWITCH(0))
         {
          case 71:
          ;
          case 84:
          mat4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
          case 0:
          mat3x2 _GLF_SWITCH_0_0v[93], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
          if((injectionSwitch != vec2(-14.72, -77.32)))
           {
            switch(_GLF_SWITCH(0))
             {
              case 65:
              clamp(vec3(5035.3851, -4.8, 2.4), acos(vec3(2885.3135, -1.6, -4.1)), vec3(745.756, 6.2, -14.32));
              case 0:
              mat4x2(2.3, 5470.0664, -4.1, 9.9, 5.5, -821.318, -5.3, -0.6);
              case 53:
              case 78:
              case 15:
              ivec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[90];
              case 5:
              case 71:
              vec4(27.89, -1209.6465, 1.6, -545.366);
              case 43:
              _GLF_SWITCH_0_2v;
              case 81:
              case 96:
              case 9:
              (+ uvec2(71058u, 38475u));
              break;
              default:
              1;
             }
           }
          else
           {
            switch(_GLF_SWITCH(0))
             {
              case 56:
              ivec3(-6436, -39905, 37721);
              case 29:
              mat4x3(-66.39, -92.32, -8.2, -8.3, -156.120, 79.00, 9.4, -4.4, -9029.8344, -450.061, 777.703, -189.671);
              case 0:
              mat2(5376.6575, -898.384, 8.1, 6.0);
              vec4 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
              case 7:
              ;
              (mat3(5.2, 2.2, 3.3, -8.6, 3491.0553, -68.10, 9545.4411, 3.4, -1.5));
              mat2x3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[12], _GLF_SWITCH_0_10v[81];
              case 61:
              (subgroup_id % subgroup_id);
              case 60:
              mat2x4(-46.68, 3.9, 576.202, 5.8, -9992.1926, -9.4, -19.59, 8.9);
              break;
              default:
              1;
             }
           }
          float _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
          case 29:
          for(          bvec2(false, true);
 true; (uvec4(29386u, 49511u, 115968u, 164268u) - uvec4(50377u, 16566u, 104928u, 143770u)))
           {
            ;
            mat4x3 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[91];
            uint _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
            mat2x3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
            lessThan(ivec3(-68150, 92693, 47256), (ivec3(-93927, -45427, 1656) << ivec3(-55911, 2286, -12060)));
            ldexp(vec3(-40.62, 0.7, -3.8), bitCount(ivec3(75846, -64671, 60454)));
           }
          if(false)
           {
            uvec2 _GLF_SWITCH_0_21v[55], _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
           }
          case 74:
          mat2x3(-427.631, -5.7, -2.3, 8250.4921, 5143.9989, -7.1);
          case 92:
          while((mat2(8.8, 416.303, 2612.0923, -768.015) == mat2(-1.6, 321.331, -3.6, 287.910)))
           {
            uvec4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
            (mat2x4(231.291, -99.25, -6962.1560, -3.6, 7.4, 146.006, 77.44, 9447.6562) * _GLF_SWITCH_0_1v);
            mat4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[4];
           }
          if(bvec2(false, true).x)
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 75:
              ;
              case 45:
              lessThanEqual(vec4(-731.940, 2201.7059, 32.51, -317.970), vec4(-408.270, -7.9, 876.377, 2957.6413));
              case 0:
              ivec2 _GLF_SWITCH_0_30v[61], _GLF_SWITCH_0_31v[23];
              bvec3(false, true, false);
              vec4 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v[46];
              mat3x2(6.1, -1974.0644, -3529.3219, 2.4, -8.9, -9.7);
              ;
              case 71:
              ivec2 _GLF_SWITCH_0_34v[80], _GLF_SWITCH_0_35v;
              vec2 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
              break;
              default:
              1;
             }
           }
          case 28:
          (bitfieldReverse(uvec2(197106u, 104378u)) - subgroup_id);
          break;
          case 98:
          ;
          default:
          1;
         }
       }
      {
       switch(_GLF_SWITCH(0))
        {
         case 22:
         ;
         case 0:
         case 93:
         for(vec4 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v[99], _GLF_SWITCH_0_41v; false; vec3(4.6, 3.3, 47.71))
          {
          }
         mat4x2(-183.349, -3603.1393, -36.31, -90.94, 8613.1109, -667.478, 3036.1492, -0.4);
         case 68:
         while((7.3 == acosh(-319.425)))
          {
           ivec3 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
           notEqual(bvec2(true, false), bvec2(false, true));
           max(injectionSwitch, vec2(-9.8, -8088.8211));
           _GLF_SWITCH_0_42v;
          }
         while(((ivec4(-19671, -71232, -9564, -62424) | -86476) == ivec4(29794, 59219, -34601, -25886)))
          {
           uint _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
           mat2 _GLF_SWITCH_0_47v[15], _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v[71];
           (mat3x4(-2726.8658, 9508.0996, 7.2, 16.61, 4.2, -81.73, -301.448, -9344.9331, -472.424, 68.26, 5.7, 4.7) == mat3x4(7.5, -9.2, -7675.1610, -428.584, -90.41, 10.58, 805.061, -724.350, 199.585, -74.45, -2.2, 515.623));
          }
         for(mat4 _GLF_SWITCH_0_50v; false; vec2(33.03, 6.1))
          {
           switch(_GLF_SWITCH(0))
            {
             case 23:
             bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
             case 92:
             ;
             case 0:
             case 90:
             case 89:
             mat4x2(-2349.0990, -198.490, 5.2, -60.53, -6621.9268, -0.8, -3.7, -94.51);
             case 16:
             case 18:
             case 66:
             case 84:
             ((false ? mat4x3(-5.6, 827.066, -54.80, -1753.3436, -28.31, -52.59, -8.8, 5.5, 8554.0099, -9968.8559, 537.078, -502.507) : mat4x3(-2.5, 60.92, -1.4, 9858.1257, -8091.5375, 327.974, 76.35, -8.3, -65.75, 8.7, 4.9, 89.13)) * mat4(-31.41, -5.1, 4294.6242, -5.0, -770.932, 82.02, -5179.3112, 1.9, 964.314, 0.3, 3.5, -0.0, -24.86, -4238.1348, -9896.6225, 7143.3415));
             case 26:
             case 83:
             mat4x3(-14.68, 1.3, -40.14, 1612.6654, -838.697, 33.96, 695.804, 4.8, 8.8, 8.7, 3.8, -6041.1487);
             break;
             default:
             1;
            }
          }
         case 62:
         case 26:
         while(true)
          {
           (mat2(-64.25, 6.7, atan(4.7, -0.5), tan(-8124.2354)) * mat3x2(-6619.0252, 567.503, 454.437, -1824.0833, 3.1, 5.1));
           mat3(1.8, 5.6, 8.0, -269.069, 168.253, -7.9, 769.689, 2071.2049, -2.8);
           mat4(1521.8215, -642.645, -433.903, 1.6, -1683.7117, -329.885, 1.9, 2624.5821, -3.3, 79.83, -45.78, -7.3, 774.471, -727.436, -6.1, 8.5);
           uvec2(182222u, 29802u);
           bvec3 _GLF_SWITCH_0_51v[64], _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v[30];
           ;
           bvec2(true, false);
          }
         mat2x4 _GLF_SWITCH_0_54v[90], _GLF_SWITCH_0_55v[86];
         case 15:
         (ivec2(-16292, -39724) & ivec4(-85517, -10427, 6902, -84914)[3]);
         break;
         default:
         1;
        }
      }
      floatBitsToInt(injectionSwitch);
     }
     case 0:
     case 21:
     case 96:
     case 99:
     case 9:
     subgroupAll(false);
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH((0 & (52282 + -26208))))
    {
     case 0:
     subgroupAll(false);
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     default:
     1;
    }
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
