#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), bool(bvec3(bool(bvec2(! (_GLF_DEAD(false)), true)), false, true)))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) + 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (0 ^ 0) | (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-91564)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 7 : _GLF_FUZZED(-59532)))) | 0)))))))))), clamp(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, _GLF_IDENTITY(7, int(ivec4(_GLF_IDENTITY(7, clamp(7, 7, 7)), _GLF_IDENTITY(0, max(0, 0)), 1, (1 | 1))))))), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), ~ (~ (_GLF_IDENTITY(int(7), int(int(int(7))))))))))))))), (0 | (_GLF_IDENTITY(0, int(int(0))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (~ (7))), (_GLF_IDENTITY(7, ~ (~ (7)))) | (_GLF_IDENTITY(7, ~ (~ (7)))))))), (int(int(int(7)))) >> 0)), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | _GLF_IDENTITY((_GLF_IDENTITY(7, max(7, 7))), ((_GLF_IDENTITY(7, max(7, 7)))) | ((_GLF_IDENTITY(7, max(7, 7))))))), int(int(int(7))))))))))) + 0))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec2(_GLF_IDENTITY(int(7), (int(7)) | 0), 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, max(7, 7))))))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), min(int(int(int(7))), int(int(int(7))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(7)))))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), _GLF_IDENTITY(clamp(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter))))) | 0)) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))))))), min(_GLF_IDENTITY(clamp(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter))))) | 0)) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))))))), ~ (~ (clamp(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter))))) | 0)) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))))))))), clamp(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter)))), (int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(_injected_loop_counter))))) | 0)) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7)))))))))))))))), _GLF_IDENTITY((0 | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(_GLF_IDENTITY(7, (7) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1, ((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1) << 0)) | ((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | (_GLF_IDENTITY(7, max(7, 7))))), int(int(int(7))))))))))), (true ? (0 | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(_GLF_IDENTITY(7, (7) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1, ((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1) << 0)) | ((_GLF_IDENTITY(int(7), int(int(int(7))))) * 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | (_GLF_IDENTITY(7, max(7, 7))))), int(int(int(7))))))))))) : _GLF_FUZZED(-10206))) + 0))), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(7), ~ (~ (int(7))))), 0 ^ (int(_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) / 1), (7) >> 0)), int(_GLF_IDENTITY(int(int(7)), (true ? int(int(7)) : _GLF_FUZZED(ivec4(27895, -50578, 24089, -48749)[1])))))))))), clamp(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, ~ (~ _GLF_IDENTITY((7), ~ (~ ((7)))))), _GLF_IDENTITY(7, (_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, 7, 7), clamp(clamp(7, 7, 7), clamp(7, 7, 7), clamp(7, 7, 7))))) | (_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, max(7, 7)) : _GLF_FUZZED(_injected_loop_counter)))))))), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(7), 1, 1, 1), ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec4(int(7), 1, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec4(int(7), 1, 1, 1), ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec4(int(7), 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(int(7), 1, 1, 1), ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec4(int(7), 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(int(7), 1, 1, 1), ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec4(int(7), 1, 1, 1))))))), int(_GLF_IDENTITY(int(int(7)), _GLF_IDENTITY(int(ivec4(int(int(7)), 1, 0, 0)), (int(ivec4(int(int(7)), 1, 0, 0))) | (int(ivec4(int(int(7)), 1, 0, 0))))))), (_GLF_IDENTITY(int(7), int(int(_GLF_IDENTITY(int(7), (int(7)) - (0 >> _GLF_IDENTITY(int(8), int(8)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), 0 | (_GLF_IDENTITY(int(7), int(int(int(7))))))))), 0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) + (0 ^ 0))), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (false ? _GLF_FUZZED(19348) : _GLF_IDENTITY(int(7), int(int(int(7)))))))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) * 1, ~ (~ ((7) * 1))))), int(int(int(7)))))))))))), (0 | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)), clamp(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), (int(int(int(7)))) >> 0)))))), (_GLF_IDENTITY(int(7), int(int(int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(int(int(7)), 0 | (int(int(7)))))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | (_GLF_IDENTITY(7, max(7, 7))))), int(int(int(7))))))))))) + 0))), true), true))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ((32026 * 21919) & 0)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y)))) && true))
            break;
           break;
          }
         barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6160.7484)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / sqrt(1.0))))))))
        continue;
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false)))) || false))))))))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))) | (0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))) | (0u))))) | (0u)) - _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))) | (0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | 0u), (0u & (167890u * 82887u)))), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | 0u), (0u & (167890u * 82887u)))), ~ (~ (uint(uvec2(_GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | 0u), (0u & (167890u * 82887u)))))))))))))) | (0u)) - 0u)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))) | (0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) | (0u))))) | (0u)) - 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(43247u)))) | (0u))) | (0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))) | (0u)) - 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))) | (0u), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), uint(uvec2((0u), 1u))), (0u))) | (0u)))) : _GLF_FUZZED((~ subgroup_local_id))))) | (0u)) - 0u)), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))[1], max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))))[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))[1])), gl_NumWorkGroups[2])))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) >> 0u)), 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], clamp(gl_NumWorkGroups[2], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u), gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[1], gl_NumWorkGroups[2]))) | uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u)))))), 0u, 0u)), uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u))))))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups))[_GLF_IDENTITY(0, (0) | (0))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(168619u, _GLF_IDENTITY(46460u, ~ (~ (46460u))), 82419u)) : gl_NumWorkGroups))[2]), min(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups))[_GLF_IDENTITY(0, (0) | (0))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(168619u, _GLF_IDENTITY(46460u, ~ (~ (46460u))), 82419u)) : gl_NumWorkGroups))[2]), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups))[_GLF_IDENTITY(0, (0) | (0))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(168619u, _GLF_IDENTITY(46460u, ~ (~ (46460u))), 82419u)) : gl_NumWorkGroups))[2]))))))) - uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u)))), gl_NumWorkGroups)).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), false, false, true)))))))))
  {
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.x = num_workgroup;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x2(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.w = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), false)))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true), false, true))), true)), false)))))), true)), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)))))))) || false), true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)))))))) || false), true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      break;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) | (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size)).w * _GLF_IDENTITY(workgroup_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1u)), (~ (uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) / 1u)), (_GLF_IDENTITY((~ (uint(1u))), _GLF_IDENTITY(max((~ (uint(1u))), (~ (uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))))), (max(_GLF_IDENTITY((~ (uint(1u))), max(_GLF_IDENTITY((~ (uint(1u))), ((~ (uint(1u)))) - 0u), (~ (uint(1u))))), (~ (uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))))))) + 0u))) | ((~ (uint(1u)))))))) | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) * 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false)), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-230.865)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-230.865)), bool(false))) > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-230.865)), bool(false))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-230.865)), bool(false))) > injectionSwitch.y), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), false, true, true))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)))) && true)))) || false)));
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z = virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, _GLF_IDENTITY(1u, 0u + (1u))))), workgroup_base)) + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), uint(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 0u, (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter)))) / 1))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ((! (false))) || false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z) / 1u)], 4, 64, 0);
 do
  {
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y = read;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), max(~ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, (0) - 0) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))) < subgroup_size)
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-78.68), _GLF_FUZZED(-9.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))), bool(bool((! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((false) || false, true, false), bvec3(bvec3(bvec3((false) || false, true, false)))), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(false, (false) && true)) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (false)))) && true, false), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (! (false)))) && true, false), false, true))))))) && true)) && true))))))))) || false)))))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))
          break;
         atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).z) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).z))) / 1u)], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) ^ 0), 64, 4);
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), min(_GLF_IDENTITY(clamp(0, 0, 0), ~ (~ (clamp(0, 0, 0)))), clamp(0, 0, 0)))) ^ 0)), 0))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1), 0))), (1) << 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false))))))))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
              continue;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)), _injected_loop_counter)) != _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
       subgroupAll(false);
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), 0 | (1))) >> 0), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), 0 | (1))) >> 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), 0 | (1))) >> 0)))))))))) ^ _GLF_IDENTITY(1, (1) ^ 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), 0 ^ (max(int(2), int(2))))), clamp(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), _GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), (max(int(2), int(2))) << 0)), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) | 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(max(int(2), int(2)), 0 | (max(int(2), int(2)))), 1), ~ (~ (ivec2(_GLF_IDENTITY(max(int(2), int(2)), 0 | (max(int(2), int(2)))), 1))))))), _GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) | 0)))))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), (_GLF_IDENTITY(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), int(ivec3(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), 0, 0)))) | (max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))))))), (false ? _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)) : ~ (_GLF_IDENTITY(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), (_GLF_IDENTITY(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), int(ivec3(max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))), 0, 0)))) | (max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))))))))))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))))), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 1), ~ (_GLF_IDENTITY(~ (ivec4(0, 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 1)), (false ? _GLF_FUZZED((ivec4(-22159, 14979, -16176, 19175) >> ivec4(-46959, -36095, 60323, -5397))) : ~ (ivec4(0, 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 1))))))), max(_GLF_IDENTITY(int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 1)), (int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 1))) | 0), int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 1))))), 0), (ivec4(_GLF_IDENTITY(int(2), max(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))))), 1, 0, 0)) << ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2))))))) << 0))))), _GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), max(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), clamp(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0)))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0)))), _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))))), max(int(2), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(max(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), (_GLF_IDENTITY(int(2), (int(2)) << 0)) | 0), _GLF_IDENTITY(int(2), (int(2)) << 0)))), max(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) - 0)), _GLF_IDENTITY(int(2), (int(2)) << 0))))), _GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), clamp(_GLF_IDENTITY(~ (~ (2)), int(ivec3(~ (~ (2)), 1, 0))), _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) | (~ (~ (2)))), ~ (~ (2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) | 0)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (_GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) << 0)) >> 0)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), clamp(_GLF_IDENTITY(~ (2), int(ivec3(~ (2), 0, 0))), ~ (2), ~ (2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ _GLF_IDENTITY(0, (0) | (0))))))), max(int(2), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(0, ~ (~ (0))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED((_injected_loop_counter ^ 66852)) : 2))), int(2)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(max(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), _GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, int(ivec2(2, 1)))))) >> 0)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, int(ivec2(2, 1)))))) >> 0)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, int(ivec2(2, 1)))))) >> 0)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(0, (0) | 0), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))))), max(int(2), int(2))))))))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(max(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(2)) << 0)), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), (max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) / 1)))), _GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 ^ (~ (~ (2))))), 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(ivec3(-77432, -38877, 74813))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)), int(ivec3(int(ivec3(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)), 1, 1)))))), int(ivec3(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), (true ? _GLF_IDENTITY((~ (2)), ((~ (2))) ^ 0) : _GLF_FUZZED(ivec2(42271, -4919).g)))), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5097.5526), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.8)), bvec2(true, false))).x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), 0 + (_GLF_IDENTITY(2, ~ (~ (2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), ~ (~ ((2)))))), _GLF_IDENTITY(0, 1 * (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, min(2, 2)), 2)), ~ (~ (2))), _GLF_IDENTITY(0, max(0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), max(max(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(0, (0) | 0))), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), _GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(29.68, 929.061)) : injectionSwitch)))).x))), clamp(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(29.68, 929.061)) : injectionSwitch)))).x))), ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(29.68, 929.061)) : injectionSwitch)))).x))), ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(29.68, 929.061)) : injectionSwitch)))).x)))))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) / 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), clamp((2), (2), (2))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))), max(int(2), int(2)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0)))))))))) | (_GLF_IDENTITY(0, (0) ^ 0)))))))) / 1))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), abs(1.0), 1.0, 1.0)))) - 0.0) < injectionSwitch.y))))
            {
             atomicStore(buf[GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.z], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadvirtual_gidworkgroup_size.y, _GLF_IDENTITY(4, (4) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-50.63))))), 64, 4);
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bool(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))));
        }
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 1), (bool(_injected_loop_counter != 1)) && true)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 1), (bool(_injected_loop_counter != 1)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 1), (bool(_injected_loop_counter != 1)) && true))), (_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 1), (bool(_injected_loop_counter != 1)) && true)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 1), (bool(_injected_loop_counter != 1)) && true))), (_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter != 1), (bool(_injected_loop_counter != 1)) && true)))) && true))) && true))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) - 0.0)) > injectionSwitch.y))))
    return;
  }
}
