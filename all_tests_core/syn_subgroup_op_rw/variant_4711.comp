#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 uvec2 _f0;
 mat4x3 _f1;
 mat3 _f2;
 mat4x2 _f3;
 mat2 _f4;
 mat2x3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
} ;

struct _GLF_struct_22 {
 bvec2 _f0;
 uint _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 mat3x2 _f1;
 _GLF_struct_19 _f2;
 bool _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_24 _f2;
 uint next_virtual_gid;
 uvec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 vec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 uvec3 _f1;
 vec4 _f2;
 vec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 mat4x3 _f1;
 ivec3 _f2;
 int _f3;
 vec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 uvec4 _f1;
 int _f2;
 mat3x2 _f3;
 mat4 _f4;
 _GLF_struct_15 _f5;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 uvec3 _f1;
 int _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 int _f1;
 mat4x2 _f2;
 mat4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 _GLF_struct_10 _f1;
 vec2 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_16 _f1;
 uint workgroup_size;
 _GLF_struct_17 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 ivec2 _f1;
 bool _f2;
 mat4x2 _f3;
 mat2 _f4;
 bvec2 _f5;
 uint subgroup_local_id;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 bvec2 _f1;
 mat2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat3x4 _f1;
 vec2 _f2;
 uvec4 _f3;
 uvec3 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_7 {
 uint subgroup_size;
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_8 {
 bool _f0;
 ivec2 _f1;
 float _f2;
 mat4 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 uvec2 _f1;
 uint subgroup_base;
 mat4x2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 _GLF_struct_2 _f1;
 mat4 _f2;
 ivec2 _f3;
 ivec4 _f4;
 mat2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_4 {
 bool _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uint subgroup_id;
 vec2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), true))))), (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat3x4(1.0), gl_SubgroupID, vec2(1.0));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(true, ivec2(1), 1.0, _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED((6.0 / mat4(-9.0, 9.0, -11.07, -826.474, -914.872, -90.65, 0.9, -64.72, 59.73, -0.4, -22.77, 25.97, 8192.8303, 67.63, 110.050, -9.5))))), _GLF_struct_7(gl_SubgroupSize, _GLF_struct_5(mat2x4(1.0), mat3x4(1.0), vec2(1.0), uvec4(1u), uvec3(1u), bvec3(_GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-234.740))))) || (true))), mat2(1.0)), _GLF_struct_6(mat4x2(1.0), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (true))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))) && true))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(650.649)))))))), mat2(1.0), vec4(1.0))));
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x2(1.0), _GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, (1) << 0))) ^ ivec2(0, _GLF_IDENTITY(0, (0) ^ 0))), true, mat4x2(1.0), mat2(1.0), bvec2(true), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_13(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(9.8)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y)) * (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(9.8, min(9.8, 9.8)))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_struct_10(mat2x4(1.0), 1, mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), (mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, sin(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 1.0)), tan(0.0), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), vec2(1.0), _GLF_struct_11(_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)), uvec3(1u), 1, mat2x4(1.0)), _GLF_struct_12(mat4(1.0))), _GLF_struct_16(_GLF_struct_14(uvec4(1u), mat4x3(1.0), ivec3(_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))), _GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), vec2(1.0)), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), 1, mat3x2(1.0), mat4(1.0), _GLF_struct_15(mat4x3(1.0), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) - _GLF_IDENTITY(0u, min(0u, 0u)))), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + sin(length(vec3(0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + 0.0)), vec4(1.0), mat4x3(1.0))), gl_WorkGroupSize.x, _GLF_struct_17(vec4(1.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) * 1.0)), mat2(1.0)), uvec2(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(189643u, (189643u) | (189643u))) : gl_WorkGroupID.x)))), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)), false)))), true)), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-44.22))), 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat4x3(1.0), _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_size, clamp(_GLF_struct_replacement_18.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_size, max(_GLF_struct_replacement_18.workgroup_size, _GLF_struct_replacement_18.workgroup_size)), _GLF_struct_replacement_18.workgroup_size)) * workgroup_id);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))))))), false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), false)))))))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))))), bool(_GLF_IDENTITY(bool(true && (false)), ! (! (bool(true && (false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(true, _GLF_struct_3(bvec4(true), _GLF_struct_2(mat3x4(1.0), uvec2(1u), _GLF_struct_replacement_0.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_8._f4.subgroup_size, (_GLF_struct_replacement_8._f4.subgroup_size) | (_GLF_struct_replacement_8._f4.subgroup_size)), mat4x2(1.0), vec3(1.0)), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7637.3049)), bool(false)))) - 0.0)), transpose(transpose(mat4(1.0)))), ivec2(1), ivec4(1), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(920.937), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-10.19)), bvec2(true, false))))).x, mix(float(_GLF_FUZZED(3.1)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(49.19)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, sin(tan(0.0)), 1.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat3x4(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3x4(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), mat3x4(mat4(mat3x4(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), abs(0.0)))))) ? _GLF_FUZZED(826.146) : 1.0)))))), mix(float(_GLF_FUZZED(-748.084)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-57.68)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3918.9533)), bool(false))), 1.0, 1.0))), 0.0, 1.0, tan(determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(((mat3(_GLF_IDENTITY(8.1, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.5), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(_GLF_FUZZED(8.5), _GLF_IDENTITY((true ? _GLF_FUZZED(_GLF_IDENTITY(8.5, (_GLF_IDENTITY(8.5, min(8.5, 8.5))) / 1.0)) : _GLF_FUZZED(-6.4)), _GLF_IDENTITY(max(_GLF_IDENTITY((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), min((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, max(-6.4, -6.4)))), (true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), (_GLF_IDENTITY(true ? vec4((_GLF_IDENTITY(true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4), min(true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4), true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)))), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), max(_GLF_IDENTITY(true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), vec4(vec4(true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))), true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))))), max(float(_GLF_IDENTITY(vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), (true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))), float(_GLF_IDENTITY(vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), (true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))))))), mix(float(max(_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true) ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), min((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(8.5, (8.5) - 0.0)), (_GLF_IDENTITY(_GLF_FUZZED(8.5), clamp(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5))), clamp(_GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5))), _GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5))), _GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5))))), _GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5)))))))) / 1.0) : _GLF_FUZZED(-6.4)), _GLF_IDENTITY((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), mix(float(_GLF_FUZZED(7.3)), float((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4))), bool(true))))), _GLF_IDENTITY((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), (_GLF_IDENTITY(true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(_GLF_FUZZED(-6.4), max(_GLF_FUZZED(-6.4), _GLF_FUZZED(-6.4)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : 1.0)), min(1.0, 1.0)), 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, (-6.4) * sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0)), 1.0)))), 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_IDENTITY(true ? vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(8.5), 0.0 + (_GLF_FUZZED(8.5))) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, (-6.4) * sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0)), 1.0)))), 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, (-6.4) * sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0)), 1.0)))), 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (false ? _GLF_FUZZED(vec4(-82.59, 983.389, -6338.2999, 6047.3474)) : _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))), (false ? _GLF_FUZZED(vec4(-59.11, 77.66, -1.6, 8.7)) : _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))), mix(vec4((max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))))[0], _GLF_FUZZED(-933.067), _GLF_FUZZED(214.308), (max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))))[3]), vec4(_GLF_FUZZED(-376.594), (max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))))[1], _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))))[2], ((max(_GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), min(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)), (_GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))) * mat4(1.0))))[2]) * 1.0), _GLF_FUZZED(297.805)), bvec4(false, true, true, false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, false || (true)))), true)))) ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, (-6.4) * sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0)), 1.0)))), 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))), true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, (-6.4) * sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9924.2560)), bool(false))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0)), 1.0)))), 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, _GLF_IDENTITY(0.4, min(0.4, 0.4)))))), vec4(vec4(_GLF_IDENTITY(true, (true) && true) ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))), true ? vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true)))) / 1.0)) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))))), max(float(_GLF_IDENTITY(vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(8.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(8.5), min(_GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_FUZZED(8.5), (false ? _GLF_FUZZED(-87.18) : _GLF_FUZZED(8.5))))), _GLF_FUZZED(8.5), _GLF_FUZZED(8.5))) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? vec4((_GLF_IDENTITY(true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4), clamp(true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4), _GLF_IDENTITY(true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4), (true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, tan(0.0), 1.0, 1.0), vec4(mat3(vec4(0.0, tan(0.0), 1.0, 1.0), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))))), 0.0))))))), max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, tan(0.0), 1.0, 1.0), vec4(mat3(vec4(0.0, tan(0.0), 1.0, 1.0), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))))), 0.0))))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, tan(0.0), 1.0, 1.0), vec4(mat3(vec4(0.0, tan(0.0), 1.0, 1.0), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))))), 0.0)))))))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(8.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(8.5), float(mat4x3(_GLF_FUZZED(8.5), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_FUZZED(8.5), max(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5)))))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, float(mat4x3(-6.4, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0)))), mix(float(true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), float(_GLF_FUZZED(55.64)), bool(false)))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4))))), float(_GLF_IDENTITY(vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, min(-6.4, _GLF_IDENTITY(-6.4, float(mat2x3(-6.4, 0.0, 1.0, 0.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(8.5), clamp(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.5), float(mat4x3(_GLF_FUZZED(8.5), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-84.44)), float(_GLF_IDENTITY(_GLF_FUZZED(8.5), float(mat4x3(_GLF_FUZZED(8.5), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_FUZZED(-6.4)), 0.0, 1.0, 1.0), (vec4((true ? _GLF_FUZZED(8.5) : _GLF_FUZZED(_GLF_IDENTITY(-6.4, (_GLF_IDENTITY(-6.4, (-6.4) / 1.0)) - sin(sqrt(0.0))))), 0.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec4(3.2, 5.5, 7.5, 0.4)))))))))), float(_GLF_FUZZED(34.20)), bool(false)))))))), float(8.1), _GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), _GLF_IDENTITY(! (! ((! (bool(true))))), false || (_GLF_IDENTITY(! (! ((! (bool(true))))), bool(bvec2(! (! ((! (bool(true))))), false))))))))), -7221.1992, -5182.6596, 465.939, -7367.8100, -8.1, 12.75, -2155.7528, -101.096) * mat4x3(73.46, 55.64, 118.545, -92.57, -9.2, _GLF_IDENTITY(-5.6, max(_GLF_IDENTITY(-5.6, (_GLF_IDENTITY(-5.6, clamp(_GLF_IDENTITY(-5.6, mix(float(_GLF_IDENTITY(-5.6, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(-5.6, float(vec2(-5.6, 1.0)))), bool(true)))), float(_GLF_FUZZED(594.847)), bool(false))), -5.6, -5.6))) + 0.0), -5.6)), 1.0, 4.7, _GLF_IDENTITY(_GLF_IDENTITY(26.68, clamp(_GLF_IDENTITY(26.68, (26.68) / 1.0), 26.68, 26.68)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(26.68, _GLF_IDENTITY((26.68) / determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0 * ((26.68) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, log(1.0)), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(6.6, (6.6) / round(length(normalize(1.0)))), -622.694, 8.6, _GLF_IDENTITY(-1.4, clamp(_GLF_IDENTITY(-1.4, mix(float(_GLF_FUZZED(189.647)), float(-1.4), bool(true))), _GLF_IDENTITY(-1.4, (false ? _GLF_FUZZED(-5785.3677) : -1.4)), -1.4)))) : mat2(_GLF_IDENTITY(26.68, (_GLF_IDENTITY(_GLF_IDENTITY(26.68, max(26.68, 26.68)), (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(26.68, max(26.68, 26.68))))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, log(1.0)))))), 1653.6810, -5.5, -80.24)) , mat4(19.93, -57.28, -9.8, -5.8, -5.7, 82.07, -2.7, 3.3, -602.648, 31.77, -436.601, 7.1, _GLF_IDENTITY(-4.7, clamp(-4.7, _GLF_IDENTITY(-4.7, 0.0 + (-4.7)), _GLF_IDENTITY(-4.7, (-4.7) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)), vec4(mat3(_GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)), min(mat4(1.0) * (vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2953.4274)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(689.152)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))), 1.0, 0.0)), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-4.1))), 0.0, 1.0, cos(0.0), log(1.0), log(1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0), (mat3x4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-4.1))), 0.0, 1.0, cos(0.0), log(1.0), log(1.0), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)))))), -1830.5070, -8.3, 6.1))) : mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-52.67) : 0.0)), 0.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-95.07) : 0.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.6)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))), _GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (1.0 * (0.0)) - sin(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0), _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(mat3x4(abs(1.0), determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0), 1.0, sqrt(1.0), 0.0)), max(float(mat3x4(abs(1.0), determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, sqrt(1.0), 0.0)), float(mat3x4(abs(1.0), determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))))), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-32.54)), float(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), vec3(0.0, 1.0, 0.0))), bool(true))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-957.280)), bool(false))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), 0.0)), _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-4.2)), bool(false))), 1.0, sqrt(1.0), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(7.1, 3.0, 3.3).y)), bool(false))), 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((abs(0.0)) + 0.0, min((abs(0.0)) + 0.0, (abs(0.0)) + 0.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(max(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), (float(vec3(1.0, 1.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y))))))), 1.0, 0.0, _GLF_IDENTITY(0.0, determinant(mat2(1.0, 0.0, 0.0, abs(1.0))) * (0.0)), 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false)))))), mix(float(max(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false))))), float(_GLF_FUZZED(10.74)), bool(false))), min(_GLF_IDENTITY(max(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, tan(0.0), sqrt(0.0), 1.0, 0.0), (mat3x2(1.0, 1.0, tan(0.0), sqrt(0.0), 1.0, 0.0)) * mat3(1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 1.0), vec4(1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], (vec4(0.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(6722.2878), (vec4(0.0, 0.0, 0.0, 0.0))[3]), vec4(_GLF_FUZZED((3.6 / (-47.80 / -857.758))), _GLF_FUZZED(1069.7016), (vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(8.5)), bvec4(false, false, true, false)))), abs(1.0), 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 1.0), vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0)))))), min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false)))), mix(float(max(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.2)), float(0.0), bool(true))), 0.0)), 0.0)), 0.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false))))), float(_GLF_IDENTITY(_GLF_FUZZED(10.74), min(_GLF_FUZZED(10.74), _GLF_FUZZED(10.74)))), bool(false))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(-24.11)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0)))))), bool(true))), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))))))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(degrees(50.73)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0)))), min(float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED((mat2(7.8, 4434.3805, 3.1, -2778.8568) / mat2(4.8, -8936.4679, -2.8, -95.25))) : _GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(1355.3475, 5377.6011, 2.4, -8507.5279)) : mat2(0.0, 0.0, 1.0, 0.0))))))))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false)))))), mix(float(max(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.6) : 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-66.60))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))))), float(_GLF_FUZZED(-71.26)), bool(false)))) / 1.0))), float(_GLF_FUZZED(10.74)), bool(false))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0), (min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.6) : 0.0)))))) - log(1.0)), (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0), (min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.6) : 0.0)))))) - log(1.0))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((0.5))), bool(false))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((0.5))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((0.5))), bool(false))))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, cos(sin(0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((- -886.540))), float(float(mat4(1.0, 0.0, 1.0, cos(sin(0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), bool(true)))), 1.0, length(tan(0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)))))))), uvec3(1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6126.2153)), bool(false)))) + 0.0) < injectionSwitch.y)), false)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true, bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7835.6244)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bool(false))))))))), bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9446.7056), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.5)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), false, false)))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9446.7056), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.5)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), false, false)))))), false, true, false))))))), ! (! (! (false))))), bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (false))))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_base, min(_GLF_struct_replacement_1.workgroup_base, _GLF_struct_replacement_1.workgroup_base)) + _GLF_struct_replacement_4._f1._f1.subgroup_base + _GLF_struct_replacement_9.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), (true && (false)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, 9.4)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(35.10), _GLF_FUZZED(66.40)), bvec2(false, false))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (bool(bool(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0)))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.0, 9.4)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(35.10), _GLF_FUZZED(66.40)), bvec2(false, false))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0))), true, true)), bool(bvec2(bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0))), true, true)), false))))))) && true))))))) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), false || _GLF_IDENTITY((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (false || (false)), true && (! (_GLF_IDENTITY(false || (false), (false || (false)) && true))))))), bool(bvec3((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! _GLF_IDENTITY((false || (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true), bvec3(bvec3(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true)))), bvec3(bvec4(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-230.271)), bool(false))))))))), (_GLF_IDENTITY(false || (false), false || _GLF_IDENTITY((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (false || (false)), true && (! (_GLF_IDENTITY(false || (false), (false || (false)) && true))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! _GLF_IDENTITY((false || (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true), bvec3(bvec3(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true)))), bvec3(bvec4(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-230.271)), bool(false)))))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (! _GLF_IDENTITY((false || (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true), bvec3(bvec3(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true)))), bvec3(bvec4(bvec3((false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), bvec3(bvec4(bvec3((false), false, true), false)))))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-230.271)), bool(false)))))), true))))))) && true)))))), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (false))), ! (! (! (! (true && (false)))))), false || (_GLF_IDENTITY(! (! (true && (false))), ! (! (! (! (true && (false)))))))))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))) && true))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (true && ((injectionSwitch.x > injectionSwitch.y)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) && true) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4))), 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-82.90) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false))) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(950.998)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_21(uvec3(1u), mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_19(mat3x2(1.0), bvec4(true)), true, _GLF_struct_20(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)))), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(93647u, 76998u, 82114u, 151411u)))))), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) << (0u | 0u))) | (1u))))), _GLF_struct_22(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))), 1u, bvec4(true)), _GLF_struct_24(_GLF_struct_23(uvec2(_GLF_IDENTITY(1u, (1u) << 0u)), mat4x3(1.0), mat3(1.0), mat4x2(1.0), mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(39.93)))), uvec2(1u))), _GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_1.workgroup_base), uint(uvec3(~ (_GLF_struct_replacement_1.workgroup_base), 1u, 1u))))) + _GLF_struct_replacement_4._f1._f1.subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, min(_GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_9.subgroup_local_id)) + 1) % _GLF_struct_replacement_8._f4.subgroup_size), uvec3(1u), mat3(1.0));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : _GLF_IDENTITY((0 ^ 0), (0 | (0 << _GLF_IDENTITY(int(1), int(1)))) ^ ((_GLF_IDENTITY(0, int(ivec3(0, 0, 1))) ^ 0))))) ^ (4), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4), (_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, 0 + (_GLF_IDENTITY(0 ^ 0, clamp(0 ^ 0, 0 ^ 0, _GLF_IDENTITY(0 ^ 0, max(0 ^ 0, 0 ^ 0))))))), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4)) | (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4)))))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1) ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4), (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4)) | (_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, (0 ^ 0) ^ 0)), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ _GLF_IDENTITY((4), ((4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-6424) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-6424) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))))))), clamp(~ (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-6424) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))))))), ~ (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-6424) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))))))), ~ (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-6424) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))))))))))) ^ (4), (_GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4)) | (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4)))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4), (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ _GLF_IDENTITY((4), ((4)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | (_GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-26925) : (0 ^ 0))) ^ (4)))))))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id % _GLF_IDENTITY(2, (2) | (2))), ((_GLF_struct_replacement_9.subgroup_local_id % 2)) / 1u)) ^ 0u) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.4)), vec2(_GLF_FUZZED(35.26), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false))), false, true)), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec3((true), true, false)))), (! (_GLF_IDENTITY((true), bool(bvec3((true), true, false))))) && true)))) && (bool(bvec4(false, true, false, false)))), false), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), bvec2(bvec3(bvec2(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false)), false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true && (false)))))))))))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true && (false)))))))))))), true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true && (false)))))))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), false), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false), bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false))))))), bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), true)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), true))))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), true))))), true, false)), false)))))))))), _GLF_IDENTITY(false, true && (false))))))))))))), false, false)))))))), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))))), true && (false)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))), false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false)), false), true, false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bool(bvec4(false, true, false, false)), false), true, false)), false)), false, false)))))))), (false) && true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false)) || false)))), false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false, true))), false)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_25.next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(tan(0.0), determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)), clamp(dot(vec4(tan(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(tan(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)), (true ? mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat2x3(9.5, -4.1, -1.7, -6.5, -37.56, 3139.7524)))))), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0), (true ? _GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)), (true ? mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat2x3(9.5, -4.1, -1.7, -6.5, -37.56, 3139.7524)))))), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)), (true ? mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat2x3(9.5, -4.1, -1.7, -6.5, -37.56, 3139.7524)))))), 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0)))) : _GLF_FUZZED(mat3x4(-7.9, 125.555, -1.6, -53.90, 4.4, 3.9, 4168.6962, -5.2, -399.110, 94.89, 2546.1875, 3894.3269)))))), 0.0)), 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(tan(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)))), dot(vec4(tan(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0))), 1.0))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))) || false) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(74.70), clamp(_GLF_FUZZED(74.70), _GLF_FUZZED(74.70), _GLF_FUZZED(74.70))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, abs(0.0), 0.0, log(cos(0.0)), 0.0, 1.0, 0.0))).x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.8)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_25.next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true)))), true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) || false)) || false), bool(bvec2((false), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), false || ((! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec2(! (_GLF_IDENTITY(true, true && (true))), true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-176.369)), bool(false))))), true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (false))))), false || (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
