#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-827.348), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-200.325)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)))))), ! (_GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false))))))), (! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(! (! (((false)))), false || (! (! (((false))))))), bool(bool(((false))))) || false))) && true))))))) && true)))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))) && true), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(bool((_GLF_IDENTITY(false, ! (! (false))))), true, false, true)))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)))))))))), true, false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (bool(((_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true))) || false)))))), ! (_GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)) && true))))) && true))))) || false)))))))), (! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(! (! (((false)))), false || (! (! (((false))))))), bool(bool(((false))))) || false))) && true))))))) && true)))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))) && _GLF_IDENTITY(true, (true) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))), bool(bvec4(bool((_GLF_IDENTITY(false, ! (! (false))))), true, false, true)))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bool(((false))))) || false)))))))))), true, false, false))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false, true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))).x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), 0.0, abs(0.0), 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), 0.0, abs(0.0), 1.0))))), mix(float(_GLF_FUZZED(-344.434)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), 0.0, abs(0.0), 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), 0.0, abs(0.0), 1.0)))))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(422.730) : injectionSwitch.y))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false, false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) || false))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false)), bool(bool(! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6470.8930)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])))), injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-458.712), _GLF_FUZZED(898.442)), bvec2(false, false))).x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))))))) + subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * (0u ^ 1u))))), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id, (true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(workgroup_base, num_workgroup), (atomicAnd(workgroup_base, num_workgroup)) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))), 153802u, -7090, -59547)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, 153802u, _GLF_IDENTITY(-7090, (-7090) / 1), -59547)) : workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), max((false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, 153802u, _GLF_IDENTITY(-7090, ~ (~ (-7090))), -59547)) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, 153802u, -7090, -59547)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), 153802u, -7090, -59547)) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / _GLF_IDENTITY(1u, (1u) + 0u), ((workgroup_base) / _GLF_IDENTITY(1u, (1u) + 0u)) << 0u)) + subgroup_id * subgroup_size + subgroup_local_id, 1u * (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))))) ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))), 153802u, -7090, -59547)) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + subgroup_local_id)))))), 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * (0u ^ 1u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, (subgroup_id * subgroup_size) * (0u ^ 1u)))))) | 0u), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id, (true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(workgroup_base, num_workgroup), (atomicAnd(workgroup_base, num_workgroup)) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) | 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)))))))), ~ (~ (subgroup_id))), 153802u, -7090, _GLF_IDENTITY(-59547, ~ (~ (_GLF_IDENTITY(-59547, (-59547) - 0)))))) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(_GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, 153802u, _GLF_IDENTITY(-7090, ~ (~ (_GLF_IDENTITY(-7090, (true ? -7090 : _GLF_FUZZED(_GLF_IDENTITY(65789, (false ? _GLF_FUZZED(92125) : _GLF_IDENTITY(65789, (_GLF_IDENTITY(65789, int(ivec2(65789, 1)))) / 1))))))))), -59547)) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id), max((false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, 153802u, -7090, -59547)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, 153802u, -7090, -59547)) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u) + subgroup_local_id))), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) - 0u)), 153802u, -7090, -59547)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) + 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1u) : _GLF_FUZZED(subgroup_id))) + 0u)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | _GLF_IDENTITY(0u, min(0u, 0u)))) + 0u))) / 1u))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(1u, ~ (~ (1u))) * (false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))), 153802u, -7090, -59547), (_GLF_IDENTITY(bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * (0u))) | (0u))))), 153802u, -7090, -59547), clamp(bitfieldInsert(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))), (true ? (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))) : _GLF_FUZZED(workgroup_id)))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ 0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))))), 153802u, -7090, -59547), _GLF_IDENTITY(bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 1u * (0u))) | (0u), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 1u * (0u))) | (0u)), (~ ((_GLF_IDENTITY(0u, 1u * (0u))) | (0u))) - 0u))))))), 153802u, -7090, -59547), (false ? _GLF_FUZZED(num_workgroup) : bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 153802u, -7090, _GLF_IDENTITY(-59547, max(-59547, _GLF_IDENTITY(-59547, (-59547) ^ 0)))))), bitfieldInsert(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))))), 153802u, -7090, -59547)))) << 0u)) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) / 1u) + subgroup_id * subgroup_size + subgroup_local_id)))))), 0u | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | 0u)) + (1u ^ 1u)) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), 0u | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + (1u ^ 1u)) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + (1u ^ 1u)) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) - 0u)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))) + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + (0u ^ 0u))) | (workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + (0u ^ 0u))) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + (0u ^ 0u))) | (workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id)), workgroup_base + _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u | _GLF_IDENTITY((uint(2u)), clamp(_GLF_IDENTITY((uint(2u)), uint(uvec4((uint(2u)), 0u, 1u, 0u))), _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u)))), (uint(2u))))), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (1u ^ 1u)) + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 0u, 0u, 1u)))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u) + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u)) * 1u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) : _GLF_FUZZED((68689u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u)) / 1u), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (subgroup_size))))) + subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, max(3u, 3u))), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(3u), uint(uvec2(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), (0u | 0u)))))), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) / 1u))))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2409.3524)), float(1.0), bool(true))), injectionSwitch.y))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))), 1u, 1u), (uvec3((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))), 1u, 1u)) ^ uvec3(0u, 0u, 0u))))) - 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED((139202u << workgroup_base)) : subgroup_id * subgroup_size)) + subgroup_local_id))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u)) << 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) : _GLF_FUZZED((68689u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id))))), _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + subgroup_local_id))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | (0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id))), (_GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | (0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (0u | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + subgroup_local_id), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + subgroup_local_id), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + subgroup_local_id)) | ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + subgroup_local_id)))) / 1u)) | (0u | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id), ~ (~ ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | (0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id)))) | 0u)))) | (0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size + subgroup_local_id) >> 0u : _GLF_FUZZED(workgroup_size)))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, ~ (~ (1u))))))), 0u, 0u))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | 0u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(391.514) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x), float(_GLF_FUZZED(-9776.6265)), bool(false))) > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) + (subgroup_id * subgroup_size)), uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u) * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))))))) >> 0u)) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) + (subgroup_id * subgroup_size)), uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u) * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))))))) >> 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) + (subgroup_id * subgroup_size)), uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u) * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))))))) >> 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) + (subgroup_id * subgroup_size)), uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u) * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))) - 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))))))) >> 0u)) ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(uvec2(workgroup_size, 0u)), uint(uvec3(uint(uvec2(workgroup_size, 0u)), 0u, 1u))) : _GLF_FUZZED(num_workgroup))))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u | (0u ^ (workgroup_base + subgroup_id * subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)))), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) / 1u)))))))) << 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(uint(uint((subgroup_local_id + 1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : uint(uint((subgroup_local_id + 1))), max(false ? _GLF_FUZZED(subgroup_local_id) : uint(uint((subgroup_local_id + 1))), false ? _GLF_FUZZED(subgroup_local_id) : uint(uint((subgroup_local_id + 1)))))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(98.31, -8570.6129)))), mix(vec2(_GLF_FUZZED(-7510.3047), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(98.31, -8570.6129)))), mix(vec2(_GLF_FUZZED(-7510.3047), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(98.31, -8570.6129)))), mix(vec2(_GLF_FUZZED(-7510.3047), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(98.31, -8570.6129)))), mix(vec2(_GLF_FUZZED(-7510.3047), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-7.6)), bool(false))), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(98.31, _GLF_IDENTITY(-8570.6129, (_GLF_IDENTITY(-8570.6129, (true ? -8570.6129 : _GLF_FUZZED(434.234)))) + 0.0))))), mix(vec2(_GLF_FUZZED(-7510.3047), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))))) / vec2(1.0, 1.0))).y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7510.3047, (true ? -7510.3047 : _GLF_FUZZED(-4462.7044)))), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) << ivec4(0, 0, 0, 0))))], ((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) << ivec4(0, 0, 0, 0))))]) - 0.0), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))).y)) && true, _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7510.3047, (true ? -7510.3047 : _GLF_FUZZED(-4462.7044)))), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) << ivec4(0, 0, 0, 0))))], ((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) << ivec4(0, 0, 0, 0))))]) - 0.0), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))).y)) && true, true, true)), bool(bvec3(bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7510.3047, (true ? -7510.3047 : _GLF_FUZZED(-4462.7044)))), _GLF_FUZZED(-5.3)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) << ivec4(0, 0, 0, 0))))], ((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4(0, ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) << ivec4(0, 0, 0, 0))))]) - 0.0), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0]) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), (injectionSwitch)[1]), bvec2(true, true))).y)) && true, true, true)), false, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), uint(uvec2(uint(uvec3(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 1u, 0u)), 0u))), 1u * (uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), clamp(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))))))), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), clamp(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))))) << 0u)), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) | 0u), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), 0u, (0u & 114016u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))), clamp(~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), (true ? float(vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(-2.1)))))), injectionSwitch.x))), 0u)))) << 0u)), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)) / uvec3(1u, 1u, 1u))), min(~ (_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)) / uvec3(1u, 1u, 1u))), ~ (_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)) / uvec3(1u, 1u, 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_size))), 1u, 0u)))) << 0u)), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, subgroup_size))), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))) << 0u))))) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1), uint(uint((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1))))))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0))), injectionSwitch.y))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], _GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u))))))), ((_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u)))))))) | ((_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u))))))))) : _GLF_FUZZED(subgroup_id))), ~ _GLF_IDENTITY((uint(1)), ((uint(1))) | 0u)))) | 0u)), ((_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u))))))), ((_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u)))))))) | ((_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), _GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))), (1u & 1u))))))))) : _GLF_FUZZED(subgroup_id))), ~ _GLF_IDENTITY((uint(1)), ((uint(1))) | 0u)))) | 0u))) + 0u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(virtual_gid), ~ (~ (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid)))), true ? subgroup_local_id : _GLF_FUZZED(virtual_gid)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) | ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))), clamp(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) | ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) | ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) | ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid)))))))) | (subgroup_local_id)) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)) - 0u)), (true ? _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + sin(0.0))), float(_GLF_FUZZED(97.06)), bool(false))), injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(-59.61) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - sin(0.0))))), (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY((false ? _GLF_FUZZED(-59.61) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - sin(0.0))))), clamp((false ? _GLF_FUZZED(-59.61) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - sin(0.0))))), (false ? _GLF_FUZZED(-59.61) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - sin(0.0))))), (false ? _GLF_FUZZED(-59.61) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - sin(0.0))))))))))) | (subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))) && true))))
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, 0u | (read))) * 1u), clamp(read, read, _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((read), (_GLF_IDENTITY((read), ((read)) | (_GLF_IDENTITY((read), min((read), (read)))))) | 0u) | 0u, ((read) | 0u) - 0u)))), 4, 64, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (58001 & 0) ^ (0))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) || false)) && true)) || false)))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))), true, false)), false, true, false))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), vec2(_GLF_FUZZED(-7015.1482), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), (_GLF_IDENTITY(false, ! (! (false))) || ((false))) && true)))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false))) || (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))))))))) || false)))), ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))))))))) || false))))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-64448) : _GLF_IDENTITY(4, int(int(4))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-909.702)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), float(_GLF_FUZZED(9.6)), bool(false))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}
