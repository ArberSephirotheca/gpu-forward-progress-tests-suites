#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 0.0, 1.0, determinant(mat3(exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0)), 0.0, 0.0))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, abs(sqrt(0.0)), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))))))) / 1u);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))))));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, abs(0.0), 1.0))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) || false))), injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(895.985, 1.8)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0), mat3(1.0) * (vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))) / vec2(1.0, 1.0)).y, 0.0, 1.0)))))))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) | (workgroup_size * workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) | ((subgroup_id))) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u)), 0u)), clamp(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u)), 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u)), 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))))))) / 1u))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_id))) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u)))), 0u | (_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_id))) + 0u, (0u & 90811u) ^ ((subgroup_id) + 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + _GLF_IDENTITY(0u, (0u) * 1u))))), ~ (_GLF_IDENTITY(~ ((subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + _GLF_IDENTITY(0u, (0u) * 1u)))))), (~ ((subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & 90811u) ^ ((subgroup_id) + _GLF_IDENTITY(0u, (0u) * 1u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (0u & _GLF_IDENTITY(90811u, max(90811u, 90811u))) ^ ((subgroup_id) + 0u)))))) >> 0u))) * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))) : _GLF_FUZZED(workgroup_size)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), uint(workgroup_base)))), (~ (_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), uint(workgroup_base))))) ^ 0u))), (uint(workgroup_base)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base))), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ (workgroup_base))) | 0u))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, 0u), (uvec4(subgroup_base, 1u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, 0u), _GLF_IDENTITY((uvec4(subgroup_base, 1u, 1u, 0u)), min(_GLF_IDENTITY((uvec4(subgroup_base, 1u, 1u, 0u)), max((uvec4(subgroup_base, 1u, 1u, 0u)), (uvec4(subgroup_base, 1u, 1u, 0u)))), (uvec4(subgroup_base, 1u, 1u, 0u)))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, 0u), (uvec4(subgroup_base, 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, 0u), uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (max(0u, 0u)))), 0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u) | (uvec4(subgroup_base, 1u, 1u, 0u)))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u)) + 0u), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u)))))))))), clamp((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), (uvec3(~ (subgroup_base), 1u, 1u)) | (uvec3(~ (subgroup_base), 1u, 1u))), max(uvec3(~ _GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_base))), 1u, 1u), uvec3(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u), 1u, 1u)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), (uvec3(~ (subgroup_base), 1u, 1u)) | (uvec3(~ (subgroup_base), 1u, 1u))), max(uvec3(~ _GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_base))), 1u, 1u), uvec3(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u), 1u, 1u))))))) + 0u), 0u ^ (uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u)))))))))), ((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u))))))))))) - 0u), (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), uvec3(~ (subgroup_base), 1u, 1u)))), clamp(uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), uvec3(~ (subgroup_base), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), uvec3(~ (subgroup_base), 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), uvec3(~ (subgroup_base), 1u, 1u)))), uint(uvec2(uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), uvec3(~ (subgroup_base), 1u, 1u)))), 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(~ (subgroup_base), 1u, 1u), max(uvec3(~ (subgroup_base), 1u, 1u), uvec3(~ (subgroup_base), 1u, 1u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(156450u))), 1u * (~ (subgroup_base))), _GLF_IDENTITY((~ (subgroup_base)) / 1u, (_GLF_IDENTITY((~ (subgroup_base)) / 1u, ((~ (subgroup_base)) / 1u) << 0u)) ^ 0u))) << 0u))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) >> 0u), 0u), (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u), 0u)) - uvec2(0u, 0u)))), 1u, 0u))) | 0u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) + 1) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_base), (_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_base), _GLF_IDENTITY((0u ^ (workgroup_base + subgroup_base)) * 1u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((0u ^ (workgroup_base + subgroup_base)) * 1u, 0u ^ ((0u ^ (workgroup_base + subgroup_base)) * 1u)))))) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) % subgroup_size) - 0u)), 1u * (((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))))), uint(uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))))), uint(uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, true && (true)) ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))) % subgroup_size), uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))) % subgroup_size), 1u)))) / 1u, (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1))))))), ~ ((subgroup_local_id + 1)))))) % subgroup_size), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size)) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size))))), 1u)))) / 1u)))) | (((subgroup_local_id + 1) % subgroup_size))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))) % subgroup_size), uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))) % subgroup_size), 1u)))) / 1u, (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(~ _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1))))))), ~ ((subgroup_local_id + 1)))))) % subgroup_size), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size)) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), max(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))))))) % subgroup_size))))), 1u)))) / 1u)))) | (((subgroup_local_id + 1) % subgroup_size))), 0u, 1u))) << 0u))) - 0u)) | (((subgroup_local_id + 1) % subgroup_size)))) | (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(128868u), clamp(_GLF_FUZZED(128868u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(128868u), max(_GLF_FUZZED(128868u), _GLF_FUZZED(128868u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(128868u), max(_GLF_FUZZED(128868u), _GLF_FUZZED(128868u))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(128868u), max(_GLF_FUZZED(128868u), _GLF_FUZZED(128868u))))))) ^ 0u), _GLF_FUZZED(128868u))) : subgroup_local_id)) + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-100.595)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-100.595)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)) || false))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) || false))), (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) || false)))) && true)))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 4, 64, 2);
 do
  {
   if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u | (uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u | (uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u | (uint(subgroup_local_id)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u | (uint(subgroup_local_id)))), (false ? _GLF_FUZZED(read) : uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u | (uint(subgroup_local_id)))))))))) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)))) % _GLF_IDENTITY(2, int(ivec2(2, 0)))) == 0, ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) ^ 0u)) ^ 0u), subgroup_local_id)) % 2) == 0) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      barrier();
     subgroupAll(_GLF_IDENTITY(false, true && (false)));
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(_GLF_IDENTITY(1, (1) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))))))), 4, 64, _GLF_IDENTITY(4, (4) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))) ^ _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-26859))), (0))))))), (_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))) ^ (0)))))) >> 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))) ^ _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-26859))), (0))))))), (_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))) ^ (0)))))) >> 0)), 0, 0), (true ? ivec3(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))) ^ _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-26859))), (0))))))), (_GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))) ^ (0)))))) >> 0)), 0, 0) : _GLF_FUZZED(ivec3(13906, 67452, 42580))))))) >> _GLF_IDENTITY(int(0), int(0)))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))).y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))) || false)), true && ((_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))).y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))) || false)), true && ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))).y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))) || false)), true && ((_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), 0 ^ (int(0)))) | (_GLF_IDENTITY(int(0), (int(0)) ^ 0))), min(_GLF_IDENTITY(int(0), (int(0)) / 1), int(0)))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), false)))), ! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), max((0 >> _GLF_IDENTITY(int(3), int(3))), (0 >> _GLF_IDENTITY(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 atomicStore(buf[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true, true)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
}
