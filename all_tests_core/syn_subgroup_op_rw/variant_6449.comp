#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.9, -19.98)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, true)))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))) > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true))))))))) && true)))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-50.79)), bool(false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, length(sin(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(faceforward(uintBitsToFloat(uvec2(146742u, 149740u)), injectionSwitch, injectionSwitch))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-298.058)), vec2(_GLF_FUZZED(55.27), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true)))) + vec2(0.0, 0.0)).y) - 0.0)))))) && true, _GLF_IDENTITY(bool(bvec3((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, true, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec3(bvec3((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, _GLF_IDENTITY(true, bool(bool(true))), false))))), false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(faceforward(uintBitsToFloat(uvec2(146742u, 149740u)), injectionSwitch, injectionSwitch))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-298.058)), vec2(_GLF_FUZZED(55.27), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true)), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-298.058)), vec2(_GLF_FUZZED(55.27), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true)) : _GLF_FUZZED(injectionSwitch))))) + vec2(0.0, 0.0)).y) - 0.0)))))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, false || (_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, bool(bvec4((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, false, false, true))))), true, false)), bool(bvec3(bool(bvec3((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, _GLF_IDENTITY(true, bool(bool(true))), false)), false, false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)))))).y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(faceforward(uintBitsToFloat(uvec2(146742u, 149740u)), injectionSwitch, injectionSwitch)), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(faceforward(uintBitsToFloat(uvec2(146742u, 149740u)), injectionSwitch, injectionSwitch)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(faceforward(uintBitsToFloat(uvec2(146742u, 149740u)), injectionSwitch, injectionSwitch)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(faceforward(uintBitsToFloat(uvec2(146742u, 149740u)), injectionSwitch, injectionSwitch))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-298.058)), vec2(_GLF_FUZZED(55.27), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true)))) + vec2(0.0, 0.0)).y) - 0.0)))))) && true, _GLF_IDENTITY(bool(bvec3((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0), true && (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))))) && true, true, false)), bool(bvec3(bool(bvec3((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))) && true, _GLF_IDENTITY(true, bool(bool(true))), false)), false, false))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-12.79)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))) | ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[1]), uvec2(uvec3(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))) | ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[1]), 1u))))) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)) : _GLF_FUZZED(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), ~ (~ ((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), uvec2(_GLF_IDENTITY(uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u), (true ? uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u) : _GLF_FUZZED(uvec4(82057u, 182504u, 110622u, 55569u))))))) >> uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))))).y, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))) | ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[1]))) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)) : _GLF_FUZZED(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), ~ (~ ((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), uvec2(_GLF_IDENTITY(uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u), (true ? uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u) : _GLF_FUZZED(uvec4(82057u, 182504u, 110622u, 55569u))))))) >> uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))))).y)), min(~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))) | ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[1]))) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)) : _GLF_FUZZED(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), ~ (~ ((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), uvec2(_GLF_IDENTITY(uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u), (true ? uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u) : _GLF_FUZZED(uvec4(82057u, 182504u, 110622u, 55569u))))))) >> uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))))).y)), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))) | ((true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], uint(uvec2(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[0], 1u))) : _GLF_FUZZED(subgroup_id))))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id[1]))) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))) | (GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)) : _GLF_FUZZED(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))), GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id))), ~ (~ ((false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, _GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), uvec2(_GLF_IDENTITY(uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u), (true ? uvec4(clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id), 1u, 0u) : _GLF_FUZZED(uvec4(82057u, 182504u, 110622u, 55569u))))))) >> uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, clamp(GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id, GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id)))))).y)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), false || (true && (true)))) || false)), true, true, true))), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true), false))), false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.z + subgroup_base, max(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.z + subgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.z + subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size))) | uvec4(0u, 0u, 0u, 0u)).z + subgroup_base), max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size))) | uvec4(0u, 0u, 0u, 0u)).z + subgroup_base), max((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(137785u))))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u)).z + subgroup_base), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size))) | uvec4(0u, 0u, 0u, 0u)).z + subgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size)), GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size))) | uvec4(0u, 0u, 0u, 0u)).z + subgroup_base), ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size))) | uvec4(0u, 0u, 0u, 0u)).z + subgroup_base)) / 1u)))))) + GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.z + subgroup_base + _GLF_IDENTITY(((GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(_GLF_IDENTITY(int(~ (1)), (int(~ (1))) ^ 0)))))))), min(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (subgroup_size))), (((GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))), min(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))))))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(int(~ (1)), (int(~ (1))) / (1 | 0)))))))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))))) | (((GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))), (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1)))))))))) | (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), _GLF_IDENTITY(int(int(~ (1))), 0 | (int(int(~ (1))))))))))), 0 + ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), _GLF_IDENTITY(int(int(~ (1))), 0 | (int(int(~ (1))))))))))))), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (_GLF_IDENTITY(int(int(~ (1))), min(_GLF_IDENTITY(int(int(~ (1))), min(int(int(~ (1))), int(int(~ (1))))), int(int(~ (1))))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (subgroup_size)))));
 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))], _GLF_IDENTITY((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), ~ (~ ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))))))) ^ 0u)), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, uint(_GLF_ONE(1.0, injectionSwitch.y)))))], _GLF_IDENTITY((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), ~ (~ ((buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))))))) ^ 0u))) - 0u), 4, _GLF_IDENTITY(64, (64) * 1), 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) && (! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, (true) || false), true, true))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.y % 2) == _GLF_IDENTITY(0, min(0, 0)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1694.9941)), bvec2(true, false))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, (false) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))))))) && true)))))), true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) || false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x], uint(1), _GLF_IDENTITY(4, (4) << 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false))), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-95.71, -514.668)))).y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0), vec2(0.0, 1.0)), min(dot(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0), vec2(0.0, 1.0)), max(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))) / 1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0), vec2(0.0, 1.0))))))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-6.3), min(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3))), _GLF_FUZZED(-6.3))) : float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(min(sin(0.0), sin(0.0)), mix(float(_GLF_FUZZED((-2.7 + 37.19))), float(min(sin(0.0), sin(0.0))), bool(true))))))), 1.0 * ((false ? _GLF_IDENTITY(_GLF_FUZZED(-6.3), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_FUZZED(-6.3), _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_FUZZED(-6.3)) / abs(1.0)))), max(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3))), mix(float(_GLF_FUZZED(-192.578)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3))), float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))), _GLF_FUZZED(-6.3))) : float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y), tan(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(min(sin(0.0), sin(0.0)), (false ? _GLF_FUZZED(-886.727) : min(sin(0.0), sin(0.0)))))))))))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, abs(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(-4.8) : float(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, abs(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0)), 0.0))))), injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0))), (false ? _GLF_FUZZED(-3.6) : float(mat3(1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.0))), 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), max(0.0 + (0.0), 0.0 + (0.0)))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0)))), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2451.3436), _GLF_FUZZED(-4.9)), bvec2(false, false))).y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_FUZZED(-8.0)), float(_GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(5.7)), bool(false)))), bool(true))))) : _GLF_FUZZED(296.637))))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)))))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-6.3), min(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_IDENTITY(_GLF_FUZZED(-6.3), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(-6.3), 0.0, 0.0, length(log(vec3(1.0, 1.0, 1.0))), sin(0.0), 0.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0)), max(float(mat2x4(_GLF_FUZZED(-6.3), 0.0, 0.0, length(log(vec3(1.0, 1.0, 1.0))), sin(0.0), 0.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0)), float(mat2x4(_GLF_FUZZED(-6.3), 0.0, 0.0, length(log(vec3(1.0, 1.0, 1.0))), sin(0.0), 0.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0))))), _GLF_FUZZED(-6.3))), _GLF_FUZZED(-6.3))) : float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0)))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-9.8)), vec2(_GLF_FUZZED(8.7), (vec2(0.0, 1.0))[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))), 1.0 * ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6.3), min(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6.3, (true ? -6.3 : _GLF_FUZZED(distance(vec3(-2968.2037, -7.8, -3.0), vec3(-6.5, 1.0, -7.0)))))), float(mat2x4(_GLF_FUZZED(-6.3), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-6.3))), _GLF_IDENTITY(_GLF_FUZZED(-6.3), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_FUZZED(6.0)), bool(false))))), min(_GLF_IDENTITY(_GLF_FUZZED(-6.3), max(_GLF_FUZZED(-6.3), _GLF_FUZZED(_GLF_IDENTITY(-6.3, min(-6.3, -6.3))))), _GLF_FUZZED(-6.3))) : float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-9.0, 6.7, 72.49).t)), float(0.0), bool(true))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))))))) : _GLF_FUZZED((-15.35 * -4.3))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), false), bvec2(bvec3(bvec2(bool(bvec2(false, false)), false), true)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))))), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))) * _GLF_ONE(1.0, injectionSwitch.y)), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))))), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))) * _GLF_ONE(1.0, injectionSwitch.y)), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))))), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))) * _GLF_ONE(1.0, injectionSwitch.y)), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))))), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))) * _GLF_ONE(1.0, injectionSwitch.y)), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))));
   atomicStore(buf[GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, cos(0.0), sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, cos(0.0), sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat4x3(35.93, 6.5, -1145.1707, 8.3, 6.4, -9.7, 45.42, -690.751, -5.3, -8.6, 1612.2934, 6.8)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid))))))], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, max(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x) - 0u), _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, min(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x))) / 1u), min(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x))) / 1u), _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x))) / 1u))), _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x))) / 1u), _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_14readsubgroup_local_idworkgroup_baseworkgroup_size.x))) / 1u))))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7669.0996), _GLF_FUZZED(-848.250)), bvec2(false, false))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
}
