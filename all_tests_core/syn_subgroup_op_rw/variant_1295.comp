#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-6.3)))) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-570.841), _GLF_FUZZED(2.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, true))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9898.1322)), bool(false))))))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)), bool(bvec3(bool(bvec2(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))) && true))))), true)), false, false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (true && (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(! (true && (_GLF_DEAD(false))), true))))))), bool(bool(! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (true && (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(! (true && (_GLF_DEAD(false))), true))))))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), false))), false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))))) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))) || false), true)))) || false, true, true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec2(bvec2((_GLF_DEAD(false)), true)))))))) || false, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, true, true))))) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (! (true)) && true))), false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (bool(bvec4(false, false, true, false))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (bool(bvec4(false, false, true, false))))), false, true, false)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.8)), vec2(_GLF_FUZZED((7.2)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z, _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z), clamp((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z), ~ (~ ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.z)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec3(148879u, 142326u, 153861u)) : GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))), _GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)), (((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), min((uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u) ^ uvec3(1u, 1u, 1u)) + _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))) ^ uvec3(0u, 0u, 0u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) + _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id), _GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)) ^ uvec3(0u, 0u, 0u), (true ? ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))).z, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec3(148879u, 142326u, 153861u)) : GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))), _GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)), (((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), min((uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u) ^ uvec3(1u, 1u, 1u)) + _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))) ^ uvec3(0u, 0u, 0u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) + _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id), _GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)) ^ uvec3(0u, 0u, 0u), (true ? ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))).z))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(22.30), _GLF_FUZZED((false ? -6.4 : -57.54))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[0] : _GLF_FUZZED(4953.9733))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true)))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(false))))))
      barrier();
     return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))))), false, true, true)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), min(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), (false ? _GLF_FUZZED(-5056.9146) : float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), min(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), (false ? _GLF_FUZZED(-5056.9146) : float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0))))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), min(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), (false ? _GLF_FUZZED(-5056.9146) : float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), min(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)), (false ? _GLF_FUZZED(-5056.9146) : float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(0.0), 0.0))))) > injectionSwitch.y), false, true, false))))), false, true))))))
          barrier();
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(exp(0.0))) > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
            return;
           barrier();
          }
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0)))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     for(int _injected_loop_counter = ((_GLF_IDENTITY(((_GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED((true ? -11386 : -96135)) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), 0), (min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), 0)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (false ? _GLF_FUZZED(-98487) : 0))) << 0), 0), min(min(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), (true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0) : _GLF_FUZZED(-69854)))))), 0), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)))))))) ^ 1) << _GLF_IDENTITY(int(0), int(0))), (((_GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED((true ? -11386 : -96135)) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), 0), (min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), 0)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (false ? _GLF_FUZZED(-98487) : 0))) << 0), 0), min(min(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), (true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0) : _GLF_FUZZED(-69854)))))), 0), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98487) : 0))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)))))))) ^ 1) << _GLF_IDENTITY(int(0), int(0)))) ^ 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? 0 : _GLF_FUZZED(-26252)))), int(_GLF_IDENTITY(0, (0) << 0)))) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))) | (_injected_loop_counter)) > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 1.0)).y)))))) || false))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true, true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false))) && true), true))))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.24)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7490.5121)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)))))) || false)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false))), true))), true)))) && true)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat4x2(vec2(injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0))))).y, float(float(injectionSwitch.y)))) && true)))))
          continue;
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
          break;
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))))), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x)) < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0)))).y), ((injectionSwitch.x < injectionSwitch.y)) || false))) || false)), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), bool(bvec2((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), false, false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), false, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), false, false))), false), true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) - 0u))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base))) : ((subgroup_size)))) | ((subgroup_size)))))) | ((subgroup_size))) ^ 0u, (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))))) | ((subgroup_size))) ^ 0u) | (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))), _GLF_IDENTITY(uint(uvec3(max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))), (1u & 1u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uint(uvec3(max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))), (1u & 1u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u)))) | ((subgroup_size))) ^ 0u))), (false ? _GLF_FUZZED(atomicMin(workgroup_size, subgroup_local_id)) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base))) : ((_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base))) : ((_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))))) << 0u))) | ((subgroup_size)))))) | ((subgroup_size))) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))))) | ((subgroup_size))), 0u ^ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))))) | ((subgroup_size))))) ^ 0u) | (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)), max(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size))))) - 0u))), _GLF_IDENTITY(uint(uvec3(max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | _GLF_IDENTITY(((subgroup_size)), uint(uvec2(_GLF_IDENTITY(((subgroup_size)), uint(uvec4(((subgroup_size)), 0u, 0u, 0u))), 1u))))), (1u & 1u), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uint(uvec3(max((subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((subgroup_size)))) | ((subgroup_size)))), (1u & 1u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u)))) | ((subgroup_size))) ^ 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(abs(893.351), (abs(893.351)) - 0.0))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(abs(893.351), (abs(893.351)) - 0.0))))))), true, false, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(893.351))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
  {
   GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.y = virtual_gid;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), bool(true))), abs(0.0), 1.0, 1.0, 0.0))))), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((+ -9.3), clamp((+ -9.3), (+ -9.3), (+ -9.3))))), float(1.0), bool(true))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0)))))))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, true, true)))), (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) ^ (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        break;
       barrier();
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, int(int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, false, true, true)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(9.2), ((injectionSwitch) / vec2(1.0, 1.0))[1]), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED((+ -1.1))), bvec2(true, false)))))))).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)), clamp(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)), (false ? _GLF_FUZZED(94.46) : float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)), min(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-43.11) : injectionSwitch.y)), exp(0.0), sin(0.0), 0.0)))))))))))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          return;
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false, false), _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3(bvec2(false, false), _GLF_IDENTITY(true, false || (true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((223.996))), float(injectionSwitch.y), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.x = next_virtual_gid;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)), 1.0)), float(mat3x4(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, ((1.0) - 0.0) + 0.0)))), 1.0)), 1.0)), 1.0)), float(mat3x4(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))), (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(2419.2746))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max((0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), 0 | ((0 << _GLF_IDENTITY(int(1), int(1))))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(24421) : _injected_loop_counter ++)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(1, (1) >> 0)], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) : GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))[2]) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (true ? GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id : _GLF_FUZZED(uvec3(105907u, 116350u, 82373u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))[2])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), 0u ^ (_GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), (min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))) - 0u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), 0u ^ (_GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), (min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))) - 0u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), 0u ^ (_GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), (min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))) - 0u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))))))))))) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(143760u, 195512u, 115240u)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | 0u), _GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), 0u ^ (_GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) >> uvec3(0u, 0u, 0u))[0]), max((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) >> uvec3(0u, 0u, 0u))[0]), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) >> uvec3(0u, 0u, 0u))[0]))) ^ 0u)), (min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], 0u ^ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0])), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))) - 0u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], uint(uvec2(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], 0u))), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)), uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(98835) : 0))], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0)))], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec3(135093u, 178469u, 167826u)) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) | uvec3(0u, 0u, 0u))))[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), 0u ^ (_GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), (min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))) - 0u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, _GLF_IDENTITY(~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)), (~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id))[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), uint(uvec2((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (1u ^ 0u)))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (false ? _GLF_FUZZED(186232u) : ~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), min((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), uint(uvec3((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), 0u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(2, ~ (~ (2)))], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(0, 1 * (0))], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), 0u ^ (_GLF_IDENTITY(min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u)), (min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))) - 0u)))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, _GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))), (uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))))))) ^ uvec3(0u, 0u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), uint(uvec2(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), clamp(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), clamp((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u))), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), max((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), uint(uvec2(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), clamp(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), clamp((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u))), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))))))) / uvec3(1u, 1u, 1u)))))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u, 1u, 1u), 1u), (uvec4(uvec3(1u, 1u, 1u), 1u)) - uvec4(0u, 0u, 0u, 0u))))))), uvec3(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], min(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0) << 0, 0 | ((0) << 0))) << 0))], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) ^ 0u))), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]), ((GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])) ^ 0u) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u))[2]), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u))[2]), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u))[2])) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u))[2]), 0u + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u))[2])))))) - 0u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], 0u | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))), (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], 0u | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))) ^ 0u))), (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) + uvec3(0u, 0u, 0u))[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) + uvec3(0u, 0u, 0u))[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]) | (0u | 0u)), GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) + uvec3(0u, 0u, 0u))[2], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2]))) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))))))))))))))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], 0u ^ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]))) << (1u ^ (1u ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]))) ^ 0u), 0u ^ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]))) << (1u ^ (1u ^ 0u))), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(int(0))), 0))], 0u ^ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]))) << _GLF_IDENTITY((1u ^ (1u ^ 0u)), ((1u ^ (1u ^ 0u))) ^ 0u)), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], 0u ^ (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0]))) << (1u ^ (1u ^ 0u))))), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) >> uvec3(0u, 0u, 0u))))[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2], (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, min(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id) ^ uvec3(0u, 0u, 0u))))[_GLF_IDENTITY(2, (2) | (2))]) | (GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])))))).y], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? (0) : _GLF_IDENTITY(_GLF_FUZZED(54757), min(_GLF_IDENTITY(_GLF_FUZZED(54757), (_GLF_FUZZED(54757)) ^ 0), _GLF_FUZZED(54757))))) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))));
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(3738)), max(_GLF_FUZZED(float(3738)), _GLF_IDENTITY(_GLF_FUZZED(float(3738)), min(_GLF_FUZZED(float(3738)), _GLF_FUZZED(float(3738)))))), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(_GLF_FUZZED(float(3738)), max(_GLF_FUZZED(float(3738)), _GLF_IDENTITY(_GLF_FUZZED(float(3738)), min(_GLF_FUZZED(float(3738)), _GLF_FUZZED(float(3738))))))), bool(true))), _GLF_FUZZED(_GLF_IDENTITY(-0.7, mix(float(_GLF_FUZZED(vec3(-9.3, 6.2, 2.9).z)), float(-0.7), bool(true))))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-4.2)), float(abs(1.0)), bool(true))), abs(1.0))), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0))))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), false, true)))))), mix(vec2(_GLF_FUZZED(-87.45), _GLF_FUZZED(14.48)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(3738)), max(_GLF_FUZZED(float(3738)), _GLF_IDENTITY(_GLF_FUZZED(float(3738)), min(_GLF_FUZZED(float(3738)), _GLF_FUZZED(float(3738)))))), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(_GLF_FUZZED(float(3738)), max(_GLF_FUZZED(float(3738)), _GLF_IDENTITY(_GLF_FUZZED(float(3738)), min(_GLF_FUZZED(float(3738)), _GLF_FUZZED(float(3738))))))), bool(true))), _GLF_FUZZED(_GLF_IDENTITY(-0.7, mix(float(_GLF_FUZZED(vec3(-9.3, 6.2, 2.9).z)), float(-0.7), bool(true))))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-4.2)), float(abs(1.0)), bool(true))), abs(1.0))), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0))))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), false, true)))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(3738)), max(_GLF_FUZZED(float(3738)), _GLF_IDENTITY(_GLF_FUZZED(float(3738)), min(_GLF_FUZZED(float(3738)), _GLF_FUZZED(float(3738)))))), mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(_GLF_FUZZED(float(3738)), max(_GLF_FUZZED(float(3738)), _GLF_IDENTITY(_GLF_FUZZED(float(3738)), min(_GLF_FUZZED(float(3738)), _GLF_FUZZED(float(3738))))))), bool(true))), _GLF_FUZZED(_GLF_IDENTITY(-0.7, mix(float(_GLF_FUZZED(vec3(-9.3, 6.2, 2.9).z)), float(-0.7), bool(true))))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-4.2)), float(abs(1.0)), bool(true))), abs(1.0))), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0))))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec4(bvec2(bvec2(bvec2(true, true))), false, true)))))))[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mix(vec3((vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(4.1), (vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), vec3(_GLF_FUZZED((+ 2.6)), (vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(930.552)), bvec3(false, true, false)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mix(vec3((vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(4.1), (vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), vec3(_GLF_FUZZED((+ 2.6)), (vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(930.552)), bvec3(false, true, false)))), 0.0 + (float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mix(vec3((vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(4.1), (vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), vec3(_GLF_FUZZED((+ 2.6)), (vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(930.552)), bvec3(false, true, false))))))) * exp(0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false))), (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x), ~ (~ (clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x))))) | (clamp(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id)).x))))], uint(1), _GLF_IDENTITY(4, (4) / 1), 64, _GLF_IDENTITY(4, (4) ^ 0));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))), (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))) : _GLF_FUZZED(degrees(83.08)))), mix(float(_GLF_FUZZED(-2.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))), (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))) : _GLF_FUZZED(degrees(83.08)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))), (true ? injectionSwitch.x : _GLF_FUZZED(7771.3678))) : _GLF_FUZZED(degrees(83.08))))) - length(vec2(0.0, 0.0)))), bool(true))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(abs(1.0), 0.0, 0.0, 1.0), min(_GLF_IDENTITY(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(mat3x2(vec4(abs(1.0), 0.0, 0.0, 1.0), 0.0, 0.0))), vec4(abs(1.0), 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), max(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(abs(1.0), 0.0, 0.0, 1.0), min(_GLF_IDENTITY(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(mat3x2(vec4(abs(1.0), 0.0, 0.0, 1.0), 0.0, 0.0))), vec4(abs(1.0), 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(abs(1.0), 0.0, 0.0, 1.0), min(_GLF_IDENTITY(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(mat3x2(vec4(abs(1.0), 0.0, 0.0, 1.0), 0.0, 0.0))), vec4(abs(1.0), 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), vec4(mat2x4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, 0.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-68.35)), float(1.0), bool(true))), 0.0)), dot(vec4(abs(1.0), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), (vec4(0.0, 1.0, 1.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(93.11)), bool(false))), 0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), ! _GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), (_GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), ((! (bool(bool(subgroup_local_id + 1 < subgroup_size))))) || false)) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), (_GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), ((! (bool(bool(subgroup_local_id + 1 < subgroup_size))))) || false)) && true))), bool(bvec2(bool(! (_GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), (_GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), ((! (bool(bool(subgroup_local_id + 1 < subgroup_size))))) || false)) && true))), false))))))))), bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), true && (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))))
  {
   atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[0], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[1], GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id[2])).y], read, 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, exp(0.0), 0.0, 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0)))[1])), injectionSwitch)).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, exp(0.0), 0.0, 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0)))[1])), injectionSwitch)).x < injectionSwitch.y, true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-606.921)))) - 0.0) : _GLF_FUZZED(1.5))))), injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-13115) : 0)), ~ (~ (0)))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((9.7 + -9.4))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y) && true)) && true))) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true)))) && true))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-50564))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         subgroupAll(false);
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           barrier();
          }
         else
          {
          }
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-67.69))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-67.69))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5300.7651)), bool(false)))))))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0)))))) && true))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 | (~ (_injected_loop_counter ++))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   else
    {
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.y, max(GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.y, GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidvirtual_gidworkgroup_id.y))], _GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, 1u * (read)))), 4, 64, 4);
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false, true, false))))))), false || (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false, true, false))))))))))))))); _injected_loop_counter ++)
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (-49103 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (1 ^ 1) + (_GLF_IDENTITY(int(1), int(1))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) * (_GLF_IDENTITY(1 | 1, min(_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1)), 1 | 1)))))) >> _GLF_IDENTITY(int(4), int(4))), min(_GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (1 ^ 1) + (_GLF_IDENTITY(int(1), int(1))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) * (_GLF_IDENTITY(1 | 1, min(_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1)), 1 | 1)))))) >> _GLF_IDENTITY(int(4), int(4))), (((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (1 ^ 1) + (_GLF_IDENTITY(int(1), int(1))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) * (_GLF_IDENTITY(1 | 1, min(_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1)), 1 | 1)))))) >> _GLF_IDENTITY(int(4), int(4)))) / 1), ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (1 ^ 1) + (_GLF_IDENTITY(int(1), int(1))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) * (_GLF_IDENTITY(1 | 1, min(_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1)), 1 | 1)))))) >> _GLF_IDENTITY(int(4), int(4)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) && true))))))) && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4181.2114)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
