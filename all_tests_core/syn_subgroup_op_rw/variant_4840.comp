#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * subgroup_size + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 83:
     while(true)
      {
       mat3x2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[23], _GLF_SWITCH_0_2v;
       {
        (mat4x3(6.3, 2.8, 97.51, -4479.0441, -8054.1655, 8.6, 976.669, -7.1, 3.8, -6.2, 0.0, 910.306) / -5.2);
        bvec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
        mat4x2(-5.0, 74.95, 42.87, 8.1, -38.14, -5896.9762, 9219.2931, 5.8);
       }
       {
        {
         mat2x3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[71], _GLF_SWITCH_0_8v;
         (mat3x4(-6252.1914, -3649.8487, -848.436, -1883.5406, -8642.7195, -9.0, 237.240, -8848.2885, 4589.9243, -585.204, 165.065, -496.950) + -4012.8125);
         mat3x4(5712.2879, 0.5, -408.510, -7625.2620, 27.55, 28.10, -0.6, -7.6, -88.81, 290.299, 1.1, 3.3);
         (ivec2(-26468, 66057) ^ -3653);
         ivec3 _GLF_SWITCH_0_9v;
        }
        ;
        injectionSwitch;
        if((vec3(4.0, -507.708, -709.665) == vec3(4.3, -170.918, -60.84)))
         {
         }
        greaterThan((-9.4 * exp2(vec3(-3.8, 85.29, -5.8))), vec3(-874.928, -60.97, -90.00));
        ivec4(-86333, 59231, 51840, 81629);
       }
      }
     case 24:
     if((workgroup_base == workgroup_size))
      {
       ;
       for(       mat3(-817.970, -7.4, -2.6, -593.900, -5037.7721, 6703.7237, -401.535, -3.6, -6539.7736);
 all(bvec3(true, true, false)); bvec4(true, true, false, false))
        {
         vec4(-6027.5306, 4.2, -9.8, 72.24);
         mat2(3.4, 17.53, -4354.9080, 42.51);
         mat3x4 _GLF_SWITCH_0_10v;
         uint _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
         {
          mat2x4(-9924.3332, -3.6, -2.2, 6.9, -61.23, 63.81, 71.69, -878.000);
          (uvec2(164165u, 38941u) & subgroup_local_id);
          bvec4 _GLF_SWITCH_0_13v;
          transpose(mat2x3(-43.19, 67.17, -286.504, 2.9, 4384.4517, 505.198));
          mat2x3 _GLF_SWITCH_0_14v[4];
         }
         if(false)
          {
          }
         else
          {
           uvec3 _GLF_SWITCH_0_15v[53];
           bvec4 _GLF_SWITCH_0_16v[11], _GLF_SWITCH_0_17v;
           mat4x2(46.31, -0.2, -7.8, -303.713, -4.1, 967.006, -30.18, -8645.3869);
           notEqual(bvec2(true, false), bvec2(true, false));
          }
         for(         (mat3(69.15, -18.39, -562.072, -9015.3855, 6.5, -349.444, 9.2, 53.79, 96.01) * mat2x3(-7.4, 234.759, -6.6, 9028.5414, -515.474, 5.3));
 false; (false ? clamp(workgroup_id, subgroup_size, workgroup_id) : workgroup_base))
          {
           mat4x2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
           mat4x2(vec4(-68.32, 36.36, -227.106, -569.733)[2]);
           ivec2(-41037, -91246);
           mat2x4 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
          }
         ;
        }
       while(false)
        {
        }
       mat2(-91.15, 870.252, 4860.8784, -0.2);
       for(mat4x2 _GLF_SWITCH_0_23v; (ivec2(-49315, 43050) == ivec2(-31194, 74843)); vec3(-8.8, -91.71, 1.4))
        {
         for(         true;
 true; injectionSwitch)
          {
           mat4x2(-9861.4999, 2.2, -4.0, -65.98, 92.12, -113.746, -8791.2062, -8.1);
           uvec2 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v[97];
           bvec2 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
           ((+ mat4(-501.891, -8497.6070, -2.9, 7.4, 7.8, 3.1, 2.8, 3.9, -3.2, -9.2, 81.36, -3425.6740, 310.132, 3.0, 9.0, -2914.7148)) / mat4(-23.66, 7.0, -79.96, 72.10, 619.143, 512.445, 21.91, -2.7, 471.992, 7751.7686, 3.1, -844.337, -0.7, 37.68, -6232.7775, 6466.8036));
          }
         int _GLF_SWITCH_0_28v[45];
         mat4x2(7.7, 225.543, 9.2, 49.30, 0.3, 0.1, 272.943, 649.200);
         (mat2(-2.1, -8176.2496, -0.3, -6070.2605) * mat2(64.79, -4168.9633, -9139.9526, -7.0));
         bvec4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v;
         vec2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
        }
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 39:
         mat2x3 _GLF_SWITCH_1_0v[32], _GLF_SWITCH_1_1v[47], _GLF_SWITCH_1_2v;
         case 73:
         mat4x2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
         case 0:
         case 33:
         case 51:
         for(         mat2(-6.0, 1.6, -9177.3454, -23.66);
 true; (mat2x3(-4.7, 975.430, 2.8, 508.854, -4.3, 5.4) * mat2(9791.2329, 4577.2012, -1639.9582, -9707.5126)))
          {
           if(false)
            {
             (mat4(0.0, 0.4, 8852.2425, -2.5, 82.80, 89.98, 1.0, -158.471, -1786.8863, 9.4, 80.48, 8603.9208, 13.71, 5.0, -2421.5679, -2.4) , (mat3(1.0, 2830.2310, -1.0, -9.9, 2929.9142, 7668.3573, -417.859, 4006.0891, 171.867) + (mat3(363.836, -9356.2831, 9.7, 85.14, 501.260, -543.611, 399.313, -2.1, -2900.6718) * mat3(9.0, 29.83, 557.539, -94.64, -5040.9754, -95.62, 652.187, -6682.5102, -50.46))));
             mat3x4(mat2x3(-701.337, -8.1, 847.164, 7.5, -1464.4808, 6.2));
             mat3 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
             (62906 - ivec2(-49109, -36606));
             mat2(-0.4, 781.851, -0.2, -270.165);
             mat2 _GLF_SWITCH_0_36v;
             ;
            }
           while(any(bvec4(false, true, false, false)))
            {
             mat3x2 _GLF_SWITCH_0_37v;
             (subgroup_size ^ uvec3(24428u, 164578u, 134535u));
             uvec2(61656u, 87936u);
            }
          }
         case 61:
         case 31:
         ivec3(-31565, -33015, 58761)[1];
         for(uvec3 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v; true; (- mat2(-9.1, -4358.7077, 856.598, 4.3)))
          {
           do
            {
             mat4 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v[78];
             vec2(-4677.3013, -1812.2745);
             mat3 _GLF_SWITCH_0_42v[25], _GLF_SWITCH_0_43v;
             ;
             vec4(6.4, 2.9, -1333.3912, -9.7);
             84388;
             float _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[1], _GLF_SWITCH_0_46v;
            }
           while(false);
           while(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 97:
               lessThanEqual(injectionSwitch, asinh(vec2(-2.8, -0.4)));
               case 7:
               mat3x4(-5556.1131, 6.7, -1.7, -8145.0998, 7.7, 815.476, -3.9, -385.082, 3089.2597, 5.9, 4.0, 0.8);
               case 0:
               mat4x3(-8405.3130, -8266.0717, 6751.1946, 2.1, -1.2, -32.25, -533.414, 32.20, -96.64, -2.0, -671.052, -5361.1653);
               case 12:
               packSnorm4x8(vec4(-8.6, 266.807, 5498.6039, -629.781));
               ivec3(-25884, 79198, 82864);
               (workgroup_id % bitfieldReverse(uvec4(135287u, 120947u, 64323u, 30514u)));
               break;
               case 36:
               ivec4 _GLF_SWITCH_1_0v;
               default:
               1;
              }
            }
          }
         case 96:
         true;
         case 66:
         mat4 _GLF_SWITCH_0_47v[43], _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
         case 22:
         max(vec3(-90.59, 8.3, 875.728), vec3(-1102.0038, -4461.0360, 98.96));
         break;
         case 80:
         lessThanEqual(ivec3(28507, 27536, -4000), ((67749 * -63136) - ivec3(-33058, 66991, 15326)));
         default:
         1;
        }
      }
     case 0:
     case 77:
     case 26:
     case 20:
     case 37:
     case 17:
     atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], read, 4, 64, 4);
     case 21:
     case 65:
     case 82:
     case 14:
     subgroupAll(false);
     break;
     case 92:
     mat2x4 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v[97], _GLF_SWITCH_0_52v[28];
     default:
     1;
    }
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], read, 4, 64, 4);
   subgroupAll(true);
  }
}
