#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))))) || false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0)))])).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z = _GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) << uvec3(0u, 0u, 0u)).y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, float(mat3x4(injectionSwitch.x, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0))), float(_GLF_FUZZED(64.03)), bool(false))), 0.0))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.03)), bool(false))), 0.0))) / 1.0), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.03)), bool(false))), 0.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.03)), bool(false))), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.03)), bool(false))), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0))) - 0.0))) / 1.0)) + 0.0)), float(_GLF_FUZZED(-83.33)), bool(false))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(430.027, 3598.7045, -76.85).z)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) * (1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(1557.2705, -7.3)))))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8572.5924))))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-839.396)), float(0.0), bool(true))), 0.0)), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-652.189, 476.269, -3.5, -84.18, 9.6, -3.2, _GLF_IDENTITY(3.2, clamp(3.2, _GLF_IDENTITY(3.2, clamp(3.2, 3.2, _GLF_IDENTITY(3.2, clamp(3.2, 3.2, 3.2)))), 3.2)), 4.8, -5.7, -5218.7959, _GLF_IDENTITY(-7.2, float(mat4x3(_GLF_IDENTITY(-7.2, clamp(_GLF_IDENTITY(-7.2, (-7.2) - 0.0), -7.2, -7.2)), sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0))), 4.7, -0.4, -8.0, 7.4, -2609.9688)) : mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8572.5924))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4983.9217), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), bvec2(true, false))).y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, tan(0.0), 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))))))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(95.06)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), true)), bool(bvec4(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), true)), true, true, false)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-407.739) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(5370.4639) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)))))))))
  {
  }
 else
  {
   GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x = workgroup_base;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true), _GLF_IDENTITY(false, ! (! (false))), false, false)))))))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(subgroup_id)) : GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size)).x + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) | (4)))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) | (4)))), 64, 2)) | 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), max(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (atomicLoad(buf[virtual_gid], 4, 64, 2)))), 1u * (~ (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), (0u | 0u) ^ ((virtual_gid)))) ^ 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 4, 64, 2), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (atomicLoad(buf[virtual_gid], 4, 64, 2))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (atomicLoad(buf[virtual_gid], 4, 64, 2)))), 1u * (~ (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), (0u | 0u) ^ ((virtual_gid)))) ^ 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))), ~ (~ ((_GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))))))))), ~ (~ ((_GLF_IDENTITY((virtual_gid), (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))), ~ (~ ((_GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))))))))))) ^ 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), (0u | 0u) ^ ((virtual_gid)))) ^ 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((num_workgroup ^ subgroup_size)))))))], 4, 64, 2), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u | (5u))))), (false ? _GLF_FUZZED((31816u - subgroup_id)) : ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u | (5u))))))) * (atomicLoad(buf[virtual_gid], 4, 64, 2))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 + (6))), int(6)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((subgroup_local_id % 2) == 0)
    {
     subgroupAll(false);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], uint(1), 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), ! (! (true && (_GLF_IDENTITY(true, true && (true)))))), false, false, false))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false, true, true))) && true)), false || (_GLF_IDENTITY(false, ! (! (false))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8391.3611)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8391.3611)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))) > injectionSwitch.y) || false)))))
          barrier();
        }
      }
     do
      {
       atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 ^ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4))))), (true ? _GLF_IDENTITY(~ (4), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), 1, 1), max(ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), 1, 1), ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), 1, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), 1, 1), max(ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), 1, 1), ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(91154) : 4)), 1, 1))))) + 0))))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), 1 * ((_GLF_IDENTITY(4, ~ (~ (4)))))) / 1))), ~ (~ (4))), 0, 1)))), (ivec3(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (~ (~ (4)))))), 0, 1)) << ivec3(0, 0, 0))), int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), 0, 1), (ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> 0)), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(_GLF_IDENTITY(1, ~ (~ (1))), 0, ((0 | 0) & 26924), 0)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1) >> 0, ((_GLF_IDENTITY(1, (1) >> 0)) >> 0) + 0)))) << _GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, max(0, 0))), ivec3(ivec3(ivec3(0, 0, 0))))))), (0 << _GLF_IDENTITY(int(5), int(5))) + (int(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), 0, 1), (ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> 0)), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(_GLF_IDENTITY(1, ~ (~ (1))), 0, ((0 | 0) & 26924), 0)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1) >> 0, ((_GLF_IDENTITY(1, (1) >> 0)) >> 0) + 0)))) << _GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, max(0, 0))), ivec3(ivec3(ivec3(0, 0, 0)))))))))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false))), false)), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false, false)))) && true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))) || false))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(floor(vec2(1.2, 273.095))))).x > injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), false))))))), true)))), false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), false, _GLF_IDENTITY(true, true && (true)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))), false, _GLF_IDENTITY(true, true && (true)), true))))))))), true, true), false))), false)), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y)), true, true))))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(5.5)), bvec2(false, false)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(-80.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), mat2(mat3x2(mat2(mat4x2(mat2(1.0)))))))).x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(-80.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), mat2(mat3x2(mat2(mat4x2(mat2(1.0)))))))).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(-80.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), mat2(mat3x2(mat2(mat4x2(mat2(1.0)))))))).x > injectionSwitch.y))))), bool(bvec3(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(-80.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), mat2(mat3x2(mat2(mat4x2(mat2(1.0)))))))).x > injectionSwitch.y))))), false, false))))))) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(308.909, 281.542)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   subgroupBarrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-90602) : 4)), 64, _GLF_IDENTITY(4, int(ivec3(4, 0, 1))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
