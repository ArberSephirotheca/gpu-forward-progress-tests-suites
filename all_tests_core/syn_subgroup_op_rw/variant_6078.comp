#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))), (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) && (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) && (_GLF_DEAD(false))), bool(bvec4(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) && (_GLF_DEAD(false))), true, true, false))), true, true, true)))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(37.82)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) * 1.0)) : _GLF_FUZZED(37.82)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) * 1.0)) : _GLF_FUZZED(37.82))))))))) || false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))) || false)))))))))))))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false))), false))), ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, ! (! (false))))), (! (true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false, true, true, true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bool((true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), false, true, true)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))))))))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))) || false, true, true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), uvec3(uvec4(gl_WorkGroupID, 0u))), gl_WorkGroupID), (min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), gl_WorkGroupID)) << uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))), uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) ^ (min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupID, 0u))), clamp(~ (uvec3(uvec4(gl_WorkGroupID, 0u))), _GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupID, 0u))), ~ (~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), ~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))))), gl_WorkGroupID))), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupID, 0u))), _GLF_IDENTITY(uvec3(uvec3(~ (uvec3(uvec4(gl_WorkGroupID, 0u))))), (true ? uvec3(uvec3(~ (uvec3(uvec4(gl_WorkGroupID, 0u))))) : _GLF_FUZZED(uvec3(137574u, 142806u, 132605u)))))))), gl_WorkGroupID), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)))).x), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupID, 0u))), (false ? _GLF_FUZZED(uvec3(20960u, 101251u, 31878u)) : ~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))))), gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(170644u, 18355u, 53898u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(170644u, 18355u, 53898u))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(170644u, 18355u, 53898u)))))) | ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(113382u, 38083u, 12098u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u)))))), gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(170644u, 18355u, 53898u)))))))) >> uvec3(0u, 0u, 0u))).x), 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), gl_WorkGroupID)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u))))))), _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(108450u, uint(uvec3(108450u, 1u, 0u))), 108132u, 188798u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u))))))), _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(108450u, uint(uvec3(108450u, 1u, 0u))), 108132u, 188798u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u))))))), _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(108450u, uint(uvec3(108450u, 1u, 0u))), 108132u, 188798u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u))))))), _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(108450u, uint(uvec3(108450u, 1u, 0u))), 108132u, 188798u))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false)) ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(108450u, 108132u, 188798u))))))), _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(108450u, uint(uvec3(108450u, 1u, 0u))), 108132u, 188798u)))))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), gl_WorkGroupID)).x) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) & uvec3(96390u, 159377u, 7063u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), 0u)), (false ? _GLF_FUZZED(uvec3(uvec4(103221u, 194075u, 46859u, 21328u))) : uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | ((uvec3(0u, 0u, 0u) & uvec3(96390u, 159377u, 7063u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | ((uvec3(0u, 0u, 0u) & uvec3(96390u, 159377u, 7063u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | ((uvec3(0u, 0u, 0u) & uvec3(96390u, 159377u, 7063u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), 0u))))), gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), gl_WorkGroupID)).x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | 0u), (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | 0u)) / 1u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)))), (~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | 0u, ((workgroup_id) | 0u) | (_GLF_IDENTITY((workgroup_id) | 0u, clamp((workgroup_id) | 0u, (workgroup_id) | 0u, (workgroup_id) | 0u))))), _GLF_IDENTITY(workgroup_id, (workgroup_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), workgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u))))) - 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id, workgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u))), uint(uint(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id, workgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u)))))))) - 0u))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))), (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = (0 & -57169); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 | 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 0.0, 0.0, 0.0)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))), true, true, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(36.26), _GLF_FUZZED(9046.7949), (vec3(0.0, 0.0, 1.0))[2]), vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], _GLF_FUZZED(-7.8)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec3(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0)), (dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, cos(0.0), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, cos(0.0), 0.0)))))), mix(vec3(_GLF_FUZZED(36.26), _GLF_FUZZED(9046.7949), (vec3(0.0, 0.0, 1.0))[2]), _GLF_IDENTITY(vec3((vec3(0.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5832.4577))))), vec3(_GLF_IDENTITY(vec3(vec3((vec3(0.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5832.4577)))))), clamp(vec3(vec3((vec3(0.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5832.4577)))))), vec3(vec3((vec3(0.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5832.4577)))))), vec3(vec3((vec3(0.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5832.4577)))))))))), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false))), vec3(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0))) / 1.0)), 1.0, 0.0))), true, true, _GLF_IDENTITY(false, ! (! (false))))))))), true && (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-7954.5040)), bool(false))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)))), 0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), true, true, false)))))))))) && true))))
        return;
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), 0 ^ (_GLF_IDENTITY((0) | (0), ~ (~ (_GLF_IDENTITY((0) | (0), _GLF_IDENTITY(0, 0 | (0)) ^ ((0) | (0))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                break;
               break;
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))), bool(bvec3(! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))), false, false))))), _GLF_IDENTITY(! (! (! ((! (false))))), (! (! (! ((! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bool(((! (false)))), (bool(((! (false))))) || false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bool(((! (false)))), (bool(((! (false))))) || false))))))), ! (! (bool(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bool(((! (false)))), (bool(((! (false))))) || false))))))))))))))))))))))
      return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id))) / 1u), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base)))) << 0u))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.6, 14.29)) : injectionSwitch)).y)) ? (subgroup_local_id) : _GLF_FUZZED((subgroup_size >> subgroup_size))))) << 0u) - 0u), subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), 1u, 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u, 1u)))))) - 0u), subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | _GLF_IDENTITY((workgroup_base + subgroup_base), (true ? _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base + subgroup_base))) : _GLF_FUZZED(workgroup_id)))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id))) >> 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))), true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))), ((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true), false, true, true))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true), true)))))))) || false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, true), true))))))), ((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))), ((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))), ((bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), true && ((false))), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))))) || false)))))))) || false)) && true))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), true, true))), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true))))), false))))), true)))))))))) && true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))), false || (bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), bvec3(bvec4(bvec3(! (false), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), bvec3(bvec4(bvec3(! (false), true, true), true)))), true, true, true)))))))))))))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec3(vec2(1.0, 1.0), 0.0))))) / vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), float(mat2x4(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.8)), bool(false))))), 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), max(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * mat2(1.0)))), vec2(1.0, 1.0))))), 0.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0)), (determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0))) * 1.0), 0.0, 1.0)), (float(mat4(injectionSwitch.y, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0))))))), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0)))), dot(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), float(float(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))))), 1.0, 0.0, 0.0, exp(tan(0.0)), 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), clamp(float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), min(float(mat4(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat4(1.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-320.572)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))), 0.0, log(cos(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0), transpose(transpose(mat4x3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-320.572)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))), 0.0, log(cos(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec3(mat3x4(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, sqrt(1.0))))), float(mat2x4(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))))), 1.0)), dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(1.0, 1.0))), 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2357.9475) : 0.0)), 0.0)), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0)), 0.0, 1.0))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0), float(mat3x4(clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false), false)))))))))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))), ((bool(bvec4(false, true, false, true)))) && true) || false)))))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid))))) | (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((virtual_gid), uint(uvec2((virtual_gid), 0u))))))) | 0u)))], 4, 64, _GLF_IDENTITY(2, (2) ^ 0));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(-58260)), (_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(-58260)), ((true ? 2 : _GLF_FUZZED(-58260))) ^ (-36282 & 0))) << 0)), max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-58260))), _GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-58260))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-58260)))), min((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-58260)))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-58260))))))))))))) == 0)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.7))))), 0.0, 1.0, 0.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.7))))), 0.0, 1.0, 0.0))) - 0.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && true)))))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false)))))).y), false || _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? _GLF_FUZZED(1772.3330) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), vec2(1.0, 1.0) * ((injectionSwitch) / cos(vec2(0.0, 0.0))))).y)))), true && ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1772.3330) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1772.3330) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))), true, _GLF_IDENTITY(false, true && (false)), true))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       subgroupAll(false);
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true))) || false))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true))) || false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true))) || false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true))) || false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-25.91)), vec2(_GLF_FUZZED(2.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-25.91)), vec2(_GLF_FUZZED(2.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), false || (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), false || (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)), _GLF_IDENTITY(false || _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), true)), true && (bool(bvec2(bool(bvec3((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), true)))))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))), false || (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false)), true)))), _GLF_IDENTITY(false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-362.468)), bool(false)))))))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-362.468)), bool(false))))))))))))))), (false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))) && true))))) || false))), bool(bvec4(false, false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (true)), bool(bvec2(true, true)))))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))), (! (false)) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) || false), _GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || false)))))) && true)))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), (! (false)) && true))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, ((1 ^ 0) & ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, ((1 ^ 0) & ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 0), min(_GLF_IDENTITY(ivec4(1, 1, ((1 ^ 0) & ((_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-16757))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 0), min(ivec4(1, 1, ((1 ^ 0) & ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(ivec2(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 0), ivec4(1, 1, ((1 ^ 0) & ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), int(0)))), 0))), _GLF_IDENTITY(ivec4(1, 1, ((1 ^ 0) & ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(0, min(0, 0))), ~ (~ (ivec4(1, 1, ((1 ^ 0) & ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 0)))))), (ivec4(1, 1, ((1 ^ 0) & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), 1, 1))))), 0)) >> ivec4(0, 0, 0, 0))) / ivec4(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ 0), 1)))), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), int(int(max(1, 1)))), (true ? _GLF_IDENTITY(max(1, 1), int(int(max(1, 1)))) : _GLF_FUZZED(29974))), int(ivec3(max(1, 1), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-78460) : 0)), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), int(int(max(1, 1)))), int(ivec3(max(1, 1), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-78460) : 0)), 1)))) >> 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, 0 ^ (1))), int(ivec3(max(1, 1), 0, 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), int(ivec3(max(1, 1), 0, _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(max(1, 1), int(ivec3(max(1, 1), 0, 1)))), (~ (_GLF_IDENTITY(max(1, 1), int(ivec3(max(1, 1), 0, _GLF_IDENTITY(1, (1) | (1))))))) - 0), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec3(max(1, 1), 0, 1), max(ivec3(max(1, 1), 0, 1), ivec3(max(1, 1), 0, 1)))))), (~ (_GLF_IDENTITY(max(1, 1), int(ivec3(max(1, 1), 0, _GLF_IDENTITY(1, (1) | (1))))))) - 0)) / 1))), _GLF_IDENTITY(max(1, 1), int(ivec3(_GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))) | (max(1, 1))), 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), int(ivec3(max(1, 1), 0, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), int(ivec3(max(1, 1), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)))))))))), 0 | (_GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec3(max(1, 1), 0, _GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(ivec3(max(1, 1), 0, 1), (ivec3(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), 0, 1)) << ivec3(0, 0, 0))) / ivec3(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))), 1, 1)))))) : _GLF_FUZZED(97542))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), ~ (~ _GLF_IDENTITY(((64)), 0 ^ (_GLF_IDENTITY(((64)), (((64))) / 1))))) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(64, (64) | (64))) >> 0), 0)))) - (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(4, (4) / 1));
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, true, false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
          return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(266.001), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((+ -405.548))), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 1u, (0u ^ 1u))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((1)), clamp(~ ((1)), ~ ((1)), _GLF_IDENTITY(~ ((1)), 0 | (~ ((1))))))), int(_GLF_IDENTITY(int(~ (_GLF_IDENTITY(~ ((1)), clamp(~ ((1)), ~ ((1)), _GLF_IDENTITY(~ ((1)), 0 | (~ ((1)))))))), min(int(~ (_GLF_IDENTITY(~ ((1)), clamp(~ ((1)), ~ ((1)), _GLF_IDENTITY(~ ((1)), 0 | (~ ((1)))))))), int(~ (_GLF_IDENTITY(~ ((1)), clamp(~ ((1)), ~ ((1)), _GLF_IDENTITY(~ ((1)), 0 | (~ ((1)))))))))))))))), (uint(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), clamp(~ ((1)), ~ ((1)), _GLF_IDENTITY(~ ((1)), 0 | (~ ((1)))))))))))) | 0u), ~ (~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, max((0u) / 1u, (0u) / 1u))) + _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), max(_GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), (clamp(uint(1), uint(1), uint(1))) - 0u), clamp(uint(1), uint(1), uint(1)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))))), ((_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) | (ivec3(0, 0, 0) & ivec3(36008, ivec2(-67242, -85406)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))), 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY(ivec3(ivec4(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 0), _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(~ (ivec3(ivec4(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 0), _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))))), (_GLF_IDENTITY(~ (ivec3(ivec4(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 0), _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))))), ivec3(0, 0, 0) ^ (~ (ivec3(ivec4(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 0), _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))))))) - ivec3(0, 0, 0))))), clamp(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0)))))) - (ivec3(36955, 92699, 46450) & ivec3(0, 0, 0)))) - _GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, 0) ^ ivec3(0, 0, 0), max(ivec3(0, 0, 0) ^ ivec3(0, 0, 0), ivec3(0, 0, 0) ^ ivec3(0, 0, 0)))), (true ? _GLF_IDENTITY((ivec3(0, 0, 0) ^ ivec3(0, 0, 0)), (false ? _GLF_FUZZED(ivec3(31296, -49530, -54997)) : (ivec3(0, 0, 0) ^ ivec3(0, 0, 0)))) : _GLF_FUZZED(ivec3(-50921, 91174, -58647))))), _GLF_IDENTITY((ivec3(4, 1, 0)), clamp((ivec3(4, 1, 0)), (ivec3(4, 1, 0)), _GLF_IDENTITY((ivec3(4, 1, 0)), clamp((ivec3(4, 1, 0)), (ivec3(4, 1, 0)), (ivec3(4, 1, 0)))))) | (ivec3(0, 0, 0) & ivec3(36008, ivec2(-67242, _GLF_IDENTITY(-85406, (_GLF_IDENTITY(-85406, int(_GLF_IDENTITY(int(-85406), (true ? int(-85406) : _GLF_FUZZED(14215)))))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6))))))))))), max((_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) | (ivec3(4, 1, 0))), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, max(4, 4)), 1, 0), ivec3(_GLF_IDENTITY(ivec4(ivec3(4, 1, 0), 0), min(ivec4(ivec3(4, 1, 0), 0), ivec4(ivec3(4, 1, 0), 0))))), _GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0)))))) - (ivec3(36955, 92699, 46450) & ivec3(0, 0, 0)))) - _GLF_IDENTITY((ivec3(0, 0, 0) ^ ivec3(0, 0, 0)), _GLF_IDENTITY((true ? _GLF_IDENTITY((ivec3(0, 0, 0) ^ ivec3(0, 0, 0)), (false ? _GLF_FUZZED(ivec3(31296, -49530, -54997)) : (ivec3(0, 0, 0) ^ ivec3(0, _GLF_IDENTITY(0, max(0, 0)), 0)))) : _GLF_FUZZED(ivec3(-50921, 91174, -58647))), max((true ? _GLF_IDENTITY((ivec3(0, 0, 0) ^ ivec3(0, 0, 0)), (false ? _GLF_FUZZED(ivec3(31296, -49530, -54997)) : (ivec3(0, 0, 0) ^ ivec3(0, _GLF_IDENTITY(0, max(0, 0)), 0)))) : _GLF_FUZZED(ivec3(-50921, 91174, -58647))), (true ? _GLF_IDENTITY((ivec3(0, 0, 0) ^ ivec3(0, 0, 0)), (false ? _GLF_FUZZED(ivec3(31296, -49530, -54997)) : (ivec3(0, 0, 0) ^ ivec3(0, _GLF_IDENTITY(0, max(0, 0)), 0)))) : _GLF_FUZZED(ivec3(-50921, 91174, -58647))))))), _GLF_IDENTITY((ivec3(4, 1, 0)), clamp((ivec3(4, 1, 0)), (ivec3(4, 1, 0)), (ivec3(4, 1, 0)))) | (ivec3(0, 0, 0) & ivec3(36008, ivec2(-67242, _GLF_IDENTITY(-85406, (-85406) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))))))))))), (_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), clamp(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), (_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0)))) | (_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0)))))))) - (_GLF_IDENTITY(ivec3(36955, 92699, 46450), (ivec3(36955, 92699, 46450)) >> ivec3(0, 0, 0)) & ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), clamp(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0))), (_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0)))) | (_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec4(ivec3(4, 1, 0), 0)))))))) - (_GLF_IDENTITY(ivec3(36955, 92699, 46450), (ivec3(36955, 92699, 46450)) >> ivec3(0, 0, 0)) & ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ (0)))))))) - ivec3(0, 0, 0)) - _GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, 0) ^ ivec3(0, 0, 0), (true ? _GLF_IDENTITY(ivec3(0, 0, 0) ^ ivec3(0, 0, 0), max(ivec3(0, 0, 0) ^ ivec3(0, 0, 0), ivec3(0, 0, 0) ^ ivec3(0, 0, 0))) : _GLF_FUZZED(ivec3(29707, 16466, 28636))))), (true ? _GLF_IDENTITY((ivec3(0, 0, 0) ^ ivec3(0, _GLF_IDENTITY(0, int(int(0))), 0)), (false ? _GLF_FUZZED(ivec3(31296, -49530, -54997)) : (ivec3(0, 0, 0) ^ ivec3(0, 0, 0)))) : _GLF_FUZZED(ivec3(-50921, 91174, -58647))))), _GLF_IDENTITY((ivec3(4, 1, 0)), clamp((ivec3(4, 1, 0)), (ivec3(4, 1, 0)), (ivec3(4, 1, 0)))) | (ivec3(0, 0, 0) & ivec3(36008, ivec2(-67242, _GLF_IDENTITY(-85406, (-85406) << (0 << _GLF_IDENTITY(int(6), int(6)))))))))))))))) << 0), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), _GLF_IDENTITY(~ (64), max(~ (64), ~ (64)))))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-57572) : 64)), _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(64, ~ (~ (64)))), ~ (~ (clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-57572) : 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (64) | 0), _GLF_IDENTITY(64, ~ (~ (64))))))), clamp(64, _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(31727))), (true ? 64 : _GLF_FUZZED(-52957))), _GLF_IDENTITY(64, (64) | 0)), max(clamp(64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-52957))), _GLF_IDENTITY(64, (64) | 0)), clamp(64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-52957))), _GLF_IDENTITY(64, (64) | 0)))))), ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-52957))), _GLF_IDENTITY(64, (64) | 0))))) << 0))))))), _GLF_IDENTITY(4, (4) / 1));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || false))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)))) : _GLF_FUZZED(atanh(injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(injectionSwitch)))).y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
            return;
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) && true))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(791.899), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(14.37)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, true)), false, true)), ! (! (bool(bvec3(bool(bvec3(true, true, true)), false, true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, true)), false, true)), ! (! (bool(bvec3(bool(bvec3(true, true, true)), false, true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, true)), false, true)), ! (! (bool(bvec3(bool(bvec3(true, true, true)), false, true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, true)), false, true)), ! (! (bool(bvec3(bool(bvec3(true, true, true)), false, true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, true)), false, true)), bool(bvec4(bool(bvec3(bool(bvec3(true, true, true)), false, true)), false, true, false))), ! (! (bool(bvec3(bool(bvec3(true, true, true)), false, true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch), min(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 43.10))), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, true)), true && (bool(bvec3(true, true, true)))), false, true)), ! (! (bool(bvec3(bool(bvec3(true, true, true)), false, true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))))))) || false)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))));
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (((_GLF_IDENTITY(1, (1) ^ 0) ^ (0 | 0)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), int(0))), ! (! (_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY((1 ^ (_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), (int(0)) << 0)), ~ (~ ((1 ^ (_GLF_IDENTITY(0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((_injected_loop_counter ++)) : 0)) | _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY((1 ^ (_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0)))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), (int(0)) << 0)), ~ (~ ((1 ^ (_GLF_IDENTITY(0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((_injected_loop_counter ++)) : 0)) | _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * 1) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) - 0), int(0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))))), (_GLF_IDENTITY(int(0), int(0))) ^ 0) : _GLF_FUZZED(_injected_loop_counter)))))))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))), true, false)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), (int(4)) | (int(4))))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), true))))))), bool(bvec3(false, true, false)))))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
            return;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            break;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
            continue;
           continue;
          }
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) * 1.0), injectionSwitch.y))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true)))) - 0.0, ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, clamp(2.8, 2.8, 2.8)))), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true)))) - 0.0) - 0.0))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.67)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.7) : injectionSwitch.y)), injectionSwitch.y))), bool(true))), mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), mix(float(_GLF_FUZZED(-3865.0771)), float(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true)))) - 0.0))) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), (_GLF_FUZZED(2.8)) / 1.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), max(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.1, -4274.6047)) : injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), (vec2(mat3(injectionSwitch, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0))) - vec2(0.0, 0.0))).y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), injectionSwitch.y))), bool(true)))) - 0.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)) / 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-92.08)))) * 1.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(1512.3878)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(854.173) : (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)) / 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-92.08)))) * 1.0)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(1512.3878)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(854.173) : (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0)))))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.y), bool(true)))))) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true)))) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), 0.0)))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(2.3))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), injectionSwitch.y))), bool(true)))) - 0.0)), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false, ! (_GLF_IDENTITY(! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false), ! (! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)) * 1.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-16.10, 54.77)) : injectionSwitch)), injectionSwitch)).y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y)), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y))) * 1.0)), bool(_GLF_IDENTITY(true, (true) && true))))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (true ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(5.3)))), injectionSwitch.y))), bool(true)))) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), float(vec2(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), sqrt(1.0)))))))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), clamp(_GLF_FUZZED(2.8), _GLF_FUZZED(2.8), _GLF_FUZZED(2.8)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-576.044)), bool(false))), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0))) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y))), bool(true)))) - 0.0)), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false, ! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), (false ? _GLF_FUZZED((-9.9 * min(-17.90, -3.8))) : max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) / 1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) * 1.0), injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, true && (false))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y)) - 0.0))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(true)))))) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_FUZZED(7352.1029)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(true)))), float(_GLF_FUZZED(-3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(-59.43, -1.6)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))), bool(true)))) - 0.0))) || false)))))))))))))) && true))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   subgroupBarrier();
  }
 else
  {
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) << 0))), int(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) << 0))), 0, 0, 1))))), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4))) | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)))), 4)))));
}
