#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 bool _f0;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 vec2 _f1;
 uint _f2;
 mat4x3 _f3;
 ivec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 uint workgroup_id;
 mat4x3 _f1;
 mat3x2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 mat2 _f1;
 bvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 mat4x3 _f1;
 bool _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 mat4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bool _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 mat3x4 _f1;
 vec3 _f2;
 uint _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_0 {
 float _f0;
 uvec2 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 float _f4;
 uint _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat3 _f2;
 _GLF_struct_2 _f3;
 ivec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 uint _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.7)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(((uvec3(60616u, 17882u, 181970u) / subgroup_id) | subgroup_local_id)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4(1.0), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))))) ^ 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))) >> 0u), _GLF_struct_3(_GLF_struct_0(1.0, uvec2(1u), mat4x3(1.0), mat4x2(1.0), 1.0, 1u, mat4x2(1.0)), _GLF_struct_1(ivec2(1), mat3x4(1.0), vec3(1.0), 1u, ivec3(1)), mat3(1.0), _GLF_struct_2(uvec3(1u)), ivec4(1), uvec3(1u)), _GLF_struct_7(_GLF_struct_4(bvec2(true), ivec3(1), mat2x4(1.0), mat4(1.0), mat4(1.0)), _GLF_struct_5(bvec2(true), mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.127)))), true, _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0)))), true, _GLF_struct_6(vec2(1.0), mat2(1.0), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(log2(-0.8), mix(float(_GLF_FUZZED(4.9)), float(log2(-0.8)), bool(true)))) : 0.0)), 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, clamp(_GLF_IDENTITY(-5468.3181, clamp(_GLF_IDENTITY(-5468.3181, float(mat2x4(-5468.3181, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), -5468.3181, -5468.3181)), _GLF_IDENTITY(-5468.3181, (false ? _GLF_FUZZED(-8.7) : -5468.3181)), -5468.3181))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-37.18, (_GLF_IDENTITY(-37.18, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(-37.18, 1.0, 0.0, 0.0), (vec4(-37.18, 1.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(vec4(-37.18, 1.0, 0.0, 0.0), (vec4(-37.18, 1.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(8.3)), bool(false))))) - 0.0)), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)))), mix(vec4((_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.0)), float(1.0), bool(true)))))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[_GLF_IDENTITY(2, (2) + 0)]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-3802.7600), _GLF_FUZZED(-4.7), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0)), (mat4(1.0) * (vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2((_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat2((_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))))))), mat4(1.0) * (vec4(_GLF_IDENTITY(mat2((_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat2((_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0))))))))))), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, (_GLF_IDENTITY(-5468.3181, 1.0 * (-5468.3181))) / 1.0) : _GLF_FUZZED(5.2)))), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))))))))[3]), vec4(_GLF_FUZZED(-1.7), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)))))[1], (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[2]))), float(_GLF_FUZZED(-1909.8165)), bool(false))))), _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-0.8)) : 0.0)), 0.0, 0.0, 0.0)))))[2], _GLF_FUZZED(54.87)), bvec4(false, true, true, false))))), clamp(_GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.1 + 49.09))), bool(false)))) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1257.4019)), bool(false)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 1.0), vec4(tan(0.0), 0.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, tan(0.0), 1.0), vec4(tan(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(normalize(-5210.7957)) : 0.0)), 0.0, exp(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(mat3x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.8))), 0.0, 0.0) + (vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0))))[1], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), (vec4(1.0))[2], _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))), 0.0)))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-5468.3181, float(mat4(-5468.3181, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0)))))), float(mat4x2(-5468.3181, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4047.0096)), float(injectionSwitch.y), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(9.4), (_GLF_FUZZED(9.4)) + determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), exp(sqrt(0.0)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0))) : _GLF_FUZZED(7.4)))), float(vec3(_GLF_FUZZED(_GLF_IDENTITY(-5468.3181, (true ? _GLF_IDENTITY(-5468.3181, float(mat4x2(-5468.3181, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(sqrt(0.0)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0))) : _GLF_FUZZED(7.4)))), 0.0, 0.0))), (_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(8.1), clamp(_GLF_FUZZED(8.1), _GLF_IDENTITY(_GLF_FUZZED(8.1), min(_GLF_FUZZED(8.1), _GLF_FUZZED(8.1))), _GLF_FUZZED(8.1)))), bool(false)))), vec4(1.0)))) * _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), vec4(mat3x4((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.7) : 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0)))) / 1.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0)))) / 1.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)))), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), (vec4(1.0))[2], _GLF_FUZZED(-4.8)), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (! (true))), false, true, false)))) - vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(6.6), _GLF_FUZZED(3470.0131), _GLF_FUZZED(0.8)), vec4(_GLF_FUZZED(578.530), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(false, true, true, true))), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-6.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)], _GLF_FUZZED(-5468.3181), (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(-37.18), (vec4(1.0))[2], _GLF_FUZZED(-4.8)), bvec4(true, false, true, false)))) - vec4(0.0, 0.0, 0.0, 0.0)))))))), _GLF_struct_10(_GLF_struct_8(mat4x2(1.0), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))), mat4x3(1.0), mat3x2(1.0), mat2(1.0)), _GLF_struct_9(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << (1u ^ 1u)), min(_GLF_IDENTITY(1u, (1u) << (1u ^ 1u)), _GLF_IDENTITY(1u, (1u) << (1u ^ 1u))))), vec2(1.0), 1u, mat4x3(1.0), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true) && true, true), bvec2(bvec2(bvec2((true) && true, true))))), bool(bool(bool(_GLF_IDENTITY(bvec2((true) && true, true), bvec2(bvec2(bvec2((true) && true, true)))))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true) && true, true), bvec2(bvec2(bvec2((true) && true, true))))), bool(bool(bool(_GLF_IDENTITY(bvec2((true) && true, true), bvec2(bvec2(bvec2((true) && true, true))))))))))) || false))), ! (! (_GLF_IDENTITY(true, true && (true)))))), 1), _GLF_struct_11(true));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), true)))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY((1u & 1u), 0u | (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u)))))) * _GLF_struct_replacement_12._f4._f0.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec4(false, true, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), min(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))))) + subgroup_local_id, 0u | (workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (64)), 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) - tan(vec2(0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) - tan(vec2(0.0, 0.0)), vec2(1.0, 1.0) * ((min(injectionSwitch, injectionSwitch)) - tan(vec2(0.0, 0.0)))), 1.0, log(1.0), 1.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 1.0, cos(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 1.0, cos(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.2) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5926.9111)), float(0.0), bool(true))))), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 1.0, cos(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 1.0, cos(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))))), (injectionSwitch.x > injectionSwitch.y) || false))) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))) / 1.0))), injectionSwitch.y)), injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))))))) && true))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -0.0 : 1.9))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))))))) && true)))) && true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED((_GLF_IDENTITY((true ? subgroup_base : subgroup_local_id), ((true ? subgroup_base : subgroup_local_id)) + (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) << num_workgroup)) : _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))) : subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), true)), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(4.1, 74.41)))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, false, true)))) && true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632))), 1))]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)), vec2(mat3(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (1) | 0))), 1, 1))) : _GLF_FUZZED(89632))), 1))]))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632))), 1))]))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY((+ -6922.3498), clamp((+ -6922.3498), (+ -6922.3498), (+ -6922.3498))))), bool(false))) * 1.0))), bvec2(false, true)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632))), 1))]))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(vec2(_GLF_IDENTITY(mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632), (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632)) ^ 0))), 1))]))), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((_GLF_IDENTITY(+ -6922.3498, min(+ -6922.3498, _GLF_IDENTITY(+ -6922.3498, max(+ -6922.3498, + -6922.3498))))))), bool(false)))), bvec2(false, true)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632))), 1))]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((+ -6922.3498))), bool(false)))), bvec2(false, true)))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(89632))), 1))]))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) << (1 ^ 1))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 ^ (4))), max(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) >> 0), 0)) ^ (4))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), clamp(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) << 0)))))))), _GLF_IDENTITY(64, (64) + (0 | _GLF_IDENTITY(0, (0) | 0))), 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-305.990)), bool(false))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, uint(uvec3(_GLF_IDENTITY(read, (read) | 0u), 0u, 1u))), _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  return;
}
