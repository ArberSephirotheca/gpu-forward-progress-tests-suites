#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (! (bool(bvec4(false, true, false, true)))) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true && (! (! (false))))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) && true)), false || (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (false))))))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, false, true)), bool(bvec2(bool(bvec4(bool(false), true, false, true)), true))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat2(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / abs(vec2(1.0, 1.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(67.00)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(67.00)), bool(false))) + sqrt(0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.6, 393.272)))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(9864u, 110920u, 127896u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(940.111), _GLF_FUZZED(8.1)), bvec2(false, false))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)), uint(uint((true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))))))), gl_WorkGroupID.x, gl_WorkGroupID.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) / vec2(1.0, 1.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x : _GLF_FUZZED(-0.4))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(466.279) : injectionSwitch.y))))))))
    return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 0u | (0u)), 0u), max(min(0u, 0u), min(0u, 0u)))) | (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 0u | (0u)), 0u), max(min(0u, 0u), min(0u, 0u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) * 1u), 0u ^ (0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bool(bool(bvec2(false, true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))), max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))))[1]), vec2(_GLF_FUZZED(-8025.2962), _GLF_FUZZED(2.7)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), max((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_IDENTITY((((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), ((_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, float(vec3(((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) - 0.0))) - sin(0.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))]) + 0.0) - sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (_GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), tan(0.0))), (false ? _GLF_FUZZED(-61.98) : float(vec4(0.0, 1.0, abs(0.0), tan(0.0)))))) / 1.0))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + 0.0, (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (((injectionSwitch)[0]) + 0.0) - sin(0.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-398.418), _GLF_FUZZED((+ -75.06))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))), _GLF_IDENTITY(false, ! (! (false)))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(233.377, -556.632).r), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))) : _GLF_FUZZED(injectionSwitch)))))[1], sqrt(1.0), 0.0)))), (vec2(_GLF_FUZZED(vec2(233.377, -556.632).r), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))) : _GLF_FUZZED(injectionSwitch)))))[1], sqrt(1.0), 0.0))))) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((bvec2(true, true).s ? -986.434 : 7.5))), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(233.377, -556.632).r), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))) : _GLF_FUZZED(injectionSwitch)))))[1], sqrt(1.0), 0.0)))), (vec2(_GLF_FUZZED(vec2(233.377, -556.632).r), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))) : _GLF_FUZZED(injectionSwitch)))))[1], sqrt(1.0), 0.0))))) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((bvec2(true, true).s ? -986.434 : 7.5))), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec2(233.377, -556.632).r), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))) : _GLF_FUZZED(injectionSwitch)))))[1], sqrt(1.0), 0.0)))), (vec2(_GLF_FUZZED(vec2(233.377, -556.632).r), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0))) : _GLF_FUZZED(injectionSwitch)))))[1], sqrt(1.0), 0.0))))) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((bvec2(true, true).s ? -986.434 : 7.5))), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec2(0.0, 0.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(true && (true), false, true, true)), ! (! (bool(bvec4(true && (true), false, true, true))))))), (injectionSwitch.x < injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1215.5577))) < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(81.90), _GLF_FUZZED(501.663)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x > injectionSwitch.y))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0), clamp((vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0), ((vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0)) + vec2(0.0, 0.0)), (vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1])) * mat2(1.0)))), vec2(_GLF_FUZZED(81.90), _GLF_FUZZED(501.663)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x > injectionSwitch.y))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5946.2043)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)]), clamp(float(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) << 0)]), float(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / (0 ^ 1)) | 0)]), _GLF_IDENTITY(float(injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (0) >> 0))]), float(vec4(float(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)]), 1.0, abs(1.0), 1.0))))), bool(true))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(36.99))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) || false, ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), float(_GLF_FUZZED(-73.31)), bool(false))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(36.99))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2865.8813)), bool(false))), float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(determinant(mat4(-12.83, 1.3, -1.0, -672.099, -2.0, 9.7, -9.4, 890.048, _GLF_IDENTITY(3551.0755, float(vec4(_GLF_IDENTITY(3551.0755, float(vec2(3551.0755, 1.0))), 0.0, 0.0, 1.0))), 4.9, -74.17, 84.22, 187.904, -212.833, -7.5, _GLF_IDENTITY(2936.1133, (false ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY(2936.1133, (2936.1133) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(595.673) : float(float(1.0))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(595.673) : float(float(1.0))), clamp((false ? _GLF_FUZZED(595.673) : float(float(1.0))), (false ? _GLF_FUZZED(595.673) : float(float(1.0))), (false ? _GLF_FUZZED(595.673) : float(float(1.0))))), (false ? _GLF_FUZZED(595.673) : float(float(1.0))))))), 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3334.8190, 3078.0542)) : injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7339.2013, 5132.8580)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(36.99))), _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (true ? mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, log(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(-78.86, -1.6, -2516.5066, 85.07, -3.5, -19.14, 555.562, -5564.9982, -0.5, _GLF_IDENTITY(8.8, float(_GLF_IDENTITY(mat3x2(8.8, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x2(8.8, 1.0, 0.0, 0.0, 0.0, 1.0)))))), -4.4, 5.1))))), mix(float(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(workgroup_size)) : 0.0)))), 0.0, 0.0, 0.0), (true ? mat4x3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true))), 0.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat2x3(length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(-78.86, -1.6, -2516.5066, 85.07, -3.5, -19.14, 555.562, -5564.9982, -0.5, 8.8, -4.4, 5.1)))))), float(_GLF_FUZZED(-92.52)), bool(false)))), 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3204.0044) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0)), mix(float(determinant(mat2(1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(5985.4363)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(22805u)))).y))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) || false)) && true)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(float(95866))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(float(95866))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(float(95866))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - log(vec2(1.0, 1.0)))[1]), bvec2(true, true))).x > injectionSwitch.y) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), true, false))))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, true))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(_GLF_ZERO(0.0, injectionSwitch.x)))))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (virtual_gid))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(1u)))), max(((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(1u)))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(1u))))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), (1u & ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), 0u ^ (uint(uvec2(uint(1u), (1u & ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))))), _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) >> 0u), uint(2u))))), 0u ^ (uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) >> 0u), uint(2u))))))), uint(1u))) ^ (virtual_gid))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), uint(1u))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), uint(1u)))) | ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), uint(1u))))), 0u | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 0u))), uint(2u))))), uint(1u))) ^ (virtual_gid))) ^ 0u)))))) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u)), min((_GLF_IDENTITY(1u, (1u) | 0u)), (_GLF_IDENTITY(1u, (1u) | 0u)))))))), 0u | ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u)))) ^ (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-7.7, -12.26)))))).x, (false ? _GLF_FUZZED(-8.1) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-7.7, -12.26)))))).x)))) ^ (virtual_gid)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u)), 0u ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(1u))))) ^ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))))))) ^ 0u)) ^ 0u)))], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 4, 4)), 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(_GLF_IDENTITY(0, (0) - (-15111 & (0 | 0))), _GLF_IDENTITY(0, (0) | (0)))) | (min(0, _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (0) | (0)))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))) | 0), min(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) >> 0), 0, 0))) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(0, (0) | (0)))) | (min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)) | (0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (0) << 0)) | (0)), min(~ ((_GLF_IDENTITY(0, (0) << 0)) | (0)), ~ ((_GLF_IDENTITY(0, (0) << 0)) | (0)))))))))), min(0, _GLF_IDENTITY(0, (0) | (0)))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | (0))), _GLF_IDENTITY((_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) << 0))) | (min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))), clamp((_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) << 0))) | (min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) << 0))) | (min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) << 0))) | (min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))), ((_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) << 0))) | (min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0))))))) | ((_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) << 0))) | (min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))))))) * _GLF_IDENTITY(1, int(ivec3(1, 1, (-82843 & 0)))))))))) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), int(int((0)))))) | (0))), ~ (~ _GLF_IDENTITY((min(0, _GLF_IDENTITY(0, (0) | (0)))), ((min(0, _GLF_IDENTITY(0, (0) | (0))))) << 0)))), ~ (~ (~ (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), ~ (~ (min(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))))))))))))), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(-65810)))) | (_GLF_IDENTITY(0, (0) | (0))))), max(_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | (0))), (min(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0))))) + (1 ^ 1)), _GLF_IDENTITY(0, (0) | (0)))) | (min(0, _GLF_IDENTITY(0, (0) | (0))))), min(0, _GLF_IDENTITY(0, (0) | (0)))))) * _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), int(ivec3(1, 1, (-82843 & 0)))))) | 0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), false)))))))) && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), false))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))), true, true), true))), false)))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))) || false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))))))))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false) && true), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), true)))))))))))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || _GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), false, false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true)))))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false) && true)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true), false), true, true))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), true))))), true && (((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), true)))))))))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))), true, true), true))), false)))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), true)))), true)))))))))))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), true))))) || false) && true))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))) || false, ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false) && true))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED(vec4(-5169.3113, 30.35, 4668.0585, 1972.0768).z)), bvec2(false, false))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, false)))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), false, true, false)))), bool(bool(bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), false, true, false))))))) || false)), _GLF_IDENTITY(! (! (bool(bool(true)))), true && (_GLF_IDENTITY(! (! (bool(bool(true)))), true && (! _GLF_IDENTITY((! (bool(bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bool(true)))), ! (! ((! (bool(bool(true))))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true, false || ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)) && true), false))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-492.816)), vec2(_GLF_FUZZED(-337.107), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), true && (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))) && true)))) && true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(27.86) : injectionSwitch.y))))))) && true))))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))) && true)))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))) && true)), ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))) && true)))))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) >> 0))), _GLF_IDENTITY(4, (4) ^ int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))))) - _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), mix(float(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), float(_GLF_FUZZED(7.0)), bool(false))))) / 1.0)) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x))), min(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, sin(0.0)), clamp(vec4(1.0, 0.0, 1.0, sin(0.0)), vec4(1.0, 0.0, 1.0, sin(0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, sin(0.0)), min(vec4(1.0, 0.0, 1.0, sin(0.0)), vec4(1.0, 0.0, 1.0, sin(0.0)))))))), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(922.683)), float(length(0.0)), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-6.1))), 1.0, length(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 8.2 : -63.02))), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.1)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-5.7 + -551.980))), bool(false))), 0.0)), 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))), mix(float(_GLF_FUZZED(81.83)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))))), bool(true))) / 1.0))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, abs(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(vec2(0.0, 0.0)), 1.0)))))), 0.0, 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-268.202))), length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(55.14)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(592.963) : length(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))) ? 0.0 : _GLF_FUZZED(8231.3904))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(86.31) : 0.0))), float(_GLF_FUZZED(50.54)), bool(false))), 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))))) / 1.0))), injectionSwitch.x)) - 0.0))))), _GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), (_GLF_IDENTITY(0 ^ (64), min(_GLF_IDENTITY(0 ^ (64), (0 ^ (64)) / 1), 0 ^ (64)))) << 0)), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0)))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-517.036), _GLF_FUZZED(240.687)), bvec2(false, false))), injectionSwitch)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-517.036), _GLF_FUZZED(240.687)), bvec2(false, false))), injectionSwitch)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false))), true, false)))))), false, false))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))) && true))), false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(997.234) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(76.36)), bool(false))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec3(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), (false ? _GLF_FUZZED(normalize(vec3(-7.8, 3756.7137, -60.49))) : vec3(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))))) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(mat2(1.0))), (false ? _GLF_FUZZED(mat2(58.52, -8070.5630, -86.91, -4.8)) : mat2(mat2x3(mat2(1.0)))))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-53.64, -0.5)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-53.64, -0.5)), min(_GLF_FUZZED(vec2(-53.64, -0.5)), _GLF_FUZZED(vec2(-53.64, -0.5)))) : _GLF_FUZZED(injectionSwitch)), max((true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-53.64, -0.5)), min(_GLF_FUZZED(vec2(-53.64, -0.5)), _GLF_FUZZED(vec2(-53.64, -0.5)))) : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-53.64, -0.5)), min(_GLF_FUZZED(vec2(-53.64, -0.5)), _GLF_FUZZED(vec2(-53.64, -0.5)))) : _GLF_FUZZED(injectionSwitch)), vec2(mat2((true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-53.64, -0.5)), min(_GLF_FUZZED(vec2(-53.64, -0.5)), _GLF_FUZZED(vec2(-53.64, -0.5)))) : _GLF_FUZZED(injectionSwitch)), 0.0, 1.0)))))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false))), false, true))))))) && true)) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / 1.0))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (4)))), ((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (4))))) / 1)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6017.9355), _GLF_FUZZED((6.8 * -3332.6069))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6017.9355), _GLF_FUZZED((6.8 * -3332.6069))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6017.9355), _GLF_FUZZED((6.8 * -3332.6069))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6017.9355), _GLF_FUZZED((6.8 * -3332.6069))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6017.9355), _GLF_FUZZED((6.8 * -3332.6069))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0)))) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x))))), (float(_GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x)))))) * 1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), float(float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), mat2x3(mat4(mat2x3((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))))))), vec2(_GLF_FUZZED(-305.346), _GLF_FUZZED((- 4.3))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x))))), (float(_GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x)))))) * 1.0)) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, true))), false))) && true, ((_GLF_DEAD(false)) && true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, true))), false))) && true, ((_GLF_DEAD(false)) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_DEAD(false)) && true) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(42161) : _GLF_IDENTITY(64, int(ivec2(64, 0))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((4561.3358))), float(injectionSwitch.y), bool(true))), 0.0, 0.0)), 0.0 + (float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((4561.3358))), float(injectionSwitch.y), bool(true))), 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((4561.3358))), float(injectionSwitch.y), bool(true))), 0.0, 0.0)), 0.0 + (float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((4561.3358))), float(injectionSwitch.y), bool(true))), 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))) || false)), ((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((4561.3358))), float(injectionSwitch.y), bool(true))), 0.0, 0.0)), 0.0 + (float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((4561.3358))), float(injectionSwitch.y), bool(true))), 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))) || false))) && true))) && true)), _GLF_IDENTITY(false || _GLF_IDENTITY((true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false)) && true))), ! (! ((true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false)) && true)))))), bool(bvec4(_GLF_IDENTITY(false || (true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false)) && true))), bool(bool(false || (true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false)) && true)))))), true, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false, false, false))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7779.4008)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, sqrt(0.0), abs(round(length(normalize(1.0)))), tan(0.0), 1.0, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, abs(1.0), 1.0, 1.0), transpose(transpose(mat4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, sqrt(0.0), abs(round(length(normalize(1.0)))), tan(0.0), 1.0, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, abs(1.0), 1.0, 1.0)))))), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(313.093), _GLF_IDENTITY(_GLF_FUZZED(-414.833), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(_GLF_FUZZED(-414.833), min(_GLF_FUZZED(-414.833), _GLF_FUZZED(-414.833)))), bool(true)))), bvec2(false, false)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0)))))))) * (injectionSwitch), mix(vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(313.093), _GLF_FUZZED(-414.833)), bvec2(false, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))]), vec2(_GLF_FUZZED(313.093), _GLF_FUZZED(_GLF_IDENTITY(-414.833, mix(float(_GLF_FUZZED(7.1)), float(-414.833), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)))))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, bool(bvec4(((false)) && true, true, false, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, false || (false))) || false)) && true), (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
