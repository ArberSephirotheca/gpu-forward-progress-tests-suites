#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, false))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) - uvec3(0u, 0u, 0u)), uvec3(8u))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)).x) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))).x, (false ? _GLF_FUZZED(156259u) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))).x))) / 1u))), clamp(uint(uint(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x)), uint(uint(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))), gl_WorkGroupID), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) | (clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))), gl_WorkGroupID)))).x)), uint(uint(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), clamp(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), ~ (~ (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) + log(1.0)), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), injectionSwitch.x)))) > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(subgroup_size)))) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), clamp(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_local_id, num_workgroup, subgroup_id)) : 0u))), clamp(1u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u)), ~ (~ (1u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u, 1u * (1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) / 1u)), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) ^ 0u)) * ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (_GLF_IDENTITY(5u, uint(uvec3(5u, 1u, 0u)))))), max(5u, 5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))), uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED((_GLF_IDENTITY(++ workgroup_id, ~ (~ (_GLF_IDENTITY(++ workgroup_id, (++ workgroup_id) - 0u))))))), ((true ? subgroup_local_id : _GLF_FUZZED((_GLF_IDENTITY(++ workgroup_id, ~ (~ (++ workgroup_id))))))) / 1u)))) + 1) * ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), clamp(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u), uint(5u))))), (true ? 5u : _GLF_FUZZED(157045u))))))), (uint(5u)) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 0u + ((0u)))) * 1u), 1u * ((0u))) >> 0u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), _GLF_IDENTITY(uint(uvec4(uint(5u), 1u, 0u, 0u)), (uint(uvec4(uint(5u), 1u, 0u, 0u))) >> 0u))))), uint(5u)), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(5u)), min((false ? _GLF_FUZZED(workgroup_size) : uint(5u)), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))))), _GLF_IDENTITY(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), max(uint(_GLF_IDENTITY(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u), ~ (~ (uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u))))), _GLF_IDENTITY(uint(uvec3(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), _GLF_IDENTITY(0u, (0u | 0u) + (0u)), 1u)), clamp(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u))))))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u)) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), uint(uvec2((0u), 1u))))), 1u * ((0u))) >> 0u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(uvec4(uint(5u), 1u, 0u, 0u)))))), uint(5u)), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), _GLF_IDENTITY(uint(uvec3(min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(uint(5u), uint(5u)))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), max(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(virtual_gid)))) | (5u)))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), clamp(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : uint(5u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : uint(5u), min(false ? _GLF_FUZZED(workgroup_size) : uint(5u), false ? _GLF_FUZZED(workgroup_size) : uint(5u)))) | (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(5u, 1u * (5u))))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u))))))))))), min((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * ((0u))) >> 0u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(uvec4(uint(5u), 1u, 0u, 0u)))))), uint(5u)), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u ^ (5u)))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))))), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))))), 0u, 1u)))), max(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)) : uint(5u))))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), clamp(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 1u, 1u, 0u)))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), min(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), ~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)))))))))))), 0u, 1u)), clamp(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), min(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), ~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)))))))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), min(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), ~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)))))))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), min(~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)), ~ (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) + 0u)) : uint(5u)))))))))))), 0u, 1u))))))))))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) * 1u), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 1u * (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) << 0u))) >> 0u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(uvec4(uint(5u), 1u, 0u, 0u)))))), uint(5u)), _GLF_IDENTITY(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u)))))), (1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))) | 0u)), _GLF_IDENTITY(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u)), max(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(min(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(5u)))))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(min(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(5u)))))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u), (uvec3(min(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(5u)))))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)) | (uvec3(min(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(5u)))))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)))))), clamp(uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)), uint(uvec3(min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u)))), min((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u)))), (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u, 1u)), uint(uvec3(min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED((num_workgroup % subgroup_id)) : 1u << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))))), 0u, 1u)))))))))))))) << 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - _GLF_IDENTITY(0u, (0u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((5u) - 0u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) + ((5u) - 0u)))), max(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - _GLF_IDENTITY(0u, 0u + (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(5u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u) : 5u)), max(_GLF_IDENTITY(5u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u) : 5u)), _GLF_IDENTITY(_GLF_IDENTITY(5u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u) : 5u)), (_GLF_IDENTITY(5u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u) : 5u))) | (_GLF_IDENTITY(5u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u) : 5u))))))) | (5u))) - 0u)))), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((5u) - 0u)))))), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((5u) - 0u)))))), uint(5u))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-827.429, 8364.2664)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))) || false) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0), min(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(66.75)), bvec2(true, _GLF_IDENTITY(false, true && (false)))))))).y)))))))) && true)))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + 1 < subgroup_size) && true), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, true && (false)) || (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && true))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) : _GLF_FUZZED(workgroup_size)))) << 0u, max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) << 0u, _GLF_IDENTITY((subgroup_local_id) << 0u, max((subgroup_local_id) << 0u, (subgroup_local_id) << 0u)))))))))) + 1 < subgroup_size) && true), false, false), _GLF_IDENTITY(true, (true) || false))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size) && true), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size) && true, true && ((subgroup_local_id + 1 < subgroup_size) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size) && true, bool(_GLF_IDENTITY(bvec3((subgroup_local_id + 1 < subgroup_size) && true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((subgroup_local_id + 1 < subgroup_size) && true, false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3((subgroup_local_id + 1 < subgroup_size) && true, false, false), false)))))))), true && ((subgroup_local_id + 1 < subgroup_size) && true)))))))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (1u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u)), 0u ^ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (1u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))) | (_GLF_IDENTITY(uint(6u), (uint(6u)) + 0u))), (uint(6u)) | (uint(6u))), uint(6u))))) && true), false, false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, false || (false)), false, true)))))))), true))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(1, (1) * 1))) < subgroup_size) && true), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u ^ ((~ (subgroup_local_id + 1))))), subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1)))))) < subgroup_size) && true), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u ^ ((~ (subgroup_local_id + 1))))), subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1)))))) < subgroup_size) && true), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u ^ ((~ (subgroup_local_id + 1))))), subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1)))))) < subgroup_size) && true), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u ^ ((~ (subgroup_local_id + 1))))), subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1)))))) < subgroup_size) && true), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false)))), true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_local_id + 1 < subgroup_size) && true), _GLF_IDENTITY(false, ! (! (false))), false), true)), true)))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8189.3491)), bool(false))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8189.3491)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8189.3491)), bool(false))) > injectionSwitch.y, false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8189.3491)), bool(false))) > injectionSwitch.y, false, false)))))))))) || _GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(_GLF_IDENTITY(true, ! (! (true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(27.07) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7928.9034)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), sin(0.0), 1.0, 1.0))).x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true)))), ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true, false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true)))))), ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (bool((! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (! (false))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, ! (! (false))))), true)), true && (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))))), true), true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), true), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((! (_GLF_IDENTITY(false, ! (! (false))))), true), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))) || false)) && _GLF_IDENTITY(true, false || (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
