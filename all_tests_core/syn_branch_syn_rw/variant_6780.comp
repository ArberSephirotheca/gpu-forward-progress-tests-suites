#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))) && true))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), clamp(1 & _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), (1 & _GLF_IDENTITY(1, 0 | (1))) / 1), 1 & _GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), clamp(1 & _GLF_IDENTITY(1, 0 | (1)), 1 & _GLF_IDENTITY(1, 0 | (1)), 1 & _GLF_IDENTITY(1, 0 | (1))))))), min((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), clamp(1 & _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), (1 & _GLF_IDENTITY(1, 0 | (1))) / 1), 1 & _GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), clamp(1 & _GLF_IDENTITY(1, 0 | (1)), 1 & _GLF_IDENTITY(1, 0 | (1)), 1 & _GLF_IDENTITY(1, 0 | (1))))))), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), clamp(1 & _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), (1 & _GLF_IDENTITY(1, 0 | (1))) / 1), 1 & _GLF_IDENTITY(1, 0 | (1))))) | (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, 0 | (1)), clamp(1 & _GLF_IDENTITY(1, 0 | (1)), 1 & _GLF_IDENTITY(1, 0 | (1)), 1 & _GLF_IDENTITY(1, 0 | (1)))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) * 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(1916.4842, 5201.9027, -70.88)))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))).x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))).x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(62622u))), bool(false))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-901.745)), (float(_GLF_FUZZED(-901.745))) * 1.0), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), clamp(_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), min(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(injectionSwitch.x), float(injectionSwitch.x)), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), mix(float(_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(-7.8)), bool(false)))))), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-1.1)), bvec2(false, false))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), min(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)), ((false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch))) * mat2(1.0)))))).y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / vec2(1.0, 1.0))))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(3.2, -11.16, -779.287, -31.31)) : mat2(1.0))) * (injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), max(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) + vec2(0.0, 0.0))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))))).y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(40.31))), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8281.4906)), float(1.0), bool(true))), sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)), (float(mat3x4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8281.4906)), float(1.0), bool(true))), sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0))) * 1.0))) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))))) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0))))).y, mix(float(_GLF_FUZZED(-8311.6393)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0))))).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)), 0.0, 0.0, exp(0.0), abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))))).y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) * (mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) * (mat2(1.0) * (injectionSwitch))), 1.0)), (vec2(vec3(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) * (mat2(1.0) * (injectionSwitch))), 1.0))) * vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(injectionSwitch)) : injectionSwitch))), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-729.287, -9769.4238, -400.386, -1.8)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))))).y))))))) * 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        continue;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (91110 & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u);
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) * uvec3(1u, 1u, 1u)) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), true, true, false)))) || false))))))));
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base), 0u + (clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base))) - 0u) + subgroup_base)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) / (1u | 0u)) / 1u) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)), ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) | (subgroup_base))))), 0u ^ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_base : _GLF_FUZZED(num_workgroup))))), 0u ^ (workgroup_base + subgroup_base)))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size);
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(true ? buf[virtual_gid] : _GLF_FUZZED((true ? subgroup_id : subgroup_base)), min(true ? _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))]) ^ 0u) : _GLF_FUZZED((true ? subgroup_id : subgroup_base)), true ? buf[virtual_gid] : _GLF_FUZZED((_GLF_IDENTITY(true ? subgroup_id : subgroup_base, clamp(true ? subgroup_id : subgroup_base, _GLF_IDENTITY(true ? subgroup_id : subgroup_base, (true ? subgroup_id : subgroup_base) | (_GLF_IDENTITY(true ? subgroup_id : subgroup_base, max(true ? subgroup_id : subgroup_base, true ? subgroup_id : subgroup_base)))), _GLF_IDENTITY(true ? subgroup_id : subgroup_base, (true ? subgroup_id : subgroup_base) * 1u))))))))), 1u * (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(true ? buf[virtual_gid] : _GLF_FUZZED((true ? subgroup_id : subgroup_base)), min(true ? buf[virtual_gid] : _GLF_FUZZED((true ? subgroup_id : subgroup_base)), true ? buf[virtual_gid] : _GLF_FUZZED((true ? subgroup_id : subgroup_base)))))))), 4, 64, 2), clamp(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) << _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, clamp((virtual_gid) << 0u, _GLF_IDENTITY((virtual_gid) << 0u, ((virtual_gid) << 0u) ^ 0u), (virtual_gid) << 0u)))))], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)), clamp((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)), _GLF_IDENTITY((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)), 1u * ((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)))))), (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)), ((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2))) | 0u)) | ((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, false))))) ? 0u : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u) * (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u) * (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), 1u * ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u) * (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u)))), 4, 64, 2), clamp(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), 0u ^ (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2))), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2)) - 0u))), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), clamp(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (uvec3(buf[virtual_gid], 0u, _GLF_IDENTITY(1u, (1u) >> 0u))) - uvec3(0u, 0u, 0u)))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), clamp(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 1u), (uvec3(buf[virtual_gid], 0u, 1u)) - uvec3(0u, 0u, 0u)))), 4, 64, 2)))) - 0u)))) ^ 0u), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(64, (64) / 1), 64)), 2)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))) == 0) && true)), false, true, true)), bool(bvec3(bool(bvec4((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) - 0)) == 0, (_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))) == 0) && true)), _GLF_IDENTITY(false, (false) || false), true, true)), true, false)))) || false))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (next_virtual_gid))], uint(1), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(1), 4, 64, 4);
    }
   else
    {
    }
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.5, 16.88)) : injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-21.69)), vec2(_GLF_FUZZED(3982.0928), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((true), ((true)) || false))), false || (! (true)))))) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)), (bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))))) && true, true, _GLF_IDENTITY(true, (true) || false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))))) && true, true, _GLF_IDENTITY(true, (true) || false))))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))))) && true, true, _GLF_IDENTITY(true, (true) || false))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))))) && true, true, _GLF_IDENTITY(true, (true) || false))))), true, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))))) && true, true, _GLF_IDENTITY(true, (true) || false))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))))) && true, true, _GLF_IDENTITY(true, (true) || false))))), true, false))))), true))))), false)))))) || false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true, true, true)))), true, false)))) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false)))))))), false))))) || false), ! (! (_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), ! (! ((_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), ((! (true))) && true)))))), false))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), bool(bvec3((_GLF_IDENTITY(! (true), false || (! (true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec2((true) || false, false)), (bool(bvec2((true) || false, false))) && true))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bool(bool(bvec4(true, true, true, true))))))) && true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true)) && true))), false, true)), false)))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (! (true)) && true), false, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), false))))))), false))))))))), false || (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bool(bool(bool(! (true))))))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bool(bool(bool(! (true))))))), true, false, true))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), ! (_GLF_IDENTITY(! (true), false || (! (true))))), false))))))) && _GLF_IDENTITY(true, ! (! (true))), true, true)))) || false)), false))) || false)))))))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))), 4, _GLF_IDENTITY(4, (4) / 1))));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
}
