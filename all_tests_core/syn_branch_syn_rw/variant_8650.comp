#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), clamp(uvec3(uvec4(gl_WorkGroupSize, 1u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), 1u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), ~ (~ (uvec4(gl_WorkGroupSize, 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), 1u))), (uvec3(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), 1u))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), (false ? _GLF_FUZZED(uvec3(63044u, 155193u, 52259u)) : uvec3(uvec4(gl_WorkGroupSize, 1u)))), clamp(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_FUZZED(clamp(uvec3(4041u, 75225u, 175778u), uvec3(32481u, 118194u, 89495u), uvec3(30219u, 187638u, 63915u))))), gl_WorkGroupSize)), 1u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), 1u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | (1u)))))), (1u) / (1u | 0u))), (_GLF_IDENTITY(true ? uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (1u) / (1u | 0u))) : _GLF_FUZZED(uvec4(31685u, 174059u, 193819u, 191847u)), (true ? uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (1u) / (1u | 0u))) : _GLF_FUZZED(uvec4(31685u, 174059u, 193819u, 191847u))) / uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(~ (~ (uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, ~ (~ (1u)))))), clamp(~ (~ (uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, ~ (~ (1u)))))), ~ (~ (uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, ~ (~ (1u)))))), ~ (~ (uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, ~ (~ (1u)))))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, min(1u, 1u))))), (uvec3(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), max(uvec3(uvec4(gl_WorkGroupSize, 1u)), uvec3(uvec4(gl_WorkGroupSize, 1u)))))) >> uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 1u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 1u, 0u))), (_GLF_IDENTITY(uvec3(0u, 1u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 1u, 0u)))) << uvec3(0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 1u, 0u)))), 0u | (uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 1u, 0u)))))), 0u)))) << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u)))) >> uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u)))) >> uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u)), 1u)))), (false ? _GLF_FUZZED(uvec3(7961u, 174558u, 100966u)) : (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u)))) >> uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u))), (uvec3(uvec3(uvec4(gl_WorkGroupSize, 1u)))) >> uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u)), 1u)))))) ^ uvec3(0u, 0u, 0u))))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))) || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, false, false)), false, true, true)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0)) + vec2(0.0, 0.0))).y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))) && true))))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)))))) && true))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (false))))) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (false))))) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)))) || (false))))) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(atomicExchange(subgroup_local_id, workgroup_base)) : (subgroup_local_id))) | (subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))))) && true), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (_GLF_IDENTITY(false, false || (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 1u * (uint(uvec4(subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))) | (0u | 0u)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 0u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (1u ^ 1u)))))), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) | (uvec4(subgroup_local_id, 0u, 0u, 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), uint(uint(uint(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))) - 0u), 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) | (uvec4(subgroup_local_id, 0u, 0u, 0u)))))) >> 0u))) % 2), 0u + _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), _GLF_IDENTITY(((subgroup_local_id % 2)), ~ _GLF_IDENTITY((~ (((subgroup_local_id % 2)))), clamp((~ (((subgroup_local_id % 2)))), (~ (((subgroup_local_id % 2)))), (~ (((subgroup_local_id % 2)))))))))), ((subgroup_local_id % 2)) << 0u) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), ! (! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), ! (! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))))), false))), true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (_GLF_IDENTITY(! ((bool(bool(true)))), (! ((bool(bool(true))))) && true))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (_GLF_IDENTITY(! ((bool(bool(true)))), (! ((bool(bool(true))))) && true))) || false))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (_GLF_IDENTITY(! ((bool(bool(true)))), (! ((bool(bool(true))))) && true))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (_GLF_IDENTITY(! ((bool(bool(true)))), (! ((bool(bool(true))))) && true))) || false))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (_GLF_IDENTITY(! ((bool(bool(true)))), (! ((bool(bool(true))))) && true))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (_GLF_IDENTITY(! ((bool(bool(true)))), (! ((bool(bool(true))))) && true))) || false))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false))))))))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, false || (true)))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)), bool(bool(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), true && ((bool(bool(true))))))))))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))))), false)))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, false || (true)))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)), bool(bool(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), true && ((bool(bool(true))))))))))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))))), false)))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, false || (true)))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)), bool(bool(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), true && ((bool(bool(true))))))))))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))))), false)))), false)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, false || (true)))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)), bool(bool(bool(bvec4((! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))), false, true, false)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), ! (! (_GLF_IDENTITY((bool(bool(true))), true && ((bool(bool(true))))))))))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))))), false)))), false)))), false)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) || false, bool(bvec3((bool(bool(true))) || false, true, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true, (true) && true) && (bool(true)))), ! (! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, true)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true))))))), (bool(bool(true))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, true, true))))) || false)))))), false)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false)))), _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true)))))) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false)))) || false))))))))), true)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid) - 0u, (_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY(_GLF_IDENTITY(((next_virtual_gid)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(((next_virtual_gid)), (_GLF_IDENTITY(((next_virtual_gid)), 0u ^ (((next_virtual_gid))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(((next_virtual_gid)), (_GLF_IDENTITY(((next_virtual_gid)), 0u ^ (((next_virtual_gid))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(((next_virtual_gid)), (_GLF_IDENTITY(((next_virtual_gid)), 0u ^ (((next_virtual_gid))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))), _GLF_IDENTITY(uint(uint(((next_virtual_gid)))), max(uint(uint(((next_virtual_gid)))), uint(uint(((next_virtual_gid)))))))) - 0u) * 1u)), max((_GLF_IDENTITY((next_virtual_gid) - 0u, (_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | 0u), _GLF_IDENTITY(uint(uint(((next_virtual_gid)))), max(uint(uint(((next_virtual_gid)))), uint(uint(((next_virtual_gid)))))))) - 0u) * 1u)), (_GLF_IDENTITY((next_virtual_gid) - 0u, (_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY(((next_virtual_gid)), _GLF_IDENTITY(uint(uint(((next_virtual_gid)))), max(uint(uint(((next_virtual_gid)))), uint(uint(((next_virtual_gid)))))))) - 0u) * 1u)))) << (169713u & 0u)))))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) | (4), 0 + ((4) | _GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(49372) : (4))))), ((4) | (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, max(4, 4)), (1 ^ 1), 1), (ivec3(_GLF_IDENTITY(4, max(4, 4)), (1 ^ 1), 1)) | ivec3(0, 0, 0)))))) - _GLF_IDENTITY(0, min(0, 0)))), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4)));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
}
