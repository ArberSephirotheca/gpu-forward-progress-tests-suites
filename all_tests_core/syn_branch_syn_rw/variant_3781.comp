#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(5.3, 6.2).x), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), max(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), float(_GLF_FUZZED(3057.6754)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, sqrt(0.0)))), 1.0), vec2(1.0, 1.0)))))).y, (false ? _GLF_FUZZED(41.37) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, sqrt(0.0)))), 1.0), vec2(1.0, 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, sqrt(0.0)))), 1.0), vec2(1.0, 1.0)))))).y) * 1.0)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), mix(vec2((((injectionSwitch)) * mat2(1.0))[0], (((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(8.8)), bvec2(false, false)))))) / vec2(1.0, 1.0)).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), mix(vec2((((injectionSwitch)) * mat2(1.0))[0], (((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(8.8)), bvec2(false, false)))))) / vec2(1.0, 1.0)).y, 0.0, determinant(mat3(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(0.0, 0.0) + ((injectionSwitch) / vec2(1.0, 1.0)))).y, float(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(0.0, 0.0) + ((injectionSwitch) / vec2(1.0, 1.0)))).y, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), true, true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), float(_GLF_FUZZED(913.755)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))), true, true), true)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))), true, true), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))), true, true), true)), false))))), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) || false), false, true, false))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false))))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) || false), false, true, false))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false))))), false))))))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))), false)))))))), false))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8289.8842))), 1.0)))), 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))))), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-3396.6181))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.3))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.3))) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(5.3) : injectionSwitch[1]))))))), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(5158.9866, 5.5)) : (injectionSwitch))), (injectionSwitch)), (true ? _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(_GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), clamp(_GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), vec2(vec4(min((injectionSwitch), (injectionSwitch)), 0.0, 1.0))), min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch)))), min((injectionSwitch), (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-18067)))], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806)), min(vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806)), vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806))))) * vec2(1.0, 1.0)), bvec2(false, false)))[1]))[0], _GLF_FUZZED(-737.604)), vec2(_GLF_FUZZED(-1244.6713), (vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)))))[0], (injectionSwitch)[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), max(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), vec2(_GLF_FUZZED(88.87), _GLF_IDENTITY(_GLF_FUZZED(-902.714), (_GLF_FUZZED(-902.714)) / sqrt(1.0))))), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), bvec2(false, false))), injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), (true ? _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806)), bvec2(false, false)))[1]))[0], _GLF_FUZZED(-737.604)), vec2(_GLF_FUZZED(-1244.6713), (vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)))))[0], (injectionSwitch)[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), max(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), bvec2(false, false)), _GLF_IDENTITY(vec2(mat3x4(mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), (true ? _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806)), bvec2(false, false)))[1]))[0], _GLF_FUZZED(-737.604)), vec2(_GLF_FUZZED(-1244.6713), (vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)))))[0], (injectionSwitch)[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), max(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), bvec2(false, false)), cos(0.0), 0.0, 0.0, 0.0, determinant(mat2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), vec2(0.0, 0.0) + (vec2(mat3x4(mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), (true ? _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), mix(vec2((vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(46.94), _GLF_FUZZED(-7083.1806)), bvec2(false, false)))[1]))[0], _GLF_FUZZED(-737.604)), vec2(_GLF_FUZZED(-1244.6713), (vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)))))[0], (injectionSwitch)[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), max(vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), vec2(_GLF_FUZZED(88.87), _GLF_FUZZED(-902.714)))), bvec2(false, false)), cos(0.0), 0.0, 0.0, 0.0, determinant(mat2(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))), injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), true)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-63.39)), bool(false)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), (injectionSwitch.x > injectionSwitch.y) || false)), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1626.2212) : injectionSwitch.x)) > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), true))))))), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1626.2212) : injectionSwitch.x)) > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), true)))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), (injectionSwitch.x > injectionSwitch.y) || false)), false, false))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), true))))), (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))))) || false)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)), false, false))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(-6507.5792)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7634.6817), mix(float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-7634.6817), (true ? true ? injectionSwitch.x : _GLF_FUZZED(-7634.6817) : _GLF_FUZZED(-4.1)))), float(_GLF_FUZZED(7070.1850)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-452.133) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), ((1u)) | (_GLF_IDENTITY((1u), min((1u), (1u)))))), 1u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u)) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))) - uvec3(0u, 0u, 0u), max((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), 0u | (1u)), 1u, 1u)) - uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u)) - uvec3(0u, 0u, 0u)))))) * (gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) || false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), true), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(851.270, -22.29)) : injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(851.270, -22.29)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(851.270, -22.29)) : injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(injectionSwitch, injectionSwitch)).y)))))))
  barrier();
 uint subgroup_base = subgroup_size * _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), min(uvec4(subgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(uvec4(subgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4(subgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4(subgroup_id, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uaddCarry(50554u, subgroup_id, num_workgroup)) : 0u)), 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) : _GLF_FUZZED(subgroup_id)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u) : _GLF_FUZZED(workgroup_base))), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (183795u & 0u), 1u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))), clamp(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))), ~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))), clamp(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))), ~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))), ~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))) && true))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(429.411), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(58.66)), bvec2(_GLF_IDENTITY(true, (true) || false), false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(429.411), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(429.411), (injectionSwitch)[1]), vec2(_GLF_FUZZED(429.411), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(58.66)), bvec2(_GLF_IDENTITY(true, (true) || false), false))).y))))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY((subgroup_size / 2), min((subgroup_size / _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, 0)))), (subgroup_size / 2))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), injectionSwitch.y))), injectionSwitch)).x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(30625)) | (_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(30625)) / 1)))) | (_GLF_FUZZED(30625)), 0 | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(_GLF_IDENTITY(30625, ~ (_GLF_IDENTITY(~ (30625), 0 + (~ (30625))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1)))))) | (_GLF_FUZZED(30625))), (((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(_GLF_IDENTITY(30625, ~ (_GLF_IDENTITY(~ (30625), 0 + (~ (30625))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1)))))) | (_GLF_FUZZED(30625)))) >> (0 | 0)))), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(30625)), 0 | (~ (_GLF_FUZZED(30625)))))))), min(_GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), injectionSwitch.y))), injectionSwitch)).x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(30625)) | (_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(30625)) / 1)))) | (_GLF_FUZZED(30625)), 0 | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(_GLF_IDENTITY(30625, ~ (_GLF_IDENTITY(~ (30625), 0 + (~ (30625))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1)))))) | (_GLF_FUZZED(30625))), (((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(_GLF_IDENTITY(30625, ~ (_GLF_IDENTITY(~ (30625), 0 + (~ (30625))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1)))))) | (_GLF_FUZZED(30625)))) >> (0 | 0)))), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(30625)), 0 | (~ (_GLF_FUZZED(30625)))))))), _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), injectionSwitch.y))), injectionSwitch)).x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(30625)) | (_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(30625)) / 1)))) | (_GLF_FUZZED(30625)), 0 | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(_GLF_IDENTITY(30625, ~ (_GLF_IDENTITY(~ (30625), 0 + (~ (30625))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1)))))) | (_GLF_FUZZED(30625))), (((_GLF_IDENTITY(_GLF_FUZZED(30625), (_GLF_FUZZED(_GLF_IDENTITY(30625, ~ (_GLF_IDENTITY(~ (30625), 0 + (~ (30625))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(30625), min(_GLF_FUZZED(30625), _GLF_FUZZED(30625))), (_GLF_FUZZED(30625)) / 1)))))) | (_GLF_FUZZED(30625)))) >> (0 | 0)))), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(30625)), 0 | (~ (_GLF_FUZZED(30625))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, max((0.0) / 1.0, _GLF_IDENTITY((0.0) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, max((0.0) / 1.0, (0.0) / 1.0)), mix(float((0.0) / 1.0), float(_GLF_FUZZED(0.3)), bool(false))), (0.0) / 1.0)))))), determinant(mat3(0.0, _GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0)), 1.0 * (length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))) - 0.0), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))), 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), vec4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(77.31)), bool(false))))).y))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false)) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(2439.9790, -121.375)) : injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.2)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y))))) || false)) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false)) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, false), bvec3(bvec4(bvec3((! (false)), false, false), true)))))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec3((false), false, true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)) || ((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-71.82) : 1.0))) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(60.50)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(7.9, -23.10))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y))), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 1.0, 0.0, 0.0, 1.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2965.9476)), bool(false)))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2965.9476)), bool(false)))) : _GLF_FUZZED(796.780))))))))), true))), true, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))))) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && _GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && _GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))))))))))) || ((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.7, 3333.4601)), (true ? _GLF_FUZZED(vec2(-0.7, 3333.4601)) : _GLF_FUZZED(vec2(-18.01, -0.6)))))).y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2965.9476)), bool(false)))))))))), true))), true, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))))) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && _GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2965.9476)), bool(false)))))))))), true))), true, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))))) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && _GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2965.9476)), bool(false)))))))))), true))), true, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))))) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && _GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), true))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2965.9476)), bool(false)))))))))), true))), true, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))))) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && _GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), true)))) && true)))))))))) || ((false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.7, 3333.4601)), (true ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-0.7, 3333.4601), (true ? vec2(-0.7, 3333.4601) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(vec2(-18.01, -0.6)))))).y))), true, false), true)))))))) && true)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, clamp(read, read, read))), (~ (_GLF_IDENTITY(read, clamp(read, read, read)))) | (~ (_GLF_IDENTITY(read, clamp(read, read, read))))))), min(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, clamp(read, read, read))), (~ (_GLF_IDENTITY(read, clamp(read, read, read)))) | (~ (_GLF_IDENTITY(read, clamp(read, read, read))))))), _GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, clamp(read, read, read))), (~ (_GLF_IDENTITY(read, clamp(read, read, read)))) | (~ (_GLF_IDENTITY(read, clamp(read, read, read)))))))))) : uint(1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(5.7, (_GLF_IDENTITY(5.7, min(5.7, 5.7))) - 0.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(5.7, (_GLF_IDENTITY(5.7, min(5.7, 5.7))) - 0.0)))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(distance(round(vec2(2.6, 712.496)), abs(vec2(-52.69, -559.375)))), (_GLF_FUZZED(distance(round(vec2(2.6, 712.496)), abs(vec2(-52.69, -559.375))))) - 0.0) : injectionSwitch.x)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0)), (float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0))) / exp(0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), _GLF_IDENTITY(! (! (((false)))), ! (! (_GLF_IDENTITY(! (! (((false)))), bool(bvec2(! (! (((false)))), true))))))) && true), false, true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(bvec3(false, true, true))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
