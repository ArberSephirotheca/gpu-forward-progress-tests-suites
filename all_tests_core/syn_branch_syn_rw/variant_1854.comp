#version 460
struct _GLF_struct_16 {
 mat3x2 _f0;
 uint subgroup_base;
} ;

struct _GLF_struct_13 {
 uint _f0;
 uvec4 _f1;
 uvec3 _f2;
 ivec3 _f3;
 bvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 uint _f1;
 uint _f2;
 float _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_9 {
 int _f0;
} ;

struct _GLF_struct_14 {
 uint _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 mat4x2 _f4;
 _GLF_struct_12 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_7 {
 bool _f0;
 vec3 _f1;
 mat4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 uint _f1;
 ivec3 _f2;
 mat3x4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 ivec3 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 _GLF_struct_2 _f1;
 ivec3 _f2;
 _GLF_struct_3 _f3;
 mat4x2 _f4;
 ivec4 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uvec2 _f1;
 bvec4 _f2;
 uvec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 int _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 bvec3 _f1;
 ivec2 _f2;
 uint workgroup_size;
 uint _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_8 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(ivec3(1), 1, _GLF_struct_0(uvec4(1u), uvec2(1u), bvec4(true), uvec2(1u), mat2(1.0))), bvec3(true), ivec2(1), gl_WorkGroupSize.x, 1u, _GLF_struct_5(mat2(1.0), _GLF_struct_2(bvec3(true), uvec2(1u), mat3x2(1.0), uvec4(1u), true), ivec3(1), _GLF_struct_3(mat3x4(1.0)), mat4x2(1.0), ivec4(1), _GLF_struct_4(vec4(1.0))), _GLF_struct_8(_GLF_struct_6(uvec4(1u), 1u, ivec3(1), mat3x4(1.0), mat4x2(1.0)), ivec3(1), _GLF_struct_7(true, vec3(1.0), mat4(1.0), ivec3(1))), _GLF_struct_14(1u, _GLF_struct_9(1), _GLF_struct_10(mat2(1.0), 1u, 1u, 1.0, bvec3(true)), _GLF_struct_11(uvec3(1u), mat4x3(1.0), mat2x3(1.0)), mat4x2(1.0), _GLF_struct_12(bvec3(true), uvec3(1u)), _GLF_struct_13(1u, uvec4(1u), uvec3(1u), ivec3(1), bvec3(true), mat4x2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_15.workgroup_size * workgroup_id;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat3x2(1.0), subgroup_id * subgroup_size);
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_16.subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_16.subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
