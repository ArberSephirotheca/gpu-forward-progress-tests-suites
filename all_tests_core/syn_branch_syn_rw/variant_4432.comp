#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(47.66)))))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.8))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(3.2)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))) || false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(72.82)), float(0.0), bool(true))))), determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), (float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.1)), bool(false))) : _GLF_FUZZED(-6073.5878))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.1)), bool(false))) : _GLF_FUZZED(-6073.5878))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0))) * _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))), true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(3.2)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))) || false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(72.82)), float(0.0), bool(true))))), determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), (float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.1)), bool(false))) : _GLF_FUZZED(-6073.5878))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.1)), bool(false))) : _GLF_FUZZED(-6073.5878))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0))) * _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))), true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), false, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), (float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0))) * 1.0)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), (float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(294.893)), bool(false))), 1.0))))) * 1.0)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0)), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0)), min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0)), min(float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0)), float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0)))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0)), (float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acos(588.068)) : 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0))) / 1.0), float(mat2x4(injectionSwitch.x, exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(acos(588.068)) : 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))), 1.0))))) * 1.0)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))))))) || false), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(normalize(-7094.5816)) : injectionSwitch.y))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(normalize(-7094.5816)) : injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5020.6566) : _GLF_IDENTITY(0.0, (0.0) / 1.0))) + (log(1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), (float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(625.708))), exp(0.0)))) / 1.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * abs(1.0)), 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0))) * 1.0)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(305.426) : injectionSwitch.y)))), 1.0, 0.0)))))), _GLF_IDENTITY((bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-789.927, -60.17)))).x < injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, true)))))))), false || (_GLF_IDENTITY((bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, true)))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, true)))))))), false, false, true)), true && (bool(bvec4((bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, true), false)))))))))), false, false, true))))))) && true)))))), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), false || (! (_GLF_DEAD(false))))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED((7525.1947 + vec4(8.0, 9.6, 51.94, 313.326)).t)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED((7525.1947 + vec4(8.0, 9.6, 51.94, 313.326)).t)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED((7525.1947 + vec4(8.0, 9.6, 51.94, 313.326)).t)), bool(false)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), true, true))), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), true, true))), false, true)))), false)))), false)), false), bvec3(bvec4(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), true, true))), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), true, true))), false, true)))), false)))), false)), false), false)))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), true)), bvec2(bvec3(bvec2(bvec2(false, true)), false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(90.84))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false))))))), true)), bvec2(bvec3(bvec2(bvec2(false, true)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, determinant(mat3(0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, abs(0.0), 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((394.272 + 840.329)))), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0)))))))), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), false, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), false)))))))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false)))))))), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)), true, true, false)))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u)), min(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u))))) | (uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | _GLF_IDENTITY(0u, max(0u, 0u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, 1u))) + subgroup_local_id, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | _GLF_IDENTITY(0u, max(0u, 0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (1u ^ 1u) + ((subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) >> 0u), (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) + 0.0))).y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool((_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(42.31)), bool(false)))))), bool(true))) < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)))))))))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(exp(0.0), 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(exp(0.0), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8071.3477)), float(0.0), bool(true))) + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))))))))), false || ((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))))))))))), false, false))))) && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, false || (false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(42.31)), bool(false)))))), bool(true))) < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)))))))))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(exp(0.0), 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(exp(0.0), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8071.3477)), float(0.0), bool(true))) + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))))))))), false || ((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))))))))))), false, false))))) && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, false || (false))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(42.31)), bool(false)))))), bool(true))) < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))) && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), (true && ((injectionSwitch.x < injectionSwitch.y))) || false)))))))))) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(42.31)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))))), bool(true))) < injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) && true)))))))))) && (injectionSwitch.x > injectionSwitch.y))))))))))))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(exp(0.0), 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(exp(0.0), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))), float(_GLF_FUZZED(-983.601)), bool(false))), injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bvec2((_GLF_IDENTITY(true, (true) || false)), true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bvec2((_GLF_IDENTITY(true, (true) || false)), true)))))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(clamp(-8.6, (-146.647 + -6.6), 1.0)) : injectionSwitch.y))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8071.3477)), float(0.0), bool(true))) + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))) && (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y)))))))))))), false || ((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(66.10), _GLF_FUZZED(-6.5)), bvec2(false, false)))) / vec2(1.0, 1.0)).y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), (mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(clamp(-8.6, (-146.647 + -6.6), 1.0)) : injectionSwitch.y))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8071.3477)), float(0.0), bool(true))) + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))) && (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x < injectionSwitch.y)))))))))))), false || ((bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(66.10), _GLF_FUZZED(-6.5)), bvec2(false, false)))) / vec2(1.0, 1.0)).y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), (mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))))))), false, false))) && true)))) && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 0.0), max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true)), float(mat2x3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true)), (mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true))) / 1.0) : _GLF_FUZZED(1940.0677))), 1.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 0.0), max(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (vec3(injectionSwitch.x, 1.0, 0.0)) * mat3(1.0)), vec3(injectionSwitch.x, 1.0, 0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true)), float(mat2x3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.8)), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true)), (mix(float(_GLF_FUZZED(_GLF_IDENTITY(-1.8, clamp(-1.8, -1.8, -1.8)))), float(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY(max(vec3(injectionSwitch.x, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0)), (true ? max(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2464.2562)), bool(false))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)) : _GLF_FUZZED(vec3(-39.11, 42.06, 87.17))))))), bool(true))) / 1.0) : _GLF_FUZZED(1940.0677))), 1.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (91651 & 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), ((0 >> _GLF_IDENTITY(int(5), int(5)))) | ((0 >> _GLF_IDENTITY(int(5), int(5))))) | (64)), 0 | _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(64876))), _GLF_IDENTITY(64, (64) << 0)), (false ? _GLF_FUZZED(int(false)) : _GLF_IDENTITY(max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(64876))), _GLF_IDENTITY(64, (64) << 0)), (false ? _GLF_FUZZED(-14400) : max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(64876))), _GLF_IDENTITY(64, (64) << 0)))))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(64876))), _GLF_IDENTITY(64, (64) << 0)), (false ? _GLF_FUZZED(int(false)) : _GLF_IDENTITY(max(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (64) << 0) : _GLF_FUZZED(64876))), _GLF_IDENTITY(64, (64) << 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-14400), clamp(_GLF_FUZZED(-14400), _GLF_FUZZED(-14400), _GLF_FUZZED(-14400))) : max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(64876))), _GLF_IDENTITY(64, (64) << 0))))))))) / 1))), (false ? _GLF_FUZZED(-51464) : (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (true ? _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), max((64), (64)))) : _GLF_IDENTITY(_GLF_FUZZED(49682), (_GLF_FUZZED(49682)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(174878u)), max(_GLF_FUZZED(float(174878u)), _GLF_FUZZED(float(174878u)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.9)), bvec2(true, false))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bool(true))), false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_IDENTITY(false, (false) && true), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))) || false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> _GLF_IDENTITY(0u, 0u + (0u)))], _GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))) || (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(virtual_gid) : read)))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, true && (true)), false), true))))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true))))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true))))), true)))), false))))))))))), bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7462.8613, (false ? _GLF_FUZZED(97.31) : -7462.8613)))), float((injectionSwitch.x) / 1.0), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
}
