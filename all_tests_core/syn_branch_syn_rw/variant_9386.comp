#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 vec2 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_10 {
 bool _f0;
 mat4x2 _f1;
 bvec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 uint _f1;
 uint _f2;
 mat3x4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 vec2 _f1;
 vec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat2x3 _f1;
 mat2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat2x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 uvec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 uint _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 bvec4 _f4;
 vec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 int _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_12 _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_0 {
 uint workgroup_size;
 uint _f0;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat2 _f1;
 _GLF_struct_0 _f2;
 vec4 _f3;
 vec2 _f4;
 bvec4 _f5;
 int _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))) && true) && true, false || ((_GLF_DEAD(false)) && true))), true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && true)))) && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))), false, false, false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8887.1689, 3.4)) : injectionSwitch)).y)))), false, _GLF_IDENTITY(false, (false) || false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))), false, false, _GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) && true)))), false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) && true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) && true)))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) && true))))))), true, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(12.67)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.1, 12.57)), (false ? _GLF_FUZZED(vec2(-6.3, 84.47)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.1, 12.57)), min(_GLF_FUZZED(vec2(5.1, 12.57)), _GLF_FUZZED(vec2(5.1, 12.57)))))) : injectionSwitch)))))[1], _GLF_IDENTITY(((injectionSwitch)[1]), (((injectionSwitch)[1])) + 0.0) - 0.0)), vec2(_GLF_FUZZED(vec4(-39.69, 8529.7839, _GLF_IDENTITY(55.61, mix(float(_GLF_FUZZED(-812.294)), float(_GLF_IDENTITY(55.61, min(55.61, 55.61))), bool(true))), _GLF_IDENTITY(882.027, clamp(882.027, _GLF_IDENTITY(882.027, (_GLF_IDENTITY(882.027, mix(float(_GLF_FUZZED(-69.12)), float(882.027), bool(true)))) - 0.0), 882.027))).s), _GLF_FUZZED(-51.17)), bvec2(_GLF_IDENTITY(false, (false) && true), false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), clamp(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), max(_GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), (determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0)))) / 1.0), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), clamp(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x))), float(_GLF_FUZZED(493.125)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(1.0, 1.0)))), 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), float(vec3(_GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), max(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), max(_GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3001.9318) : 0.0)), 0.0))))), (determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0)))) / 1.0), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0))) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), clamp(float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-5500.4732))), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-5.7))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(2.6))), 1.0, 1.0, determinant(mat2(1.0, abs(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-8.7) : exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, abs(1.0), 0.0, exp(0.0)), (true ? mat2(1.0, abs(1.0), 0.0, exp(0.0)) : _GLF_FUZZED(mat2(2493.4269, -7.5, 7722.4561, 85.73))))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0)) > injectionSwitch.y) || false), false, true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), clamp(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), max(_GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), (determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0)))) / 1.0), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), clamp(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / cos(vec2(0.0, 0.0)))))))).x))), float(_GLF_FUZZED(493.125)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(1.0, 1.0)))), 1.0, determinant(mat2(1.0, abs(1.0), 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), float(vec3(_GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), max(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), max(_GLF_IDENTITY(determinant(mat2(1.0, abs(1.0), 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3001.9318) : 0.0)), 0.0))))), (determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0)))) / 1.0), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0))) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), clamp(float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-5500.4732))), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-5.7))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(2.6))), 1.0, 1.0, determinant(mat2(1.0, abs(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-8.7) : exp(0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, abs(1.0), 0.0, exp(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, abs(1.0), 0.0, exp(0.0)), (true ? mat2(1.0, abs(1.0), 0.0, exp(0.0)) : _GLF_FUZZED(mat2(2493.4269, -7.5, 7722.4561, 85.73))))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0)) > injectionSwitch.y) || false), false, true)))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false))))), false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false)))))))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (false) && true))), (false || ((_GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true, false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true, false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true, false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false)))), true))))))), false))))), false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))) && true)), false)))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && true))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0)), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((injectionSwitch.x) * 1.0) * 1.0))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, (injectionSwitch.x) * 1.0)), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0)))))) : _GLF_FUZZED(float(_GLF_IDENTITY(true, ! (! (true))))))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), true && (false || _GLF_IDENTITY((false), ! (! ((false))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), true, false, false))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / sqrt(1.0)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 1.0, 1.0, 1.0, 1.0))), injectionSwitch.y)))))))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
      return;
     return;
    }
   return;
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(48725, -145, 17692)) : ivec3(1))), ivec3(1))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_struct_0(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0)), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * ((1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)) / 1.0))))) + 0.0))))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0)), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * abs(1.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, tan(0.0), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, tan(0.0), 1.0))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), clamp(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.2) : 1.0)), 1.0)), mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 0.0 + ((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), ((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) / 1.0))))) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))) - 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? 1.0 : _GLF_FUZZED(atan(989.607))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), (false ? _GLF_FUZZED(2.6) : (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), 0.0 + (_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), clamp((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), abs(1.0), sin(0.0), 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(acos(-0.8)))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)) * (1.0)), 1.0)), 1.0))), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), sin(0.0), 1.0)))), clamp(float(_GLF_IDENTITY(vec4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), abs(1.0), sin(0.0), 1.0), mat4(1.0) * (vec4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), abs(1.0), _GLF_IDENTITY(sin(0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.5), (_GLF_FUZZED(-4.5)) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : sin(0.0))), 1.0)))), float(_GLF_IDENTITY(vec4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), abs(1.0), sin(0.0), 1.0), mat4(1.0) * (vec4(0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), float(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), determinant(mat3(0.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0)))), abs(1.0), sin(0.0), 1.0)))), float(_GLF_IDENTITY(vec4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), abs(1.0), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), sin(0.0), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), 1.0), mat4(1.0) * (vec4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(distance(vec3(-1.9, 1746.3466, 798.785), vec3(0.5, 98.15, -6.9))) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0))), abs(1.0), sin(0.0), 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))) + 0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (false ? _GLF_FUZZED(4380.4095) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) * 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))))))) - 0.0)))), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(_GLF_ONE(1.0, injectionSwitch.y)), exp(0.0), abs(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0))), 0.0 + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)))), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), mix(float(_GLF_FUZZED(vec2(-1547.6858, 3.1).x)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), bool(true))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3270.2777, 666.750, -6635.2424).p)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))) - 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.9)), float(1.0), bool(true)))))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), (true ? _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mix(float(_GLF_FUZZED(1279.0641)), float(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), bool(true))) : _GLF_FUZZED(6.4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), ((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(-94.02)), bool(false)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, abs(1.0) * (1.0)))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, sqrt(sqrt(1.0)), sqrt(1.0), 1.0), (true ? _GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, sqrt(sqrt(1.0)), sqrt(1.0), 1.0), mat3(1.0) * (mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, sqrt(sqrt(1.0)), sqrt(1.0), 1.0))) : _GLF_FUZZED(mat4x3(-168.502, -0.9, -3.4, -7.6, 5.5, -6189.4924, -2787.9626, -35.08, 1197.9615, -7.6, -743.525, -81.73)))))), max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))), 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(888.760)), bool(false))))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))), 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 9965.5527))), float(1.0), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))) / 1.0))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0), max(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0))), 1.0), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), clamp(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), max(1.0, 1.0)), 1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)) + (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(float(1.0))))), max(float(float(_GLF_IDENTITY(1.0, float(float(1.0))))), float(float(_GLF_IDENTITY(1.0, float(float(1.0)))))))))), 1.0)) - 0.0))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(5.8)))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))) - 0.0)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), ((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(674.640)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat2x3(mat3(mat2x3(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), (float(_GLF_IDENTITY(mat2x3(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat2x3(mat3(mat2x3(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))) * 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(normalize(0.3)) : 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, log(abs(1.0))))), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(determinant(mat2(-21.23, -43.07, 53.48, -9.4)))))))))), mix(float(_GLF_FUZZED(-1772.7799)), float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(determinant(mat2(-21.23, -43.07, 53.48, -9.4))))))))))), bool(true))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))))) - 0.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(dot(-914.639, -369.568)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(299.077)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))) - 0.0), float(_GLF_FUZZED(-1.4)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), float(_GLF_FUZZED(((-7.4) * -1582.8197))), bool(false)))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))), float(mat4(0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(abs(1.0), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(abs(1.0), 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(abs(1.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(abs(1.0), 0.0, 0.0))))), 0.0))))))) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))) - 0.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))) - 0.0, mix(float(_GLF_FUZZED(-6627.1617)), float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))) - 0.0), bool(true))))), float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), float(_GLF_FUZZED(8088.7397)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(max(max(1.0, 1.0), max(1.0, 1.0)), (_GLF_IDENTITY(max(max(1.0, 1.0), max(1.0, 1.0)), clamp(_GLF_IDENTITY(max(max(1.0, 1.0), max(1.0, 1.0)), min(max(max(1.0, 1.0), max(1.0, 1.0)), max(max(1.0, 1.0), max(1.0, 1.0)))), max(max(1.0, 1.0), max(1.0, 1.0)), max(max(1.0, 1.0), max(1.0, 1.0))))) * 1.0))), 1.0))))))) - 0.0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, tan(0.0) + (1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 1.0, log(1.0)))), 1.0, 1.0)))))), 1.0))))))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(inversesqrt(-499.223)))))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0))))))) - 0.0)), 1.0, 1.0)))))))))))) - tan(vec2(0.0, 0.0))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! _GLF_IDENTITY((bool(true)), true && ((bool(true))))))), false || (bool(bool(true)))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))))), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), (true ? (_GLF_IDENTITY(0, (0) >> 0)) : _GLF_FUZZED(90661))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), min(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(37918)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) : _GLF_FUZZED(49935)))), _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), max((1), (1))))))), 1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4419.1122)), bool(false)))), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(4.1)), bvec2(false, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(921.979), _GLF_FUZZED(-3.6)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, tan(0.0))), dot(vec3(cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, tan(0.0)))), 1.0, determinant(mat2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) / 1u))), gl_WorkGroupID)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true))))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true)))) || false), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))))) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true)))) || false), true)), false)))))), true))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) && true))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, true)), true, true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))))))))))))) && true, true, true), true)))))))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))))), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, false, false))), false || (! (! (false)))))))) && true))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), false, true)), true, true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, true)), true, true)))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, true)), true, true))))))), false || (! ((bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, true)), true, true))))))))))))))))))) && true, true, true), true)))))))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), true)))))), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) && true))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))))))))))))) && true, true, true), true)))))))))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true)), true)), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (! (! (false)))))) && true))))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))))))))))))) && true, true, true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))))))))))))) && true, true, true), true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), true, true)))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, true)), true, true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))))), _GLF_IDENTITY(bool(bvec2((! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))))), true)), (bool(bvec2((! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))))), true))) && true))))))))) && true, true, true), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))))))))))))) && true, true, true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true)))))))))))))) && true, true, true), true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), true, true)))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, true)), true, true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))))), _GLF_IDENTITY(bool(bvec2((! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))))), true)), (bool(bvec2((! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true, true))))))), true))) && true))))))))) && true, true, true), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), true, false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))))), true, true))), true, true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), _GLF_IDENTITY(uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), _GLF_IDENTITY(uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_struct_replacement_1._f2.workgroup_size)), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(max(_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_1._f2.workgroup_size, 1u * (_GLF_struct_replacement_1._f2.workgroup_size)))))), _GLF_struct_replacement_1._f2.workgroup_size), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u)))))))) | 0u)))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_3(_GLF_struct_2(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1), _GLF_struct_7(_GLF_struct_4(mat4x3(1.0), uvec2(_GLF_IDENTITY(1u, (1u) * 1u)), mat4(1.0)), 1u, _GLF_struct_5(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((min(1, 1)), ((min(1, 1))) / 1) << 0), min(1, 1)))), mat2x3(1.0), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_struct_6(1, mat2x3(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39945))))), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-6.8), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(0.1)), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), (vec2(1.0)) * mat2(1.0)), mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6056.8586))), 1.0)))), _GLF_struct_12(_GLF_struct_8(mat3x2(1.0), vec2(1.0), vec2(1.0), mat3x2(1.0)), _GLF_struct_9(mat4x3(1.0), 1u, 1u, mat3x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(1.0)), _GLF_struct_10(true, mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - log(1.0), mix(float((1.0) - log(1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-22.18), mix(float(_GLF_FUZZED(-22.18)), float(_GLF_FUZZED(float(-14552))), bool(false)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1049.9847)), bool(false))) : _GLF_FUZZED(-9.9)))))))))), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), 1u), _GLF_struct_11(vec2(1.0), mat4x2(1.0), bvec3(true), ivec3(1))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * (1u | 1u)), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) + subgroup_id * subgroup_size) << 0u)), clamp(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) << 0u)), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), (workgroup_base + subgroup_id * subgroup_size) << 0u))))))))) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | 0u) * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), (false ? _GLF_FUZZED(uint(-53992)) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u)))) << 0u)))), clamp(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) << 0u, 1u * (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) << 0u, ((workgroup_base + subgroup_id * subgroup_size) << 0u) << 0u)))))))))) + subgroup_local_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) / 1u)) - 0u)), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), clamp(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) << 0u, ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) << 0u, max((workgroup_base + subgroup_id * subgroup_size) << 0u, (workgroup_base + subgroup_id * subgroup_size) << 0u))))))), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) << 0u))))))) + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) << 0u)), clamp(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))))) + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))) << 0u)), clamp(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))))) + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(max(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (true ? uvec2(workgroup_base, 1u) : _GLF_FUZZED(uvec2(11629u, 62784u)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_id))) + subgroup_id * subgroup_size) << 0u)), max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))))) + subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) - (0u | 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - (1u ^ 1u))) >> 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (bool(false)))))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (! (! (bool(false)))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (bool(false))), true && (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(false, false || (false))))), true && ((! (bool(false)))))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), false), true)))))))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) / _GLF_IDENTITY(1u, min(1u, 1u))))), uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))) | 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) - 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (~ (uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u + (~ (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y))))))), 1u)) | (_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 1u), (uvec3(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec3(0u, 0u, 0u)))))), ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) - 0u))), min(1u, 1u))))), uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), ((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u))))) / 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), 0u, 1u, 1u), min(uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), 0u, 1u, 1u), uvec4((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), 0u, 1u, 1u))))))) | 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) - 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (~ (uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u + (~ (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y))))))), (true ? _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (~ (uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u + (~ (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y))))))) : _GLF_FUZZED(workgroup_id))), 1u)) | (_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), float(vec3((injectionSwitch.y), 1.0, sqrt(1.0)))), (injectionSwitch.y))) + 0.0))), 1u), (uvec3(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1u)) << uvec3(0u, 0u, 0u))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) * 1u) + 1) % subgroup_size)) ^ 0u), 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), max(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)))))), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u)), 0u | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 0u, 1u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + 1) % subgroup_size, 0u, 1u, 0u), (uvec4((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + 1) % subgroup_size, 0u, 1u, 0u)) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)) ^ 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u)), 0u | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)), clamp((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)))) ^ 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), 0u + (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) ^ 0u)), 0u | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size)) ^ 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_struct_replacement_13.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(1.0, 33.51, 8616.9635).t), _GLF_FUZZED(-9461.9182)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), ~ (~ _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))))), uint(uvec3(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid))))), 1u, 0u))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(616.359)), bvec2(false, false))), injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(616.359)), bvec2(false, false))), injectionSwitch, injectionSwitch)), injectionSwitch)).y), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), uint(uint(~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), 0u ^ ((1u) | (1u))))))))))) + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - (130078u & 0u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - (130078u & 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - (130078u & 0u))))))))) / 1u))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(bool(bvec3((bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false, false)), ! (! (bool(bvec3((bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false, false)))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(checker[_GLF_struct_replacement_13.virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), _GLF_IDENTITY((_GLF_IDENTITY(true ? 0 + (4) : _GLF_FUZZED(-91262), 0 ^ (true ? 0 + (4) : _GLF_FUZZED(-91262)))), max((true ? 0 + (4) : _GLF_FUZZED(-91262)), _GLF_IDENTITY((true ? 0 + (4) : _GLF_FUZZED(-91262)), 0 ^ ((true ? 0 + (4) : _GLF_FUZZED(-91262)))))))), _GLF_IDENTITY(64, (64) | 0), 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5128.0336) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.2))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.2))))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(ceil(faceforward(89.93, -39.79, 44.25)), clamp(ceil(faceforward(89.93, -39.79, 44.25)), ceil(faceforward(89.93, -39.79, 44.25)), _GLF_IDENTITY(ceil(faceforward(89.93, -39.79, 44.25)), float(vec2(ceil(faceforward(89.93, -39.79, 44.25)), 1.0)))))) : injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec4(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (! (false))))))), (bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (! (false)))))))) && true)), false, false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_13.virtual_gid, max(_GLF_struct_replacement_13.virtual_gid, _GLF_struct_replacement_13.virtual_gid))], read, 4, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 ^ (_GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 ^ (_GLF_IDENTITY(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 ^ (_GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 ^ (_GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 ^ (_GLF_IDENTITY(int(6), int(6))))))) * 1)) ^ (64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) / vec2(1.0, 1.0)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-17.15)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.6))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) + 0.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), (bool(! (true))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), (bool(! (true))) || false)))))), bool(bvec3(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), (bool(! (true))) || false)))))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
