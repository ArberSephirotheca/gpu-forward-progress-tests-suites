#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) && true)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ! (! ((! (false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((! (false))))))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))))) && true))))), true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), false || (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(151.668, (true ? 151.668 : _GLF_FUZZED(-3872.2006))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-85.91)), bool(false))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6858.6946)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), clamp(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 0.0)), clamp(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6858.6946)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), clamp(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6858.6946)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), clamp(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 0.0)), (float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6858.6946)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), clamp(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 0.0))) - tan(0.0)), float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6858.6946)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), clamp(float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat4x3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))))), bool(true))), 1.0, 0.0, 0.0)))))), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), true)), (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), true)), (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), true)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), true, false, false)), true)), false || (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), false, false)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, true && (false)))), true))))))), (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat4x3(9.1, 7285.4965, -8.4, -25.18, 68.86, 267.753, -2.0, 728.631, 7.1, 87.64, 491.552, 8.4) - mat4x3(-66.08, 228.218, -47.11, 9.2, 5962.0188, -9.4, 23.48, 59.12, 0.5, -8465.1713, -9.8, -2.3))) : mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat4x3(9.1, 7285.4965, -8.4, -25.18, 68.86, 267.753, -2.0, 728.631, 7.1, 87.64, 491.552, 8.4) - mat4x3(-66.08, 228.218, -47.11, 9.2, 5962.0188, -9.4, 23.48, 59.12, 0.5, -8465.1713, -9.8, -2.3))) : mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(591.741) : float(_GLF_IDENTITY(mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat4x3(9.1, 7285.4965, -8.4, -25.18, 68.86, 267.753, -2.0, 728.631, 7.1, 87.64, 491.552, 8.4) - mat4x3(-66.08, 228.218, -47.11, 9.2, 5962.0188, -9.4, 23.48, 59.12, 0.5, -8465.1713, -9.8, -2.3))) : mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0)))))), float(_GLF_IDENTITY(mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat4x3(9.1, 7285.4965, -8.4, -25.18, 68.86, 267.753, -2.0, 728.631, 7.1, 87.64, 491.552, 8.4) - mat4x3(-66.08, 228.218, -47.11, 9.2, 5962.0188, -9.4, 23.48, 59.12, 0.5, -8465.1713, -9.8, -2.3))) : mat4x3(0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))).y, (true ? injectionSwitch.y : _GLF_FUZZED(7766.9659)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7766.9659)))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7766.9659)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7766.9659))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(7766.9659), min(_GLF_FUZZED(7766.9659), _GLF_FUZZED(7766.9659)))))))) && true)))), false)))) || false))))
      barrier();
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))
          barrier();
        }
       else
        {
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(18.57) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(66.51, -6450.8935)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(986.969) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) || false))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 | 1) ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))) ^ (_GLF_IDENTITY(0, (0) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), 0 | (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), _GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), _GLF_IDENTITY(int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0)), (false ? _GLF_FUZZED(-84463) : int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0))))))))))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), 0 | (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), _GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), _GLF_IDENTITY(int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0)), (false ? _GLF_FUZZED(-84463) : int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0))))))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), 0 | (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), _GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), _GLF_IDENTITY(int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0)), (false ? _GLF_FUZZED(-84463) : int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0))))))))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), 0 | (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), _GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), _GLF_IDENTITY(int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0)), (false ? _GLF_FUZZED(-84463) : int(ivec4(int(ivec2(_GLF_IDENTITY((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0))), ((int(1)) | (int(_GLF_IDENTITY(1, (1) >> 0)))) / 1), 1)), 1, 0, 0)))))))))))) >> 0))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)) : int(1))), (_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)) : int(1)))) >> 0), ~ (~ (int(1)))), (false ? _GLF_FUZZED(-29061) : _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), ! (! (false)))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uint(_GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u)))))), min(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u | (6u))), uint(6u)), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), 0u ^ (1u))))) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_size)) * workgroup_id, _GLF_IDENTITY(0u | (workgroup_size * workgroup_id), (0u | (workgroup_size * workgroup_id)) | (0u | (workgroup_size * workgroup_id))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))) || false)) || false)))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-5027.5144)), vec2(_GLF_FUZZED(8.1), (vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y) || false), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size))) ^ 0u));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))) || false))) && true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false)))))))))), ((! (_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, true && ((false) || false))))))) && true)) || _GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0))))) / 1.0)), 0.0, sqrt(abs(1.0)), 0.0, 0.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(-3781.5130, clamp(-3781.5130, -3781.5130, -3781.5130)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) || false)) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ((false)) && true))), ! (! (! ((! _GLF_IDENTITY((false), ((false)) && true))))))))))), _GLF_IDENTITY(true, ! (! (true))))))))))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-49.17)), vec2(_GLF_FUZZED(2072.9215), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-49.17)), vec2(_GLF_FUZZED(2072.9215), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1))))], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y)) || false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), 1)), _GLF_IDENTITY(min(int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), 1)), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), 1))), (min(int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), 1)), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), 1)))) << (0 >> _GLF_IDENTITY(int(7), int(7))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3 : _GLF_FUZZED(-81293)))), _GLF_IDENTITY(0, (0) | 0) | (int(3)))))), clamp((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (0 << _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(3), (int(3)) - (1 ^ 1)))), 0 | (int(3)))))), (_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, (3) | (3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), min(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), 0 | (int(3)))))) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))))), int(ivec4((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1, 1)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(_GLF_IDENTITY(3, ~ (~ (3))))) - 0), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0), (true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))) : _GLF_FUZZED(_injected_loop_counter)))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(1 * (_injected_loop_counter ++), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1 * (_injected_loop_counter ++), 0 | (1 * (_injected_loop_counter ++)))))), (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) ^ 0))) * (_injected_loop_counter ++))) - 0), (true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)) : _GLF_FUZZED(_injected_loop_counter)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))), ~ (~ ((_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))))) - 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)) : _GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)) : _GLF_FUZZED(_injected_loop_counter), 0 | (true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)) : _GLF_FUZZED(_injected_loop_counter))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0))))), (true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0, ((_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) - 0) | 0))))), (true ? _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)) : _GLF_FUZZED(_injected_loop_counter))))) ^ 0))) : _GLF_FUZZED(_injected_loop_counter))) | 0)) / _GLF_IDENTITY(1, (1) | 0)))
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(_GLF_IDENTITY(read, (read) / 1u)) : _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) | 0u))), next_virtual_gid)), (next_virtual_gid) | (next_virtual_gid))))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec3((1), 1, 0)))) | ((1))) * 1), 1))), 4, _GLF_IDENTITY(64, (64) * 1), 4);
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)), 0 ^ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), clamp(~ (~ (0)), ~ (~ (0)), ~ (~ (0))))) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) * 1))) | int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))) | int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (_GLF_IDENTITY(1, 0 + (1))))) / 1)) | int(_GLF_ONE(1.0, injectionSwitch.y))) - 0)) | (_GLF_IDENTITY(1, ~ (~ (1))) | int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((9.1)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-88.36)), vec2(_GLF_FUZZED(-171.586), (injectionSwitch)[1]), bvec2(false, true))).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), false, false, false)))) || false) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 | 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)));
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(sqrt(1.0)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec4(false, false, true, false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) : _GLF_FUZZED(injectionSwitch))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(9.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(_GLF_IDENTITY(9.4, (true ? 9.4 : _GLF_FUZZED(-49.68))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))) || false), true))) : _GLF_FUZZED(injectionSwitch))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(9.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4106.6589))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_IDENTITY(_GLF_FUZZED(9.4), mix(float(_GLF_FUZZED(-8.0)), float(_GLF_FUZZED(9.4)), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_IDENTITY(_GLF_FUZZED(9.4), mix(float(_GLF_FUZZED(-8.0)), float(_GLF_FUZZED(9.4)), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_IDENTITY(_GLF_FUZZED(9.4), mix(float(_GLF_FUZZED(-8.0)), float(_GLF_FUZZED(9.4)), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), true))) : _GLF_FUZZED(injectionSwitch)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)) && true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(1.9, clamp(_GLF_IDENTITY(1.9, mix(float(_GLF_FUZZED(815.565)), float(_GLF_IDENTITY(1.9, (1.9) - 0.0)), bool(true))), 1.9, 1.9)), (_GLF_IDENTITY(true ? 1.9 : _GLF_FUZZED(77.68), (true ? 1.9 : _GLF_FUZZED(77.68)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[1]), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), true))) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(_GLF_IDENTITY(1.9, max(_GLF_IDENTITY(1.9, clamp(1.9, 1.9, 1.9)), 1.9))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)))), false))))))), true))) : _GLF_FUZZED(injectionSwitch))).y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0)), (vec2(mat2x4(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0))) - vec2(0.0, 0.0))))).y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y) / 1.0))))))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).y))))) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.1), (_GLF_FUZZED(-7.1)) - sin(0.0))), (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.1), (_GLF_FUZZED(-7.1)) - sin(0.0)))) * mat2(1.0)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch))), vec2(0.0, 0.0) + (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.1), (_GLF_FUZZED(-7.1)) - sin(0.0))), (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.1), (_GLF_FUZZED(-7.1)) - sin(0.0)))) * mat2(1.0)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch))))))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 1.0, log(1.0))))) + vec2(0.0, 0.0)))).y) / 1.0)))))))))))), true, true))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, false)))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, false)))), false, true))) && true)))))))))) && true)))))
              barrier();
             do
              {
               return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1)), ! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1)), ! (! (_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1))))))))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       return;
                      }
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))));
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), ((! ((_GLF_IDENTITY(false, true && (false)))))) || false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(log(1.0)), 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), determinant(mat4(log(1.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(729.724)), float(0.0), bool(true))), 0.0))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(log(1.0)), 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), determinant(mat4(log(1.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(729.724)), float(0.0), bool(true))), 0.0)))))))))))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(log(1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1469.7557))), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(0.0, 0.0, 0.0)), 1.0)), determinant(mat4(log(1.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))) * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec2((0.0), abs(1.0)), mix(vec2(_GLF_FUZZED((false ? -65.77 : -9.7)), _GLF_FUZZED(23.74)), vec2((vec2((0.0), abs(1.0)))[0], (vec2((0.0), abs(1.0)))[1]), bvec2(true, true)))))), tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(729.724)), float(0.0), bool(true))), 0.0)))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))), _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(log(1.0)), 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), clamp(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))), determinant(mat4(log(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-35.47))), 1.0, 1.0, tan(0.0), 0.0, _GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(8.8) : _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-5.8))))), log(1.0), log(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), min(_GLF_IDENTITY(1.0 * (0.0), clamp(1.0 * (0.0), 1.0 * (0.0), 1.0 * (0.0))), 1.0 * (0.0)))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(529.442)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(729.724)), float(0.0), bool(true))), 0.0))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) : _GLF_FUZZED(distance(vec2(6101.9747, -7874.0398), vec2(-9.7, -9.1))))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3103.2130)), bool(false)))), float(_GLF_FUZZED(8963.1214)), bool(false))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.3)), bool(false))), 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(89.22))))), 1.0, log(1.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(log(1.0)), 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3780.9386) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), 1.0)), determinant(mat4(log(1.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-37.77) : 0.0)), 0.0)))), tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(729.724)), mix(float(_GLF_FUZZED(584.609)), float(_GLF_IDENTITY(float(_GLF_FUZZED(729.724)), max(_GLF_IDENTITY(float(_GLF_FUZZED(729.724)), max(float(_GLF_FUZZED(729.724)), float(_GLF_FUZZED(729.724)))), float(_GLF_FUZZED(729.724))))), bool(true))), float(0.0), bool(true))), 0.0)))))))))))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), sqrt(1.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(length(injectionSwitch)))), 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-3.0), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-84.92)), bvec2(true, false))))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(log(1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1469.7557))), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(0.0, 0.0, 0.0)), 1.0)), determinant(mat4(log(1.0), 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, tan(0.0), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))) * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec2((0.0), abs(1.0)), mix(vec2(_GLF_FUZZED((false ? -65.77 : -9.7)), _GLF_FUZZED(23.74)), vec2((vec2((0.0), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED((-3269.8217))), float(abs(1.0)), bool(true)))))[0], (vec2((0.0), abs(1.0)))[1]), bvec2(true, true)))))), tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(729.724)), float(0.0), bool(true))), 0.0))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true))), false || (_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true))), ! (! (bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true)))))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(392.982), _GLF_FUZZED(813.890)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0)))))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0)))))))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-93.95)), bool(false))))) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), true, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), true, true), true))))))))))), true)))))))))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, true)), false, true, true)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))), false || ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))))))), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true)), (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true))) || false))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true)), (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true))) || false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true)), (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true))) || false))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true)), (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))) || false, true, true))) || false)))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))))))) || false)) || false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))) > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))) || false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))), true)))));
            }
          }
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false), false, true), false)))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))));
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false) || false)))))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), true))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), ! (! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) || (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), true, false, false)))))))))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false)))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false))))))))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))).y)), true))))) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-56.04, 5829.2587)))).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(tan(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-291.787) : tan(0.0)))), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))) - 0.0)) * 1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))) < injectionSwitch.y) && true))) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))), true))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))))).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))))))) - 0.0)) * 1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))) < injectionSwitch.y) && true))) && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))), true))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))))))))).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), (injectionSwitch.x) + tan(0.0))))))))) - 0.0)) * 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))) < injectionSwitch.y) && true))) && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.95), _GLF_FUZZED(2.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), vec2(vec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))))))).y)), true))))) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-56.04, 5829.2587)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), vec2(vec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(416.169), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(6.4)), bvec2(false, false))))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))))))).y)), true))))) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-56.04, 5829.2587)))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-291.787) : tan(0.0), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-291.787) : tan(0.0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-291.787) : tan(0.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, (injectionSwitch.x) - 0.0)) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))) - 0.0)) * 1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))) < injectionSwitch.y) && true))) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))), true))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), min(injectionSwitch, injectionSwitch)), injectionSwitch)))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))), true))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), min(injectionSwitch, injectionSwitch)), injectionSwitch)))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))))))) - 0.0)) * 1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))))))) - 0.0)) * 1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))))))) - 0.0)) * 1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))))) < injectionSwitch.y) && true))) && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))))), true))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587))))))), min(max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587))))))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-56.04, 5829.2587)), max(_GLF_FUZZED(vec2(-56.04, 5829.2587)), _GLF_FUZZED(vec2(-56.04, 5829.2587)))))))))) / vec2(1.0, 1.0))))).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(925.357)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), (injectionSwitch.x) + tan(0.0)))))), 0.0 + (max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), (injectionSwitch.x) + tan(0.0))))))))))) - _GLF_IDENTITY(0.0, (0.0) / 1.0))) * 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)))) && true))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) && true))) && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.95), _GLF_FUZZED(2.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0)))[1]), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true)))) * abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(normalize(1.0))), ((false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(normalize(1.0)))) - sin(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))))) < injectionSwitch.y)), false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false || (false || (false)), bool(bvec2(false || (false || (false)), true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(normalize(1.0)))))) < injectionSwitch.y)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(-49.90))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x, 0.0 + (false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x))) / round(length(normalize(1.0)))))) < injectionSwitch.y)), false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x, (false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(normalize(1.0)))))) < injectionSwitch.y)), false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))) || (false), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))) || (false), false, true, false)))))), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 0.0))).x, (false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(normalize(1.0)))))) < injectionSwitch.y)), false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x)), (_GLF_IDENTITY(false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x, (false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1925.2447)), float(normalize(1.0)), bool(true)))))))) < injectionSwitch.y)), false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(7459.4781), float(mat2x3(_GLF_FUZZED(7459.4781), 0.0, sin(0.0), log(1.0), 0.0, 0.0))) : injectionSwitch.x, (false ? _GLF_FUZZED(7459.4781) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (_GLF_IDENTITY(1.0 * (injectionSwitch.x), (false ? _GLF_FUZZED(7.8) : 1.0 * (injectionSwitch.x)))) / 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) + 0.0), 0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))) / _GLF_IDENTITY(round(length(normalize(1.0))), min(_GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(-93.80 + -1.5, (-93.80 + -1.5) / 1.0)))), float(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))), bool(true)))))), _GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))))))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(7459.4781), float(mat2x3(_GLF_FUZZED(7459.4781), 0.0, sin(0.0), log(1.0), 0.0, 0.0))) : injectionSwitch.x, (false ? _GLF_FUZZED(7459.4781) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (_GLF_IDENTITY(1.0 * (injectionSwitch.x), (false ? _GLF_FUZZED(7.8) : 1.0 * (injectionSwitch.x)))) / 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) + 0.0), 0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))) / _GLF_IDENTITY(round(length(normalize(1.0))), min(_GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(-93.80 + -1.5, (-93.80 + -1.5) / 1.0)))), float(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))), bool(true)))))), _GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))))))) < injectionSwitch.y)))), false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true)))))))), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(7459.4781), float(mat2x3(_GLF_FUZZED(7459.4781), 0.0, 1.0, 1.0, 0.0, 1.0))) : injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-3.3 * 3907.0317))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), clamp(vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))) * (false ? _GLF_FUZZED(7459.4781) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x), (float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x)) - 0.0))))), (false ? _GLF_FUZZED(7459.4781) : injectionSwitch.x) / round(length(normalize(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) < injectionSwitch.y)), false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
}
