#version 460
struct _GLF_struct_4 {
 ivec2 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 float _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(vec4(1.0)), _GLF_struct_1(mat3(1.0), mat3x4(1.0)), gl_SubgroupSize), mat3(1.0), 1.0, mat4x2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.x = num_workgroup;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec2(1), gl_WorkGroupSize.x);
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.w = _GLF_struct_replacement_4.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.w * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_3._f0.subgroup_size;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.z = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.z + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.z + ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0.subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.y = read;
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_baseworkgroup_size.y, 4, 64, 4);
}
