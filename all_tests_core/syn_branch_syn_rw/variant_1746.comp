#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))))) && true, ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), false || (((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), false || (((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))))), true && (bool(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), false || (((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)))))))))))))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) && true)))) && true)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-174.262, 4.5))))))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))), 1u)), (uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))), 1u))) | uvec3(0u, 0u, 0u))), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(193085u, 132733u, 26180u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.22)), float(injectionSwitch.y), bool(true))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.22)), float(injectionSwitch.y), bool(true))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.22)), float(injectionSwitch.y), bool(true))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))), false))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.22)), float(injectionSwitch.y), bool(true))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.22)), float(injectionSwitch.y), bool(true))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))), false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))), (true && (! (_GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false, true, false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) * subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) >> 0u)), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) ^ (uvec2(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) >> 0u))))))) + _GLF_IDENTITY(0u, ~ (~ (0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1552.6118)), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1552.6118)), bool(false))))), sin(0.0), 1.0, 0.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1552.6118)), bool(false))), sin(0.0), 1.0, 0.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1552.6118)), bool(false))), sin(0.0), 1.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1552.6118)), bool(false))), sin(0.0), 1.0, 0.0))))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1))) % subgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << 0u)))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | 0u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(uvec4(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))) || false) ? 1 : _GLF_FUZZED(26161), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))) || false) ? 1 : _GLF_FUZZED(26161)) << (0 >> _GLF_IDENTITY(int(5), int(5))))))) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> (191489u & 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u, 0u)))) >> uvec2(0u, 0u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true && (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true && ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true), false, false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))))], _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))), max(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))))) / 1.0)), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))))], _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0), clamp(_GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0), min(_GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0), _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0))), _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0)))), injectionSwitch[1])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))))], _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6533) : _GLF_IDENTITY(0, (0) - 0)))))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-95437)))], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(33778) : (0)))))) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0)), injectionSwitch[1])).x : _GLF_FUZZED(-78.46))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))))], _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-26652) : 1)) * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), mix(float(_GLF_FUZZED(9.7)), float((max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))), 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (_GLF_IDENTITY(true, (true) && true) ? 0.0 + (max(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0)), injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))))], _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) - 0)]), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(828.428)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (_GLF_IDENTITY(0, (0) - 0)))]), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (0) - 0)])), clamp(_GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), min(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-169.689)), bool(false))))) + (max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], mix(float(_GLF_FUZZED(-939.987)), float(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)]), bool(true))))))), 0.0 + (max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], clamp(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], min(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])))))), _GLF_IDENTITY(0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - 0)])), (true ? 0.0 + (max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (0) | 0))])) : _GLF_IDENTITY(_GLF_FUZZED(-3486.8327), (_GLF_FUZZED(-3486.8327)) / 1.0))))))) / 1.0)), injectionSwitch[1])).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3.9) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), sqrt(1.0), 1.0, 0.0, 0.0, 1.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(224.186), _GLF_FUZZED(-9.6), (vec3(0.0, 1.0, 1.0))[2]), vec3((vec3(0.0, 1.0, 1.0))[0], (vec3(0.0, 1.0, 1.0))[1], _GLF_FUZZED(10.89)), bvec3(true, true, false))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3.9) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), sqrt(1.0), 1.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3.9) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), sqrt(1.0), 1.0, 0.0, 0.0, 1.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(0.0, 0.0)) * (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(224.186), _GLF_FUZZED(-9.6), (vec3(0.0, 1.0, 1.0))[2]), vec3((vec3(0.0, 1.0, 1.0))[0], (vec3(0.0, 1.0, 1.0))[1], _GLF_FUZZED(10.89)), bvec3(true, true, false))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(3.9) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), sqrt(1.0), 1.0, 0.0, 0.0, 1.0))))))) * vec2(1.0, 1.0))))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.0)), min(float(_GLF_FUZZED(-2.0)), float(_GLF_FUZZED(-2.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0)))))), min(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0)))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0))))))))), _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(3107.1040) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) | 0u), 0u))) << 0u))) * 1u) + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u + (virtual_gid), (0u + (virtual_gid)) | (0u + _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), 0u, 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uvec4(_GLF_IDENTITY(1u, (1u) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u))), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), 0u + (uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))) ^ 0u), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) << 0u))), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), ~ (~ (~ (((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))))))))))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4(0u + _GLF_IDENTITY((virtual_gid), ((virtual_gid)) << (59138u & 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), min(0u, 0u)), 0u, 1u)))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(199663u, (false ? _GLF_FUZZED(workgroup_id) : 199663u))) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 1u)))), 1u)))))) | 0u))) ^ 0u, (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), 0u, 0u, 1u)), (uint(uvec4(0u + (virtual_gid), 0u, 0u, 1u))) + 0u)) ^ 0u))), 1u * (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u + (virtual_gid), (0u + (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) | (0u + _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((virtual_gid)), (_GLF_IDENTITY(((virtual_gid)), min(((virtual_gid)), ((virtual_gid))))) - 0u)), (_GLF_IDENTITY((~ _GLF_IDENTITY(((virtual_gid)), (_GLF_IDENTITY(((virtual_gid)), min(((virtual_gid)), ((virtual_gid))))) - 0u)), ((~ _GLF_IDENTITY(((virtual_gid)), (_GLF_IDENTITY(((virtual_gid)), min(((virtual_gid)), ((virtual_gid))))) - 0u))) | ((~ _GLF_IDENTITY(((virtual_gid)), (_GLF_IDENTITY(((virtual_gid)), min(((virtual_gid)), ((virtual_gid))))) - 0u))))) - 0u)))), 0u, 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uvec4(_GLF_IDENTITY(1u, (1u) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u))), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(uint(uvec4(0u + _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u)))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u)))) | (1u)), (1u) | 0u)) << 0u))), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) * 1u))) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 0u, 1u)))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) >> 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(199663u) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 1u)))), 1u)))))), 1u * ((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), min(_GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (clamp(0u, 0u, 0u)), (~ (clamp(0u, 0u, 0u))) * 1u))), clamp(0u, 0u, 0u))))) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), 0u, 1u)))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), min(uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec4(0u + (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(199663u), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(199663u), 0u | (_GLF_FUZZED(199663u))), 0u, ((1u | 1u) & 1u), 1u))) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 1u)))), 1u)))))))) | 0u))) ^ 0u, (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(uint(uvec4(0u + (virtual_gid), 0u, 0u, 1u)), (uint(uvec4(0u + (virtual_gid), 0u, 0u, 1u))) + 0u)) ^ 0u))))))), _GLF_IDENTITY(virtual_gid, 0u + _GLF_IDENTITY((virtual_gid), (true ? (virtual_gid) : _GLF_FUZZED(subgroup_local_id))))))], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) < (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / 2))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))))), (uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))))), (uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))))), (uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (~ (~ (_GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))))), (uint(uint(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))) << 0u)))) << 0u))), _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / 1)), ~ (~ (uint(1)))), uint(1), uint(1))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-109.745, -5856.1319, -4.5, 5871.9205)))) * (injectionSwitch)).x)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0))), 1.0, 1.0)))), float(_GLF_FUZZED(377.445)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-109.745, -5856.1319, -4.5, 5871.9205)))) * (injectionSwitch)).x)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0))), 1.0, 1.0)))), float(_GLF_FUZZED(377.445)), bool(false))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(max(-743.215, -6.3)) : injectionSwitch.y, min(false ? _GLF_FUZZED(max(-743.215, -6.3)) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(max(-743.215, -6.3)) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(max(-743.215, -6.3)) : injectionSwitch.y, 1.0, 1.0)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(_GLF_IDENTITY(5.2, (5.2) / 1.0), max(_GLF_IDENTITY(5.2, (5.2) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(5.2, (5.2) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(5.2, (5.2) / 1.0), mix(float(_GLF_IDENTITY(5.2, (5.2) / 1.0)), float(_GLF_FUZZED(-639.557)), bool(false))) : _GLF_FUZZED(-566.602))))), -4.6, 7.6, 18.78, 44.53)[2]) : injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4x2(19.83, -461.155, _GLF_IDENTITY(-2131.1957, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0))) + (-2131.1957), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0))) + (-2131.1957), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0))) + (-2131.1957), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(sin(0.0), cos(0.0), 0.0))) + (-2131.1957)))), _GLF_IDENTITY(_GLF_IDENTITY(5.2, clamp(_GLF_IDENTITY(5.2, max(5.2, 5.2)), 5.2, 5.2)), (5.2) / 1.0), -4.6, 7.6, 18.78, 44.53)[2], clamp(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(19.83, min(_GLF_IDENTITY(19.83, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (_GLF_IDENTITY(19.83, (19.83) - 0.0))), _GLF_IDENTITY(19.83, max(19.83, 19.83)))), -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / 1.0), -4.6, 7.6, 18.78, 44.53)[_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), 0 ^ (int(2)))))], mix(vec2((mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), -4.6, 7.6, 18.78, 44.53)[2])[0], (mat4x2(19.83, -461.155, _GLF_IDENTITY(-2131.1957, (false ? _GLF_FUZZED(5457.7954) : _GLF_IDENTITY(-2131.1957, min(-2131.1957, -2131.1957)))), _GLF_IDENTITY(5.2, (5.2) / 1.0), _GLF_IDENTITY(-4.6, mix(float(-4.6), float(_GLF_FUZZED((-630.852))), bool(false))), 7.6, 18.78, 44.53)[2])[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-2.4)), bvec2(false, false))), mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / 1.0), -4.6, 7.6, 18.78, 44.53)[2], mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / 1.0), _GLF_IDENTITY(-4.6, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(-4.6, (false ? _GLF_FUZZED(-3.0) : -4.6)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), max(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(-4.6, (false ? _GLF_FUZZED(-3.0) : -4.6)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / exp(tan(0.0)))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0))), injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(-4.6, (false ? _GLF_FUZZED(-3.0) : -4.6)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0))))))))), 7.6, 18.78, 44.53)[2]))) : injectionSwitch) * vec2(1.0, 1.0))), mat2(1.0) * ((_GLF_IDENTITY(false ? _GLF_FUZZED(mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / 1.0), -4.6, 7.6, 18.78, 44.53)[2]) : injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), -4.6, _GLF_IDENTITY(7.6, mix(float(_GLF_FUZZED(56.40)), float(_GLF_IDENTITY(7.6, clamp(7.6, 7.6, 7.6))), bool(true))), 18.78, 44.53)[2]), vec2(mat2(_GLF_FUZZED(mat4x2(19.83, -461.155, -2131.1957, _GLF_IDENTITY(5.2, (5.2) / 1.0), -4.6, _GLF_IDENTITY(7.6, mix(float(_GLF_FUZZED(56.40)), float(_GLF_IDENTITY(7.6, clamp(_GLF_IDENTITY(7.6, 0.0 + (7.6)), 7.6, 7.6))), bool(true))), 18.78, 44.53)[2]), 0.0, 0.0))) : injectionSwitch) * vec2(1.0, 1.0)))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (false), true && (false || (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false || (false), true && _GLF_IDENTITY((false || (false)), ! (! ((false || (false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true)))) || false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) / 1.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))), mix(vec2(_GLF_FUZZED(-52.67), _GLF_FUZZED(-7782.7591)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false))))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))))))[1]), bvec2(true, true))).x > injectionSwitch.y)), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) / 1.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))), mix(vec2(_GLF_FUZZED(-52.67), _GLF_FUZZED(-7782.7591)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false))))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0))), mix(float(float(mat2x3(injectionSwitch[1], determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0)))), float(_GLF_FUZZED(-2.7)), bool(false)))))))))[1]), bvec2(true, true))).x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))), bool(bool(! (! ((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)), false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))) && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, false)), ! (! (bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))), false, false))), (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, false)))) && true)) && true) && ((injectionSwitch.x > injectionSwitch.y)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4x2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))).y) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4x2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))).y) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0)))))) + vec2(0.0, 0.0)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0)))))) + vec2(0.0, 0.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat2(1.0)))))) + vec2(0.0, 0.0)))).y)))))) && true))), true && (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true)))))))), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, false))))))))), false, false))))) && true)), bool(bvec3(true, false, true))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)))), false, false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, exp(tan(0.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(193.685)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))))), 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))), min(float(mat4x2(1.0, 1.0, exp(tan(0.0)), 1.0, cos(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(348.628)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0)))))), float(mat4x2(1.0, 1.0, exp(tan(0.0)), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, sqrt(1.0))))))))), 0.0))).y)), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)))), false, false))), true)), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.4)), bool(false))), injectionSwitch.y)))), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))), true))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false, true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false))), true, true))), false, true)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false))), true, true))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false))), true, true))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false))), true, true))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false))), true, true))), false, true)))))), true, true)))))), _GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-6189.8192))))), true), false, true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true)))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true)))))), false)))))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true)))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true)))))), false)))))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true)))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true)))))), false)))))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))), false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), false))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), _GLF_IDENTITY(true, true && (true))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), false, true))), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true), false, true))), true))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))), false, false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(false, (false) && true), false))), true)), false))))))))))))))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (false))), ! (! (bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, true, false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.1)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)), max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), (! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y, (injectionSwitch.x > injectionSwitch.y) || false))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
