#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, false || (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8617.5775)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> 0u) * subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), false)), bool(bvec4(bool(bvec4(bool(false), true, false, false)), true, true, false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), false)), bool(bvec4(bool(bvec4(bool(false), true, false, false)), true, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), false)), bool(bvec4(bool(bvec4(bool(false), true, false, false)), true, true, false))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(false), true, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(bool(false), true, false, false))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(bool(false), true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(bool(false), true, false, false)), ! (! (bool(bvec4(bool(false), true, false, false))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(bool(false), true, false, false)), bool(bvec4(bool(bvec4(bool(false), true, false, false)), true, true, false))))))))))) && true), false, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), ! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false, false))))))), false || (bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), ! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (_GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))))))))), false, false))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false, _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), ! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false, false))))))))))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false))), ! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false, false))))))))))), false, true, false))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false)))), false || (! ((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false)))))))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), ! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true))))), false, false))))))))), (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))), _GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), true, false)))))))), false, false))))), (! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), true, false)))))))), false, false)))))) && true)))))) || false))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false)))))), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u))), clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u))))) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u))))) | (subgroup_base))) ^ 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(_GLF_IDENTITY(23.39, mix(float(_GLF_FUZZED(-1064.8127)), float(23.39), bool(true))))))), 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-2.3) : dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)))), dot(vec2(0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.6)), bool(false)))) / exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) - 0.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(_GLF_IDENTITY(23.39, mix(float(_GLF_FUZZED(-1064.8127)), float(23.39), bool(true))))))), 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-2.3) : dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)))), dot(vec2(0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.6)), bool(false)))) / exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(_GLF_IDENTITY(23.39, mix(float(_GLF_FUZZED(-1064.8127)), float(23.39), bool(true))))))), 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-2.3) : dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)))), dot(vec2(0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.6)), bool(false)))) / exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) - 0.0)), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(_GLF_IDENTITY(23.39, mix(float(_GLF_FUZZED(-1064.8127)), float(23.39), bool(true))))))), 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-2.3) : dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)))), dot(vec2(0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.6)), bool(false)))) / exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))))), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) - 0.0))), float(_GLF_FUZZED(-70.30)), bool(false))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, sqrt(1.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, sqrt(1.0), 1.0)), mat4(1.0) * (transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(1.3))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, abs(1.0), 1.0, sqrt(1.0), 1.0)))))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec4(float(1.0), 1.0, 0.0, 0.0)), min(float(vec4(float(1.0), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.1) : 1.0)), 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0)), 1.0, 0.0, 0.0)), min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0)))), 0.0 + (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, exp(0.0), 0.0)))) * abs(_GLF_IDENTITY(1.0, 0.0 + (1.0))))))) / 1.0)), clamp(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, exp(0.0), 0.0)))) * abs(1.0))))) / 1.0)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, exp(0.0), 0.0)))) * abs(1.0))))) / 1.0)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, exp(0.0), 0.0)))) * abs(1.0))))) / 1.0)))), 1.0, 0.0, 0.0)), min(float(vec4(float(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-76.35)), bool(false))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (false ? _GLF_FUZZED(17.16) : _GLF_IDENTITY(0.0, (0.0) / 1.0))))), float(vec4(float(1.0), 1.0, 0.0, 0.0)))))))), clamp(float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec4(float(1.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(min(float(vec4(float(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), (min(float(vec4(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0)))) + 0.0)))), float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec4(float(1.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), clamp(min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), clamp(min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))), min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))))), min(float(vec4(_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), float(vec3(float(1.0), 0.0, 1.0))), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0)))))) - 0.0)))), float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec4(float(1.0), 1.0, 0.0, 0.0)), min(float(vec4(_GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec4(float(1.0), 1.0, 0.0, 0.0)), min(float(vec4(float(1.0), 1.0, 0.0, 0.0)), float(vec4(float(1.0), 1.0, 0.0, 0.0))))))))), 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))))[0], _GLF_FUZZED(-8239.0896)), vec2(_GLF_FUZZED(-55.53), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < (_GLF_IDENTITY(subgroup_size / 2, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) / 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) / _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))) ^ 0), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ ((2)), (~ ((2))) >> 0))), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), _GLF_IDENTITY((2), int(_GLF_IDENTITY(ivec3((2), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (ivec3((2), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) | (ivec3(0, 0, 0) ^ ivec3(0, 0, 0))))), (2))) | (2))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((2), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, min(1, 1))))) >> 0) * (_GLF_IDENTITY((2), 0 ^ ((2))))), ((2)) - 0), (2), (2))) | _GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), 0 + ((2))), (2))))), 0 + ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2)))))) << 0), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((2), 1 * (_GLF_IDENTITY((2), 0 ^ ((2))))), ((2)) - 0), (2), (2))) | _GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), 0 + ((2))), (2))))), 0 + ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (1 ^ 1) ^ (2)) : _GLF_FUZZED(int(subgroup_base))))))) | (2)))))) << 0), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), _GLF_IDENTITY((2), min((2), (2))), (2))) | (2))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((2), 1 * (_GLF_IDENTITY((2), 0 ^ ((2))))), ((2)) - 0), (2), (2))) | _GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), 0 + ((2))), (2))))), 0 + ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2)))))) << 0), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2)))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), _GLF_IDENTITY(((2)), (((2))) << 0) - 0), (2), (2))) | (2))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), 0 + ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2)))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), 2)), _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))))))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2), (_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)), (2), (2))) | (2)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2), (_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)), (2), (2))) | (2)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), max((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2), (_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)), (2), (2))) | (2)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2), (_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)), (2), (2))) | (2)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), _GLF_IDENTITY(clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), _GLF_IDENTITY((2), ((2)) * 1)), max(clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2)), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))))) | (2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), (2), (2))) | (2))), 0 + ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2)))))) << 0), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))))))), ~ ((_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), _GLF_IDENTITY((2), _GLF_IDENTITY((_GLF_IDENTITY((2), min((2), (2)))) << 0, ((_GLF_IDENTITY((2), min((2), (2)))) << 0) >> 0)), _GLF_IDENTITY((2), max((2), (2))))) | (2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))), 0 + ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY(_GLF_IDENTITY((2), (false ? _GLF_FUZZED(int((mat2x3(-8.7, 540.348, 312.213, -1.3, 8314.8328, -21.73) == mat2x3(288.326, 8.9, -7251.5909, 7.6, -2.0, -7.7)))) : (_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1)))))), ((2)) - 0), (2), (2))) | (2)))))) << 0), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (0))), (2), (2))) | (2))))))))))) | 0) ^ 0), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), (_GLF_IDENTITY((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-7337)))), (_GLF_IDENTITY((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-7337)))), 0 | ((_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-7337))))))) | 0)) - 0), (2), (2))) | (2))) ^ 0)) + 0), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))) ^ 0), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))), clamp(_GLF_IDENTITY((2), ((2)) - 0), (2), (2))) | (2))) ^ 0))))), max(subgroup_size / 2, subgroup_size / 2)), subgroup_size / 2))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false, bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false, true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0)), vec2(0.0, 0.0) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch, injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))) * abs(vec2(1.0, 1.0)), max((_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))) * abs(vec2(1.0, 1.0)), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))) * abs(vec2(1.0, 1.0)))))).y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(ivec4(4, 0, 1, 1))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.3)))) / exp(0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, 0.0 + ((1.0) * 1.0))), 1.0, 1.0))).y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true)), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(55.11))), 1.0, sin(0.0), 1.0))), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).y))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).y))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).y)))))))))))), false)))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-716.445)), vec2(_GLF_FUZZED(-89.14), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(66.91)), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-195.213)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) ^ 0)) >> 0) | (4)), 64, 4);
}
