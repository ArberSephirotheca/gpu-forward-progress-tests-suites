#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec2 _f0;
 int _f1;
} ;

struct _GLF_struct_1 {
 uint subgroup_id;
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_SubgroupID, _GLF_struct_0(vec2(1.0), 1));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), clamp(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2(_GLF_FUZZED(39.04), _GLF_FUZZED(-6805.4713)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2(_GLF_FUZZED(39.04), _GLF_FUZZED(-6805.4713)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), max(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2(_GLF_FUZZED(39.04), _GLF_FUZZED(-6805.4713)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2(_GLF_FUZZED(39.04), _GLF_FUZZED(-6805.4713)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2(_GLF_FUZZED(39.04), _GLF_FUZZED(-6805.4713)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4x2(mat4x2(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2(_GLF_FUZZED(39.04), _GLF_FUZZED(-6805.4713)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true)))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.36)), vec2(_GLF_FUZZED(1.7), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.4, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false), true))))))))), injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2631.5190) : injectionSwitch.y)), 1.0, 1.0, 1.0)))))))), true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = ((0 | 0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            break;
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.1) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-287.901)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && true))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.1) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-287.901)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && true))) || false))) || false) && true))), true))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), true)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(8.3))), (true ? injectionSwitch.y : _GLF_FUZZED(pow((-2613.6535), 8.0)))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(normalize(floor(vec2(-6.1, -4.5)))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(78.48)), bool(false)), clamp(mix(float(injectionSwitch.y), float(_GLF_FUZZED(78.48)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(78.48)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(78.48)), bool(false))) * 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(78.48)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))) && true))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(41.69)), bool(false))))) > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))))))) && true), true, true))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 1 * (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), (true) || _GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
              {
               do
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.4))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.4)))) + length(vec3(0.0, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.4))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, _GLF_IDENTITY(false, ! (! (false)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(5905.1099), _GLF_FUZZED(7.3)), bvec2(false, false)))).x > injectionSwitch.y) || false)))))
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u ^ (gl_NumWorkGroups.x), (_GLF_IDENTITY(0u ^ (gl_NumWorkGroups.x), 0u | (0u ^ (gl_NumWorkGroups.x)))) | 0u)))), gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false), true, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), workgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_size * _GLF_struct_replacement_1.subgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base) << 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base)) + subgroup_local_id)), clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 0u + (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u)) - 0u)) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec4((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(6u), uint(6u)), (1u & 1u), 0u, 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base, 1u, 1u))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u) / 1u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) | 0u)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)))) - 0u)) ^ 0u)) - 0u)) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id) | 0u)) - 0u)) ^ 0u)) - 0u)) | ((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), workgroup_base)), 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false)))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       break;
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-735.291, -127.657)) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-735.291, -127.657)) : injectionSwitch)).x > injectionSwitch.y))) && true)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) | 0u) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))))))) | 0u))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 + (64)), 2);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) << 0u) < (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size)) / 2, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size)) / 2) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size)) / 2, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size)) / 2) >> 0u)) >> _GLF_IDENTITY(0u, min(0u, 0u)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) << 0u) < (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, abs(1.0), sqrt(1.0)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, abs(0.0)), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-851.873) : 1.0))), sqrt(1.0)))))))) ? _GLF_FUZZED(read) : subgroup_size), clamp((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))) ? _GLF_FUZZED(read) : _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(read) : subgroup_size), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size)) ^ 0u)))) / 2)), bool(bvec2(! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) << 0u) < (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size) << 0u)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) ? _GLF_FUZZED(read) : subgroup_size), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : subgroup_size)) ^ 0u)))) / 2)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))
  {
   do
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) | (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false, true)))), false, false, true)))), true, false, true)))))))))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) * 1))), 64, 4);
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))));
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(78.91, 78.91)))), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(78.91, 78.91)))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(78.91, 78.91)))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(78.91, 78.91)))), bool(false))))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(log(1.0)) : _GLF_FUZZED(1.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))))), bool(_GLF_IDENTITY(true, (true) || false))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))))), bool(_GLF_IDENTITY(true, (true) || false))), float(mat4(mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))))), bool(_GLF_IDENTITY(true, (true) || false))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0))), mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))))), bool(_GLF_IDENTITY(true, (true) || false))))), (mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), _GLF_IDENTITY(0.0 + (_GLF_FUZZED(78.91)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0 + (_GLF_FUZZED(78.91)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0), (mat4(0.0 + (_GLF_FUZZED(78.91)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat4(0.0 + (_GLF_FUZZED(78.91)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0), (mat4(0.0 + (_GLF_FUZZED(78.91)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - length(0.0))))))), bool(_GLF_IDENTITY(true, (true) || false)))) - 0.0))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), min(exp(log(1.0)), exp(log(1.0)))))) / vec2(1.0, 1.0)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(vec4(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, sqrt(1.0)))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false))))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(log(1.0)) : _GLF_FUZZED(1.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(78.91, mix(float(_GLF_FUZZED(-3.0)), float(78.91), bool(true)))), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))))), bool(_GLF_IDENTITY(true, (true) || false))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asinh(-159.064)))))), _GLF_IDENTITY(exp(log(1.0)), min(exp(log(1.0)), exp(log(1.0)))))) / vec2(1.0, 1.0)))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bool(bool(bool(true && (false)))))))) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(78.91, min(78.91, 78.91)))), 78.91)))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(log(1.0)) : _GLF_FUZZED(1.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(78.91, (78.91) / 1.0))))))), bool(_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), min(exp(log(1.0)), exp(log(1.0)))))) / vec2(1.0, 1.0)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (false ? _GLF_FUZZED(1973.2350) : _GLF_IDENTITY(_GLF_IDENTITY(78.91, min(78.91, 78.91)), 1.0 * (_GLF_IDENTITY(78.91, min(78.91, 78.91)))))), 78.91)))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(log(1.0)) : _GLF_FUZZED(1.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (_GLF_IDENTITY(true, (true) || false))) && true))))))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), min(exp(_GLF_IDENTITY(log(1.0), (log(1.0)) + log(1.0))), exp(log(1.0)))))) / vec2(1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, sin(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))) || false)), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(78.91, min(_GLF_IDENTITY(78.91, (_GLF_IDENTITY(78.91, max(78.91, 78.91))) + 0.0), 78.91)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(exp(log(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? exp(log(1.0)) : _GLF_FUZZED(1.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), mix(float(_GLF_FUZZED(96.34)), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91))), (_GLF_IDENTITY(_GLF_FUZZED(78.91), 0.0 + (_GLF_FUZZED(78.91)))) / 1.0)) / 1.0)))), bool(_GLF_IDENTITY(true, (true) || false))))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(exp(log(1.0)), min(exp(log(1.0)), exp(log(1.0)))))) / vec2(1.0, 1.0)))) > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(-6.2, 396.726, -44.90, -2.6)[1]) : injectionSwitch)).x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), float(mat4(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x) : _GLF_FUZZED(-62.23))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x)) / 1.0))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), mix(float(_GLF_FUZZED(187.431)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), (_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))))) / 1.0)), bool(true))) : _GLF_FUZZED(-4.5))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x)))), exp(log(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(78.91)), bool(false))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), exp(_GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0)))) / vec2(1.0, 1.0))), min(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-83.05)), bool(false)))), float(mat4(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))).x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), (true ? _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6614.2336) : clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9121.0348), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), bvec2(true, false))).x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x))) : _GLF_FUZZED(-62.23))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((55.32 + -329.041))))), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x)))), exp(log(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(78.91)), bool(false))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), exp(log(1.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(vec2(1.0, 1.0), 0.0, abs(1.0), 1.0, 0.0, tan(0.0), 1.0))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-493.954, 4.0).g)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), (false ? _GLF_FUZZED(5600.5287) : _GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))))), _GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x)) - 0.0), float(mat4(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_IDENTITY(_GLF_FUZZED(78.91), clamp(_GLF_IDENTITY(_GLF_FUZZED(78.91), (true ? _GLF_FUZZED(78.91) : _GLF_FUZZED(-5808.0717))), _GLF_IDENTITY(_GLF_FUZZED(78.91), min(_GLF_FUZZED(78.91), _GLF_FUZZED(78.91))), _GLF_FUZZED(78.91)))), bool(false))), injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x) : _GLF_FUZZED(-62.23))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)), (clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))) - tan(0.0))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(injectionSwitch.x))))), float(_GLF_FUZZED(78.91)), bool(false))), injectionSwitch.x)))), exp(log(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - sqrt(0.0)))), float(_GLF_FUZZED(78.91)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), exp(log(1.0)))) / vec2(1.0, 1.0)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? 7896.8952 : vec4(1.9, 3141.7016, -2.5, -35.66).t)), _GLF_FUZZED((9243.4961 + 3.8))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (false ? _GLF_FUZZED(45.92) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) || false))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) > _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
        }
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-867.570, 82.26, -2769.3382).t), _GLF_FUZZED(float(_GLF_IDENTITY(44418, clamp(44418, 44418, 44418))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).x) : _GLF_FUZZED(-9.3)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bvec2((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : injectionSwitch.y))) - _GLF_IDENTITY(tan(0.0), min(tan(0.0), _GLF_IDENTITY(tan(0.0), 0.0 + (tan(0.0)))))))), false))) && true)))))))), ! (! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))))))))))))))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
                          return;
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        break;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(267.804)), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))) || false))))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (false)))))))
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0, round(length(normalize(vec2(1.0, 1.0)))))), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0, round(length(normalize(vec2(1.0, 1.0))))))))).y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7246.8796, -5000.4772)))), 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))))))))) || false)))))));
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
              return;
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (false || (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), (dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0)))) / 1.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0)), min(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), (dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0)))) / 1.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), (dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0)))) / 1.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), float(_GLF_FUZZED(-5919.8228)), bool(false))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0))), (dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, tan(0.0)))) / 1.0)), determinant(mat4(0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2.1))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) / 1.0), injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), true && (! (false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(mat4x2(vec2(injectionSwitch.y, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) : _GLF_FUZZED(vec2(-6.9, 8.1))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(-35.56), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1])) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)), (true ? (vec2(_GLF_IDENTITY(_GLF_FUZZED(-35.56), clamp(_GLF_IDENTITY(_GLF_FUZZED(-35.56), (_GLF_FUZZED(-35.56)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(-35.56), (_GLF_FUZZED(-35.56)) * 1.0), _GLF_FUZZED(-35.56))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[1])) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-67.55, -4439.0839, -16.42, -2.3)[1]))), mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat3x4(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) * ((vec2(_GLF_FUZZED(-35.56), (injectionSwitch)[1])) * mat2(1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(-49390)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false, false))), true), false))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7374.1709)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-341.432), float(_GLF_IDENTITY(vec4(_GLF_FUZZED(-341.432), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), (dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))) - 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_FUZZED(-341.432), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), (dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))) - 0.0)), 0.0, 0.0))))) : injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-5.5)), float(mix(float(_GLF_FUZZED(7374.1709)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-341.432), float(_GLF_IDENTITY(vec4(_GLF_FUZZED(-341.432), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), (dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))) - 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_FUZZED(-341.432), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), (dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0))) - 0.0)), 0.0, 0.0))))) : injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))))))))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)).y, bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)).y, true))))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)).y, bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)).y, true))))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)), mix(vec2(_GLF_FUZZED((- 218.543)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(-2410.9437)), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)))[0], _GLF_FUZZED(273.544)), bvec2(true, false))).y, bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), mix(float(_GLF_FUZZED(2934.3489)), float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0))), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(-2410.9437, min(-2410.9437, -2410.9437)))), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), mix(float(_GLF_FUZZED(2934.3489)), float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0))), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(-2410.9437, min(-2410.9437, -2410.9437)))), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), float(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), mix(float(_GLF_FUZZED(2934.3489)), float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0))), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(-2410.9437, min(-2410.9437, -2410.9437)))), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), min(false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), mix(float(_GLF_FUZZED(2934.3489)), float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0))), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(-2410.9437, min(-2410.9437, -2410.9437)))), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), mix(float(_GLF_FUZZED(2934.3489)), float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0))), (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(-2410.9437, min(-2410.9437, -2410.9437)))), vec2(_GLF_FUZZED((-3.9 + 3673.6866)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec2(0.0, 0.0)), 1.0, sqrt(0.0), 1.0))) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0))), 0.0)), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(625.135)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) + (injectionSwitch)).y, true))))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat2x3(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-1.0, -701.123)))).x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))) && true)))))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true))), (injectionSwitch.x < injectionSwitch.y)))))) && true))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                  return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y), (false ? _GLF_FUZZED(-64.43) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y))), 0.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y), (false ? _GLF_FUZZED(-64.43) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y))), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y), (false ? _GLF_FUZZED(-64.43) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y))), 0.0, 1.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : injectionSwitch.y))))))), false, false))))))
                break;
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))))
            break;
          }
        }
      }
    }
   else
    {
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1))), _GLF_IDENTITY(4, (4) / 1), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false))))))), true && (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false))))))))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, abs(1.0)), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, abs(1.0)), transpose(transpose(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(-94356)) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 1.0))), 0.0, abs(1.0))))) : _GLF_FUZZED(mat4x2(mat4x3(6835.4109, -6613.6695, -5.3, 1519.9751, -82.99, 4904.2076, 99.61, 797.967, _GLF_IDENTITY(7.6, (true ? 7.6 : _GLF_FUZZED(6951.9583))), 772.679, 8731.0946, 7370.4917))))))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, 0.0, 1.0, 0.0, 1.0, 0.0))) / 1.0)))) ? _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-82190) : _injected_loop_counter)) : _GLF_FUZZED(32190))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) || false, _GLF_IDENTITY(bool(bvec3((_GLF_WRAPPED_LOOP(false)) || false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))), (bool(bvec3((_GLF_WRAPPED_LOOP(false)) || false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))) || false))));
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, true, true))))
        {
         for(int _injected_loop_counter = ((0 | 0) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-30017) : 0)))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) | (int(0))), 1 * (int(0)))) + 0))) ^ (0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((-65.73 * 4.7))), float(float(float(_GLF_FUZZED((-65.73 * 4.7)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y), (false ? _GLF_FUZZED(888.020) : float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y))), bool(true))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((-65.73 * 4.7))), float(float(float(_GLF_FUZZED((-65.73 * 4.7)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y), (false ? _GLF_FUZZED(888.020) : float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y))), bool(true)))))) ^ 0), false || (_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((-65.73 * 4.7))), float(float(float(_GLF_FUZZED((-65.73 * 4.7)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y))), (false ? _GLF_FUZZED(888.020) : float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y))), bool(true))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((-65.73 * 4.7))), float(float(float(_GLF_FUZZED((-65.73 * 4.7)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y), (false ? _GLF_FUZZED(888.020) : float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y))), bool(true)))))) ^ 0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / _GLF_IDENTITY(1, ~ (~ (1)))))
          {
           subgroupBarrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-24401))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-24401))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-24401)))) << 0)) ^ 0))) != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false), false))))) || false)))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                {
                }
               else
                {
                 return;
                }
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))) : _GLF_FUZZED((_injected_loop_counter | -98977)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(8346.6472), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8871.4731)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))) || false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
