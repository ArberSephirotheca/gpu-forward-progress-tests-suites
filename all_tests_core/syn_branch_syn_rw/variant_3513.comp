#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat2x3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 uint _f3;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 _GLF_struct_3 _f1;
 bvec3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uint _f1;
 bvec2 _f2;
 bvec2 _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 uint workgroup_id;
 _GLF_struct_0 _f1;
 ivec2 _f2;
 _GLF_struct_1 _f3;
 bvec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 mat4x3 _f2;
 _GLF_struct_5 _f3;
 uvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))) || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4659.2907)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-1.8))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8266.4829)), bool(false))))))), false, false)), true && (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), ! (! (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-194.531)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-194.531)), float(injectionSwitch.x), bool(true)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-194.531)), float(injectionSwitch.x), bool(true)))) * determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-4165.5623), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(977.410)), bvec2(true, false)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(ivec3(1), _GLF_struct_2(uvec2(1u), gl_WorkGroupID.x, _GLF_struct_0(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u)), mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4x2(46.02, 5.2, 5.6, 819.428, -589.513, 7.2, -7.4, 6609.6638))))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4x2(46.02, 5.2, 5.6, 819.428, -589.513, 7.2, -7.4, 6609.6638))))), float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4x2(46.02, 5.2, 5.6, 819.428, -589.513, 7.2, -7.4, 6609.6638))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4x2(46.02, 5.2, 5.6, 819.428, -589.513, 7.2, -7.4, 6609.6638))))), (float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4x2(46.02, 5.2, 5.6, 819.428, -589.513, 7.2, -7.4, 6609.6638)))))) - 0.0)))))))), ivec2(_GLF_IDENTITY(1, max(1, 1))), _GLF_struct_1(mat4x3(1.0), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) | (1u)), bvec2(true), bvec2(true), 1u, uvec3(1u)), bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), mat2(1.0)), mat4x3(1.0), _GLF_struct_5(mat4x2(1.0), _GLF_struct_3(mat3x2(1.0), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.7, (true ? -9.7 : _GLF_FUZZED(8815.5958)))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.0)), float(1.0), bool(true)))))), mat3x2(1.0), 1u), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true)))))))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)))))), true))))), _GLF_struct_4(mat2x3(1.0), mat2(1.0))), _GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), uvec3(1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6._f1.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_size * subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))), (! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))) && true))) && true, _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true) && true, bool(bvec4(((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true) && true, true, false, false))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))) || false)) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bool(true))))), false || (bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((false ? _GLF_FUZZED(-33.86) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(-33.86) : injectionSwitch.y), (false ? _GLF_FUZZED(-33.86) : injectionSwitch.y), (false ? _GLF_FUZZED(-33.86) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) ? _GLF_FUZZED(mat4x3(-1.2, -4.1, -102.081, -59.74, 19.86, -9.4, 2.5, -6.4, 944.355, 337.164, 5.1, 85.37)) : mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0)), clamp(min(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0)), min(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0)), min(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), min(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-753.325, 940.440))))) / vec2(1.0, 1.0)), vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.19)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))), bool(bvec2(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))), false)))))), ! (! (_GLF_IDENTITY(bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])))).y, mix(float(_GLF_FUZZED(35.00)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))))), ! (! (_GLF_IDENTITY(bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > injectionSwitch.y))))))))))), bool(bvec4(! (bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))), ! (! (_GLF_IDENTITY(bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (bool((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, false, true)))))))))), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-69.42, 5119.5522), injectionSwitch, vec2(-8383.2368, 295.211))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-104.628 - -8.7))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool((! (injectionSwitch.x > injectionSwitch.y)))))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true, false))))), true))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false))))))))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(3.2) : float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))))) * 1.0)), ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(61.67), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6075.7614)), bvec2(true, false))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false)))), false || (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))), bool(bool(bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, true))), ((! (injectionSwitch.x > injectionSwitch.y))) || false))))), ! (! (bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), true))))))), ! (! ((! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false, ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false) && true)) && true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false)))), false || (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))), bool(bool(bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y)))), false, true))), ((! (injectionSwitch.x > injectionSwitch.y))) || false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true && ((bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))), true))))))))))))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), _GLF_IDENTITY(uint(uvec4(max(workgroup_base, workgroup_base), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | ((0u ^ 0u))), 0u)), (uint(uvec4(max(workgroup_base, workgroup_base), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | ((0u ^ 0u))), 0u))) ^ 0u))))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (~ (uint(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)))))), uint(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) | 0u, max((~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) | 0u, (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) | 0u)))), 0u, 0u, 0u)))), (1u | 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), max(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u))))))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), (_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(max(workgroup_base, workgroup_base), 0u, 0u)))) << uvec3(0u, 0u, 0u)), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u))))), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u)))))) | 0u))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u))))), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u)))))) | 0u))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(_GLF_IDENTITY(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), uvec3(uvec4(uvec3(max(workgroup_base, workgroup_base), 0u, 0u), 0u)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u))))))) + 0u)), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) >> 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u, 0u)))))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))), uint(_GLF_IDENTITY(uvec4((~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4((~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u)), (~ (uvec4((~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u))) | (~ (uvec4((~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u))))))))), workgroup_base)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, workgroup_base))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u + (workgroup_base)), max(workgroup_base, workgroup_base)))) - 0u))) | 0u)), 0u, 0u, 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base))) | (workgroup_base)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))) ^ 0u)), workgroup_base)))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), workgroup_base)))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), workgroup_base)))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) << 0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base))))) | 0u)), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)))), 0u, 0u, 0u)))), (1u | 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), 0u + (~ ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(workgroup_base, workgroup_base)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(18473u, 133628u, 162463u, 6055u)) : uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u)))))))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(workgroup_base, workgroup_base)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(18473u, 133628u, 162463u, 6055u)) : uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u)))))))) | 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(workgroup_base, workgroup_base)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(18473u, 133628u, 162463u, 6055u)) : uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u)))))))) | 0u)), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(workgroup_base, workgroup_base)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(18473u, 133628u, 162463u, 6055u)) : uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), 1u * ((~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))), 0u, 0u, 1u)))))))) | 0u)), 1u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))) * 1u), 0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u))), workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)), _GLF_IDENTITY(max(workgroup_base, workgroup_base), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base))), max(workgroup_base, workgroup_base))))))) | 0u)), 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))) | 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))) | 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))))), uint(uvec3(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))) | 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))))), 0u, 0u))), 1u, 0u))))))) | 0u)), 0u, 0u, 0u))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), uint(uvec2(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))) | 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))) | 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))))), uint(uvec3(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))) | 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) >> 0u)))))))))), 0u, 0u))), 1u, 0u))))))) | 0u)), 0u, 0u, 0u))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), uint(uvec2(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), 0u)))))) + 0u) << 0u)) << (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base)))) << 0u)), (~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)), 0u, 0u, 0u)))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(virtual_gid)))))))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u) : _GLF_FUZZED(num_workgroup)))), workgroup_base)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), min(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) | 0u)), 0u, 0u, 0u)))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(virtual_gid)))))))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u) : _GLF_FUZZED(num_workgroup)))), workgroup_base)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), min(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) | 0u)), 0u, 0u, 0u))))))) | 0u)))) + 0u) : _GLF_FUZZED(workgroup_size))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) * 1u) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u))), subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) : _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) >> 0u))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))))) ^ 0u))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)), 0u ^ (uint(uvec4(subgroup_size, 0u, ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u)) | 0u)) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), uint(6u))))), 1u)))))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))) ^ 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))) ^ 0u) << 0u)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), ~ (~ ((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), ~ (~ ((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), ~ (~ ((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))))))) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), ~ (~ ((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), ~ (~ ((_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))))))) * 1u))))) % subgroup_size)), (((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, 0u)), clamp(uint(uvec3(workgroup_size, 0u, 0u)), uint(uvec3(workgroup_size, 0u, 0u)), uint(uvec3(workgroup_size, 0u, 0u)))))) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u))), (subgroup_local_id + 1))) % subgroup_size))) ^ 0u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), injectionSwitch.y))))))), virtual_gid), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), injectionSwitch.y))))))), virtual_gid), (min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), injectionSwitch.y))))))), virtual_gid)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(workgroup_base))))], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u)) + 1 < (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) / 2))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (false)))))))))
          continue;
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.5))) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.9)), bool(false)))))).x > injectionSwitch.y))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, sin(0.0), 0.0, 1.0, 1.0), mat3x2(mat3(mat3x2(injectionSwitch.x, 0.0, sin(0.0), 0.0, 1.0, 1.0)))))) > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(4881.3916, 8.1, -0.9).z)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, cos(log(1.0))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(4881.3916, 8.1, -0.9).z)), _GLF_IDENTITY(float(injectionSwitch.x), float(vec4(float(injectionSwitch.x), sin(0.0), 0.0, cos(abs(0.0))))), bool(true))), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, cos(log(1.0))))) > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), 0u | (uint(1))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-49218) : 64)), _GLF_IDENTITY(4, (4) + 0));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) && true)))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (false ? _GLF_FUZZED((-94.66 / -837.524)) : _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), 0.0 + (determinant(mat2(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))) + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (false ? _GLF_FUZZED((-94.66 / -837.524)) : _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), 0.0 + (determinant(mat2(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))) + (injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(837.527)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(14.02)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
