#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 bool _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 vec4 _f1;
 mat2 _f2;
 bvec2 _f3;
 uvec3 _f4;
 vec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 mat4x3 _f1;
 uint _f2;
 vec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 vec4 _f2;
 mat2x3 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 _GLF_struct_3 _f1;
 vec2 _f2;
 _GLF_struct_7 _f3;
 mat2x3 _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uvec4 _f1;
 uint subgroup_local_id;
 mat2x4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid;
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(28.96), _GLF_FUZZED(8780.9957)), bvec2(false, false))).x > injectionSwitch.y)))) || false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), true)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(reflect(-6497.3091, -15.89)) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-29.53))) > injectionSwitch.y)), false, true), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(length(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)))))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id, (true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id : _GLF_FUZZED((~ subgroup_id))));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9286.6073)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, float(_GLF_IDENTITY(mat3((1.0) - 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3((1.0) - 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0)), (mat4x3(mat3((1.0) - 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))))), bool(true))), injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), abs(0.0))))), _GLF_struct_3(_GLF_struct_1(mat4x3(1.0)), uvec3(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), max(~ (_GLF_IDENTITY(1u, (1u) | (1u))), ~ (_GLF_IDENTITY(1u, (1u) | (1u)))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), max((1u), _GLF_IDENTITY((1u), uint(uvec3((1u), 0u, 1u)))))), uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) | (1u)))))))), mat3x4(1.0), _GLF_struct_2(bvec3(true), 1u)), vec2(1.0), _GLF_struct_7(_GLF_struct_4(mat3x4(1.0), mat4x3(1.0), 1u, vec4(1.0), bvec3(true)), _GLF_struct_5(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0))) - 0.0)), vec4(1.0), mat2(1.0), bvec2(true), uvec3(1u), vec3(1.0), mat4(1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], (vec4(1.0))[1], _GLF_IDENTITY((vec4(1.0))[2], max(_GLF_IDENTITY((vec4(1.0))[2], max((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))[2], (vec4(1.0))[2])), _GLF_IDENTITY((vec4(1.0))[2], max(_GLF_IDENTITY((vec4(1.0))[2], (_GLF_IDENTITY((vec4(1.0)), abs(vec4(0.0, 0.0, 0.0, 0.0)) + ((vec4(1.0))))[2]) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.9)), bool(false)), clamp(_GLF_IDENTITY(mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.9)), bool(false)), float(vec4(_GLF_IDENTITY(mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.9)), bool(false)), (mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.9)), bool(false))) * 1.0), 0.0, 0.0, 0.0))), mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.9)), bool(false)), mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.9)), bool(false))))))), (vec4(1.0))[2])))), _GLF_FUZZED(6633.9641)), vec4(_GLF_FUZZED(-28.37), _GLF_FUZZED(-4664.0942), _GLF_FUZZED(433.743), (vec4(1.0))[3]), bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, ! (! ((_GLF_IDENTITY(false, (false) || false)) && true)))), false, true))), mix(vec4(_GLF_FUZZED((3.9 / -5.1)), (_GLF_IDENTITY(vec4(1.0), mix(vec4((_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0))))), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))), vec4(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))[0], (vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.9)), float(1.0), bool(true))), 1.0))))[_GLF_IDENTITY(1, (1) | 0)], (vec4(1.0))[2], _GLF_FUZZED(6633.9641)), vec4(_GLF_FUZZED(-28.37), _GLF_FUZZED(-4664.0942), _GLF_FUZZED(433.743), (vec4(1.0))[3]), bvec4(false, false, false, true))))[1], (_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], (vec4(1.0))[1], _GLF_IDENTITY((vec4(1.0)), (true ? (vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))) : _GLF_FUZZED(vec4(8019.9551, 116.061, -39.83, -710.258))))[2], _GLF_FUZZED(6633.9641)), vec4(_GLF_FUZZED(-28.37), _GLF_FUZZED(-4664.0942), _GLF_FUZZED(433.743), (vec4(1.0))[3]), bvec4(false, false, false, true))))[2], (_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(0.1, 16.32, 0.5, 1.2)) : (vec4(1.0)), mat4(1.0) * (false ? _GLF_FUZZED(vec4(0.1, 16.32, 0.5, 1.2)) : (vec4(1.0))))))[0], _GLF_IDENTITY((vec4(1.0)), mix(vec4((_GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat3x2((vec4(1.0)), 1.0, 0.0), mat3x2(mat3(mat3x2((vec4(1.0)), 1.0, 0.0)))))))[0], ((vec4(1.0)))[1], ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(_GLF_FUZZED((false ? 3.1 : 3.6)), _GLF_FUZZED(507.168), _GLF_IDENTITY(_GLF_FUZZED(-873.320), min(_GLF_FUZZED(-873.320), _GLF_FUZZED(-873.320))), _GLF_FUZZED(float(_GLF_IDENTITY(false, ! (! (false)))))), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false))), false)))[1], (vec4(1.0))[2], _GLF_FUZZED(6633.9641)), vec4(_GLF_IDENTITY(_GLF_FUZZED(-28.37), (true ? _GLF_IDENTITY(_GLF_FUZZED(-28.37), min(_GLF_FUZZED(-28.37), _GLF_FUZZED(-28.37))) : _GLF_FUZZED(-5177.9941))), _GLF_FUZZED(-4664.0942), _GLF_FUZZED(433.743), (vec4(1.0))[3]), bvec4(false, false, false, true))))[3]), vec4((_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], (vec4(1.0))[1], _GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat4x2((vec4(1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2((vec4(1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 1.0))))))[2], _GLF_FUZZED(6633.9641)), vec4(_GLF_FUZZED(-28.37), _GLF_FUZZED(_GLF_IDENTITY(-4664.0942, (true ? -4664.0942 : _GLF_FUZZED(_GLF_IDENTITY(-57.37, (true ? -57.37 : _GLF_FUZZED(985.973))))))), _GLF_FUZZED(433.743), (vec4(1.0))[3]), bvec4(false, false, false, true))))[0], _GLF_FUZZED((5.3 + -7902.2195)), _GLF_FUZZED(8.4), _GLF_FUZZED(-471.199)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), _GLF_IDENTITY(vec4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(_GLF_IDENTITY(52.16, (52.16) - 0.0), 5293.0113, _GLF_IDENTITY(1461.0502, max(1461.0502, _GLF_IDENTITY(1461.0502, _GLF_IDENTITY((false ? _GLF_FUZZED(45.76) : _GLF_IDENTITY(1461.0502, mix(float(_GLF_FUZZED(7.7)), float(1461.0502), bool(true)))), 1.0 * ((false ? _GLF_FUZZED(45.76) : _GLF_IDENTITY(1461.0502, mix(float(_GLF_FUZZED(7.7)), float(1461.0502), bool(true))))))))), _GLF_IDENTITY(-1.5, max(-1.5, -1.5)))), clamp(_GLF_FUZZED(vec4(52.16, 5293.0113, 1461.0502, _GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, -1.5)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(52.16, 5293.0113, 1461.0502, -1.5)), clamp(_GLF_FUZZED(vec4(_GLF_IDENTITY(52.16, (52.16) + 0.0), 5293.0113, 1461.0502, -1.5)), _GLF_FUZZED(vec4(52.16, 5293.0113, 1461.0502, -1.5)), _GLF_FUZZED(vec4(52.16, 5293.0113, 1461.0502, -1.5)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(52.16, 5293.0113, 1461.0502, -1.5)), vec4(mat2x3(_GLF_FUZZED(vec4(52.16, 5293.0113, 1461.0502, -1.5)), 0.0, 0.0))))) : vec4(1.0))))), mat2x3(1.0), _GLF_struct_6(vec3(1.0), mat2x3(1.0))), mat2x3(1.0), gl_SubgroupSize);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = _GLF_struct_replacement_8.subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4x2(1.0), uvec4(1u), gl_SubgroupInvocationID, mat2x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.4)), bool(_GLF_IDENTITY(false, ! (! (false)))))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(18214u, _GLF_IDENTITY(145764u, (_GLF_IDENTITY(145764u, min(145764u, 145764u))) + 0u), 973u)) : gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.7)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), false || (false || (! (false)))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))) && true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bool(true && (true))), ! _GLF_IDENTITY((! (bool(bool(true && (true))))), false || (_GLF_IDENTITY((! (bool(bool(true && (true))))), ! (! ((! (bool(bool(true && (true))))))))))))), _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z * workgroup_id, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z * workgroup_id, 0u, 0u), ~ (~ (uvec3(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z * workgroup_id, 0u, 0u)))))));
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) << 0u) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid) : GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)), 1u))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, max(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid) | uvec2(0u, 0u)), GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)), GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)).x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid) + _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u))) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u))))).x, _GLF_IDENTITY((true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)), clamp((true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)), (true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)), _GLF_IDENTITY((true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)), ~ (~ ((true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x))))))))), clamp(0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x, (true ? _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)))).x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)))), 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x, (true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)))), 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x, (true ? GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, max(_GLF_struct_replacement_0.subgroup_local_id, _GLF_struct_replacement_0.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 1u * (_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id)), (_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id) / 1u)) / 1u), _GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u)), min((uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u)), (uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u)))))))), min(uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u), uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base), clamp(clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (true ? _GLF_struct_replacement_9.workgroup_base + subgroup_base : _GLF_FUZZED(uaddCarry(178573u, num_workgroup, subgroup_id)))), (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base), clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base), clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base)))) + _GLF_struct_replacement_0.subgroup_local_id, 0u))))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) * 1u) + _GLF_struct_replacement_0.subgroup_local_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u), uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(58.79) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u)), min((uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u)), (uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u)))))))), min(uvec2(_GLF_struct_replacement_9.workgroup_base + subgroup_base + _GLF_struct_replacement_0.subgroup_local_id, 0u), uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u, max((_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u))), _GLF_struct_replacement_9.workgroup_base + subgroup_base), clamp(clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base), clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_struct_replacement_9.workgroup_base + subgroup_base))) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base), clamp(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) >> 0u), _GLF_struct_replacement_9.workgroup_base + subgroup_base)))) + _GLF_struct_replacement_0.subgroup_local_id, 0u)))))))));
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), _GLF_IDENTITY(min((_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1)), (_GLF_IDENTITY(min((_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1)), clamp(min((_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1)), min((_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1)), min((_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1))))) | 0u)), 1u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), clamp(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), ((_GLF_struct_replacement_0.subgroup_local_id + 1)) - 0u), (_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), clamp(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), ((_GLF_struct_replacement_0.subgroup_local_id + 1)) - 0u), (_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), clamp(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), ((_GLF_struct_replacement_0.subgroup_local_id + 1)) - 0u), (_GLF_struct_replacement_0.subgroup_local_id + 1), (_GLF_struct_replacement_0.subgroup_local_id + 1)))) - 0u)))) + 0u), _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1)), _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u)) >> 0u) + 1))), 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u))), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, (_GLF_struct_replacement_0.subgroup_local_id + 1) + 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1)), _GLF_struct_replacement_0.subgroup_local_id + 1)), _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u)))) >> 0u) + 1))), ((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, (_GLF_struct_replacement_0.subgroup_local_id + 1) + 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1, min(_GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_struct_replacement_0.subgroup_local_id + 1)), _GLF_struct_replacement_0.subgroup_local_id + 1)), _GLF_struct_replacement_0.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) << 0u)))) >> 0u) + 1)))) / 1u), 1u, 0u), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)))))))))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x);
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.w, 0u | (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.w));
 uint read = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(subgroup_base) : _GLF_struct_replacement_0.subgroup_local_id))) / 1u) + 1 < _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x / 2, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x / 2) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x / 2, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x / 2) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), false || (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)), (true ? mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)) : _GLF_FUZZED(-78.17))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)), (true ? mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)) : _GLF_FUZZED(-78.17))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)), (true ? mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)) : _GLF_FUZZED(-78.17))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))), true, true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid, _GLF_IDENTITY(~ (~ (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid)), (true ? ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid, ~ (~ (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid)))) ^ uvec4(0u, 0u, 0u, 0u)))) : _GLF_FUZZED(uvec4(subgroup_id, uaddCarry(read, workgroup_size, next_virtual_gid), next_virtual_gid, 67424u))))).xyz.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, false, true))) && true), true, false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(1), 1u), (uvec2(uint(1), 1u)) * uvec2(1u, 1u))), ~ (~ (uint(uvec2(uint(1), 1u))))), (0u | 1u) * (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(1), 1u), (uvec2(uint(_GLF_IDENTITY(1, (1) ^ 0)), 1u)) * uvec2(1u, 1u))), ~ (~ (uint(uvec2(uint(1), 1u)))))))), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-66606) : _GLF_IDENTITY(4, (4) << 0))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(1.6, -9.8), injectionSwitch)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], _GLF_IDENTITY(read, clamp(read, read, read)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 1.0, tan(0.0), cos(0.0))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), true))), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true)))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
