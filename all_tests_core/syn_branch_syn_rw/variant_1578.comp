#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), ((false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(! _GLF_IDENTITY((false), ! (! ((false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(! (false))))), ! (! (bool(_GLF_IDENTITY(bool(! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(! (_GLF_IDENTITY(false, (false) || false)))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), (! (! ((_GLF_IDENTITY(false, (false) && true))))) || false)))))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true))), bool(bvec3(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true))), false, false)))))), false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, false))), true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)))), false, false, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)))), false, false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, true, false)))), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true))))))), true))), false))), bool(bool(false))), false, true, false)))), true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, true, false)))), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true))))))), true))), false))), bool(bool(false))), false, true, false)))), true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), true && _GLF_IDENTITY((bool(bool(false))), true && (_GLF_IDENTITY((bool(bool(false))), bool(bvec2(_GLF_IDENTITY((bool(bool(false))), false || ((bool(bool(false))))), false))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false)))), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true))))))), true))), false))), bool(bool(false))), false, true, false)))), true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false, false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 0u))))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 0u))))), 0u))).x, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))), 0u | _GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(((gl_WorkGroupID.x)), clamp(_GLF_IDENTITY(((gl_WorkGroupID.x)), min(((gl_WorkGroupID.x)), ((gl_WorkGroupID.x)))), ((gl_WorkGroupID.x)), _GLF_IDENTITY(((gl_WorkGroupID.x)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(((gl_WorkGroupID.x)), (((gl_WorkGroupID.x))) * 1u))))) | ((gl_WorkGroupID.x))));
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-6.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-23.32)), bvec2(true, false))))), mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-7.5), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.9, 371.287)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-64.40, min(-64.40, _GLF_IDENTITY(-64.40, clamp(-64.40, -64.40, -64.40)))))), float(injectionSwitch.x), bool(true))), float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-2.5)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), true && (bool(_GLF_IDENTITY(false, bool(bool(false))))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) || false)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (subgroup_size) / 1u) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false) && (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0))).y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.2, 9621.4393)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-51.28)), vec2(_GLF_FUZZED(-9419.4885), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), false, false, true)))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)), mix(float(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0))), float(_GLF_FUZZED(-71.85)), bool(false)))))).y, mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)), mix(float(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0))), float(_GLF_FUZZED(-71.85)), bool(false)))))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))), true))))))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), true, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)))) - 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) | (0u & 48156u)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 1u * (virtual_gid)))), virtual_gid))))], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u) | 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + 1, (subgroup_local_id + 1) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) / 1u))) | (subgroup_local_id + 1)) < (subgroup_size / 2), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_local_id))), (subgroup_local_id + 1) ^ 0u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1))) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) ^ 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1))) ^ 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))) >> 0), (subgroup_local_id + 1) ^ 0u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), clamp(~ _GLF_IDENTITY((1), ((1)) / 1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), min(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), (~ _GLF_IDENTITY((1), ((1)) / 1)) * 1), ~ _GLF_IDENTITY((1), ((1)) / 1))), ~ _GLF_IDENTITY((1), ((1)) / 1))))), ~ (1))))), ((~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), clamp(~ _GLF_IDENTITY((1), ((1)) / 1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), min(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), (~ _GLF_IDENTITY((1), ((1)) / 1)) * 1), ~ _GLF_IDENTITY((1), ((1)) / 1))), ~ _GLF_IDENTITY((1), ((1)) / 1))))), ~ (1)))))) * 1))))) | (1))) ^ 0u)))))) | (subgroup_local_id + 1)) < (subgroup_size / 2)), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))))) - (48193u & 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1)), 0, 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1)), 0, 0)))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), ~ (~ (~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))), ~ (1))))))))) | (1))))) ^ 0u)))) | (subgroup_local_id + 1)) < (subgroup_size / 2))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ _GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), 0u | (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u)) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | (subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size / 2), uint(uvec4((subgroup_size / 2), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), 1u))), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size / 2)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ _GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), 0u | (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u)) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | (subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size / 2), uint(uvec4((subgroup_size / 2), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), 1u))), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size / 2)))) || false), bool(bool(! ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ _GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), 0u | (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u)) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) | (subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size / 2), uint(uvec4((subgroup_size / 2), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), 1u))), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size / 2)))) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u), (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1), 1u)), (uint(uvec2((subgroup_local_id + 1), 1u))) >> 0u)), (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, 1)), (int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, 1)))))) ^ 0u)))) | _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(uint((subgroup_local_id + 1)), uint((subgroup_local_id + 1))))))) < (subgroup_size / 2), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (199033u & 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (199033u & 0u)))))), max((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (199033u & 0u)))))), (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (199033u & 0u))))))))), uint(uvec3(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << 0u) >> (199033u & 0u)))))), max((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) / 1u) >> (199033u & 0u)))))), (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (199033u & 0u)), min(_GLF_IDENTITY(0u, (0u) >> (199033u & 0u)), _GLF_IDENTITY(0u, (0u) >> (199033u & 0u))))))))))), 0u, 0u))))))))) | (subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size / 2), _GLF_IDENTITY(((subgroup_size / 2)) << 0u, (((_GLF_IDENTITY(subgroup_size / _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) ^ 0), (_GLF_IDENTITY(subgroup_size / 2, (_GLF_IDENTITY(subgroup_size / 2, (subgroup_size / 2) ^ 0u)) >> 0u)) / (1u & 1u)))) << 0u) | 0u)), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size / 2)))) || false), true))))
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x) | 0u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)).x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x))) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)).x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x))) - 0u)))) | 0u)) >> 0u)], uint(1), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id)).x], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false), false)))) || false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, ! (_GLF_IDENTITY(! (((false)) || false), bool(bool(_GLF_IDENTITY(! (((false)) || false), (! (((false)) || false)) || false)))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))) || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))) || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))) || (_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(_GLF_IDENTITY((! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), ! (! _GLF_IDENTITY(((! (false || (_GLF_IDENTITY(false, ! (! (false))))))), true && (((! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))), false, _GLF_IDENTITY(true, (true) && true), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false)))))), true && (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))) && true))))) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), _GLF_IDENTITY(((false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) || false, ! (_GLF_IDENTITY(! (((false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) || false), (! (((false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) || false)) && true))))))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ((false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)) || false)), ! (! ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((false || (_GLF_IDENTITY(false, ! (! (false)))))))))))), false, true, false)))))) || false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true))), ! _GLF_IDENTITY((! (! (false || (_GLF_IDENTITY(false, ! (! (false))))))), true && ((! (! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), false || ((! (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, ! (! (false))))), (! (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))) || false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)), false || (bool(bvec2(true, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))))), false, false, true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && (_GLF_IDENTITY(_GLF_IDENTITY((! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), true)))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), bool(bvec3(! (! ((! (false)))), true, true)))))) && true))), true && ((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), true)))))), ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), true))))))) || false))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(! (! ((! (false)))), bool(bvec3(! (! ((! (false)))), true, true)))))) && true))))), ((_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true && ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))) || false), true && (! _GLF_IDENTITY(_GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), true)))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), bool(bvec3(! (! ((! (false)))), true, true)))))) && true))), true && ((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) && true), true, false), true)))))), ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), true))))))) || false))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(! (! ((! (false)))), bool(bvec3(! (! ((! (false)))), true, true)))))) && true))))), ((_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true && ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))) || false)))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || _GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! ((! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bool(_GLF_IDENTITY(! ((! (false))), bool(bool(! ((! (false)))))))))))))))))), false, _GLF_IDENTITY(true, false || (true)), false)))))) || false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), bool(bvec4((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))), ! (! ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! (false)))))))))), bool(bvec4((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (_GLF_IDENTITY(! (! ((! (! (false))))), _GLF_IDENTITY(true && (! (! ((! (! (false)))))), false || (true && (! (! ((! (! (false))))))))))))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false))))))), bool(bvec2(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) && true)), bool(bvec4(_GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.5)), bool(false))), injectionSwitch.y)))) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true && (! (! (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), ! (! (_GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), false || ((! (! (false)))))))))))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! ((! (! (_GLF_IDENTITY(false, (false) && true)))))))), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))), true && _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))))))))), false, false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), false, true), bvec3(bvec3(bvec3((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), false, true))))))))), false, false, _GLF_IDENTITY(false, true && (false))))), bool(bvec4(_GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))) && true) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))) || false), false, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))))), bool(bvec4((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), false, false))))))), false, false, false))), bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (! (false))))))), ((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (! (false)))))))) && true), ((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (! (false)))))))) || false), bool(bvec4(_GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, false || (false))))))))), ((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, false || (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(true, bool(bool(true)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))) || false))) && _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true), false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && _GLF_IDENTITY(true, ! (! (true)))), false, false, false)))))))))), bool(bvec4((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((! (false)), true))), bvec2(bvec3(bvec2(bvec2(bvec2((! (false)), true))), false))))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2((! (false)), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2((! (false)), true))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2((! (false)), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2((! (false)), true))), false))))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))) && true)), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))))))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), true), true), bvec3(bvec3(bvec3(bvec2(! _GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false))))) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false))))) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))), true, true, false)), (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false))))) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))), true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))))), false, false, false))), true), true))))))))), true))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), mix(float(_GLF_FUZZED(-9125.5501)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) >> 0u), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (~ (64)) >> 0)) * 1))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.9))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y))))))))))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-8.3, -0.1, 4413.4847, 4.8)))))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))))) * mat2(1.0)).y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false), false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3850.4622)), float(injectionSwitch.y), bool(true))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), true))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | (1))))))), 1, 1)) * (0), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | (1))))))), 1, 1)) * (0), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | (1))))))), 1, 1)) * (0), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | (1))))))), 1, 1)) * (0)))), _GLF_IDENTITY(0, clamp(0, 0, 0))))], float(vec2(injectionSwitch[0], 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0])), injectionSwitch[1])), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), max(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), injectionSwitch[0])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), injectionSwitch[0])), mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), injectionSwitch[0]))), bool(true)))) + 0.0), injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
