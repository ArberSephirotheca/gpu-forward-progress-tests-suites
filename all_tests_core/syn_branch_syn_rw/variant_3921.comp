#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 vec3 _f0;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 bool _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat2x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 bvec2 _f1;
 ivec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 bool _f1;
 ivec2 _f2;
 vec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 float _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 bool _f1;
 ivec2 _f2;
 vec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 bvec2 _f1;
 vec4 _f2;
 uvec4 _f3;
 ivec3 _f4;
 vec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uvec4 _f1;
 bvec4 _f2;
 ivec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 vec2 _f1;
 uvec4 _f2;
 bvec3 _f3;
 mat2x3 _f4;
 float _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec3 _f3;
 _GLF_struct_3 _f4;
 uvec3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_11 _f2;
 mat4 _f3;
 _GLF_struct_14 _f4;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)) || false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), true)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0) : _GLF_FUZZED(vec2(746.840, 70.27).r))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) || false) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8084.4005) : injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-50.21))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sin(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? sin(0.0) : _GLF_FUZZED(log2(4.9)))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(388.169))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0))))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && true))), true)))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true)))))))))))))))) && true)) || _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false), true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false), true))))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0))[0], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))) || false)), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.78), _GLF_FUZZED((+ -1.2))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.78), _GLF_FUZZED((+ -1.2))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))))))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.78), _GLF_FUZZED((+ -1.2))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) || false))))))))))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.78), _GLF_FUZZED((+ -1.2))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, false))))))).x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), float(mat4x3(float(float(1.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-33.78, (true ? -33.78 : _GLF_FUZZED(85.32)))), _GLF_FUZZED((+ -1.2))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0, max((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0)))) / vec2(1.0, 1.0))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0, (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)]))) / 1.0))), clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, true, true))) || false)))).x, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-33.78, (true ? -33.78 : _GLF_FUZZED(85.32)))), _GLF_FUZZED((+ -1.2))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0, max((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0)))) / vec2(1.0, 1.0))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) / 1.0, (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)]))) / 1.0))), clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, true, true))) || false)))).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), float(mat4x3(float(float(1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0))))) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(7884.8507)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(7884.8507)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)) || false))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (false), ! (! (_GLF_IDENTITY(false || (false), false || (false || (false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), true, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-52.94, -5.2)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, bool(_GLF_IDENTITY(bool((false) && true), bool(bvec4(bool((false) && true), false, false, false)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(true ? vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), min(true ? vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), (true ? vec2(mat2x4(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0))))))), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false || (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false))))) || false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))), float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), float(vec2(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), 1.0)))), 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat2x4(1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), float(vec2(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), 1.0)))), 0.0, 1.0)), (float(mat2x4(1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), float(vec2(dot(vec3(tan(0.0), 0.0, 1.0), vec3(1.0, exp(0.0), 0.0)), 1.0)))), 0.0, 1.0))) * 1.0)), float(_GLF_FUZZED(3983.4783)), bool(false)))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(893.646)), float(1.0), bool(true))), sqrt(0.0), 1.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0))))))))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7477.1616)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true), _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)), true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)), true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, true)), true))), bvec2(bvec3(bvec2(bvec4(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(tan(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), max(tan(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), tan(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) + (injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch.y, tan(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) + (injectionSwitch.y)), true)))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) * vec2(1.0, 1.0)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(vec4(33.93, -9997.7971, 577.349, 984.232))[1]) : float(float(injectionSwitch.x)))), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false)), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false)))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), bool(bvec2(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))) || false)))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))) || false)))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))))))) && true))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true), false)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false)), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(-350.691)), bool(false))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))), (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat3x2(1.0), _GLF_struct_5(_GLF_struct_0(mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-54.96) : 1.0))) - abs(0.0))), vec2(1.0), uvec4(1u), bvec3(true), mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(refract(6089.8960, -1.3, 0.4)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (false ? _GLF_FUZZED(-609.122) : _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(refract(6089.8960, -1.3, 0.4)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))), 1.0, uvec4(1u)), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), int(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(1, int(ivec2(1, 1)))))), (true ? _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED((ivec2(-17024, 13970) & -31175)))), 0), clamp(ivec3(ivec2(1), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), 0), _GLF_IDENTITY((ivec3(ivec2(1), 0)) << ivec3(0, 0, 0), ivec3(0, 0, 0) | ((ivec3(ivec2(1), 0)) << ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(mix(-95991, -67695, true)) : 0)) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), 0 ^ ((int(8)))) ^ 0))) | (0)))))), _GLF_IDENTITY(ivec3(ivec2(1), _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) + 0), 0)), 1, 0)))), (false ? _GLF_FUZZED(ivec2(-80039, 7859).yxy) : ivec3(ivec2(1), 0))))))) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(69225, -81171)), (ivec2(-56706, -55263) & ivec2(0, 0)) ^ (_GLF_FUZZED(ivec2(69225, -81171)))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1, int(ivec2(1, 1)))))), (true ? _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED((ivec2(-17024, 13970) & -31175)))), 0), clamp(ivec3(ivec2(1), _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(ivec3(ivec2(1), 0), _GLF_IDENTITY((ivec3(ivec2(1), 0)) << ivec3(0, 0, 0), ivec3(0, 0, 0) | ((ivec3(ivec2(1), 0)) << ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(mix(-95991, -67695, true), max(mix(-95991, -67695, true), _GLF_IDENTITY(mix(-95991, -67695, true), (mix(-95991, -67695, true)) | (mix(-95991, -67695, true)))))) : 0)) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) ^ 0))) | _GLF_IDENTITY((0), ~ (~ ((0))))))))), _GLF_IDENTITY(ivec3(ivec2(1), 0), (false ? _GLF_FUZZED(ivec2(-80039, 7859).yxy) : ivec3(ivec2(1), 0))))))) : _GLF_FUZZED(ivec2(69225, -81171))))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec4(1u), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)))), ivec3(1), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract(182.218, _GLF_IDENTITY(70.24, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-536.920)), float(70.24), bool(true)), (mix(float(_GLF_FUZZED(-536.920)), float(70.24), bool(true))) + _GLF_ZERO(0.0, injectionSwitch.x))), -3.7)) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4((1.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4((1.0), 0.0, 0.0, 0.0)))), (true ? float(_GLF_IDENTITY(vec4((1.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4((1.0), 0.0, 0.0, 0.0)))) : _GLF_FUZZED(410.191)))) / 1.0))), float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract(182.218, _GLF_IDENTITY(70.24, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-536.920)), float(70.24), bool(true)), (mix(float(_GLF_FUZZED(-536.920)), float(70.24), bool(true))) + _GLF_ZERO(0.0, injectionSwitch.x))), -3.7)) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4((1.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4((1.0), 0.0, 0.0, 0.0)))), (true ? float(_GLF_IDENTITY(vec4((1.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4((1.0), 0.0, 0.0, 0.0)))) : _GLF_FUZZED(410.191)))) / 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(sqrt(1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_struct_2(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0)))) - 0.0)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) / 1u)) | 0u)), ivec3(1), vec2(1.0), mat3x4(1.0)), uvec3(1u), _GLF_struct_3(1.0, 1u), uvec3(1u), _GLF_struct_4(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (false ? _GLF_FUZZED(69.00) : 1.0))), _GLF_IDENTITY(true, bool(bvec2(true, true))), ivec2(1), vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-145.230))), float(_GLF_FUZZED(-12.93)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)))))))))), bvec4(true))), _GLF_struct_11(_GLF_struct_6(mat3x2(1.0), mat4x2(1.0), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3x2(1.0)), _GLF_struct_7(1.0, mat4x3(1.0), mat2x3(1.0), mat2x3(1.0), mat2x3(1.0), uvec3(1u)), _GLF_struct_8(mat4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_struct_9(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(acosh(_GLF_IDENTITY(2.8, (false ? _GLF_FUZZED(-2.8) : 2.8))))))), true, ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-39400)), ((true ? 1 : _GLF_FUZZED(-39400))) | 0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.4)), float(1.0), bool(true))), float(vec2(1.0, 1.0)))), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0) + (_GLF_ZERO(0.0, injectionSwitch.x)))) + (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.4)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), max(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.3))), 1.0)), (float(vec2(1.0, 1.0))) + 0.0), float(vec2(1.0, 1.0)))), (_GLF_IDENTITY(float(vec2(1.0, 1.0)), max(_GLF_IDENTITY(float(vec2(1.0, 1.0)), (float(vec2(1.0, 1.0))) + 0.0), float(vec2(1.0, 1.0))))) - 0.0))))), vec2(1.0)), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(sin(0.0), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))), mix(float(_GLF_FUZZED(-634.744)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_FUZZED(460.205))))), (dot(vec3(sin(0.0), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))))) : _GLF_FUZZED(460.205)))))) / 1.0), dot(vec3(sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)) * 1.0)), 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_struct_10(ivec4(1), bvec2(true), ivec3(1), bvec3(true))), mat4(1.0), _GLF_struct_14(_GLF_struct_12(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), true, mat2x3(1.0), mat2x4(1.0), mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(-41.50, -687.373)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(750.491)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0))))), clamp(clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(640.416)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + tan(0.0)), max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false))), min(_GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false))), _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false)))))) * 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0))))), clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), 1.0 * (max(1.0, 1.0)))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, tan(0.0))), (true ? _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, tan(0.0))), min(float(mat4(1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, tan(0.0))), float(mat4(1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, tan(0.0))))) : _GLF_FUZZED(-53.06)))), 1.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), float(_GLF_FUZZED(-8681.5127)), bool(false)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0))))), (clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-15.16)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)))), max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, log(1.0))), mix(_GLF_IDENTITY(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), (_GLF_IDENTITY(float(float(vec4(1.0, 1.0, 1.0, log(1.0)))), max(float(float(vec4(1.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(229.267)), bool(false))))))), float(float(vec4(1.0, 1.0, 1.0, log(1.0))))))) + 0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8681.5127, clamp(-8681.5127, -8681.5127, -8681.5127)))), bool(false)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0), (clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)) + 0.0)), max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0)), (false ? _GLF_FUZZED(-975.167) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-9.4)), bool(false))), 1.0)), max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.6))), 1.0)))))))))))) + 0.0))))))), mat4x3(1.0)), _GLF_struct_13(vec3(1.0))), workgroup_size * workgroup_id);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - tan(0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - tan(0.0))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - tan(0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - tan(0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - tan(0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - tan(0.0))))), injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) - 0.0)), injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))), false || ((! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)))) && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), bool(bvec2(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true))), (! (! (true))) || false)), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false))))))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), true)))), bool(bvec2((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))))))))) || false)) && true)))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), true)))), false)))) || false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-815.323))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (true))), true))), bool(bvec2(_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-59.94)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-59.94)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))))))), _GLF_IDENTITY(! (! (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), false || ((! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), false || (! (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true)), true)))))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bvec2((true), true))))) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false))))))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), true)))), bool(bvec2((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true)))))))) && true)) && true)))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), true)))), false)))) || false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(! (! (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (true))), true))), bool(bvec2(_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (! (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_15.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_15.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), min((~ (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), (~ (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(virtual_gid))) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 0u, 1u)))) | 0u) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-17.87), (_GLF_FUZZED(-17.87)) + 0.0) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(vec2(2271.7184, 4.0))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))))).x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (_GLF_IDENTITY(false, bool(bool(false)))))))))) ? _GLF_FUZZED(-17.87) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_ONE(1.0, injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(-17.87) : injectionSwitch.x)), mix(float(_GLF_FUZZED(-941.649)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(-17.87) : injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_ONE(1.0, injectionSwitch.y))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))), (true ? 0 | (4) : _GLF_FUZZED(-16409)))), 4), (false ? _GLF_FUZZED(-56090) : min(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))), (true ? 0 | (4) : _GLF_FUZZED(-16409)))), 4)))), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) | 0));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), max(_GLF_IDENTITY(uint(uvec3(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), (uint(uvec3(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))) - 0u), uint(uvec3(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_id) : uint(1)))) / 1u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.3))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(52217, -47341))))).y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), injectionSwitch.y)))), bool(bool(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), injectionSwitch.y))))))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), _GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), _GLF_IDENTITY(false, (false) || false))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), _GLF_IDENTITY(false, (false) || false))))))))))) || false)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, ((subgroup_local_id) / 1u) ^ 0u))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u | (subgroup_local_id)))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(exp(0.0), float(vec2(_GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 1.0))))), _GLF_IDENTITY(clamp(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), 0.0, 0.0, exp(0.0))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, 0.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), max(_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), (_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), mix(vec3(((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[0], ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[1], ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[2]), vec3(_GLF_FUZZED(979.497), _GLF_FUZZED(50.80), _GLF_FUZZED(-9107.0947)), bvec3(false, false, false)))) + vec3(0.0, 0.0, 0.0)), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))))), _GLF_IDENTITY(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), max(_GLF_IDENTITY(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), clamp(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))))))))), (false ? _GLF_FUZZED(-688.690) : float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7.4), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))), 1.0, 0.0, 1.0, 1.0, 0.0))))) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))))))))))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, 0.0, exp(0.0)))), min(clamp(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), 0.0, 0.0, exp(0.0))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, 0.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), max(_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), (_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), mix(vec3(((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[0], ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[1], ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[2]), vec3(_GLF_FUZZED(979.497), _GLF_FUZZED(50.80), _GLF_FUZZED(-9107.0947)), bvec3(false, false, false)))) + vec3(0.0, 0.0, 0.0)), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))))), _GLF_IDENTITY(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), max(_GLF_IDENTITY(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), clamp(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))))))))), (false ? _GLF_FUZZED(-688.690) : float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7.4), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))), 1.0, 0.0, 1.0, 1.0, 0.0))))) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))))))))))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, 0.0, exp(0.0)))), clamp(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), 0.0, 0.0, exp(0.0))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, 0.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), max(_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), (_GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), mix(vec3(((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[0], ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[1], ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))[2]), vec3(_GLF_FUZZED(979.497), _GLF_FUZZED(50.80), _GLF_FUZZED(-9107.0947)), bvec3(false, false, false)))) + vec3(0.0, 0.0, 0.0)), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))))), _GLF_IDENTITY(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), max(_GLF_IDENTITY(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), clamp(min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), (_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), clamp(clamp(7437.0452, 7437.0452, 7437.0452), _GLF_IDENTITY(clamp(7437.0452, 7437.0452, 7437.0452), 0.0 + (clamp(7437.0452, 7437.0452, 7437.0452))), clamp(7437.0452, 7437.0452, 7437.0452))))))) + 0.0), 589.500, -9.1))))))))))), (false ? _GLF_FUZZED(-688.690) : float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1)))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(7437.0452, min(7437.0452, _GLF_IDENTITY(7437.0452, clamp(7437.0452, 7437.0452, 7437.0452)))), 589.500, -9.1))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7.4), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4))), 1.0, 0.0, 1.0, 1.0, 0.0))))) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(7437.0452, 589.500, -9.1))))))))))))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, length(0.0), 0.0, 0.0, exp(0.0)))))))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false, false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))))))), (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))) || false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)), (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))) - 0u))))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3007.3318) : injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3007.3318) : injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(3007.3318) : injectionSwitch.x), max((false ? _GLF_FUZZED(3007.3318) : injectionSwitch.x), (false ? _GLF_FUZZED(3007.3318) : injectionSwitch.x)))) > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
