#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec2 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 float _f3;
 mat4 _f4;
 bvec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_10 {
 bool _f0;
 mat2 _f1;
 int _f2;
 ivec3 _f3;
 mat3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 bvec3 _f2;
 mat3 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 _GLF_struct_6 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_14 {
 uint virtual_gid;
 _GLF_struct_5 _f0;
 _GLF_struct_7 _f1;
 bvec4 _f2;
 vec3 _f3;
 _GLF_struct_13 _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3 _f1;
 vec3 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 ivec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec3 _f1;
 float _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 ivec2 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 mat2 _f1;
 mat3x4 _f2;
 uint workgroup_id;
 _GLF_struct_2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.9)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, tan(sin(0.0)))), clamp(vec2(mat3x4(injectionSwitch, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, tan(sin(0.0)))), vec2(mat3x4(injectionSwitch, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, tan(sin(0.0)))), vec2(mat3x4(injectionSwitch, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, tan(sin(0.0))))))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-134.200))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))))))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec2(1u), gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(7.7))), injectionSwitch[1])).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + sqrt(0.0)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | (gl_WorkGroupSize)) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), 1u))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), bool(bool(! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(vec2(-55.79, -0.6))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))), false), false))))))))))) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, sqrt(0.0)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, sqrt(0.0))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, sqrt(0.0)))))))))).y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2x3(1.0), mat2(1.0), mat3x4(1.0), gl_WorkGroupID.x, _GLF_struct_2(ivec3(1), _GLF_struct_0(_GLF_IDENTITY(uvec4(1u), (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)) * (uvec4(1u))), ivec3(1), 1.0, bvec2(true)), ivec2(1), _GLF_struct_1(mat3x2(1.0), mat3(1.0), vec3(1.0), mat3x4(1.0), uvec4(1u), ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 0), ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) * ivec4(1, 1, 1, 1))))), ivec2(0, 0) ^ (ivec2(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-91456))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) * ivec4(1, 1, 1, 1))))))), (ivec2(1, 0)) - ivec2(0, 0)), 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))), (ivec2(1, _GLF_IDENTITY(0, (0) >> (1 ^ 1)))) - ivec2(0, 0)), 1)) | (ivec3(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) - ivec2(0, 0)), 1))))), ivec2(1, 0)))))), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_id, min(_GLF_struct_replacement_3.workgroup_id, _GLF_struct_replacement_3.workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_struct_replacement_15.subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(88845u, clamp(88845u, _GLF_IDENTITY(88845u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (88845u)), 88845u)))));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), _GLF_struct_5(_GLF_struct_4(vec4(1.0))), _GLF_struct_7(uvec3(1u), _GLF_struct_6(1, _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)), mat3x4(1.0)), 1u), bvec4(true), vec3(1.0), _GLF_struct_13(_GLF_struct_8(mat4x2(1.0), mat4(1.0)), _GLF_struct_9(mat2x4(1.0)), bvec3(true), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) + mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_struct_10(true, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(mat4x2(5102.0216, _GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(-4.2, (_GLF_IDENTITY(true ? -4.2 : _GLF_FUZZED(28.73), max(_GLF_IDENTITY(true ? -4.2 : _GLF_FUZZED(28.73), (false ? _GLF_FUZZED(-81.56) : true ? -4.2 : _GLF_FUZZED(28.73))), true ? -4.2 : _GLF_FUZZED(28.73))))))), 7.1, -6233.1195, 2.9, _GLF_IDENTITY(40.38, _GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(roundEven(-574.637)) : 0.0)), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-7991.5028, -5.9, 1515.3996).x)), float(1.0), bool(true)))) + 0.0), 1.0)), min(_GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) / 1.0), 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), 1.0))))), -3271.6991, -9939.5214))), _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(mat4x2(5102.0216, _GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(-4.2, (_GLF_IDENTITY(true ? -4.2 : _GLF_FUZZED(28.73), mix(float(true ? -4.2 : _GLF_FUZZED(28.73)), float(_GLF_FUZZED(-5.7)), bool(false))))))), 7.1, -6233.1195, 2.9, _GLF_IDENTITY(40.38, _GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3x4(40.38, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0)), max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(mat3x4(40.38, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4604.3950))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.0) : 1.0)), 0.0, 1.0, 1.0, 1.0))))), -3271.6991, -9939.5214))))), mat2(mat2x4(_GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(mat4x2(5102.0216, _GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73))), clamp(_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73))), _GLF_IDENTITY(_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73))), (_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73)))) / 1.0), _GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73))))))), 7.1, -6233.1195, 2.9, _GLF_IDENTITY(40.38, _GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)))), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), -3271.6991, -9939.5214))))), mat2(mat3x2(_GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(mat4x2(5102.0216, _GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73))))), 7.1, -6233.1195, 2.9, _GLF_IDENTITY(40.38, _GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0))))), float(_GLF_FUZZED(-0.5)), bool(false))), 1.0, 1.0)), max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), -3271.6991, -9939.5214))))), (transpose(transpose(_GLF_FUZZED(mat2(mat4x2(5102.0216, _GLF_IDENTITY(-4.2, 0.0 + (_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(28.73))))), 7.1, -6233.1195, 2.9, _GLF_IDENTITY(40.38, _GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), max(max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), max(float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), float(mat3x4(40.38, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), -3271.6991, -9939.5214)))))) - mat2(0.0, 0.0, 0.0, 0.0))))))))) : mat2(1.0))), 1, _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))), (false ? _GLF_FUZZED(((~ ivec3(-88618, 58450, -19366)) << ivec3(21295, 14235, 33046))) : _GLF_IDENTITY(ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))), max(ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))))))))), mat3(1.0), ivec4(1)), _GLF_struct_11(true, mat3x2(1.0)), _GLF_struct_12(mat2(1.0), bvec4(true), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u ^ (uint(6u))))), 0u | ((1u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), _GLF_IDENTITY(~ (~ ((6u) | (6u))), (~ (~ ((6u) | (6u)))) - 0u)))), 0u ^ (uint(6u))))))))), 1.0, _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-7492.1993, -925.283, 4.2, -18.87, -0.4, -9.2, 3276.4026, -9.6, 6536.6033, 63.02, 2393.3453, -3114.7208, -3.7, 1.4, -7.9, -4.8)) : mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), bvec3(true), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (true), (false || (true)) && true), true && (_GLF_IDENTITY(false, (false) && true) || (true)))), (! (_GLF_IDENTITY(false || (true), true && (false || (true))))) && true))))))), 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, (false) || false)))), ! (! (bool(bool(! (_GLF_IDENTITY(false, (false) || false))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))))) * 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_14.virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ~ (~ ((1))))), _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), 1 * (0 >> _GLF_IDENTITY(int(3), int(3))))), 0 ^ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), 1 * (0 >> _GLF_IDENTITY(int(3), int(3))))))))), min(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) | (_GLF_IDENTITY(int(3), int(3)))))) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, 3)), clamp(3, 3, _GLF_IDENTITY(3, (3) | (3))))), int(3)))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(3, 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(3, 0), (true ? ivec2(3, 0) : _GLF_FUZZED(ivec2(35061, 62994)))))), (ivec2(3, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(3)))), (0 | 0) | (((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3)))))), min(_GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY((0 | 0) | (((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(3, int(int(3))))))))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))), ((0 | 0) | (((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(92580) : 3)))))) | ((0 >> _GLF_IDENTITY(int(3), int(3)))))) >> 0), ((0 | 0) | (((0 >> _GLF_IDENTITY(int(3), int(3)))) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ~ (_GLF_IDENTITY(~ ((0 >> _GLF_IDENTITY(int(3), int(3)))), max(~ ((0 >> _GLF_IDENTITY(int(3), int(3)))), ~ ((0 >> _GLF_IDENTITY(int(3), int(3))))))))))) / ((0 ^ 1) & 1))), _GLF_IDENTITY(_GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3)))), (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) | (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY((0 | 0) | (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (int(3)))) >> 0), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))), (true ? (0 | 0) | (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (int(3)))) >> 0), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))) : _GLF_FUZZED(27211)))))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(-64324))))) | (_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3)))), clamp(0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3)))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3)))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(int(3)))), ~ (~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))))), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), int(int((_GLF_IDENTITY(int(3), min(int(3), int(3))))))))))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))))), int(3))))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(6), int(6)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(6), int(6)))) >> _GLF_IDENTITY(int(3), int(3)))) | 0)))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) | ((0 >> _GLF_IDENTITY(int(3), int(3))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))), clamp(~ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))), (~ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))))) ^ 0), ~ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))))), 0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) >> 0))), (0 >> _GLF_IDENTITY(int(3), int(3))))), clamp(int(ivec4(0, 0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), ~ (~ (0 >> _GLF_IDENTITY(int(3), int(3)))))))), int(ivec4(0, 0, _GLF_IDENTITY(1, 0 ^ (1)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))))), int(ivec4(0, 0, _GLF_IDENTITY(1, 0 ^ (1)), (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), (_GLF_IDENTITY(int(ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (1), clamp(0 ^ (1), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(37499) : 1))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(88728) : 0 ^ (1), int(int(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(88728) : 0 ^ (1)))))), 0 ^ (1))), (_GLF_IDENTITY(0 ^ (1), clamp(0 ^ (1), _GLF_IDENTITY(0 ^ (1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(88728) : 0 ^ (1))), 0 ^ (1)))) << 0), int(ivec4(_GLF_IDENTITY(0 ^ (1), clamp(_GLF_IDENTITY(0 ^ (1), (0 | 0) | (0 ^ (1))), _GLF_IDENTITY(0 ^ (1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(88728), (_GLF_FUZZED(88728)) - int(_GLF_ZERO(0.0, injectionSwitch.x))) : 0 ^ (1))), 0 ^ (1))), 0, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))))))))) >> _GLF_IDENTITY(int(5), int(5))), 1)))), (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) >> 0))))))), clamp(int(ivec4(0, 0, _GLF_IDENTITY(1, 0 ^ (1)), (0 >> _GLF_IDENTITY(int(3), int(3))))), int(ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))) / 1), 0 ^ (1)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), bool(bvec2(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) ? int(3) : _GLF_FUZZED(_GLF_IDENTITY(-93165, clamp(-93165, -93165, -93165)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((true ? int(3) : _GLF_FUZZED(70980)), ~ (~ (_GLF_IDENTITY((true ? int(3) : _GLF_FUZZED(70980)), 0 | ((true ? int(3) : _GLF_FUZZED(70980)))))))))), int(3))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(int(3), int(3))))) - 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)))))))) ? (_GLF_IDENTITY(int(3), int(3))) : _GLF_IDENTITY(_GLF_FUZZED(83871), 0 + (_GLF_FUZZED(83871))), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(14.89) : injectionSwitch.x)) < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(max(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), min(max(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))), int(3))) : _GLF_FUZZED(83871), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(int(3), int(3))) : _GLF_FUZZED(_GLF_IDENTITY(83871, min(83871, 83871))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(int(3), int(3))))))))))), int(ivec4(0, 0, _GLF_IDENTITY(1, 0 ^ (1)), (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) ^ 0))))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) * 1)))))), max(~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))), 0 + ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))), 0 + ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, 4, 4))))))))) << 0)))) | (~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(80913) : _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), 4))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), 8.8, -9790.8758), max(vec3(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), 8.8, -9790.8758), vec3(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), 8.8, -9790.8758))).s)), vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), bvec2(false, true))).y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), float(vec4(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), 8.8, -9790.8758).s)), vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), float(vec4(_GLF_IDENTITY(190.163, (false ? _GLF_FUZZED(-2.6) : 190.163)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), 8.8, -9790.8758).s)), vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), bvec2(false, true))).y)) || false)), false, true, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), (((false) || false)) || false), bool(bvec4(! ((false) || false), false, false, true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false, ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false) && true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[_GLF_struct_replacement_14.virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
