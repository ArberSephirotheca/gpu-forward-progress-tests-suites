#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false)))))))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false)))))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false)))))))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))))) || false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))) && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((48.26))), bool(false))) < injectionSwitch.y)) && (false))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0), (vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0), (vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)) / vec3(1.0, 1.0, 1.0)))) / 1.0)))))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false), true && (_GLF_IDENTITY((false), bool(bool((false))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0), (vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0), _GLF_IDENTITY((vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), mat3(1.0) * ((vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)))) / vec3(1.0, 1.0, 1.0)))) / 1.0)))))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false), true && ((false)))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0), (vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0), (vec3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0)) / vec3(1.0, 1.0, 1.0)))) / 1.0)))))) && _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false), true && ((false))))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-81.02) : injectionSwitch.y)))))))))))) && true)) || false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_size * subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec3((_GLF_IDENTITY(false, true && (false))), false, false))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_base, 0u)), clamp(uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), (uvec2(subgroup_base, 0u)) << uvec2(0u, 0u))), uint(uvec2(subgroup_base, 0u)), uint(uvec2(subgroup_base, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_base, 0u)), clamp(uint(uvec2(subgroup_base, 0u)), uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), uint(uvec2(subgroup_base, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_base, 0u)), clamp(uint(uvec2(subgroup_base, 0u)), uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), uint(uvec2(subgroup_base, 0u))))) / (0u ^ 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), (uvec2(subgroup_base, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))) << uvec2(0u, 0u))), clamp(uint(uvec2(subgroup_base, 0u)), uint(uvec2(subgroup_base, 0u)), uint(uvec2(subgroup_base, 0u)))), _GLF_IDENTITY(uint(uvec2(subgroup_base, 0u)), clamp(uint(uvec2(subgroup_base, 0u)), uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), (uvec2(subgroup_base, 0u)) | (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(2u), uvec2(2u))))), uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), false, false))))), bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-177.731, -6.4)))), (injectionSwitch))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(vec4((injectionSwitch) + vec2(0.0, 0.0), 1.0, 0.0))))), (true ? (injectionSwitch) + vec2(0.0, 0.0) : _GLF_FUZZED(atanh(injectionSwitch)))) : _GLF_FUZZED(vec2(4.9, -2.0))))))).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-177.731, -6.4)))), (injectionSwitch))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(vec4((injectionSwitch) + vec2(0.0, 0.0), 1.0, 0.0))))), (true ? (injectionSwitch) + vec2(0.0, 0.0) : _GLF_FUZZED(atanh(injectionSwitch)))) : _GLF_FUZZED(vec2(4.9, -2.0))))))).y, 0.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-177.731, -6.4)))), (injectionSwitch))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(vec4((injectionSwitch) + vec2(0.0, 0.0), 1.0, 0.0))))), (true ? (injectionSwitch) + vec2(0.0, 0.0) : _GLF_FUZZED(atanh(injectionSwitch)))) : _GLF_FUZZED(vec2(4.9, -2.0))))))).y, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-177.731, -6.4)))), (injectionSwitch))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(vec4((injectionSwitch) + vec2(0.0, 0.0), 1.0, 0.0))))), (true ? (injectionSwitch) + vec2(0.0, 0.0) : _GLF_FUZZED(atanh(injectionSwitch)))) : _GLF_FUZZED(vec2(4.9, -2.0))))))).y, 0.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-177.731, -6.4)))), (injectionSwitch))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(vec4((injectionSwitch) + vec2(0.0, 0.0), 1.0, 0.0))))), (true ? (injectionSwitch) + vec2(0.0, 0.0) : _GLF_FUZZED(atanh(injectionSwitch)))) : _GLF_FUZZED(vec2(4.9, -2.0))))))).y, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(8125.5999, -6038.2988))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-177.731, -6.4)))), (injectionSwitch))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(vec4((injectionSwitch) + vec2(0.0, 0.0), 1.0, 0.0))))), (true ? (injectionSwitch) + vec2(0.0, 0.0) : _GLF_FUZZED(atanh(injectionSwitch)))) : _GLF_FUZZED(vec2(4.9, -2.0))))))).y, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9558.3089), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-6.2) : (injectionSwitch)[0])), _GLF_FUZZED(-21.62)), bvec2(true, false))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, false, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true, true))), false, false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, false, false, true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(4.1))))).x > injectionSwitch.y, false, false, true))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(4.1))))).x > injectionSwitch.y, false, false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(1.0)))))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, false, false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, false, false, true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, false, false, true))))))))), true, true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(968.568)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bool((_GLF_IDENTITY(! (false), (! (false)) && true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-8916.9341), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-66.82)), vec2(_GLF_FUZZED(-6784.6407), ((injectionSwitch))[1]), bvec2(false, true))), (injectionSwitch)))[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-8916.9341), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-364.076)), float(injectionSwitch[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true, true)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, false)), false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-8808.9161)), bvec2(false, false))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))))))), false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), false, false, false)))))))))), bool(_GLF_IDENTITY(bvec2((! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), false, false, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), false, false, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), max(ivec4(2, 1, 0, _GLF_IDENTITY(1, min(1, 1))), ivec4(2, 1, 0, 1)))), int(ivec3(int(ivec4(2, 1, _GLF_IDENTITY(0, (0 ^ 0) + (0)), 1)), 1, 1))))), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) + 0))), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, max((subgroup_size) - 0u, (subgroup_size) - 0u))) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))) - 0u, ((subgroup_size) - 0u) | (_GLF_IDENTITY((subgroup_size) - 0u, clamp((subgroup_size) - 0u, (subgroup_size) - 0u, (subgroup_size) - 0u))))) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), (int(ivec4(2, 1, 0, 1))) | (int(ivec4(2, 1, 0, 1)))), clamp(_GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), (int(ivec4(2, 1, 0, 1))) | (int(ivec4(2, 1, 0, 1)))), _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), (int(ivec4(2, 1, 0, 1))) | (int(ivec4(2, 1, 0, 1)))), _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), (int(ivec4(2, 1, 0, 1))) | (int(ivec4(2, 1, 0, 1)))))), 1, 1))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(_GLF_IDENTITY(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1), (ivec3(int(ivec4(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) >> 0), 1, 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec3(_GLF_IDENTITY(0, (0) >> 0), 1, 1)) : _GLF_FUZZED(60149)))), 1)), 1, 1)) - ivec3(0, 0, 0))))))) - 0u))), ! (! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, ~ (~ ((subgroup_size) - 0u)))) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)), (false ? _GLF_FUZZED(55509) : _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1))), (2) | (2)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), max(ivec4(2, 1, 0, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), int(ivec3(int(ivec3(1, 1, 1)), 0, 0))))), ivec4(2, 1, 0, 1)))), int(ivec3(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (ivec4(2, 1, 0, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), _GLF_IDENTITY(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), _GLF_IDENTITY(int(ivec3(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), 1, 0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (int(ivec3(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), 1, 0)))))))), 1u, 1u, 1u)), (_GLF_IDENTITY(true, (true) && true) ? uint(uvec4((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) * 1u) * 1u))) | 0u)) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), int(ivec3(int(ivec3(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)))))), 1, 1)), 1, 0))), (_GLF_IDENTITY(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), int(ivec3(int(ivec3(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)))))), 1, 1)), 1, 0)))) | 0)))), 1u, 1u, 1u)) : _GLF_FUZZED(next_virtual_gid))), (uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), 1u, 1u, 1u))) / 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1), ~ (~ (ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))))), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))), 0 ^ (int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))))), int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))))), int(_GLF_IDENTITY(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1), ~ (~ (ivec3(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), max(ivec4(2, 1, 0, 1), ivec4(2, 1, 0, 1)))), 1, 1)))))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) - 0u) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1), int(1))))), 0, 1)), 1, 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1), int(1))))), 0, 1)), 1, 1)))))))) - 0u)))), true && ((subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, ~ (~ ((subgroup_size) - 0u)))) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)), (false ? _GLF_FUZZED(55509) : _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1))), (2) | (2)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), max(ivec4(2, 1, 0, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), int(ivec3(int(ivec3(1, 1, 1)), 0, 0))))), ivec4(2, 1, 0, 1)))), int(ivec3(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (ivec4(2, 1, 0, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), _GLF_IDENTITY(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), _GLF_IDENTITY(int(ivec3(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), 1, 0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (int(ivec3(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), 1, 0)))))))), 1u, 1u, 1u)), (_GLF_IDENTITY(true, (true) && true) ? uint(uvec4((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) * 1u) * 1u))) | 0u)) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), int(ivec3(int(ivec3(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)))))), 1, 1)), 1, 0))), (_GLF_IDENTITY(int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1)), int(ivec3(int(ivec3(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)), 1, 0, 1))) << 0), 1, 1, 0)))))), 1, 1)), 1, 0)))) | 0)))), 1u, 1u, 1u)) : _GLF_FUZZED(next_virtual_gid))), (uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), 1u, 1u, 1u))) / 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1), ~ (~ (ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))))), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))), 0 ^ (int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))))), int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))), (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575))))) / ivec4(1, 1, 1, 1))), (~ (_GLF_IDENTITY(ivec4(2, 1, 0, 1), (true ? ivec4(2, 1, 0, 1) : _GLF_FUZZED(ivec4(-50130, 77917, 37716, -22575)))))) - ivec4(0, 0, 0, 0))))))), int(_GLF_IDENTITY(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1), ~ (~ (ivec3(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), max(ivec4(2, 1, 0, 1), ivec4(2, 1, 0, 1)))), 1, 1)))))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))) - 0u) / _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, 1, 0, 1)), 1, 1))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) - 0u) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1), int(1))))), 0, 1)), 1, 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(int(ivec4(2, 1, 0, 1)), int(ivec3(int(ivec4(2, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1), int(1))))), 0, 1)), 1, 1)))))))) - 0u)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), (uint(_GLF_IDENTITY(1, max(1, 1)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(_GLF_IDENTITY(1, max(1, 1))), 0u, 0u))))), clamp(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))) >> 0u)) - 0u, (_GLF_IDENTITY((uint(1)) - 0u, ((uint(1)) - 0u) << 0u)) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), uint(1), uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) - 0))))) | 0)))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), ((4)) | ((4))))), clamp((4) | (4), _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))) | (4), ((4) | (4)) + _GLF_IDENTITY(0, 1 * (0))), _GLF_IDENTITY((4) | (4), 1 * ((4) | (4)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false))))), true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1))))), min(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) | (min(uint(1), uint(1))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | 0u)) | (_GLF_IDENTITY(read, _GLF_IDENTITY((read) * uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u + (_GLF_IDENTITY((read), (_GLF_IDENTITY((read), 1u * ((read)))) >> 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
}
