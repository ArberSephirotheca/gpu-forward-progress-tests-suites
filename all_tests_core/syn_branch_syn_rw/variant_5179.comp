#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), _GLF_IDENTITY(true, true && (true)), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true, true, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))), true, true, false)))), false))))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), _GLF_IDENTITY(true, true && (true)), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true, true, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))), true, true, false)))), false))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), _GLF_IDENTITY(true, true && (true)), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true, true, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))), true, true, false)))), false))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_id) << 0u)) >> 0u), (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_id) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true))))), bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) && true)), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), 1.0, length(vec2(0.0, 0.0))))))) * 1.0) > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), 1.0, length(vec2(0.0, 0.0))))))) * 1.0) > injectionSwitch.y, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), 1.0, length(vec2(0.0, 0.0))))))) * 1.0) > injectionSwitch.y, false, false), true)))))))) && true)), false, false, false))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9842.7314)), float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(float(143521u))), float((1.0) / 1.0), bool(_GLF_IDENTITY(true, (true) || false))))), sin(0.0))), mix(vec2((vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), float(vec2(abs(1.0), 1.0)))) / 1.0), abs(1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(0.0))))[0], _GLF_IDENTITY((vec2(mat4(injectionSwitch, 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), abs(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0), mat3(1.0) * (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), abs(0.0), _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1660.1647)), bool(false)))) - 0.0)), 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), abs(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(0.0))))[1], 1.0 * ((vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-716.224)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * sqrt(1.0)) / 1.0), sin(0.0))))[1]))), vec2(_GLF_FUZZED(-619.712), _GLF_FUZZED(16.11)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false)))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) / 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))), injectionSwitch.y))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))), injectionSwitch.y)))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) && true))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-0.3 * -68.27))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, _GLF_IDENTITY(clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-532.832) : clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(_GLF_IDENTITY(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2(2387.4651, 53.94, 624.275, 3.2)) : mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))))), (_GLF_IDENTITY((float(_GLF_IDENTITY(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2(2387.4651, 53.94, 624.275, 3.2)) : mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))))), 0.0 + ((float(_GLF_IDENTITY(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0), (false ? _GLF_FUZZED(mat2(2387.4651, 53.94, 624.275, 3.2)) : mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)))))))) / 1.0) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - _GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), abs(0.0))), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(_GLF_IDENTITY(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), min(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0)), (float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0))) / 1.0))), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)), mix(float(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0))), float(_GLF_FUZZED((0.4))), bool(false)))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - determinant(mat2(0.0, 1.0, 0.0, tan(0.0)))), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), min(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0)), (float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0))) / 1.0))), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)), mix(float(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0))), float(_GLF_FUZZED((0.4))), bool(false)))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - determinant(mat2(0.0, 1.0, 0.0, tan(0.0)))), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), min(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0)), (float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0))) / 1.0))), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)), mix(float(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0))), float(_GLF_FUZZED((0.4))), bool(false)))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - determinant(mat2(0.0, 1.0, 0.0, tan(0.0)))), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))))))))), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), min(_GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0)), (float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), log(cos(0.0)), 0.0, 1.0, 0.0))) / 1.0))), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)), mix(float(float(mat4x3((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, tan(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0))), float(_GLF_FUZZED((0.4))), bool(false)))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(_GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), min(_GLF_IDENTITY((float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0)), _GLF_IDENTITY((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, clamp((float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - determinant(mat2(0.0, 1.0, 0.0, tan(0.0)))), cos(0.0), 1.0))) - 0.0, (float(mat2(injectionSwitch.y, abs(0.0), cos(0.0), 1.0))) - 0.0))))))))))), float(_GLF_FUZZED((+ 8.8))), bool(false)))))))))))
  barrier();
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)) ^ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id), _GLF_IDENTITY(0u | (0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id)), 0u | (0u | (0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)).w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.6) : injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.6) : injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.6) : injectionSwitch.x)) > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (true && (false))), bool(bvec4(! (! (true && (false))), false, true, true))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), true && ((bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), bool(bvec4((bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), true, false, false))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), bool(bvec4((bool(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), false || (true && (false)))))))))), true, false, false)))))))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) || false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), false || (! (true && (false)))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), bool(bvec3(! (true && (false)), false, true)))))))))), bool(bvec4((bool(_GLF_IDENTITY(true && (false), ! (! (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))))), true, false, false))))))))))))))) || false) || false))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-24.09) : injectionSwitch.y)), (injectionSwitch.y) / 1.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-24.09) : injectionSwitch.y)), (injectionSwitch.y) / 1.0))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, true)))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, true)))), true)))))))))), false)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.8, -234.976)))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true)))))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true))))))))) && true))) || false)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true)))))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true))))))))) && true))) || false)), true, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y, 0u | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y)), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(uint(uint(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x)), (uint(uint(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x))) << 0u)) * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), 1u * (uint(8u))), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(8u))))), _GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(143427u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(8u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), _GLF_IDENTITY((uint(8u)), min((uint(8u)), (uint(8u)))) << 0u), (true ? _GLF_IDENTITY(uint(8u), (uint(8u)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u)), (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u))) << 0u))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(8u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (8u) / _GLF_IDENTITY((1u | 1u), (_GLF_IDENTITY((1u | 1u), clamp(_GLF_IDENTITY((1u | 1u), clamp((1u | 1u), (1u | 1u), (1u | 1u))), (1u | 1u), (1u | 1u)))) - 0u)), (_GLF_IDENTITY(8u, (8u) / (1u | 1u))) - 0u)), (uint(8u)) << 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (8u) / (1u | 1u)), _GLF_IDENTITY((_GLF_IDENTITY(8u, (8u) / (_GLF_IDENTITY(1u | 1u, uint(uint(_GLF_IDENTITY(1u | 1u, 0u ^ (_GLF_IDENTITY(1u | 1u, uint(uvec3(1u | 1u, 0u, 1u))))))))))), max((_GLF_IDENTITY(8u, (8u) / (_GLF_IDENTITY(1u | 1u, uint(uint(_GLF_IDENTITY(1u | 1u, 0u ^ (_GLF_IDENTITY(1u | 1u, uint(uvec3(1u | 1u, 0u, 1u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(8u, (8u) / (_GLF_IDENTITY(1u | 1u, uint(uint(_GLF_IDENTITY(1u | 1u, 0u ^ (_GLF_IDENTITY(1u | 1u, uint(uvec3(1u | 1u, 0u, 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(8u, (8u) / (_GLF_IDENTITY(1u | 1u, uint(uint(_GLF_IDENTITY(1u | 1u, 0u ^ (_GLF_IDENTITY(1u | 1u, uint(uvec3(1u | 1u, 0u, 1u))))))))))), uint(uvec3((_GLF_IDENTITY(8u, (8u) / (_GLF_IDENTITY(1u | 1u, uint(uint(_GLF_IDENTITY(1u | 1u, 0u ^ (_GLF_IDENTITY(1u | 1u, uint(uvec3(1u | 1u, 0u, 1u))))))))))), 1u, 1u)))) | ((_GLF_IDENTITY(8u, (8u) / (_GLF_IDENTITY(1u | 1u, uint(uint(_GLF_IDENTITY(1u | 1u, 0u ^ (_GLF_IDENTITY(1u | 1u, uint(uvec3(1u | 1u, 0u, 1u))))))))))))))) - 0u)), (uint(8u)) << 0u)) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(121.450)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED((4.7 * -54.69))), bvec2(false, false))).x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, abs(0.0), length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(9.4)), bool(false)))) && true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), _GLF_IDENTITY(~ (~ ((GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id))), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) : ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, max(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id))) | _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) : (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))))))))) | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)).z + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0))))), (true ? mat2(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0))))) : _GLF_FUZZED(mat2(-71.01, 127.793, 6.7, 1.4)))))).y)) && true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY((3.0), ((3.0)) - 0.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - _GLF_IDENTITY(-9582.1317, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-5677.6554, -271.599, -77.30, 2.5, 2.3, 89.56, -59.47, 8.4)) : mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(mat4x2(float(_GLF_IDENTITY(mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-5677.6554, -271.599, -77.30, _GLF_IDENTITY(2.5, (2.5) / 1.0), 2.3, 89.56, -59.47, 8.4)) : mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 0.0))))))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - _GLF_IDENTITY(-9582.1317, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-5677.6554, -271.599, -77.30, 2.5, 2.3, 89.56, -59.47, 8.4)) : mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(mat4x2(float(_GLF_IDENTITY(mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-5677.6554, -271.599, -77.30, _GLF_IDENTITY(2.5, (2.5) / 1.0), 2.3, 89.56, -59.47, 8.4)) : mat4x2(-9582.1317, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 0.0))))))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY((3.0), min((3.0), (3.0))) - -9582.1317, ((3.0) - -9582.1317) / 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y))) || false)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))))), 1.0, 1.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED((_GLF_IDENTITY((3.0), _GLF_IDENTITY(float(vec3((3.0), 1.0, 0.0)), max(float(vec3((3.0), 1.0, 0.0)), _GLF_IDENTITY(float(vec3((3.0), 1.0, 0.0)), float(mat2x4(float(vec3((3.0), 1.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y))) || false)))))), false)), false || (bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY((3.0), max((3.0), (3.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((3.0), max((3.0), (3.0))), 0.0, 1.0)), (false ? _GLF_FUZZED(-4.1) : float(vec3(_GLF_IDENTITY((3.0), max((3.0), (3.0))), 0.0, 1.0))))) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-896.343)), bool(false))))), bool(true))) > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))))))), false), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY((3.0), max((3.0), (3.0))) - -9582.1317))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY((3.0), max((3.0), (3.0))) - -9582.1317))), (float(_GLF_FUZZED((_GLF_IDENTITY((3.0), max((3.0), (3.0))) - -9582.1317)))) - 0.0)), float(_GLF_FUZZED(2162.3826)), bool(false))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), max(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), min(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-896.343)), bool(false))))), bool(true))) > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bool((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), max(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), min(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((3.0) - -9582.1317))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-896.343)), bool(false))))), bool(true))) > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))))))), false), true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(clamp(2210.4479, uintBitsToFloat(virtual_gid), 92.13)))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-16.35)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(35.81), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-280.170)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(24.52)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + tan(vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)).z + subgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)).z + subgroup_base) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + ((subgroup_local_id + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))], 4, 64, 2), max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))], 4, 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))], 4, 64, 2)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(835.706) : injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), float(float(injectionSwitch.y)))), clamp(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), float(float(injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), float(float(injectionSwitch.y)))), mix(float(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4853.0885), _GLF_FUZZED(-8.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-2.9)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).y)))), float(float(injectionSwitch.y))))), float(_GLF_FUZZED((9637.5922))), bool(false))), _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), float(float(injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u) % 2) == _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(87582) : _GLF_IDENTITY(0, ~ (~ (0))))), bool(bvec3((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u) % 2) == 0, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) | 0), 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false), false, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false), false, false))))))))))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5250.7832)), float(0.0), bool(true))), 0.0), (vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5250.7832)), float(0.0), bool(true))), 0.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, false, false))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), true)), false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), true)), false)))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false)), false))), false, false), true)), false)))), true)), false))))))), true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-53069, (-53069) | (-53069))), clamp(_GLF_FUZZED(-53069), _GLF_FUZZED(-53069), _GLF_IDENTITY(_GLF_FUZZED(-53069), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(-53069, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) ^ (-53069))))))), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-53069), _GLF_IDENTITY(clamp(_GLF_FUZZED(-53069), _GLF_FUZZED(-53069), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-53069), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(-53069, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-53069))))), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-53069), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(-53069, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-53069), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-53069)) * 1)))))))), (false ? _GLF_FUZZED(-25204) : clamp(_GLF_IDENTITY(_GLF_FUZZED(-53069), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-53069), max(_GLF_FUZZED(-53069), _GLF_FUZZED(-53069))))), _GLF_FUZZED(-53069), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-53069), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(-53069, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-53069))))), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-53069), 0 ^ (_GLF_FUZZED(_GLF_IDENTITY(-53069, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (-53069), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((-53069), (0 << _GLF_IDENTITY(int(8), int(8))) + ((-53069)))) * 1)))))))))))) << (0 >> _GLF_IDENTITY(int(5), int(5)))))), 1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(floor(vec2(-99.76, 21.16))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) * 1)))])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1])) : _GLF_FUZZED(floor(vec2(-99.76, 21.16))))) : _GLF_FUZZED(atan(vec2(-88.67, 420.872), vec2(-944.612, -57.71))))), injectionSwitch)).y, mix(float(_GLF_FUZZED(-30.52)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))).y) - 0.0)), bool(true))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0), (mat4x2(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0)) * mat4(1.0))), max(float(_GLF_IDENTITY(mat4x2(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0), (mat4x2(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0), (mat4x2(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))], 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0)) * mat4(1.0))))))), min(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))]), _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))]), max(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(-6.7), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))]), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))]))))), _GLF_IDENTITY((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / abs(vec2(1.0, 1.0)))[1])) * mat2(1.0), max((vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))) / 1))))) | (0))], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0), min((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0))), max(_GLF_IDENTITY((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0), min((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0), min((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])) * mat2(1.0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc((vec2(-3.1, -4054.9581) / -8.3))) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(floor(vec2(_GLF_IDENTITY(-99.76, min(-99.76, -99.76)), 21.16)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(floor(vec2(-99.76, _GLF_IDENTITY(21.16, max(21.16, _GLF_IDENTITY(21.16, (21.16) - 0.0))))), (true ? floor(vec2(-99.76, 21.16)) : _GLF_FUZZED(atan(vec2(6.0, -4444.2635)))))), _GLF_IDENTITY(((_GLF_IDENTITY(floor(vec2(-99.76, _GLF_IDENTITY(21.16, max(21.16, _GLF_IDENTITY(21.16, (21.16) - 0.0))))), (true ? floor(vec2(-99.76, 21.16)) : _GLF_FUZZED(atan(vec2(6.0, -4444.2635))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(floor(vec2(-99.76, _GLF_IDENTITY(21.16, max(21.16, _GLF_IDENTITY(21.16, (21.16) - 0.0))))), (true ? floor(vec2(-99.76, 21.16)) : _GLF_FUZZED(atan(vec2(6.0, -4444.2635))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (((_GLF_IDENTITY(floor(vec2(-99.76, _GLF_IDENTITY(21.16, max(21.16, _GLF_IDENTITY(21.16, (21.16) - 0.0))))), (true ? floor(vec2(-99.76, 21.16)) : _GLF_FUZZED(atan(vec2(6.0, -4444.2635))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), ((_GLF_IDENTITY(floor(vec2(-99.76, _GLF_IDENTITY(21.16, max(21.16, _GLF_IDENTITY(21.16, (21.16) - 0.0))))), (true ? floor(vec2(-99.76, 21.16)) : _GLF_FUZZED(atan(vec2(6.0, -4444.2635))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(floor(vec2(-99.76, _GLF_IDENTITY(21.16, max(21.16, _GLF_IDENTITY(21.16, (21.16) - 0.0))))), (true ? floor(vec2(-99.76, 21.16)) : _GLF_FUZZED(atan(vec2(6.0, -4444.2635))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))), injectionSwitch)).y, mix(float(_GLF_FUZZED(-30.52)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8980.6147)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED((false ? 8.1 : 0.9)))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))).y) - 0.0)), bool(true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - abs(0.0))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2675.3628, 71.18))))) + vec2(0.0, 0.0)).y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (bool(bool(bool(_GLF_DEAD(false))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mix(vec2(_GLF_IDENTITY((sqrt(vec2(1.0, 1.0)))[0], (_GLF_IDENTITY((sqrt(vec2(1.0, 1.0)))[0], max((sqrt(vec2(1.0, 1.0)))[0], (sqrt(vec2(1.0, 1.0)))[0]))) - 0.0), _GLF_FUZZED(41.83)), vec2(_GLF_FUZZED(9164.4958), (sqrt(vec2(1.0, 1.0)))[1]), bvec2(false, true)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, true, true)))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, true, true))))))))) || false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4950.8521) : injectionSwitch.y))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true && (false), false, true)), ! (! (bool(bvec3(true && (false), false, true))))), ! (! (bool(bvec3(true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false, true))))))) || false)), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | (read))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(read, (read) | (read))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u), min(_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | (read))), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | (read))), max((_GLF_IDENTITY(read, (read) | (read))), (_GLF_IDENTITY(read, (read) | (read))))))) / _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + ((1u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), _GLF_IDENTITY(min(_GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read))), min((_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | (read))) | (read), ((_GLF_IDENTITY(read, (read) | (read))) | (read)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)), max(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)), (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read))) ^ 0u)))))) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (read) | (read))) / 1u, (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(read, (read) | (read))) / 1u)), (_GLF_IDENTITY(read, (read) | (read))) / 1u))), _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u)), (min(_GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_IDENTITY((read), clamp(_GLF_IDENTITY((read), ((read)) - 0u), _GLF_IDENTITY((read), uint(uvec3((read), 1u, 1u))), _GLF_IDENTITY((read), ((read)) ^ 0u)))) << 0u) | (read))) | (read))), min((_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | (read))) | (read), ((_GLF_IDENTITY(read, (read) | (read))) | (read)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)), max(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)), (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read))) ^ 0u)))))) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y))), (read) | (read))) / 1u, (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(read, (read) | (read))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | (read))) / 1u, ((_GLF_IDENTITY(read, (read) | (read))) / 1u) << 0u)))), _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u))) - 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u)), 0u | ((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u)))), (true ? (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) / 1u)) : _GLF_FUZZED(uvec4(111692u, 90128u, 159559u, 96644u)[2])))) | 0u))) | _GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), _GLF_IDENTITY(((read)) ^ 0u, clamp(((read)) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(((read)), (((read))) | (((read)))) ^ 0u, min(((read)) ^ 0u, ((read)) ^ 0u)), ((read)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY((read), 0u | (_GLF_IDENTITY((read), ~ (~ ((read)))))), ((read)) ^ _GLF_IDENTITY(0u, (0u) >> 0u))))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(9919) : _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED((_GLF_IDENTITY(70038 / -80253, 0 + (70038 / -80253)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), max(4, 4))) - 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
