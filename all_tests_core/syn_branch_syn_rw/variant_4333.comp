#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))), (_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false)))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-851.917, -4.6)))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-851.917, -4.6)))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(198054u)), _GLF_FUZZED(vec3(51.96, 5811.7914, -6.0).z)), bvec2(false, false))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true)))), true && (((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true)))))) && true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, false))))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-132.598)), vec2(_GLF_FUZZED(-3294.3733), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(535.683), _GLF_FUZZED(-0.4)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9148.4559)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))) || false), false, true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, true, true)), bool(bool(bool(bvec3((false) || false, true, true))))))) || false), _GLF_IDENTITY(((false) || false), ! (_GLF_IDENTITY(! (((false) || false)), true && (! (((false) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, true, true)), bool(bool(bool(bvec3((false) || false, true, true))))))) || false), _GLF_IDENTITY(((false) || false), ! (_GLF_IDENTITY(! (((false) || false)), true && (! (((false) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec3((false) || false, true, true))), (bool(bool(bvec3((false) || false, true, true)))) && true))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(((false) || false), ! (_GLF_IDENTITY(! (((false) || false)), true && (! (((false) || false)))))), bool(bvec3(_GLF_IDENTITY(((false) || false), ! (_GLF_IDENTITY(! (((false) || false)), true && (! (((false) || false)))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-95.45)), bool(false))), injectionSwitch.y))), min(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), (true ? uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))) : _GLF_FUZZED(uvec3(1651u, 173835u, 61629u)))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), min(max(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), (true ? uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))) : _GLF_FUZZED(uvec3(1651u, 173835u, 61629u)))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), max(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), (true ? uvec3(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))) : _GLF_FUZZED(uvec3(1651u, 173835u, 61629u)))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-2.2) : _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-2.2) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-2.2) : _GLF_ONE(1.0, injectionSwitch.y))))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u)))) >> uvec3(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(196584u, 182937u, 166051u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], 1u * _GLF_IDENTITY((gl_WorkGroupID[0]), (0u ^ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) * ((gl_WorkGroupID[0])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))[1], (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1], (gl_WorkGroupID[1]) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1]), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1])) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1]), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1])) >> 0u))) / 1u) - 0u)) / 1u)) : _GLF_FUZZED(num_workgroup), uint(uint(true ? _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1]), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1])) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1]), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[1])) >> 0u))) / 1u) - 0u)) / 1u)) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_IDENTITY(uvec3(true ? _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID[1]), clamp(_GLF_IDENTITY((gl_WorkGroupID[1]), ~ (~ ((gl_WorkGroupID[1])))), (gl_WorkGroupID[1]), _GLF_IDENTITY((gl_WorkGroupID[1]), clamp((gl_WorkGroupID[1]), (gl_WorkGroupID[1]), (gl_WorkGroupID[1]))))) / 1u, ((gl_WorkGroupID[_GLF_IDENTITY(1, (1) - 0)]) / 1u) - _GLF_IDENTITY(0u, (0u) ^ 0u))) / 1u)) : _GLF_FUZZED(num_workgroup), 0u, 1u), clamp(uvec3(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | (gl_WorkGroupID[1])), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(113821u, 189700u, 106345u)) : gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) & uvec3(163570u, 41661u, 38591u)))[1]) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), 1u)))[1]) / 1u, ((gl_WorkGroupID[1]) / 1u) - 0u)) / 1u)) : _GLF_FUZZED(num_workgroup), 0u, 1u), uvec3(true ? _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, ((gl_WorkGroupID[1]) / 1u) - 0u)) / 1u)) : _GLF_FUZZED(num_workgroup), 0u, 1u), uvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((gl_WorkGroupID[1]) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) / uvec3(1u, 1u, 1u))[1]) / 1u, ((gl_WorkGroupID[1]) / 1u) - _GLF_IDENTITY(0u, max(0u, 0u)))) / 1u)) : _GLF_FUZZED(num_workgroup), 0u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) >> 0u)))), (gl_WorkGroupID[1]) / 1u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u)))))), (gl_WorkGroupID[1]) / 1u)) / 1u), 1u, 1u)))))) | (_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), min(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(3747u, 144007u, 141478u, 37762u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), (true ? _GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))) : _GLF_FUZZED(uvec4(96575u, 13202u, 174042u, 2716u)))))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), min(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u))), 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(3747u, 144007u, 141478u, 37762u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), (true ? _GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))) : _GLF_FUZZED(uvec4(96575u, 13202u, 174042u, 2716u)))))))))))))), gl_WorkGroupID[2]))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) | (gl_WorkGroupID), ((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) | (gl_WorkGroupID)) / uvec3(1u, 1u, 1u))), gl_WorkGroupID, gl_WorkGroupID)), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(0u, (0u) + 0u))))) | (gl_WorkGroupID))[2])))))), (false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(164134u, 49142u, 167731u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(164134u, 49142u, 167731u), 0u)), (uvec3(uvec4(uvec3(164134u, 49142u, 167731u), 0u))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(uvec4(uvec3(_GLF_IDENTITY(164134u, 1u * (164134u)), 49142u, 167731u), 0u)))))) - workgroup_size)) : (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))) - uvec3(0u, 0u, 0u)), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (_GLF_IDENTITY(gl_WorkGroupID[1], clamp(gl_WorkGroupID[1], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[1], clamp(gl_WorkGroupID[1], gl_WorkGroupID[1], gl_WorkGroupID[1]))))) - (0u | 0u)), (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(subgroup_size, clamp(185557u, num_workgroup, subgroup_id))) : 1u)))) | (_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], _GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))))))), gl_WorkGroupID[2]))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], clamp(gl_WorkGroupID[1], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], (_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], clamp(gl_WorkGroupID[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], gl_WorkGroupID[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], gl_WorkGroupID[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)]))) - 0u))), gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) | (gl_WorkGroupID))[2]))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (_GLF_IDENTITY(gl_WorkGroupID[0], max(gl_WorkGroupID[0], gl_WorkGroupID[0]))) | 0u), gl_WorkGroupID[1], gl_WorkGroupID[2]))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], 1u * _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID[0]), ((gl_WorkGroupID[0])) * 1u), max((gl_WorkGroupID[0]), _GLF_IDENTITY((gl_WorkGroupID[0]), ((gl_WorkGroupID[0])) << 0u)))), _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u), (true ? _GLF_IDENTITY(gl_WorkGroupID[1], (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]) / 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1], (gl_WorkGroupID[1]) / 1u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), (gl_WorkGroupID[1]) / 1u), (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u)) / 1u), 1u, 1u)))))) | (_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(3747u, 144007u, 141478u, 37762u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) << 0u), 0u, 1u, 1u))), (true ? _GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))) : _GLF_FUZZED(uvec4(96575u, 13202u, 174042u, 2716u))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u), (true ? _GLF_IDENTITY(gl_WorkGroupID[1], (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]) / 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1], (gl_WorkGroupID[1]) / 1u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), (gl_WorkGroupID[1]) / 1u), (_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / 1u)) / 1u), 1u, 1u)))))) | (_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(3747u, 144007u, 141478u, 37762u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) << 0u), 0u, 1u, 1u))), (true ? _GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, 1u, 1u))) : _GLF_FUZZED(uvec4(96575u, 13202u, 174042u, 2716u)))))))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), gl_WorkGroupID[2]))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))[2]))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[2])))))), (false ? _GLF_FUZZED((uvec3(164134u, 49142u, 167731u) - workgroup_size)) : (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(clamp(185557u, num_workgroup, subgroup_id), (false ? _GLF_FUZZED(87649u) : _GLF_IDENTITY(clamp(185557u, num_workgroup, subgroup_id), min(clamp(185557u, num_workgroup, subgroup_id), clamp(185557u, num_workgroup, subgroup_id))))))) : 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(clamp(185557u, num_workgroup, subgroup_id), (false ? _GLF_FUZZED(87649u) : _GLF_IDENTITY(clamp(185557u, num_workgroup, subgroup_id), min(clamp(185557u, num_workgroup, subgroup_id), clamp(185557u, num_workgroup, subgroup_id))))))) : 1u)))), 0u + ((_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(clamp(185557u, num_workgroup, subgroup_id), (false ? _GLF_FUZZED(87649u) : _GLF_IDENTITY(clamp(185557u, num_workgroup, subgroup_id), min(clamp(185557u, num_workgroup, subgroup_id), clamp(185557u, num_workgroup, subgroup_id))))))) : 1u))))))) / 1u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[1], _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u))), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), min(uvec4(gl_WorkGroupID[1], 0u, 1u, 1u), uvec4(gl_WorkGroupID[1], 0u, _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))))) | 0u)), gl_WorkGroupID[2]))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) >> uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (false ? _GLF_FUZZED(uvec3(118987u, 145641u, 109123u)) : uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), ~ (~ (uvec4(gl_WorkGroupID, 1u))))))))[1], gl_WorkGroupID[2]))))))))).x) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec3(943.733, -1104.2239, 3.9) * mat2x3(4.0, 5987.7041, 4.3, 2.7, 8.9, 7.8)), ((_GLF_IDENTITY(vec3(943.733, -1104.2239, 3.9), max(vec3(943.733, -1104.2239, 3.9), vec3(943.733, -1104.2239, 3.9))) * mat2x3(4.0, 5987.7041, 4.3, 2.7, 8.9, 7.8))) * vec2(1.0, 1.0))) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-88.14)))), float(_GLF_FUZZED(28.02)), bool(false)), mix(float(_GLF_FUZZED(-8.4)), float(mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-88.14)))), float(_GLF_FUZZED(28.02)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-88.14)))), float(_GLF_FUZZED(28.02)), bool(false)), mix(float(_GLF_FUZZED(-8.4)), float(mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-88.14)))), float(_GLF_FUZZED(28.02)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), 1u, 1u, 0u))), _GLF_IDENTITY(clamp(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, true && (true)) ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u)), (clamp(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, true && (true)) ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u))) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec2(1u, 1u) | uvec2(1u, 1u)) * (uvec2(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-985.413) : injectionSwitch[0])), injectionSwitch[1])).y))))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) + 0u)), (true ? ~ (_GLF_IDENTITY(1u, (1u) + 0u)) : _GLF_FUZZED(workgroup_id))))), 1u)))), 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u) : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u)))))) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))).y))))), 1u, 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))), clamp(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-511.782)), float(injectionSwitch.y), bool(true)))))))), 1u, 1u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u & 175881u)) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 0u | (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id) - 0u, min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))))) - 0u, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), min(uint(uvec2(workgroup_id, 0u)), uint(uvec2(workgroup_id, 0u)))))) + 0u)) - 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id) - 0u, min((workgroup_id) - 0u, (workgroup_id) - 0u)), (0u ^ 1u) * _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id) - _GLF_IDENTITY(0u, (0u) | 0u), min((workgroup_id) - 0u, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(mix(workgroup_id, num_workgroup, false))))) - 0u))), ~ (~ ((_GLF_IDENTITY((workgroup_id) - 0u, min((workgroup_id) - 0u, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(mix(workgroup_id, num_workgroup, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))) - 0u))))))) : _GLF_FUZZED(subgroup_size)))))))));
 uint subgroup_base = subgroup_size * _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), clamp((_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)))))), max(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)))))), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)))))), (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u))))))) << 0u)))), (workgroup_base + subgroup_base + subgroup_local_id), (workgroup_base + subgroup_base + subgroup_local_id))) - 0u)), ((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), clamp((workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) ^ (subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), (0u ^ 1u))))))), (workgroup_base + subgroup_base + subgroup_local_id), (workgroup_base + subgroup_base + subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) >> 0u)))) - 0u) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))), true))))))))) && true)) || false))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(308.237, -1.6)))))).x > injectionSwitch.y, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(54.86))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true)))))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, true)))))), false)), false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(mat4((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, abs(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(826.095) : 1.0))) - 0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, exp(0.0) * (1.0)), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0), vec3(0.0, 1.0, 0.0)))))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(log(1.0), cos(0.0))), dot(vec2(0.0, 1.0), vec2(log(1.0), cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), (min(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec2(1.0, 1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), clamp(vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), _GLF_IDENTITY(vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), clamp(vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), vec3(float(mat2x4(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))))))))), 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(log(1.0), cos(0.0))), dot(vec2(0.0, 1.0), vec2(log(1.0), cos(0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.1, 472.007, -196.238, 5.9, -96.91, -9783.2249, -1906.0542, 261.026, 5151.0788, 346.891, -5058.5716, -7.4, _GLF_IDENTITY(6.6, mix(float(6.6), float(_GLF_FUZZED(-6.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-374.159)), bool(false))) > injectionSwitch.y))))), -6264.1300, 14.28, -670.217))))))).x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false, true)))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.5, -7.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.5, -7.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true))))), false)))))), (bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), false, true)))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.5, -7.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.5, -7.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true))))), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, 1u, 1u), (uvec4(virtual_gid, 0u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))))], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), vec2(vec3(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(31.87) : 0.0)), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))) ? _GLF_FUZZED(31.87) : 0.0))) - 0.0)), mat2(mat2(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), vec2(vec3(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(step(-6.9, injectionSwitch)) : vec2(0.0, 0.0))))), 1.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(463.762) : 0.0)))))))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)))), (injectionSwitch) + vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0))))))), vec2(vec3(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)), max(float(mat2x4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)), float(mat2x4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(31.87) : 0.0))), mat2(mat2(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), vec2(vec3(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(2844.5826, 6.1)))))), 1.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)))))))).y : _GLF_FUZZED(-888.937))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), false, true), bvec3(bvec4(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))))), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), subgroup_local_id))) << 0u)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | _GLF_IDENTITY(0u, (0u) | 0u))) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(atomicOr(workgroup_id, (virtual_gid)))))) | (subgroup_local_id)) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))) + (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))) < (subgroup_size / 2))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (false) && true)))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) * 1u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), min(0 | (4), 0 | (4)))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 0))) | (4)))))) + 0));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), max(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, sin(0.0), 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, cos(0.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5793.4314), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3470.5768)), bvec2(true, false))).x) - 0.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(802.209) : 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat3(max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, sin(0.0), 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, cos(0.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5793.4314), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3470.5768)), bvec2(true, false))).x) - 0.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(802.209) : 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0, 1.0)), mix(float(float(mat3(max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, sin(0.0), 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, cos(0.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5793.4314), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3470.5768)), bvec2(true, false))).x) - 0.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(802.209) : 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0, 1.0))), float(_GLF_FUZZED(7370.5646)), bool(false)))))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))).x > injectionSwitch.y))) || false), true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))), 0, 1)), ~ (~ (int(ivec3(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))))))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(6.0, -52.70).x))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y)) || ((false) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false))))) || (_GLF_IDENTITY((false) || false, ((false) || false) || false))))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false))))) || ((false) || false)))) && true)), true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.6)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
