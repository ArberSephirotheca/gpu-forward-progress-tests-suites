#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(999.458) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), true))))), _GLF_IDENTITY((false) || false, bool(bool((false) || false)))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), (false) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, log(1.0), 0.0, 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))) : workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(182414u) : _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))) : workgroup_size), max((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))) : workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))) : workgroup_size)))))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u), min(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) / 1u)))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (((subgroup_local_id + 1) % subgroup_size)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))) || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u)) * (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(read)))))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u, min((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))), _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-306.466) : 0.0)), injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id % 2))), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u, _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))) | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u, 0u + ((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) >> 0), 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))) % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))) % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | uvec4(0u, 0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-94.75)), float(injectionSwitch.x), bool(true)))) / 1.0), injectionSwitch.x))))) == 0, true && (_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) == 0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | _GLF_IDENTITY(((subgroup_local_id % 2)), min(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) | uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u)), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2))), (true ? _GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) % 2))) : _GLF_FUZZED(workgroup_size))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec3(subgroup_local_id % 2, 0u, 1u)), uint(uvec3(uint(_GLF_IDENTITY(uvec3(subgroup_local_id % 2, 0u, 1u), uvec3(uvec4(uvec3(subgroup_local_id % 2, 0u, 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u, 0u))))), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), injectionSwitch.x)))), (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u, min((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-306.466) : 0.0)), injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), 0u, 0u, 0u)))))) + 0u, _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, ~ (~ (2))))))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u, 0u + ((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) >> 0u) % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), (~ (uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | uvec4(0u, 0u, 0u, 0u)))))) + 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | uvec4(0u, 0u, 0u, 0u), ((~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(391.343), _GLF_FUZZED(-45.94)), bvec2(false, false))))).x)))))))) | uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) ^ 0u)) % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ 0u) % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(workgroup_base))))))))) | uvec4(0u, 0u, 0u, 0u)))), uvec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / round(length(normalize(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u | 0u)), max(subgroup_local_id, subgroup_local_id)) % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) / 1u)))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | uvec4(0u, 0u, 0u, 0u)))), clamp(~ ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), uint(uvec3((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), 0u, 1u))), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), _GLF_IDENTITY(1u, (1u) | 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | uvec4(0u, 0u, 0u, 0u)))), ~ ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | uvec4(0u, 0u, 0u, 0u)))), ~ ((_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), max((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2))), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) << 0)), 2, 2))))))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u | ((subgroup_local_id % 2)), (true ? 0u | ((subgroup_local_id % 2)) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)), ~ (~ (uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))))), ~ (~ ((uvec4(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))), 0u), ~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))), 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))), 0u))))))))))))))))))))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(5.1, 85.13, -1180.4933, 8693.3637).y)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), mix(float(_GLF_FUZZED(-94.75)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(792.881) : injectionSwitch.x))), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-94.75)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-94.75)), float(injectionSwitch.x), bool(true)))))) / 1.0), injectionSwitch.x))))) == 0, true && (_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) == 0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-2.1)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(true, true)))[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(42.40)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.4)), bool(false)))), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_FUZZED(42.61) : injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true, false)))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch, 0.0, 1.0))))), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 1.0))))).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-6628.6694, 5.5, -44.21, -687.648))))), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.511)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((54.26 - 7.4)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-245.554)), bvec2(true, false))), 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-6628.6694, 5.5, -44.21, -687.648))))), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)) : _GLF_FUZZED(vec2(-428.797, -96.00)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.511)), float(0.0), bool(true))), 1.0))))).x, mix(float(_GLF_FUZZED(-683.452)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-6628.6694, 5.5, -44.21, -687.648))))), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.511)), float(0.0), bool(true))), 1.0)))), mix(vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-6628.6694, 5.5, -44.21, -687.648))))), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.511)), float(0.0), bool(true))), 1.0)))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-6628.6694, 5.5, -44.21, -687.648))))), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.511)), float(0.0), bool(true))), 1.0)))))[1]), vec2(_GLF_FUZZED(4225.5934), _GLF_FUZZED(-6.5)), bvec2(false, false)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED(mat2(-6628.6694, 5.5, -44.21, -687.648))))), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5281.0487, -668.493)) : injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-595.511)), float(0.0), bool(true))), 1.0))))).x) - 0.0)), _GLF_IDENTITY(bool(true), false || (bool(true)))))) / 1.0) > injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6102.5633))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)), true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))) + 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
