#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec2 _f0;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 uint subgroup_id;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
      continue;
     do
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = (_GLF_IDENTITY(1 | int(_GLF_ONE(1.0, injectionSwitch.y)), (1 | int(_GLF_ONE(1.0, injectionSwitch.y))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0)))); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     do
                      {
                       return;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec4(1), gl_SubgroupID, _GLF_struct_1(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(2), int(2)))), ~ (~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(2), int(2))))))))), 1))), _GLF_struct_0(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), ((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, false)))) && true)))))))))), true, false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(14.94)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true) && true)))
      {
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), true, true, false))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_local_id)), ((true ? workgroup_size * workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup))))) : _GLF_FUZZED(subgroup_local_id))))) / 1u));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, (1u) << 0u) & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), max((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (true ? _GLF_struct_replacement_2.subgroup_id : _GLF_FUZZED(num_workgroup)))) / (1u & _GLF_IDENTITY(1u, (1u) + 0u))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))) & _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u))))))), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 0u, 1u))))) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)) ^ 0u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u | (max(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)) ^ 0u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u))))), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, 0u | (_GLF_struct_replacement_2.subgroup_id)), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / _GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ 0u)), 0u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, (1u) << 0u) & 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) + 0u))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) + 0u))), 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) + 0u))), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) + 0u)) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))) & 1u)), _GLF_IDENTITY(0u, min(0u, 0u)), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u))), clamp(clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | (_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u))), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))) / 1u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u)), clamp(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), (1u & 1u), (1u & 1u)))), 0u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) + 0u))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)) & _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) >> 0u))), 0u, 1u))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_2.subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_struct_replacement_2.subgroup_id)))))) / (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), (1u) >> 0u))) & 1u)), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u))))), 0u, 1u))))) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, 0u | (_GLF_struct_replacement_2.subgroup_id))) / (1u & 1u)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u)), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) | 0u))), 0u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, (1u) + 0u))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id), ((_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, ~ (~ (_GLF_struct_replacement_2.subgroup_id))))) | 0u) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))) & 1u)), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id), ((_GLF_struct_replacement_2.subgroup_id)) >> 0u) / _GLF_IDENTITY((1u & 1u), ((1u & 1u)) * 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, _GLF_IDENTITY(1u & 1u, (1u & 1u) ^ 0u)))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, _GLF_IDENTITY(1u & 1u, (1u & 1u) ^ 0u)))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)), max((uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, _GLF_IDENTITY(1u & 1u, (1u & 1u) ^ 0u)))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, _GLF_IDENTITY(1u & 1u, (1u & 1u) ^ 0u)))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u)), 0u ^ (~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u))))))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, min(1u, 1u)))))), 0u, 1u), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)))), clamp((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u)), 0u ^ (~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u))))))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, min(1u, 1u)))))), 0u, 1u), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u)), 0u ^ (~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u))))))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, min(1u, 1u)))))), 0u, 1u), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u)), 0u ^ (~ (_GLF_IDENTITY(1u & 1u, (1u & 1u) / 1u))))))), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & _GLF_IDENTITY(1u, min(1u, 1u)))))), 0u, 1u), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), 0u, 1u))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id), ((_GLF_struct_replacement_2.subgroup_id)) | ((_GLF_struct_replacement_2.subgroup_id))) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u) & 1u), 0u | ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u, max(1u, 1u)) & _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)) : _GLF_FUZZED(subgroup_local_id))), 1u)))), _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, min(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, min(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, clamp(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, 0u | (_GLF_struct_replacement_2.subgroup_id)))), _GLF_struct_replacement_2.subgroup_id))))))) / (1u & 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, (1u) + 0u)), ~ (~ (_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, (1u) + 0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((1u & _GLF_IDENTITY(1u, (1u) + 0u)))))))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(166352u) : 0u)))))) << 0u) & 1u), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), min((_GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY(0u, (0u) ^ 0u)))) | 0u)))))))))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << 0u) & 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << _GLF_IDENTITY(0u, uint(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) & 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << 0u) & 1u), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << 0u) & 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << 0u) & 1u))))) : _GLF_FUZZED(((uvec4(19885u, 155276u, 163567u, 1113u) == uvec4(185155u, 186769u, 31373u, 63531u)) ? subgroup_size : num_workgroup))))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_IDENTITY(_GLF_FUZZED(42.10), (true ? _GLF_FUZZED(42.10) : _GLF_FUZZED(65.14))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << 0u) & 1u), ((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) << 0u) & 1u)) << 0u)), 0u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, (_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)), 0u, 1u))))) * subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), uint(uvec4(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), ((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u)) * 1u), min((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, 0u | (_GLF_IDENTITY(1u & 1u, (true ? 1u & 1u : _GLF_FUZZED(workgroup_size)))))), (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))))), 1u, 1u, 0u)))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), uint(uvec4(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id), (_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id), (true ? (_GLF_struct_replacement_2.subgroup_id) : _GLF_FUZZED(113110u)))) >> 0u) / (_GLF_IDENTITY(1u & 1u, 0u | (_GLF_IDENTITY(1u & 1u, (true ? 1u & 1u : _GLF_FUZZED(workgroup_size)))))), (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))))), 1u, 1u, 0u)))) * subgroup_size, uint(uvec2(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), uint(uvec4(_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY((_GLF_struct_replacement_2.subgroup_id) / (1u & 1u), min((_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, 0u | (_GLF_IDENTITY(1u & 1u, (true ? 1u & 1u : _GLF_FUZZED(workgroup_size)))))), (_GLF_struct_replacement_2.subgroup_id) / (_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))))), 1u, 1u, 0u)))) * subgroup_size, 1u)))) - 0u) + subgroup_local_id) | 0u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), (false ? _GLF_FUZZED(28462u) : uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) | (workgroup_base)))))))))) + _GLF_struct_replacement_2.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), clamp((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))))) * 1u))))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (_GLF_IDENTITY(min(virtual_gid, virtual_gid), clamp(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))))))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * _GLF_IDENTITY(_GLF_IDENTITY((min(virtual_gid, virtual_gid)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((min(virtual_gid, virtual_gid)), max((min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)))), 1u, 0u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY((min(virtual_gid, virtual_gid)), max((min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)))), 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY((min(virtual_gid, virtual_gid)), max((min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)))), 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY((min(virtual_gid, virtual_gid)), max((min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)))), 1u, 0u, 1u))))), uint(uint((min(virtual_gid, virtual_gid))))))))))) - (83135u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), clamp((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), _GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), ((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(virtual_gid, virtual_gid))))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * _GLF_IDENTITY((min(virtual_gid, virtual_gid)), uint(uint((min(virtual_gid, virtual_gid))))))))))) - (83135u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) * 1u))))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))) - 0u)) - (0u | 0u)))) / 1u)], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), clamp((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u))))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(virtual_gid, virtual_gid))))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * _GLF_IDENTITY((min(virtual_gid, virtual_gid)), uint(uint((min(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u)))))))))))) - (83135u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), clamp((~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), max((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), max(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u))))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(virtual_gid, virtual_gid))))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * _GLF_IDENTITY((min(virtual_gid, virtual_gid)), uint(uint((min(virtual_gid, virtual_gid))))))))))) - (_GLF_IDENTITY(83135u & uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(83135u & uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : 83135u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))) - 0u)) - (0u | 0u)))) / 1u)]))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 ^ (_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), int(ivec2(_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), int(ivec4((4), 1, 0, 1))) : _GLF_FUZZED(38877))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), 64, _GLF_IDENTITY(0, ~ (~ (0))));
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))), (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))) : _GLF_FUZZED(_injected_loop_counter)))) << 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))))) != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64) ^ 0, 0 ^ ((64) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), 0 ^ ((64))))), 0 ^ (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(62127) : _GLF_IDENTITY(64, (64) + 0))))))))))) + 0))), 4);
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
  }
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))), false || (! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     int i = 0;
     atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) / (1 ^ 0)), 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))), true && (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          return;
         continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (true ? _GLF_IDENTITY(read, (read) | (read)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) >> 0u), ~ (~ (_GLF_IDENTITY(read, (read) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) >> 0u), 0u + (_GLF_IDENTITY(read, (read) >> 0u))))))), 4, 64, 4);
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))
              continue;
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))) || false)))))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true))))))) || false)) && true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(cos(0.0), 1.0, 1.0), vec3(0.0, tan(0.0), sqrt(0.0))), dot(vec3(cos(0.0), 1.0, 1.0), vec3(0.0, tan(0.0), sqrt(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(cos(0.0), 1.0, 1.0), vec3(0.0, tan(0.0), sqrt(0.0))), dot(vec3(cos(0.0), 1.0, 1.0), vec3(0.0, tan(0.0), sqrt(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) || false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
}
