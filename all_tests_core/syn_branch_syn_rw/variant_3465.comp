#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat4x2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_5 {
 uint _f0;
 bvec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 uvec3 _f1;
 uvec2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 int _f1;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 bool _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 vec3 _f1;
 ivec3 _f2;
 uvec4 _f3;
 vec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 _GLF_struct_4 _f1;
 mat2x4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 mat2x4 _f5;
 uint subgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, length(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0)) + (injectionSwitch.x)), injectionSwitch.x), (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0)) + (injectionSwitch.x), length(abs(0.0)) + (_GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0)), (length(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), mix(float(_GLF_FUZZED(5705.9142)), float(clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), bool(true)))), 0.0, 0.0))) / cos(0.0)) + (injectionSwitch.x)))), injectionSwitch.x), min(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, length(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0)))), float(_GLF_FUZZED(-1.3)), bool(false))), 0.0)).x)), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), clamp(min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))))), 0.0, 0.0)) + (injectionSwitch.x)), injectionSwitch.x)))) - 0.0)) > injectionSwitch.y))) || false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((4918.8039)) : injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(679.979)), vec2(_GLF_FUZZED(400.277), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, (false) && true), false)))))) : _GLF_FUZZED(vec2(86.80, -2.7)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(86.80, -2.7)))).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(86.80, -2.7)))).y, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(86.80, -2.7)))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(86.80, -2.7)))).y)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, 0 | (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(81.20, _GLF_IDENTITY(8638.4132, mix(float(8638.4132), float(_GLF_FUZZED(-98.44)), bool(false))))))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) - (0u | 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-33.38)), (false ? _GLF_FUZZED(7.0) : (true ? 1.0 : _GLF_FUZZED(-33.38)))))), _GLF_struct_4(_GLF_struct_0(vec4(1.0), vec3(1.0), ivec3(1), uvec4(1u), vec4(1.0), ivec4(1)), _GLF_struct_1(mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))), true), _GLF_struct_2(true, 1), _GLF_struct_3(ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))), uvec3(1u), uvec2(1u), mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.1), min(_GLF_FUZZED(-0.1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.1), max(_GLF_FUZZED(-0.1), _GLF_FUZZED(-0.1))), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-0.1), max(_GLF_FUZZED(-0.1), _GLF_FUZZED(-0.1))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), float(1.0), bool(true)))))), mat2x4(1.0), _GLF_struct_6(_GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, clamp((1u) / 1u, (1u) / 1u, (1u) / 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) ^ 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (~ (_GLF_IDENTITY(1u, (1u) / 1u))) ^ 0u))), _GLF_IDENTITY(1u, (1u) / 1u))), (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED((workgroup_id)))))) | _GLF_IDENTITY((1u), 0u | ((1u)))), bvec4(true), ivec4(1)), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-71.38)), vec2(_GLF_FUZZED(-4195.8099), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-3.7)), clamp(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-3.7)), min((true ? 1.0 : _GLF_FUZZED(-3.7)), (true ? 1.0 : _GLF_FUZZED(-3.7)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-3.7)), min((true ? 1.0 : _GLF_FUZZED(-3.7)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-3.7)), (false ? _GLF_FUZZED(888.746) : (true ? 1.0 : _GLF_FUZZED(-3.7)))))), (true ? 1.0 : _GLF_FUZZED(-3.7))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-494.125)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))))), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-880.528)), (float(_GLF_FUZZED(-880.528))) * 1.0), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), 1.0))), 0.0))) : _GLF_FUZZED(-230.707))), (1.0) - _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-59.39)), float(1.0), bool(true)))))), injectionSwitch.x)))), _GLF_struct_7(mat4x2(1.0), ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), 1)))), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size * subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_size * subgroup_id, (subgroup_size * subgroup_id) * 1u), 1u, (1u & 1u)))), (subgroup_size * subgroup_id) | (_GLF_IDENTITY(subgroup_size * subgroup_id, min(_GLF_IDENTITY(subgroup_size * subgroup_id, (86849u & 0u) ^ (_GLF_IDENTITY(subgroup_size * subgroup_id, clamp(subgroup_size * subgroup_id, subgroup_size * subgroup_id, subgroup_size * subgroup_id)))), subgroup_size * subgroup_id)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_base, (true ? _GLF_struct_replacement_8.subgroup_base : _GLF_FUZZED(subgroup_id)))) / 1u)) | (_GLF_struct_replacement_8.subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)), 0u | _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_8.subgroup_base + subgroup_local_id), (true ? (workgroup_base + _GLF_struct_replacement_8.subgroup_base + subgroup_local_id) : _GLF_FUZZED(workgroup_id))));
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_8.subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1) | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | ((1 ^ 1) ^ 0))))) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> (0u | (1u ^ 1u))))) + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), max(~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)))), ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) - 0u)) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), max(~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u), uint(2u))))))))), ~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec4(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), max(~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 1u))))) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))), (true ? ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))) : _GLF_FUZZED((185899u % subgroup_local_id))))))), max(~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) - 0u)) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))))))))))), _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))))), (true ? (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u)))) << (1u ^ 1u)))) + 0u))))) : _GLF_FUZZED(packUnorm4x8(vec4(2816.0255, -401.721, -439.245, 9028.5120))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))))), (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u, (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u) | (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (subgroup_size))) + 0u))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))) : (subgroup_size))), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + 0u)))))))) | (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : (subgroup_size))), (subgroup_size), (subgroup_size))) + 0u)))))))))) / 1u))))) >> 0u), min(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) + 0u))) : _GLF_FUZZED(workgroup_id)))), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (0u) | (0u))))))))) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(uvec2(num_workgroup, 1u), uvec2(0u, 0u) ^ (uvec2(num_workgroup, 1u)))))) >> (0u & 80590u))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (true ? (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) : _GLF_FUZZED(uvec4(60492u, 152776u, 172648u, 181555u)[3])))))) >> 0u))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), uint(uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), (subgroup_size) | (subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-53.56) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))))), injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), 0u, 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0)))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), subgroup_local_id)) + 1 < (subgroup_size / 2), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (1u | 0u), 1u))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1 < (subgroup_size / 2), ! (! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), subgroup_local_id)) + 1 < (subgroup_size / 2))))) && true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4141.9673), _GLF_FUZZED(208.251)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.5, 56.40)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), injectionSwitch)))).x), _GLF_IDENTITY(float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0 * (min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), (_GLF_IDENTITY(_GLF_FUZZED(3.5), (_GLF_FUZZED(3.5)) / 1.0)) + 0.0) : 1.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0))), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))) * vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-1.3 - 2005.6752))), float(1.0), bool(true))), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(4.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), 0.0 + (sqrt(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(56.63) : _GLF_IDENTITY(sqrt(1.0), float(mat4x2(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(sqrt(1.0), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / exp(0.0)), (_GLF_IDENTITY(sqrt(1.0), max(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0), sqrt(1.0)))) - 0.0), 0.0)))) - sin(0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) * 1.0) < injectionSwitch.y)))) || false))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(161930u))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), max(dot(vec4(sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-171.884)), bool(false))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(-19.26)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-171.884)), bool(false))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-171.884)), bool(false))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-171.884)), bool(false))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(float(false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-171.884)), bool(false))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), bool(true))))))), 1.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(normalize(cos(vec3(0.0, 0.0, 0.0))))) - 0.0))), 0.0, 0.0, 1.0), (true ? mat2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(normalize(cos(vec3(0.0, 0.0, 0.0))))) - 0.0))), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(8.6, 4.2, 8.1, 439.414)))))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (sqrt(1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(5.3)), bool(false))), 1.0 * (_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(5.3)), bool(false))))), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(min(sqrt(1.0), sqrt(1.0)), clamp(min(sqrt(1.0), sqrt(1.0)), min(sqrt(1.0), sqrt(1.0)), min(sqrt(1.0), sqrt(1.0))))))), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-74.62) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388))))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-74.62) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388))))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-9142.7390), 1.0 * (_GLF_FUZZED(-9142.7390))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5757.3200)), bool(_GLF_IDENTITY(false, ! (! (false)))))), max(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-268.381) : 0.0)))), 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(4.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), 0.0 + (sqrt(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(56.63) : _GLF_IDENTITY(sqrt(1.0), float(mat4x2(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(sqrt(1.0), float(vec2(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), max(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(74.68) : 1.0))), sqrt(1.0)))) - 0.0), 0.0)))) - sin(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) * 1.0) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) * 1.0) < injectionSwitch.y)))) || false)))))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), max(dot(vec4(sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0)), (true ? vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(2.4, 378.480, -43.29))))), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0)))))) - 0.0))), 0.0, 0.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), (length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0)))))) - 0.0))), 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (sqrt(1.0))), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(5.3)), bool(false))), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))))), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-74.62) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388)))), clamp(_GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388)))), mix(float(max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388))))), float(_GLF_FUZZED(-63.33)), bool(false))), max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388)))), max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388))))))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9142.7390))) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5757.3200)), bool(false))), max(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-268.381) : 0.0)))), 0.0)))), 1.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(4.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), 0.0 + (sqrt(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(56.63) : _GLF_IDENTITY(sqrt(1.0), float(mat4x2(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(sqrt(1.0), float(vec2(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), max(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0), sqrt(1.0)))) - 0.0), 0.0)))) - sin(0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) * 1.0) < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) * 1.0) < injectionSwitch.y)), false, true, true))))) || false))), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), max(dot(vec4(sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-534.002) : float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, sqrt(0.0)))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(cos(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))))), (length(normalize(cos(vec3(0.0, 0.0, 0.0))))) - 0.0))), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (sqrt(1.0))), clamp(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(mix(float(sqrt(1.0)), float(_GLF_FUZZED(5.3)), bool(false)), (true ? _GLF_IDENTITY(mix(float(sqrt(1.0)), float(_GLF_FUZZED(5.3)), bool(false)), (mix(float(sqrt(1.0)), float(_GLF_FUZZED(5.3)), bool(false))) + 0.0) : _GLF_FUZZED(mod(2.3, 419.091))))), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))))), 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-74.62) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388))))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9142.7390))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5757.3200)), bool(false))), max(0.0, 0.0)), (false ? _GLF_FUZZED(36.88) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5757.3200)), bool(false))), max(0.0, 0.0)))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-74.62) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-379.388))))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9142.7390))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5757.3200)), bool(false))), max(0.0, 0.0)), (false ? _GLF_FUZZED(36.88) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5757.3200)), bool(false))), max(0.0, 0.0)))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0))))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-268.381) : 0.0)))), 0.0)))), 1.0, 0.0, 1.0))))))), 0.0, 0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-5156.5581)), float(_GLF_IDENTITY(float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-1.3)), (false ? _GLF_FUZZED(determinant(mat2(16.05, 8.3, 7.0, -6.7))) : (true ? 0.0 : _GLF_FUZZED(-1.3))))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0), mix(float(_GLF_FUZZED(((8003.6525 + 0.9) * -87.24))), float(min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0)), bool(true)))) * round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2x4(mat2x4(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), (true ? mat2x4(mat2x4(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat2x4(-3861.3771, 9283.1700, -5.6, 61.38, 1737.6440, 5.6, 842.098, -0.2)))))))))), _GLF_IDENTITY((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0), mix(vec4(((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[0], _GLF_FUZZED(-7.8), ((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[2], _GLF_FUZZED(61.52)), vec4(_GLF_FUZZED(788.114), ((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[1], _GLF_FUZZED(92.62), ((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[3]), bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false))))), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(subgroup_local_id)))), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(_injected_loop_counter))))) / 1.0))), max(dot(vec4(sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(4.0), (_GLF_FUZZED(4.0)) / 1.0)))), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.8)), float(0.0), bool(true)))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0)), (float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-1.3)), (false ? _GLF_FUZZED(determinant(mat2(16.05, 8.3, 7.0, -6.7))) : (true ? 0.0 : _GLF_FUZZED(-1.3))))), 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0), mix(float(_GLF_FUZZED(((8003.6525 + 0.9) * -87.24))), float(min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0)), bool(true)))) * round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2x4(mat2x4(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), (true ? mat2x4(mat2x4(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat2x4(-3861.3771, 9283.1700, -5.6, 61.38, 1737.6440, 5.6, 842.098, -0.2)))))))))), _GLF_IDENTITY((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0), mix(vec4(((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[0], _GLF_FUZZED(-7.8), ((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[2], _GLF_FUZZED(61.52)), vec4(_GLF_FUZZED(788.114), ((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[1], _GLF_FUZZED(92.62), ((vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) * mat4(1.0))[3]), bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false))))), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(subgroup_local_id)))), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(_injected_loop_counter))))) / 1.0))), max(dot(vec4(sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(4.0), (_GLF_FUZZED(4.0)) / 1.0)))), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.8)), float(0.0), bool(true)))), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0)), bool(true))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter))))), int(_GLF_IDENTITY(ivec4(~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter))))), ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-39875, (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) | (-39875))) : 1))))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))))))))), 0, 0), ~ (~ _GLF_IDENTITY((ivec4(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter), _GLF_IDENTITY(min(~ (_injected_loop_counter), ~ (_injected_loop_counter)), min(min(~ (_injected_loop_counter), ~ (_injected_loop_counter)), _GLF_IDENTITY(min(~ (_injected_loop_counter), ~ (_injected_loop_counter)), min(min(~ (_injected_loop_counter), ~ (_injected_loop_counter)), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), ((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) - 0), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), (0)))) | 0)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ _GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter)))))), min(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), clamp(_GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)), _GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) : (_injected_loop_counter))))))))))) ^ 0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1) << 0)) - 0)))))), int(1))), 0, _GLF_IDENTITY(0, (0) * 1))), ivec4(0, 0, 0, 0) | ((ivec4(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter), ((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) - 0), min(_GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))), ~ (_injected_loop_counter)))), _GLF_IDENTITY(0, (0) | (0)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))), _GLF_IDENTITY(min(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), clamp(_GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)), _GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) : (_injected_loop_counter)))))), clamp(min(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), clamp(_GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)), _GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) : (_injected_loop_counter)))))), min(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), clamp(_GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)), _GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) : (_injected_loop_counter)))))), min(~ (_injected_loop_counter), ~ _GLF_IDENTITY((_injected_loop_counter), clamp(_GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)), _GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) : (_injected_loop_counter))))))))))))) ^ 0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))), int(1))), 0, _GLF_IDENTITY(0, (0) * 1)))))))))))) < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, ! (! (false))), true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, (true) && true), true))), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))))))) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               return;
              }
            }
          }
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))))))))
          return;
         return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (0u | 0u) | (uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) - 0u)) - 0u), _GLF_IDENTITY((0u | 0u), max((0u | 0u), _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u)))))) | (uint(1)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x)))))))) * 1u), 4, 64, 4);
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        break;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(8)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.2)), bool(false))))) > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4439.9936)), bool(false)))))) && true), ! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4439.9936)), bool(false)))))) && true), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4439.9936)), bool(false)))))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4439.9936)), bool(false)))))), false))) && true)) || false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true, true)), false || (bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true, true)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true, true)), false || (bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true, true)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), min(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), min(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)))))))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), min(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)))))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), min(float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)), float(mat4(_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-6.0) : length(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0)))))))))))))))) || false)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), ! (! ((! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))))))) && true)), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || false))) && true)))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-1.6)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true)))), tan(0.0), 1.0, 0.0))).y))) && true)))))))))))))), (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))) && true)), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))), true, false, true))) && true)) && true) || false)) || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(323.048)))))))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false), false, true, true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(7288.3724)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), bool(true))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)), true && ((! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(7288.3724)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), bool(true))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true))))))))))))))) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))))))
          return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-2.2)), float((injectionSwitch)[0]), bool(true))))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-2.2)), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) + 0.0), bool(true))))), (injectionSwitch)[1])) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(781.059), _GLF_FUZZED((- vec4(-583.118, -4.4, 4836.4974, -3.9)).z)), bvec2(false, false))).y, mix(float(_GLF_FUZZED(4.9)), float(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-2.2)), float((injectionSwitch)[0]), bool(true))))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-2.2)), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) + 0.0), bool(true))))), (injectionSwitch)[1])) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(781.059), _GLF_FUZZED((- vec4(-583.118, -4.4, 4836.4974, -3.9)).z)), bvec2(false, false))).y), bool(true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), _GLF_IDENTITY(false, (false) || false), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED(-96.04), _GLF_FUZZED(-81.09)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) >> 0u), _GLF_IDENTITY(4, (4) | 0), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) ? _GLF_FUZZED(6.5) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), (int(_GLF_ONE(1.0, injectionSwitch.y))) / 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      break;
                    }
                  }
                }
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 0))), (_GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 0)))) | 0)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 0))), (_GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 0)))) | 0))) ^ 0), int(ivec2(_GLF_IDENTITY(int(5), int(5)), 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec2(5, 0)))) | (5))), (int(_GLF_IDENTITY(5, _GLF_IDENTITY((5) | (_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : 5)))))), ~ (~ ((5) | (5))))))) / 1), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
         for(int _injected_loop_counter = (0 & -15784); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2249.2905)), vec2(_GLF_FUZZED(9992.7733), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(6.3)), bool(false))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(6.3)), bool(false))))).x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(6.3)), bool(false))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(6.3)), bool(false))))).x > injectionSwitch.y))))))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(-6.2, 4638.7941, 144.356), vec3(-8931.0246, 9.6, 8068.8828))) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false))))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))))))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 do
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.4) : injectionSwitch.x))), float(_GLF_FUZZED(99.02)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y)))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) && true))), true)))))))))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(8.0)), bool(false))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))));
                      }
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) || false)))), false)), ! (! (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      break;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    barrier();
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), max((_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2))), (false ? _GLF_FUZZED(62623) : _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ~ (~ (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> _GLF_IDENTITY(int(0), int(0))) * (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(34249) : (0))) | 0))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               for(int _injected_loop_counter = (1 ^ (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), true, true)))))))))))), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch[1])))).y))))))))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || _GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))), ! (! (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(false))))))))))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), ! (! (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))))))))))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), ! (! (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))))))), bool(bvec3((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), ! (! (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false), true, true)))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         break;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(1.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                        barrier();
                       return;
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-137.790, -173.257)) : injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-137.790, -173.257)) : injectionSwitch)))) + vec2(0.0, 0.0))).y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                        break;
                       break;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(bool(false))) || (! (false)))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true)))))
                        return;
                       barrier();
                      }
                     barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
                          barrier();
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                        }
                      }
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
    barrier();
  }
 for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))), false)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
