#version 460
struct _GLF_struct_12 {
 ivec3 _f0;
 vec3 _f1;
 uint read;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 ivec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 mat4 _f1;
 bvec4 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 bvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 mat3x4 _f1;
 mat4 _f2;
 mat2x3 _f3;
 bvec3 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 _GLF_struct_9 _f1;
 mat2 _f2;
 uint subgroup_size;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 uvec2 _f1;
 vec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_3 {
 bool _f0;
 float _f1;
} ;

struct _GLF_struct_2 {
 int _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 ivec2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_1 {
 int _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 uint next_virtual_gid;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(vec4(1.0), _GLF_struct_9(_GLF_struct_7(ivec3(1), mat4(1.0), bvec4(true), bvec3(true), mat4x2(1.0), bvec4(true), vec3(1.0)), mat3x4(1.0), mat4(1.0), mat2x3(1.0), bvec3(true), _GLF_struct_8(mat3x2(1.0), uvec3(1u), mat3(1.0))), mat2(1.0), gl_SubgroupSize, _GLF_struct_10(mat2(1.0), ivec3(1), uvec3(1u)));
 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y = _GLF_struct_replacement_11.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y + subgroup_local_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(1, _GLF_struct_0(vec4(1.0), mat2x4(1.0))), workgroup_base + subgroup_id * GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y + ((subgroup_local_id + 1) % GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y), _GLF_struct_5(_GLF_struct_2(1), ivec2(1), _GLF_struct_3(true, 1.0), _GLF_struct_4(mat4(1.0), uvec2(1u), vec4(1.0), true)));
 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.x = _GLF_struct_replacement_6.next_virtual_gid;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(ivec3(1), vec3(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0));
 atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.x], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y)
  {
   int i = 0;
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_12.read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_12.read, 4, 64, 4);
  }
}
