#version 460
struct _GLF_struct_8 {
 mat3 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 vec3 _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 vec3 _f1;
 mat3 _f2;
 mat2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 ivec4 _f1;
 mat2 _f2;
 bool _f3;
 mat4x3 _f4;
 uvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_2 {
 bool _f0;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat4x2 _f1;
 bvec3 _f2;
 bvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_7 {
 float _f0;
 _GLF_struct_5 _f1;
 uint workgroup_size;
 ivec3 _f2;
 mat2 _f3;
 mat2x3 _f4;
 _GLF_struct_6 _f5;
 bvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(1.0, _GLF_struct_5(mat3(1.0), _GLF_struct_0(mat2x4(1.0)), _GLF_struct_1(1.0, mat4x2(1.0), bvec3(true), bvec2(true), uvec2(1u)), _GLF_struct_2(true), _GLF_struct_3(mat4x2(1.0), ivec4(1), mat2(1.0), true, mat4x3(1.0), uvec2(1u), bvec4(true)), _GLF_struct_4(bvec4(true), vec3(1.0), mat3(1.0), mat2(1.0), mat4(1.0))), gl_WorkGroupSize.x, ivec3(1), mat2(1.0), mat2x3(1.0), _GLF_struct_6(mat3(1.0), bvec2(true)), bvec4(true));
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = _GLF_struct_replacement_7.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * workgroup_id;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y;
 uint subgroup_base = subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(mat3(1.0), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_base + subgroup_local_id), vec3(1.0), 1);
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_base + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x);
 uint read = atomicLoad(buf[_GLF_struct_replacement_9._f0.virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_struct_replacement_9._f0.virtual_gid], read, 4, 64, 4);
}
