#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 97:
       case 19:
       case 51:
       case 47:
       case 9:
       case 41:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))));
       break;
       case 48:
       if((uvec2(115752u, 140778u) != uvec2(12521u, 82549u)))
        {
         while(false)
          {
           if((vec4(6264.3718, -1.1, -8.0, 7910.2280) , true))
            {
             ivec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
             ivec4 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
             mat3x2 _GLF_SWITCH_4_6v[92];
             mat4 _GLF_SWITCH_4_7v[20], _GLF_SWITCH_4_8v;
             mat2x4(6.0, -9.8, -8.3, 20.98, 3703.2920, -3.8, -1.6, -75.40);
            }
           else
            {
             12860;
             vec2 _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v;
            }
           true;
           do
            {
             (uvec3(154387u, 75643u, 105085u) + subgroup_id);
             bvec2 _GLF_SWITCH_4_12v[44], _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v[47];
             mat4x3(1.4, -2.0, -6224.7383, 50.59, 6567.5066, -29.29, 35.64, 4016.8991, -0.4, -8.1, 770.364, 0.1);
             ;
             ivec3 _GLF_SWITCH_4_15v[39];
             (ivec3(64216, -23902, -83862) << -13368);
             uint _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v[22];
            }
           while(false);
           15738;
           while(false)
            {
             uvec2(91384u, 36338u);
             ivec4(35745, -1389, 49035, 80185);
             mat3x4 _GLF_SWITCH_4_18v;
             mat4 _GLF_SWITCH_4_19v[20];
            }
           while(false)
            {
             mat4 _GLF_SWITCH_4_20v, _GLF_SWITCH_4_21v;
             packUnorm4x8(vec4(6.3, -5.0, 602.212, -7.4));
            }
           ivec2(58816, 13579);
           if(bool(304.601))
            {
             mat3x4 _GLF_SWITCH_4_22v;
             mat4x3 _GLF_SWITCH_4_23v;
             uvec2 _GLF_SWITCH_4_24v[41], _GLF_SWITCH_4_25v, _GLF_SWITCH_4_26v;
             mat4x3 _GLF_SWITCH_4_27v, _GLF_SWITCH_4_28v, _GLF_SWITCH_4_29v;
            }
           vec4 _GLF_SWITCH_4_30v, _GLF_SWITCH_4_31v;
          }
         if(false)
          {
           if(true)
            {
            }
           while((inverse(mat4(-1.7, -54.92, -4.4, 493.440, -14.97, 3578.7383, 471.535, 22.01, 0.8, 2.8, 1812.1027, -0.8, 4299.6157, 3656.9296, -7372.8952, -66.92)) != mat4(-2.8, -7.7, -857.267, 1269.7704, 470.001, 955.860, 7.9, -53.35, -5109.2510, 8.0, 79.41, 4.6, -39.34, 9374.5115, -1.9, -4754.5454)))
            {
             mat3(-7685.7695, 160.948, -498.463, -8.3, 9.2, -92.52, -0.0, -2.1, -0.6);
             (uvec3(108433u, 182217u, 192699u) << uvec3(11218u, 194037u, 42154u));
             (matrixCompMult(mat2x4(-363.931, 312.165, -34.25, 5.9, -5.9, 6.9, 3488.1991, -7983.1427), mat2x4(2307.3103, 852.972, 15.00, -3.3, 504.298, 2.4, -1164.9040, 296.137)) * mat3x2(896.163, 4270.6844, -556.617, -703.914, -70.49, -5.1));
             mat4x3 _GLF_SWITCH_4_32v;
             mat3x2 _GLF_SWITCH_4_33v, _GLF_SWITCH_4_34v[68], _GLF_SWITCH_4_35v;
             uvec2(60329u, 198754u);
             mat2x4(-73.44, 1266.1757, -17.67, -9813.0928, -3.8, -8.0, -14.58, -6.8);
             cos(injectionSwitch);
             mat4(3.5, -7483.8921, 8484.4699, -0.2, 7809.8159, 4.8, 8287.7616, -8576.9831, 96.12, -295.032, 7.5, 0.8, 2.3, 850.340, 6.5, 4.0);
            }
           vec3 _GLF_SWITCH_4_36v;
           for(           uvec2(139840u, 136804u);
 false; mat2(mat4x3(9.8, -1.3, 29.40, -77.09, 7.8, 193.945, -52.28, -308.310, 9.1, 4510.9742, 8410.2541, 6172.7740)))
            {
             bool _GLF_SWITCH_4_37v[40], _GLF_SWITCH_4_38v[39], _GLF_SWITCH_4_39v;
             vec4(-3.7, -0.3, 9.8, -753.361).bg;
             injectionSwitch;
             (-6207.7174 / injectionSwitch);
            }
          }
         ;
         for(         (mat3(1666.9313, 3650.5866, -353.446, -8371.3427, 5.8, -518.864, -39.94, -7.0, -176.347) * mat4x3(-3.1, 15.65, -87.84, -62.57, -2.3, 29.19, -4.4, 248.655, 2.3, -0.6, -0.1, -1683.1727));
 true; mat2(-4.6, -2036.3070, -52.30, 5395.2422))
          {
           mat3 _GLF_SWITCH_4_40v;
           mat3x4(-3747.6399, -0.1, 84.69, 4.7, 5611.9559, 60.28, 6973.3059, 958.619, -498.594, 3.2, -861.886, -2.4);
          }
         bvec3(false, false, true);
         while(true)
          {
           ivec2 _GLF_SWITCH_4_41v, _GLF_SWITCH_4_42v;
           if(true)
            {
             vec2 _GLF_SWITCH_4_43v, _GLF_SWITCH_4_44v;
            }
           {
            (uvec3(149796u, 108008u, 78134u) >> 122931u);
            false;
            ivec3(-9526, 42666, 77316);
            mat4(mat4x2(180.532, -4.6, -4.0, -3916.1108, 9.8, -27.49, -36.03, 292.504));
           }
           (+ mat3x4(53.14, -948.560, 33.96, 87.53, -70.60, 6.4, 9.2, 517.753, -62.01, -68.39, 5.4, 336.980));
           bvec3 _GLF_SWITCH_4_45v, _GLF_SWITCH_4_46v, _GLF_SWITCH_4_47v;
           {
           }
           bvec4(true, true, true, false);
           -47028;
          }
        }
       else
        {
         6329.4476;
         uvec3 _GLF_SWITCH_4_48v[16];
         (uvec2(uvec3(30499u, 75036u, 18164u)) != (subgroup_id * (uvec2(113137u, 138912u) * uvec2(12161u, 27023u))));
         do
          {
           vec2 _GLF_SWITCH_4_49v;
           {
            (-5.1 + mat2x4(-48.16, 5.2, -2347.8845, 36.30, -7.4, 8834.1577, 0.6, 1943.2731));
            ;
           }
           ivec2 _GLF_SWITCH_4_50v, _GLF_SWITCH_4_51v;
           matrixCompMult(mat2x4(-728.883, -4.3, -6.1, 36.24, -9865.5811, -9689.9202, -7.3, -47.42), mat2x4(-22.65, 36.54, 476.276, 7.8, 736.677, 9531.6687, 9.8, -948.766));
           while((-710.575 != -8832.1861))
            {
             ((uvec4(130666u, 195666u, 69725u, 129909u) >> subgroup_size) % uvec4(142800u, 194577u, 176885u, 36192u));
             mat4(mat2x4(-4.3, -6912.8454, 51.71, -47.50, -5.9, 2988.8788, 189.802, 3.5));
             ivec3(76915, 97214, 11012);
             mat4(-37.38, 583.417, -6582.9800, -71.27, -9.0, 7.0, 28.00, -73.86, 2.1, -265.414, 991.037, -1.0, -6.1, 4.7, -3.5, -58.44);
             subgroup_id;
            }
           (mat2(7.4, -743.043, 5.2, 9005.1697) / (mat2(-9.8, -529.042, 3.5, 2.8) + -0.0));
           while(true)
            {
             ivec4 _GLF_SWITCH_4_52v[26], _GLF_SWITCH_4_53v[55], _GLF_SWITCH_4_54v;
             ;
             mat4(-9520.1181, -2193.1674, 15.90, -9.7, -7544.0598, -597.495, 9.2, 3588.2567, 3336.4884, -5.3, 45.69, 6924.5855, -697.619, 1534.1939, 366.948, -20.45);
             (mat4x2(2.3, 9.3, 5227.3547, 5.3, -0.2, 7.3, -77.57, 44.61) * mat3x4(-5.2, -6.9, -724.042, 74.98, -0.1, 205.218, 3949.5238, -1161.6322, -8.4, 38.03, 40.69, 7829.6745));
             int _GLF_SWITCH_4_55v[48];
            }
           uvec3 _GLF_SWITCH_4_56v, _GLF_SWITCH_4_57v[73], _GLF_SWITCH_4_58v;
           uvec3 _GLF_SWITCH_4_59v, _GLF_SWITCH_4_60v;
          }
         while(((ivec2(-45640, -91623) + findMSB(subgroup_id)) == ivec2(59088, 76188)));
         (880.469 + mat4x3(-5.1, 2.4, 2.1, -46.97, -34.99, -59.85, 218.189, 1531.9465, 198.414, 3.1, 0.9, -3.1));
         if(false)
          {
           vec3(-477.621, -96.07, 7527.6530);
           int(atomicExchange(subgroup_size, 172152u));
           mat3x4(-9.9);
           float _GLF_SWITCH_4_61v, _GLF_SWITCH_4_62v, _GLF_SWITCH_4_63v;
           mat3x2(-8.8, 24.95, -52.45, -213.225, 1408.4852, 986.022);
           ;
           vec4 _GLF_SWITCH_4_64v, _GLF_SWITCH_4_65v[39], _GLF_SWITCH_4_66v[17];
          }
         bitCount(uvec3(34678u, 116167u, 130781u));
         {
         }
        }
       case 13:
       {
        while(true)
         {
          mat4x2((mat4x3(mat2(-505.311, -1.2, -43.92, 572.384)) - mat4x3(-3417.7747, 897.808, -10.66, -9.5, -30.59, 67.71, -381.684, -98.07, -757.409, -576.454, -31.15, 4.7)));
          for(          (ivec3(-66930, -7945, 46913) >> 20946);
 false; uvec4(102889u, 192645u, 16710u, 28878u))
           {
            bvec3 _GLF_SWITCH_4_67v, _GLF_SWITCH_4_68v[73], _GLF_SWITCH_4_69v;
            mat4 _GLF_SWITCH_4_70v[74], _GLF_SWITCH_4_71v, _GLF_SWITCH_4_72v;
            bvec4 _GLF_SWITCH_4_73v, _GLF_SWITCH_4_74v, _GLF_SWITCH_4_75v[62];
            uvec3 _GLF_SWITCH_4_76v[37];
            float _GLF_SWITCH_4_77v;
            min(uvec3(125393u, 147053u, 123385u), uvec3(126154u, 168121u, 81658u));
            true;
            ;
            (vec4(-889.268, 28.99, vec2(-8.3, -6.8)) * _GLF_SWITCH_4_77v);
           }
          if(true)
           {
            (subgroup_id);
            equal(bvec4(true, false, false, true), mix(bvec4(true, true, false, true), bvec4(true, false, false, true), bvec4(true, false, false, true)));
            bvec3 _GLF_SWITCH_4_78v[24], _GLF_SWITCH_4_79v;
            ((+ mat3(4.4, -572.196, 97.60, 980.920, -470.252, 7.7, 4.9, 4011.6487, 4306.7921)));
            81.86;
            bvec4(false, true, false, true);
           }
          vec2 _GLF_SWITCH_4_80v;
         }
        while(all(bvec3(false, false, true)))
         {
          for(bvec2 _GLF_SWITCH_4_81v[97], _GLF_SWITCH_4_82v; (true == true); (false ? mat2x4(6.1, 487.535, -20.48, -9627.4189, -3.7, -5.7, 436.963, 8726.2530) : mat2x4(-94.60, 9.6, -576.333, -9126.0981, 347.310, 8.2, 4.8, 14.39)))
           {
           }
         }
        uint _GLF_SWITCH_4_83v, _GLF_SWITCH_4_84v[26], _GLF_SWITCH_4_85v;
        vec4 _GLF_SWITCH_4_86v, _GLF_SWITCH_4_87v;
       }
       default:
       1;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) + (0 >> _GLF_IDENTITY(int(2), int(2)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ _GLF_IDENTITY(0, max(0, 0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(0))
      {
       case 46:
       122552u;
       do
        {
         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
          {
           case 17:
           (mat4x2(48.83, 744.339, -9.8, 6.3, -5744.0394, 3.2, -742.277, -62.69) / -4435.7656);
           case 0:
           case 82:
           case 88:
           case 78:
           if(_GLF_DEAD(false))
            barrier();
           break;
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       case 0:
       case 83:
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       break;
       case 24:
       ivec2(-7276, -85417);
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 94:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ivec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
       default:
       1;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       switch(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))))
        {
         case 57:
         for(mat2x4 _GLF_SWITCH_3_0v; (-34049 < 35860); mat4x3(-440.650, -1555.6489, 9208.0509, -2163.1447, -4.3, 82.56, -29.69, 29.69, -446.399, 1301.5913, -2.1, 4185.9288))
          {
           notEqual(uvec2(50838u, 128725u), uvec2(107935u, 124900u));
           if(_GLF_DEAD(false))
            barrier();
           bvec4 _GLF_SWITCH_3_1v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             while((bvec2(true, false) != bvec2(true, false)))
              {
               bvec2(true, false);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               mat2 _GLF_SWITCH_3_2v;
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 ((uvec4(131948u, 189006u, 25744u, 92680u) >> uvec4(30878u, 133657u, 98645u, 23942u).b) , uvec2(119192u, 167344u));
                }
               while(_GLF_WRAPPED_LOOP(false));
               ivec3 _GLF_SWITCH_3_3v;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 31:
                   case 10:
                   case 47:
                   case 54:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                   case 48:
                   bvec2(true, true);
                   case 21:
                   ;
                   default:
                   1;
                  }
                }
               ;
               _GLF_SWITCH_3_3v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ivec3 _GLF_SWITCH_3_4v[70], _GLF_SWITCH_3_5v;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           ;
           if(_GLF_DEAD(false))
            barrier();
           if((mat4x3(mat4x2(5.8, -82.86, 5390.5384, -2.5, -98.50, -6370.5103, 63.72, 88.69)) == mat4x3(mat3x4(0.3, 2678.7628, -9.3, -20.08, 4216.2411, -715.662, -477.913, 2.0, -8.8, 541.462, 1.3, 50.57))))
            {
             if(_GLF_DEAD(false))
              barrier();
             int _GLF_SWITCH_3_6v;
             uvec2(subgroup_local_id);
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             matrixCompMult(mat3(mat2x3(36.85, 1.4, -4.8, 7.1, -1.6, -14.77)), mat3(-91.34, -1253.3711, -9.0, 842.403, 44.32, 1.2, 0.6, 9365.2906, -13.94));
             mat4x2(0.8, 9.7, -6.6, 1.7, -247.399, -4769.2918, -6.1, 25.42);
             mat4x3(1.7, -8.1, -49.82, 1.1, 9184.3406, -409.157, 56.69, -8547.7113, -4003.6998, 1.9, -26.56, 34.56);
             bvec3 _GLF_SWITCH_3_7v[37], _GLF_SWITCH_3_8v[83];
             uvec2 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v;
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 ivec4(-70710, -3858, 73581, -53021);
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(bvec2(true, true)[1])
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4x2 _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v;
             mat3x2 _GLF_SWITCH_3_14v;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               mat4x2(-9800.2583, -99.39, -8015.2912, 2.3, -200.412, 5.2, 44.25, 1.2);
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
         case 0:
         if(_GLF_DEAD(false))
          barrier();
         case 8:
         case 60:
         if(_GLF_DEAD(false))
          barrier();
         case 35:
         case 87:
         case 67:
         return;
         break;
         case 99:
         (-90952 & ivec4(52550, 29840, 51191, 22159));
         default:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             1;
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(4), int(4))) | 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 49:
         {
          pow(vec2(6.8, -1.7), injectionSwitch);
          while(((subgroup_id < subgroup_local_id) != false))
           {
            true;
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                case 58:
                case 83:
                case 84:
                case 64:
                case 88:
                case 6:
                case 80:
                case 62:
                findLSB(num_workgroup);
                break;
                case 57:
                float _GLF_SWITCH_4_0v[72], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                case 19:
                110365u;
                default:
                1;
               }
             }
            mat3(-8.7, -7174.4821, 76.08, -272.481, 8794.3019, 99.55, -2516.5376, 3.6, 74.06);
            do
             {
              mat4x2(4319.4204, -50.48, 9.6, 4.2, 5.3, 2.9, 33.14, -0.3);
             }
            while(_GLF_WRAPPED_LOOP(false));
            uint _GLF_SWITCH_3_0v[80], _GLF_SWITCH_3_1v[53], _GLF_SWITCH_3_2v;
            do
             {
              8734;
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          mat4x3 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
          bvec4(false, true, false, true);
          if(_GLF_DEAD(false))
           barrier();
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
           {
            for(            mat2x3(-46.82, 5.5, 29.21, -90.51, 40.80, -703.773);
 false; length(vec3(6320.2145, 15.21, 6.6)))
             {
              vec4 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v[39];
              uvec3 _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v;
              if(_GLF_DEAD(false))
               barrier();
              ;
              if(_GLF_DEAD(false))
               barrier();
              mat3x4(4838.3024, -80.21, 4014.1849, -5.4, -84.50, -85.02, 691.260, -2.6, 5.7, -91.62, 2.6, -66.10);
              ;
              mat2x3 _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v;
              do
               {
                mat2(mat3x2(4.0, 782.327, 1.3, 807.136, -602.610, 67.24));
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              6134.6266;
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          mat2x3(-4.7, 6061.5571, 2.5, -7075.8917, 53.11, 1.2);
          for(          mat2(466.832, -77.54, -16.67, 4204.8102);
 (uvec4(148932u, 143318u, 16506u, 52220u) == (uvec4(105005u, 156712u, 115598u, 10671u) | uvec4(175891u, 98320u, 23767u, 162942u))); bitfieldExtract(-84122, -46407, 21506))
           {
            (2.0 + injectionSwitch);
            _GLF_SWITCH_3_4v;
            do
             {
              mat2x3(-9.7, 7.1, 125.753, -443.488, 8.5, 3467.6868);
             }
            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            vec4(-78.89, -9.2, -6.7, 16.69);
            vec4(degrees(8004.6667), asinh(vec2(-5780.2160, -2.9)), 45.53);
           }
         }
         if(_GLF_DEAD(false))
          barrier();
         case 0:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (((1 & 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         case 25:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         break;
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 97:
         while(true)
          {
           bvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
           (mat4x2(mat2(1.2, 966.013, 310.567, 6.8)) + mat4x2(mat2x4(-2228.8266, 9.6, -24.44, -65.52, -3255.6341, -4598.1391, 52.42, -3.6)));
           mat4x3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
          }
         case 67:
         for(bool _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[76]; (_GLF_SWITCH_4_6v || _GLF_SWITCH_4_6v); ivec2(-44678, 28915))
          {
           (-3201.2558 / mat4x3(8463.9641, -64.78, -7492.4397, 1.8, -4.6, -199.688, -0.3, -8.8, 8.2, -0.6, -88.52, 41.57));
           mat4x2(-7.5, -388.435, -500.228, -532.079, 53.08, 7.9, 744.184, -6.9);
           mat4x3(-4.8, -76.46, 34.36, -56.12, -8.1, 6.7, 4.9, 5380.3524, 6.2, 0.5, 4.7, 33.43);
           mat2x3(-362.082, -9.2, -8305.7329, -7.3, 78.65, 7.3);
           bvec4 _GLF_SWITCH_4_8v[95], _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v;
          }
         case 0:
         case 89:
         case 98:
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 53:
         do
          {
           mat4x2 _GLF_SWITCH_4_11v;
           (+ mat2(0.4, -247.484, 7987.1844, 3.3));
           bitfieldInsert(ivec2(-2766, -707), ivec2(-42109, 59538), -4994, 94277);
           vec2 _GLF_SWITCH_4_12v, _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v;
           mat4(-4.7, -307.057, -82.18, -7965.6079, 3374.2393, -3.7, 586.184, -174.941, 9.7, 0.2, 852.581, -0.9, 44.79, 7.5, -72.56, 0.4);
           uvec4(42566u, 20207u, 128972u, 89663u);
           log2(vec4(128.193, 405.613, -1.2, 66.44));
           ivec3 _GLF_SWITCH_4_15v;
           mat3x4 _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v[83], _GLF_SWITCH_4_18v[31];
          }
         while(false);
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true)));
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-71106)))))))
    {
     case 57:
     if(false)
      {
       ;
       mat4x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
       (subgroup_local_id - next_virtual_gid);
       {
        while(bvec2(false, false).x)
         {
         }
       }
       ivec3(-53418, -4951, -62835);
       for(       mat2x4(outerProduct(vec4(-988.622, -8.4, 5047.5443, 9.6), vec4(8396.3927, -4.5, -3.7, -602.076)));
 (-130.776 < vec4(-47.21, -9195.2913, -5.2, -477.744).a); bvec2(true, true))
        {
         for(         subgroup_id;
 true; _GLF_SWITCH_4_0v)
          {
           lessThan(vec4(-14.30, -60.02, 9.7, -586.937), vec4(6639.9467, -956.829, 5237.4041, 570.893));
           ;
           bool _GLF_SWITCH_4_2v;
           bvec2(true, true);
           vec4(-6.1, -640.606, -4.2, 1.4);
           bvec2 _GLF_SWITCH_4_3v[84], _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
           vec3(730.713, 3.1, -2028.7668);
           bvec4(false, true, true, false);
           findMSB(ivec3(48690, 60938, 60308));
          }
         mat3 _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[88];
         {
          notEqual(bvec2(true, false), bvec2(false, false));
          lessThanEqual((vec3(22.14, 4.3, 757.844) * 7.0), vec3(-1.6, 9.6, -9.6));
          mat4(6.5, 1421.3737, -4499.8690, 2.8, -1177.7083, -634.812, -450.323, 76.76, -7736.6028, 4.3, 3.7, -179.001, 72.94, -7597.3959, -1.0, -7.1);
          mat4x3 _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v;
          false;
          mat2 _GLF_SWITCH_4_10v[54];
          bvec2(true, false);
         }
         mat2x4(-2.1, -9288.9383, -3.6, 5.9, 42.77, -8995.9191, -3.1, 3.3);
         if(notEqual(vec3(47.62, -54.29, -66.46), vec3(-7.0, 743.815, 2.0)).x)
          {
           uvec4(32301u, 57992u, 110203u, 57739u);
           ;
           unpackUnorm2x16(next_virtual_gid);
           transpose(mat4(-6340.8589, -2588.5709, -476.621, 4105.9815, 128.779, 3.6, -79.14, -139.624, -9.4, 2655.7901, -5.3, 4.1, -4.7, 8653.6992, -906.271, 9.1));
          }
         else
          {
           roundEven(vec4(-185.958, -79.24, 95.37, 44.67));
           mat2x4(-438.693, 3.8, 9.5, -453.129, -88.51, -37.67, -25.47, -762.834);
           mat3x4((_GLF_SWITCH_4_1v * mat2x4(31.52, 2.8, 4.1, -0.4, -4.2, 90.18, 2321.4492, 9.6)));
           uvec3 _GLF_SWITCH_4_11v[93], _GLF_SWITCH_4_12v;
           (ivec3(68314, 24273, -19306) | -94180);
           mat2x4(-9.3, 9.5, 9.0, -20.20, 39.42, -313.130, 3.9, -7.5);
          }
         uvec4 _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v[80], _GLF_SWITCH_4_15v;
         while(true)
          {
           mat2x3(-19.04, -6940.8212, -977.341, -428.497, -4.5, -82.80);
           bvec4(false, true, true, false);
           mat4x2(-8.6, -27.92, -0.0, 17.79, -94.80, 25.38, 67.70, 625.070);
           vec3 _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v[65];
          }
        }
      }
     case 63:
     {
      mat4x3 _GLF_SWITCH_4_18v, _GLF_SWITCH_4_19v;
     }
     case 0:
     case 16:
     case 55:
     case 19:
     case 81:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0 | (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             switch(_GLF_SWITCH((int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)))
              {
               case 28:
               (injectionSwitch * 781.555);
               if(_GLF_DEAD(false))
                barrier();
               case 34:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if((uvec4(102544u, 63794u, 99626u, 99802u) != uvec4(workgroup_base, read, subgroup_local_id, subgroup_size)))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 bvec3(true, false, false);
                 uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
                 while(isinf(length(vec3(-28.14, 7978.7950, -589.021))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 75:
                     uvec2(111424u, 56252u);
                     case 0:
                     case 96:
                     switch(_GLF_SWITCH(0))
                      {
                       case 40:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         (bvec2(false, true));
                        }
                       case 55:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))
                        {
                         vec2(58.66, -20.12);
                        }
                       else
                        {
                        }
                       case 0:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         while(bool((mix(-5.1, 50.85, -0.0) / -1420.0141)))
                          {
                           bvec3 _GLF_SWITCH_0_2v[42], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         for(mat3x4 _GLF_SWITCH_0_5v[74], _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v; true; mat4x2(-50.04, -7.1, 1950.5564, 7.7, -8.8, -9.9, -5.7, -9.5)[1])
                          {
                           mat4(-7109.7698, -9011.0367, -38.24, 17.89, -278.504, 3.0, -3.4, 86.48, -9.9, -94.26, -3.4, 5.4, 8.3, 4.0, 4.3, -849.170);
                           mat2x3(-8.4, -600.794, -84.55, -3.8, -9.4, 1.7);
                           ivec4 _GLF_SWITCH_0_8v[18];
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           uvec4 _GLF_SWITCH_0_9v[87], _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           (workgroup_id - uvec3(155828u, 108577u, 52610u));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           bvec2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           (subgroup_size >> num_workgroup);
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           mat2x4 _GLF_SWITCH_0_14v[28], _GLF_SWITCH_0_15v;
                          }
                        }
                       else
                        {
                        }
                       break;
                       case 49:
                       vec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       default:
                       if(_GLF_DEAD(false))
                        barrier();
                       1;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     break;
                     case 58:
                     uvec3(num_workgroup, uvec2(41830u, 180620u));
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 54:
                     vec4 _GLF_SWITCH_3_0v;
                     case 53:
                     bool _GLF_SWITCH_3_1v[91], _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
                     case 0:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     case 99:
                     if(_GLF_DEAD(false))
                      continue;
                     case 37:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       barrier();
                      }
                     case 9:
                     case 31:
                     case 45:
                     case 97:
                     case 82:
                     case 49:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     return;
                     break;
                     default:
                     1;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 0:
               case 23:
               case 99:
               case 46:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 27:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 52:
               switch(_GLF_SWITCH((0 | 0)))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  {
                   switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(8), int(8)))))
                    {
                     case 16:
                     ivec2 _GLF_SWITCH_2_0v[37];
                     case 60:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     uvec4 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
                     case 0:
                     case 22:
                     case 8:
                     case 72:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH((-51151 & 0)))
                        {
                         case 92:
                         ;
                         case 67:
                         mat4 _GLF_SWITCH_4_0v[14], _GLF_SWITCH_4_1v;
                         case 0:
                         case 22:
                         case 40:
                         case 93:
                         case 48:
                         case 1:
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           return;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                         default:
                         1;
                        }
                      }
                     case 81:
                     case 41:
                     case 58:
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                      }
                     case 84:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 32:
                     case 13:
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     break;
                     if(_GLF_DEAD(false))
                      barrier();
                     case 61:
                     false;
                     default:
                     1;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 11:
                       if(_GLF_DEAD(false))
                        barrier();
                       bvec4 _GLF_SWITCH_3_0v[28], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                       case 97:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       uint _GLF_SWITCH_3_3v;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 0:
                       case 20:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 21:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       case 32:
                       case 42:
                       case 5:
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       break;
                       case 15:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         (ivec4(94257, -95537, -11721, 22930) | _injected_loop_counter);
                        }
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 break;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))))
                    {
                     case 60:
                     vec3(-9.4, -1.4, 7386.4898);
                     case 17:
                     vec3 _GLF_SWITCH_4_0v[65], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                     case 0:
                     case 49:
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                     case 70:
                     mat2x3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[50];
                     case 34:
                     uvec4(66578u, 85391u, 132067u, 149530u).sp;
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               break;
               default:
               if(_GLF_DEAD(false))
                barrier();
               1;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     else
      {
      }
     case 45:
     if(_GLF_DEAD(false))
      barrier();
     case 11:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     break;
     case 29:
     max(ivec2(37850, -21539), (54208));
     case 25:
     ivec3(-17662, 94697, -68225);
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 41:
       for(ivec3 _GLF_SWITCH_4_0v; false; uvec3(63450u, 55542u, 26508u))
        {
         uvec3(161647u, 174724u, 41272u);
        }
       case 0:
       case 1:
       case 40:
       case 4:
       case 87:
       case 11:
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
       break;
       default:
       1;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       case 73:
       case 58:
       int i = 0;
       case 56:
       if(_GLF_DEAD(false))
        barrier();
       case 63:
       case 89:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 25:
           uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
           case 79:
           injectionSwitch;
           case 0:
           case 54:
           case 30:
           case 13:
           case 85:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 59:
           case 99:
           case 39:
           return;
           break;
           default:
           1;
          }
        }
       case 37:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 65:
             equal(uvec2(140599u, 186725u), uvec2(115529u, 172721u));
             case 15:
             bvec4(true, true, false, true);
             case 0:
             case 58:
             case 92:
             case 99:
             case 59:
             case 18:
             case 77:
             case 28:
             case 27:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 12:
             ((uvec4(185392u, 13342u, 94071u, 101800u) & (workgroup_size + workgroup_base)) | subgroup_size);
             default:
             1;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(((int(15463u) & 0) >> _GLF_IDENTITY(int(8), int(8)))))
          {
           case 24:
           uvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[10], _GLF_SWITCH_3_2v;
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           case 7:
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 0:
               case 58:
               case 86:
               if(_GLF_DEAD(false))
                barrier();
               case 80:
               if(_GLF_DEAD(false))
                barrier();
               case 17:
               case 27:
               case 79:
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               case 57:
               mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
               default:
               1;
              }
            }
           case 14:
           case 86:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH((0 | 0)))
              {
               case 17:
               do
                {
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 0:
                   case 45:
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   case 70:
                   mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[35];
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               mat3x2(-4343.9787, -113.044, 426.581, 78.87, -91.23, 1.6);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 9:
               ivec3(-14385, -29197, -83030);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               case 0:
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 29:
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & 65058)))
                      {
                       case 22:
                       vec2(798.580, 487.891);
                       case 0:
                       case 2:
                       case 36:
                       case 4:
                       case 19:
                       case 99:
                       case 58:
                       case 28:
                       case 54:
                       barrier();
                       break;
                       case 49:
                       mat2x3(mat2(2.1, 731.482, -7.1, -6359.0813));
                       case 20:
                       ;
                       default:
                       1;
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               case 54:
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) | 0))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     else
                      {
                      }
                     break;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 45:
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   case 21:
                   mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               case 98:
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 89:
                   case 92:
                   case 97:
                   case 40:
                   case 34:
                   if(_GLF_DEAD(false))
                    barrier();
                   switch(_GLF_SWITCH(_GLF_IDENTITY(0, min(0, 0))))
                    {
                     case 88:
                     if(_GLF_DEAD(false))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 11:
                         do
                          {
                           vec3(-257.273, -5687.6886, 505.501);
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          break;
                         case 55:
                         (uvec4(workgroup_base, uvec2(118357u, 37053u), subgroup_size) << subgroup_local_id);
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 11:
                             vec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                             case 32:
                             ;
                             case 0:
                             case 46:
                             case 96:
                             case 94:
                             case 56:
                             case 14:
                             case 41:
                             case 83:
                             case 5:
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             break;
                             case 92:
                             uvec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                             case 60:
                             uvec4 _GLF_SWITCH_4_5v;
                             default:
                             1;
                            }
                          }
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                         break;
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 84:
                         mat4x2 _GLF_SWITCH_2_0v;
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((-25450 >> 90132) & 0)); _injected_loop_counter --)
                          {
                           switch(_GLF_SWITCH((-19696 & 0)))
                            {
                             case 0:
                             case 89:
                             case 57:
                             case 34:
                             case 6:
                             case 52:
                             case 96:
                             case 26:
                             case 58:
                             case 1:
                             if(_GLF_DEAD(false))
                              barrier();
                             break;
                             default:
                             1;
                            }
                          }
                         case 21:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 91:
                             (clamp(uvec4(65917u, 127141u, 169920u, 120683u), uvec4(17830u, 61113u, 30070u, 97585u), uvec4(25880u, 20546u, 110733u, 137246u)) % uvec4(1267u, 108099u, 142343u, 130799u));
                             case 0:
                             case 25:
                             case 10:
                             case 38:
                             case 68:
                             case 6:
                             case 95:
                             case 50:
                             case 57:
                             case 70:
                             vec2(4437.4434, 57.53);
                             break;
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         default:
                         1;
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     vec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
                     case 92:
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     uvec3 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     case 0:
                     case 17:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     case 45:
                     case 6:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       return;
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     case 14:
                     case 78:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       switch(_GLF_SWITCH((0 & 63723)))
                        {
                         case 0:
                         case 58:
                         case 25:
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = ((1 | (0 | 0)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         case 7:
                         case 22:
                         case 59:
                         case 18:
                         case 3:
                         case 63:
                         case 37:
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         case 12:
                         mat4x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                         case 79:
                         32909u;
                         default:
                         1;
                        }
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 | 0)))
                        {
                         case 88:
                         ivec4(ivec2(27099, 97238), (_injected_loop_counter * findMSB(read)), ivec3(-25880, -90594, -60858).z);
                         case 0:
                         if(_GLF_DEAD(false))
                          return;
                         break;
                         case 8:
                         bvec2(false, false);
                         case 14:
                         bvec3 _GLF_SWITCH_5_0v;
                         default:
                         1;
                        }
                      }
                     case 71:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 55:
                           case 49:
                           case 95:
                           case 85:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           if(_GLF_DEAD(false))
                            barrier();
                           default:
                           do
                            {
                             1;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       continue;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     case 15:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     case 77:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 40:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     break;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     default:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     1;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   case 59:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                   uvec3 _GLF_SWITCH_2_0v[81], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[88];
                   if(_GLF_DEAD(false))
                    barrier();
                   case 10:
                   ((359.378 / mat3x4(6761.4714, 2.2, 6147.7063, -3973.3066, -31.32, 9.4, -3.5, 7.4, 1.8, -85.42, 3257.8268, 717.202)) * mat3(6404.2889, -85.39, -2716.0060, -364.695, 326.261, -11.84, 30.41, -5753.7994, 653.837));
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   default:
                   1;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               case 1:
               if(_GLF_DEAD(false))
                barrier();
               case 34:
               case 2:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 69:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH((0 | 0)))
                      {
                       case 0:
                       case 36:
                       case 89:
                       case 63:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 32:
                       case 4:
                       case 35:
                       case 81:
                       case 77:
                       case 66:
                       switch(_GLF_SWITCH(0))
                        {
                         case 78:
                         int _GLF_SWITCH_1_0v[89], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                         case 55:
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           false;
                          }
                         case 0:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 74:
                             bvec4 _GLF_SWITCH_4_0v;
                             case 0:
                             case 55:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                              }
                             break;
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 26:
                               case 57:
                               barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               break;
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               default:
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                 switch(_GLF_SWITCH((0 & 55140)))
                                  {
                                   case 45:
                                   vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[41], _GLF_SWITCH_2_2v[82];
                                   case 0:
                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec3(int(6), 1, 1)))))); _injected_loop_counter ++)
                                    {
                                     1;
                                    }
                                   break;
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                    }
                                   case 74:
                                   uint _GLF_SWITCH_2_3v;
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     do
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                         else
                                          {
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                         barrier();
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                   default:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     do
                                      {
                                       barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                                    }
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     return;
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   1;
                                  }
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if(_GLF_DEAD(false))
                                  break;
                                }
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                    {
                                     return;
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                         case 67:
                         if(_GLF_DEAD(false))
                          barrier();
                         mat3(638.179, -2288.9976, -710.225, -544.853, -1.5, 595.785, 5.8, -1.4, 353.865);
                         case 21:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           (mat3(-2.5, 9.7, -0.5, -46.44, -28.40, -8.4, 30.83, -10.06, 7.2) * (mat3(435.557, -7.2, -61.63, 5984.8975, 4.4, 2.3, 4.1, -2.4, 9.3) * mat2x3(78.72, 939.538, 0.4, 3303.3485, 761.283, -67.47)));
                          }
                         default:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           for(int _injected_loop_counter = (-4722 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         1;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       break;
                       case 14:
                       vec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[27];
                       case 57:
                       uvec3(172448u, 130315u, 94934u);
                       default:
                       1;
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               break;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(7), int(7))) | 0)))
                  {
                   case 99:
                   mat2(-928.489, 4.3, 20.40, 4.3);
                   case 0:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   case 91:
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                   break;
                   case 73:
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3x4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                   case 80:
                   mat2x4(4671.7945, -100.195, -3.1, 38.90, 4172.3247, 58.11, 96.82, -8.7);
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   default:
                   if(_GLF_DEAD(false))
                    barrier();
                   1;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               1;
              }
            }
           break;
           case 41:
           if(_GLF_DEAD(false))
            barrier();
           bvec3(false, false, false);
           case 87:
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec4(int(2), 0, 1, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 99:
                 case 76:
                 case 84:
                 case 45:
                 case 6:
                 case 94:
                 case 69:
                 barrier();
                 break;
                 case 87:
                 vec2(-981.531);
                 default:
                 1;
                }
              }
            }
           1;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       case 77:
       case 24:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 + (0))))
          {
           case 0:
           case 51:
           case 43:
           case 32:
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
           break;
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (int(8))))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       case 27:
       uvec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 44:
       ivec3(-73440, -76014, -99036);
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
        {
         case 72:
         transpose(mat4x2(201.182, -3.5, 9054.6671, -8.2, 291.240, 10.24, 851.007, -161.086));
         case 0:
         case 67:
         case 38:
         case 94:
         case 66:
         case 65:
         case 59:
         case 61:
         case 9:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         break;
         default:
         1;
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 28:
       mat4x3 _GLF_SWITCH_4_0v[30], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
       case 48:
       matrixCompMult(mat2x3(9.8, -733.437, -8.4, 13.42, -27.13, -2.3), mat2x3(5380.9152, -9881.8566, -4033.5796, -78.86, 6.9, 4.5));
       case 0:
       case 1:
       case 53:
       case 54:
       case 27:
       case 36:
       case 15:
       case 60:
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 0:
             case 37:
             case 34:
             case 53:
             case 79:
             case 55:
             case 73:
             case 23:
             case 85:
             case 45:
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 18:
             mat4x2(23.73, -727.233, -1757.6436, 6.0, 5.6, -1.6, -9751.8571, 980.139);
             case 67:
             for(             equal(vec3(6866.8544, 4.0, -412.523), (vec3(-93.79, -6934.7619, 2391.5621) * vec3(-227.949, -7.0, 2005.7292)));
 true; bvec2(false, true))
              {
               (mat2x4(-2.0, 3494.1478, -38.52, -0.3, -3.5, -28.95, -5.6, 8.6) + 4976.3144);
               mat2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
               uvec3 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
               mat4x3 _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v;
               uvec4 _GLF_SWITCH_5_8v;
               mat3x4(-619.508, -653.934, -2.9, 846.951, 8.0, -9752.2913, 7825.5625, -39.53, 3381.0292, -212.037, -2498.7615, 2522.3476);
               ;
               injectionSwitch;
               mat4x3 _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v, _GLF_SWITCH_5_11v;
              }
             case 0:
             case 44:
             barrier();
             case 15:
             case 28:
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
          }
        }
       break;
       case 97:
       ;
       default:
       1;
      }
    }
   else
    {
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 18:
           case 11:
           case 81:
           case 72:
           case 52:
           barrier();
           break;
           case 75:
           uvec3(125259u, 154613u, 170172u);
           default:
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
