#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0)), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), vec2(_GLF_FUZZED(-2.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y) * 1.0), 1.0))) / 1.0))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), true && (! ((_GLF_WRAPPED_IF_FALSE(false))))))) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), 0u), min(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), 0u), uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))), 0u)))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) | 0u), 1u * (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))))) | (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) | 0u), 1u * (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))))) | (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))))), 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (~ (workgroup_base + subgroup_base))) | 0u), 1u * (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))))) | (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))))), 1u))) : _GLF_FUZZED(workgroup_base)))) ^ 0u) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) - sqrt(sqrt(0.0))), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0))), 1.0))) > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, false, true))), bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true))), ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && true), true, false, true)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, clamp(6, 6, 6)) : _GLF_FUZZED((uvec3(166589u, 130098u, 42376u) , _injected_loop_counter))))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), max(_GLF_IDENTITY(2, (2) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), int(ivec2(_GLF_IDENTITY(2, (2) >> 0), 1))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))) >> _GLF_IDENTITY(0, (0) - 0))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | 0)))) | (1)))) == 0)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                      barrier();
                    }
                  }
                }
              }
             atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-28770) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))) ^ 0)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(79197)))) / 1), 64, 4);
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
                        barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec3(bool(bvec3(true, true, false)), true, true))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true, false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.7)), float(injectionSwitch.x), bool(true)))) - tan(0.0)) > injectionSwitch.y))))), false, true, false))) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 1.0, sqrt(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), true))), true)), true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false)))), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))) || false), true, false)))), true))), true)), true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false)))), false)), false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, true, _GLF_IDENTITY(true, (true) || false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false, true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), determinant(mat2(1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0)))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(837.239)))))))) + 0.0), determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(623.595) : 1.0)), 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0)))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), float(mat3x2(float(1.0), 1.0, 0.0, abs(0.0), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), float(_GLF_FUZZED(1.0)), bool(false))), 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(injectionSwitch, vec2(-54.92, -11.41))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))) - 0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0, 0.0, sqrt(1.0))), exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(max(0.0, 0.0), 0.0 + (max(0.0, 0.0)))), bool(true)))), 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))) * (injectionSwitch)).x > injectionSwitch.y)))))), bool(bool((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(intBitsToFloat(-12364)) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.1)), float(1.0), bool(true))))), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0)), 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-16.98), _GLF_FUZZED(1.1)), bvec2(false, false))), sin(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), float(mat3x4(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), max(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), mix(float(_GLF_FUZZED(-4.7)), float(determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0)))), bool(true))), determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))))), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0)))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), determinant(mat2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0)))), _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(623.595) : 1.0)), 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))), mat4(1.0) * (transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(623.595) : 1.0)), 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.3)), float(0.0), bool(true)))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - abs(0.0))))), float(_GLF_FUZZED(1.0)), bool(false))), 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3067.6675)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) - 0.0)), float(_GLF_FUZZED(-224.527)), bool(false))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))), exp(_GLF_IDENTITY(0.0, float(mat3(0.0, abs(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0, 0.0, sqrt(1.0))), exp(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))))))) || false), true, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false)), (bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false))) && true)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))), false)), false))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))) || ((injectionSwitch.x < injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)));
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   for(int _injected_loop_counter = _GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-49732) : 1)), 0, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) * (1 | 0)), 1)))))))) / 1)), int(1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) >> 0)) / 1)), int(3))), (((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))) / 1)), int(1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) | (((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))), max(_GLF_IDENTITY(1 * (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))), (1 * (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))) | (1 * (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))), 1 * (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))))) / 1)), int(1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     subgroupBarrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(! (_GLF_WRAPPED_IF_FALSE(false)))))) && true)) || false))))
                      {
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
                    barrier();
                  }
                 else
                  {
                   do
                    {
                     do
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), false, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), false, false)))))), true)))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true)), false, true)))), false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))) && true)))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))), max((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)), 1, 0), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)), 1, 0), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)), 1, 0)))))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) - (-99213 & 0)))) && true); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-276.763)), bool(false)))))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true))))), false))), false)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), true && (bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, true)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(false, false, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), true && ((bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))) || false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))), true && (((_GLF_IDENTITY(false, (false) && true)))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true, true, true))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || _GLF_IDENTITY(false, true && (false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && _GLF_IDENTITY(true, bool(bool(true)))), ! (! (((false) && _GLF_IDENTITY(true, bool(bool(true))))))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), false || ((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true))))))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), false || ((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true))))))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), false || ((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true))))))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))), false || ((! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true))))))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))))))))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))))), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(determinant(mat2(1.0, 0.0, 0.0, 1.0))) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))), true && (((_GLF_IDENTITY(false, (false) && true)))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))), true && (((_GLF_IDENTITY(false, (false) && true)))))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bool((_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, false)))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bool(true))), ! (! ((false) && _GLF_IDENTITY(true, bool(bool(true))))))))) && true)))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)))), true, true, true))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true)) && true)), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || _GLF_IDENTITY(false, true && (false))))))))))
                          {
                          }
                         else
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)));
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY(1u * (read), (1u * (read)) | (1u * (read))), (1u * _GLF_IDENTITY((read), ((read)) << 0u)) * 1u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
