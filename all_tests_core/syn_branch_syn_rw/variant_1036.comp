#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 1u, 0u), _GLF_IDENTITY(min(uvec3(workgroup_size, 1u, 0u), uvec3(workgroup_size, 1u, 0u)), max(min(uvec3(workgroup_size, 1u, 0u), uvec3(workgroup_size, 1u, 0u)), min(_GLF_IDENTITY(uvec3(workgroup_size, 1u, 0u), (uvec3(91202u, 179988u, 177394u) & uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(workgroup_size, 1u, 0u), (uvec3(workgroup_size, 1u, 0u)) >> uvec3(0u, 0u, 0u)))), uvec3(workgroup_size, 1u, 0u))))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size))), workgroup_id))), _GLF_IDENTITY(uint(uvec3(min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))), 0u, 0u)), uint(uvec3(uint(uvec3(min(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u))), workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 1u, 1u)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) - 0u, ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) - 0u) | ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) - 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 0u, (1u ^ 1u)), clamp(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), max(uint(uvec3(subgroup_size, 1u, 1u)), uint(uvec3(subgroup_size, 1u, 1u))))), _GLF_IDENTITY(0u, 0u + (0u)), 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u)), 0u ^ (_GLF_IDENTITY(1u ^ 1u, clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u))))))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))))), uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, 0u, 0u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) ^ 1u)))))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 0u, (1u ^ 1u)), clamp(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), max(uint(uvec3(subgroup_size, 1u, 1u)), uint(uvec3(subgroup_size, 1u, 1u))))), _GLF_IDENTITY(0u, 0u + (0u)), 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u)), clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u)), 0u ^ (_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u), max(clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u), clamp(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(1u ^ 1u), uint(uvec4(uint(1u ^ 1u), 1u, 0u, 0u))))), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)), 1u ^ 1u))))))))))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(189219u, 131098u, 87076u, 22464u)) : uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (_GLF_IDENTITY(1u, (1u) << 0u) ^ 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))) + (uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(188780u, 117778u, 163599u, 38807u)))), (uvec4(0u, 0u, 0u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))), 0u)))), _GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (1u ^ 1u)), (uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, (_GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)))))))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))))), uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) | 0u)) | (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size)))), 0u, 0u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) ^ 1u))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << (0 | 0)), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << (0 | _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))))), min(uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << (0 | 0)), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))))), uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) << (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ~ (~ ((_GLF_IDENTITY(1, (1) | (1)))))), (_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(1, (1) | (1)))) | ((_GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, (1) | (1)))))))))) - 0))))))))), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), (subgroup_local_id + 1) / 1u), _GLF_IDENTITY(1u, (1u) ^ (114178u & 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0)))
    {
     case 65:
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, ! (! (true))), false))))))
      return;
     (_GLF_IDENTITY(_GLF_IDENTITY(89693, ~ (_GLF_IDENTITY(~ (89693), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (89693), 1, 0), ivec3(ivec4(ivec3(_GLF_IDENTITY(~ (89693), (_GLF_IDENTITY(~ (89693), int(ivec4(~ (89693), 1, 1, 1)))) ^ 0), 1, 0), 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (89693), 1, 0), ivec3(ivec4(ivec3(~ (89693), 1, 0), 1)))), min(int(_GLF_IDENTITY(ivec3(~ (89693), 1, 0), ivec3(ivec4(ivec3(~ (89693), 1, 0), 1)))), int(_GLF_IDENTITY(ivec3(~ (89693), 1, 0), ivec3(ivec4(ivec3(~ (89693), 1, 0), 1)))))))))))), (89693) + 0) & -23335);
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(635.773) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(635.773) : injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     case 0:
     int i = 0;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)), false, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), false, false), false))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true) && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(i))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))), clamp((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))))) << 0), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0))))))) ^ 0) / 1, ~ (~ ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) | 0)) | 0)))))) / 1))), min((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - ((0 >> _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(5), int(5))))) | 0)))) / _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(int(0)))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), ((_GLF_IDENTITY(4, (4) | 0))) | ((_GLF_IDENTITY(4, (4) | 0)))), (_GLF_IDENTITY(4, (4) | 0))))) >> 0) | (_GLF_IDENTITY(4, (4) | 0)))))) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 0, 1)))) | 0)))) / 1) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1) + 0)), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1) + 0)), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (_GLF_IDENTITY(4, 0 | (4)))), max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, max(_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, (_GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0) - 0), _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)))))) / 1, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1) + 0)), ~ (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) * 1)) | 0)))) / 1, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1) + 0))))) * 1))), min((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | 0)))) / 1, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (0) | 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), ((~ (_GLF_IDENTITY(4, (4) | 0)))) | 0), 1, 1, 0), min(ivec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), ((~ (_GLF_IDENTITY(4, (4) | 0)))) | 0), 1, 1, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), ((~ (_GLF_IDENTITY(4, (4) | 0)))) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), ((~ (_GLF_IDENTITY(4, (4) | 0)))) | 0), 1, 1, 0) : _GLF_FUZZED(ivec4(-12267, -21341, 23113, -60229)))))))) + 0)))))) / 1))))));
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     case 1:
     for(     (_GLF_IDENTITY((mat2(8.4, _GLF_IDENTITY(-9.2, _GLF_IDENTITY(float(mat2x4(-9.2, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, mix(float((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), float(_GLF_FUZZED(vec3(-228.530, -39.94, 9.1).z)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(698.148)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), min(float(mat2x4(-9.2, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(-9.2, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(6.4)), float(_GLF_IDENTITY(float(mat2x4(-9.2, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat2x4(-9.2, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(-9.2, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), bool(true)))))), -21.63, _GLF_IDENTITY(10.64, (10.64) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) + 7.7), transpose(_GLF_IDENTITY(transpose((mat2(8.4, _GLF_IDENTITY(-9.2, _GLF_IDENTITY(float(mat2x4(-9.2, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0 * (1.0))) / 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(698.148)), float(1.0), bool(true))))), 1.0)))), min(float(mat2x4(-9.2, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(-9.2, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), -21.63, _GLF_IDENTITY(10.64, (10.64) * round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, 1.0)))))) + 7.7)), mat2(mat4(transpose((mat2(8.4, _GLF_IDENTITY(-9.2, _GLF_IDENTITY(float(mat2x4(-9.2, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((0.0), float(mat2(_GLF_IDENTITY((0.0), ((0.0)) / 1.0), 0.0, 0.0, 0.0))), 0.0, cos(sqrt(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, abs(0.0)), transpose(transpose(mat3(_GLF_IDENTITY((0.0), float(mat2(_GLF_IDENTITY((0.0), ((0.0)) / 1.0), 0.0, 0.0, 0.0))), 0.0, cos(sqrt(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, abs(0.0)))))), round(length(normalize(1.0))) * (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((0.0), float(mat2(_GLF_IDENTITY((0.0), ((0.0)) / 1.0), 0.0, 0.0, 0.0))), 0.0, cos(sqrt(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, abs(0.0)), transpose(transpose(mat3(_GLF_IDENTITY((0.0), float(mat2(_GLF_IDENTITY((0.0), ((0.0)) / 1.0), 0.0, 0.0, 0.0))), 0.0, cos(sqrt(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, abs(0.0)))))))))), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(698.148)), _GLF_IDENTITY(float(1.0), min(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0))), bool(true))))), 1.0)))), min(float(mat2x4(-9.2, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(-9.2, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), -21.63, _GLF_IDENTITY(_GLF_IDENTITY(10.64, (true ? 10.64 : _GLF_FUZZED(-64.81))), (10.64) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) + 7.7))))))) , _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))));
 true; mat4(6038.5572, -82.32, -84.16, 8556.2328, 7019.2860, 1.1, -76.14, -0.7, _GLF_IDENTITY(_GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)), clamp(_GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)), _GLF_IDENTITY(_GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)), clamp(_GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)), _GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)), _GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)))), _GLF_IDENTITY(-2589.3749, clamp(-2589.3749, -2589.3749, -2589.3749)))), 9.4, -3291.2795, _GLF_IDENTITY(_GLF_IDENTITY(-261.198, clamp(_GLF_IDENTITY(-261.198, (-261.198) / 1.0), -261.198, _GLF_IDENTITY(-261.198, (_GLF_IDENTITY(-261.198, min(-261.198, -261.198))) / 1.0))), mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(-261.198, clamp(_GLF_IDENTITY(-261.198, (-261.198) / 1.0), -261.198, _GLF_IDENTITY(-261.198, (_GLF_IDENTITY(-261.198, min(-261.198, -261.198))) / 1.0)))), bool(true))), _GLF_IDENTITY(878.496, clamp(_GLF_IDENTITY(878.496, _GLF_IDENTITY((true ? 878.496 : _GLF_FUZZED(-9.4)), float(mat3x2((true ? 878.496 : _GLF_FUZZED(-9.4)), 1.0, 1.0, log(exp(0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(878.496, max(878.496, 878.496)), 878.496)), _GLF_IDENTITY(0.4, clamp(_GLF_IDENTITY(0.4, clamp(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(918.300) : 0.4)), _GLF_IDENTITY(0.4, _GLF_IDENTITY(max(0.4, 0.4), (max(0.4, 0.4)) + sin(0.0))), 0.4)), _GLF_IDENTITY(0.4, (true ? 0.4 : _GLF_FUZZED(5.9))), 0.4)), _GLF_IDENTITY(98.84, (98.84) - 0.0), 4442.9108))
      {
       switch(_GLF_SWITCH(0))
        {
         case 40:
         uvec3 _GLF_SWITCH_1_0v;
         case 69:
         if(_GLF_DEAD(false))
          return;
         uvec2 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
         case 0:
         for(         uvec3(32150u, 102703u, 139506u);
 true; true)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            return;
           lessThanEqual(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)), min((uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)), _GLF_IDENTITY((uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)), (true ? (uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)) : _GLF_FUZZED(uvec3(6881u, 9260u, 127208u)))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)), min((uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)), _GLF_IDENTITY((uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)), (true ? (uvec3(44354u, 172118u, 168866u) >> uvec3(23186u, 120903u, 154275u)) : _GLF_FUZZED(uvec3(6881u, 9260u, 127208u)))))))), uvec3(16995u, 93202u, _GLF_IDENTITY(125554u, (_GLF_IDENTITY(125554u, (125554u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))) / 1u)));
           if(any(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true)))
            {
             if(_GLF_DEAD(false))
              return;
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))
              {
               case 29:
               if(_GLF_DEAD(false))
                return;
               (mat3(794.678, -1.6, -647.604, -767.571, 12.26, 2.7, 242.117, -18.54, -3843.9010) * mat2x3(-7.6, _GLF_IDENTITY(-1.7, (false ? _GLF_FUZZED(5138.0706) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-1.7, (true ? -1.7 : _GLF_FUZZED(sin(43.73)))), min(_GLF_IDENTITY(-1.7, (true ? -1.7 : _GLF_FUZZED(sin(43.73)))), _GLF_IDENTITY(-1.7, (true ? -1.7 : _GLF_FUZZED(sin(43.73)))))), min(-1.7, -1.7)))), 21.15, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, determinant(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-885.248))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))), 0.0, 0.0, 1.0), (mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))) * (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))) / 1.0)), (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), clamp(round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))))) * (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))))), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)), min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0))) / 1.0)))))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))) * (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))) / 1.0)), (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), clamp(round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))))) * (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))))), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)), min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0))) / 1.0)))))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), transpose(transpose((mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))) * (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))) / 1.0)), (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), clamp(round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))))) * (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))))), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)), min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat2(1.0, 0.0, 0.0, exp(0.0)))), cos(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0))) / 1.0)))))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 43.93, 369.483));
               if(_GLF_DEAD(false))
                return;
               case 0:
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                continue;
               _GLF_IDENTITY(ivec3(_GLF_IDENTITY(92658, (false ? _GLF_FUZZED((- 61965)) : 92658)), _GLF_IDENTITY(-25125, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(-25125, 0 | (-25125)), (_GLF_IDENTITY(-25125, 0 | (-25125))) / 1)))), _GLF_IDENTITY(-38698, (-38698) ^ 0)), (true ? _GLF_IDENTITY(ivec3(92658, -25125, -38698), min(ivec3(92658, -25125, -38698), ivec3(92658, -25125, -38698))) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(17064, (17064) << (0 ^ 0)), 82484, 95184))));
               mat2x3 _GLF_SWITCH_0_0v[62], _GLF_SWITCH_0_1v[25];
               (_GLF_IDENTITY(i, min(i, i)) * (-32068 - ivec2(32349, -49757)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3494.5009))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  return;
                }
               if(_GLF_DEAD(false))
                break;
               break;
               case 77:
               mat3x2(-124.949, _GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, min(-6.0, -6.0))) + 0.0)) + 0.0), -2795.5465, _GLF_IDENTITY(6283.8060, clamp(_GLF_IDENTITY(6283.8060, min(6283.8060, _GLF_IDENTITY(6283.8060, _GLF_IDENTITY((false ? _GLF_FUZZED(6490.6894) : 6283.8060), float(mat4x2(_GLF_IDENTITY((false ? _GLF_FUZZED(6490.6894) : 6283.8060), (true ? (false ? _GLF_FUZZED(6490.6894) : 6283.8060) : _GLF_FUZZED(-1.5))), 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)))))), 6283.8060, 6283.8060)), _GLF_IDENTITY(8780.9045, (8780.9045) + 0.0), 9.0);
               default:
               if(_GLF_DEAD(false))
                continue;
               1;
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             switch(_GLF_SWITCH((_GLF_IDENTITY(0 & -41850, (0 & _GLF_IDENTITY(-41850, 0 | (_GLF_IDENTITY(-41850, (true ? -41850 : _GLF_FUZZED(i)))))) * 1))))
              {
               case 56:
               ;
               if(_GLF_DEAD(false))
                continue;
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               _GLF_IDENTITY(greaterThanEqual(cos(atan(vec3(-6.6, -52.71, _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(-4.0, max(-4.0, -4.0)))), max(-4.0, _GLF_IDENTITY(-4.0, (-4.0) * abs(1.0))))), bool(true)))))), clamp(_GLF_IDENTITY(vec3(-62.91, -615.183, 866.123), vec3(mat2x4(vec3(-62.91, -615.183, 866.123), 0.0, 0.0, 1.0, 1.0, 1.0))), vec3(-27.03, 2.2, -4425.9353), vec3(2922.5118, -2.3, -7.1))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(greaterThanEqual(cos(atan(vec3(-6.6, -52.71, -4.0))), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-62.91, clamp(_GLF_IDENTITY(-62.91, clamp(-62.91, -62.91, -62.91)), -62.91, -62.91)), -615.183, _GLF_IDENTITY(866.123, float(float(866.123)))), vec3(mat2x4(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-62.91, clamp(_GLF_IDENTITY(-62.91, clamp(-62.91, -62.91, -62.91)), -62.91, -62.91)), -615.183, _GLF_IDENTITY(866.123, float(float(866.123)))), vec3(mat3x4(vec3(_GLF_IDENTITY(-62.91, clamp(_GLF_IDENTITY(-62.91, clamp(-62.91, -62.91, -62.91)), -62.91, -62.91)), -615.183, _GLF_IDENTITY(866.123, float(float(866.123)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 0.0))), 0.0, sin(0.0), 0.0, 0.0, 0.0))), vec3(-27.03, 2.2, -4425.9353), vec3(2922.5118, -2.3, -7.1))), bvec3(_GLF_IDENTITY(bvec3(greaterThanEqual(cos(atan(vec3(-6.6, -52.71, -4.0))), clamp(vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, float(float(866.123)))), vec3(-27.03, 2.2, -4425.9353), vec3(2922.5118, -2.3, -7.1)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(greaterThanEqual(cos(atan(vec3(-6.6, -52.71, -4.0))), clamp(vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, float(float(866.123)))), vec3(-27.03, 2.2, -4425.9353), vec3(2922.5118, -2.3, -7.1)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(greaterThanEqual(cos(atan(vec3(-6.6, -52.71, -4.0))), clamp(vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, float(float(866.123)))), vec3(-27.03, 2.2, -4425.9353), vec3(2922.5118, -2.3, -7.1)))), false)), true))))))), bvec3(bvec3(bvec3(greaterThanEqual(cos(atan(vec3(-6.6, -52.71, -4.0))), clamp(_GLF_IDENTITY(vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, clamp(_GLF_IDENTITY(866.123, (true ? 866.123 : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(866.123, (866.123) / 1.0), 866.123))), mix(vec3(_GLF_FUZZED(5440.7825), _GLF_IDENTITY(_GLF_FUZZED((- 74.23)), (_GLF_IDENTITY(_GLF_FUZZED((- 74.23)), max(_GLF_FUZZED((- 74.23)), _GLF_FUZZED((- 74.23))))) + tan(0.0)), (vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, clamp(_GLF_IDENTITY(866.123, (true ? 866.123 : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(866.123, _GLF_IDENTITY((866.123), float(mat2x3((866.123), 0.0, abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) / 1.0), 866.123))))[2]), vec3((vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, clamp(_GLF_IDENTITY(866.123, (true ? 866.123 : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(_GLF_IDENTITY(866.123, (866.123) / 1.0), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(866.123, (866.123) / 1.0), 0.0, 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(866.123, (866.123) / 1.0), 0.0, 0.0), max(vec3(_GLF_IDENTITY(866.123, (866.123) / 1.0), 0.0, 0.0), vec3(_GLF_IDENTITY(866.123, (866.123) / 1.0), 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0))))), 866.123))))[0], (vec3(-62.91, -615.183, _GLF_IDENTITY(866.123, clamp(_GLF_IDENTITY(866.123, (true ? 866.123 : _GLF_FUZZED(-7.2))), _GLF_IDENTITY(866.123, _GLF_IDENTITY((866.123), ((866.123)) / 1.0) / 1.0), 866.123))))[1], _GLF_FUZZED(7.4)), bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), true)), bool(bvec3(bool(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), true)), true, true))))), false))), vec3(-27.03, 2.2, -4425.9353), vec3(2922.5118, -2.3, -7.1)))))))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               float _GLF_SWITCH_0_2v[73], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
               case 65:
               case 88:
               case 84:
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (false)) && true)))))
                continue;
               if(_GLF_DEAD(false))
                break;
               (true ? bvec4(true, false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))) : bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, true))), false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false));
               if(_GLF_DEAD(false))
                continue;
               (mat2x3(273.631, -93.25, -5.1, -78.73, 2.3, -397.929) + mat2x3(4.1, _GLF_IDENTITY(-250.034, clamp(_GLF_IDENTITY(-250.034, (true ? -250.034 : _GLF_FUZZED(ceil(_GLF_SWITCH_0_4v)))), _GLF_IDENTITY(-250.034, (-250.034) + 0.0), -250.034)), 3313.0666, -6.3, -6.9, -2.6));
               if(_GLF_DEAD(false))
                return;
               break;
               default:
               1;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              continue;
            }
           while((false && true));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           vec4 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            break;
           if(_GLF_DEAD(false))
            continue;
           while(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))
            {
             mat4x3(354.223, 5.3, 875.068, -7.7, 513.105, 1.3, 64.38, -2.9, -5551.4778, -8.2, _GLF_IDENTITY(-7.2, mix(float(_GLF_FUZZED(11.65)), float(-7.2), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -56.88);
             injectionSwitch;
             bool _GLF_SWITCH_0_7v[94], _GLF_SWITCH_0_8v;
             uintBitsToFloat(uvec3(_GLF_IDENTITY(139274u, 0u ^ (_GLF_IDENTITY(139274u, (139274u) / 1u))), 47669u, 37663u));
             mat3x4(557.126, -0.3, 0.2, -7234.4626, 752.792, 5.4, 443.245, 7.3, -3.4, -6.1, _GLF_IDENTITY(-3666.8105, clamp(-3666.8105, _GLF_IDENTITY(-3666.8105, (true ? -3666.8105 : _GLF_FUZZED(7.3))), -3666.8105)), -8563.5432);
             if(_GLF_DEAD(false))
              continue;
             uvec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[47];
             bvec3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             mat2x3 _GLF_SWITCH_0_14v;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             mat3x2(342.596, -5.1, -78.04, -8.4, 1.8, 13.27);
            }
          }
         uvec2(_GLF_IDENTITY(_GLF_IDENTITY(189236u, 0u ^ (189236u)), _GLF_IDENTITY((_GLF_IDENTITY(189236u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))) / 1u)) ^ (189236u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(189236u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))) / 1u)) ^ (189236u))), (false ? _GLF_FUZZED(read) : (_GLF_IDENTITY(189236u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, 0u | ((0u) - 0u))) / 1u)) ^ (189236u)))))))) / _GLF_IDENTITY(1u, (1u) / 1u)), 93658u);
         ;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          break;
         ;
         mat3x2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[72], _GLF_SWITCH_0_17v;
         sin(injectionSwitch);
         mat2x4(574.424, 8499.6032, 4.6, -180.572, 6.1, 8.3, -0.3, 89.55);
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) * (injectionSwitch)) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0)))))), (true ? mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(68.17) : 1.0)), sqrt(0.0), 0.0, round(length(normalize(1.0)))) : _GLF_FUZZED(_GLF_SWITCH_0_17v)))), 0.0 + (float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) / 1.0)), (true ? mat3x2(injectionSwitch.y, 0.0, 1.0, sqrt(0.0), 0.0, round(length(normalize(1.0)))) : _GLF_FUZZED(_GLF_SWITCH_0_17v)))))))))))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          return;
         break;
         default:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
          return;
         1;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     case 71:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      return;
     for(vec3 _GLF_SWITCH_0_18v; true; (injectionSwitch + -3.3))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       mat4x2(4.7, -5.9, -13.03, -5.2, _GLF_IDENTITY(-17.29, _GLF_IDENTITY(float(vec2(-17.29, 1.0)), 0.0 + (float(vec2(-17.29, 1.0))))), -8.5, 31.59, _GLF_IDENTITY(-1.1, (-1.1) - sin(0.0)));
       while(false)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(ivec3 _GLF_SWITCH_0_19v; _GLF_IDENTITY(false, ! (! (false))); mat4(mat4x2(-0.9, _GLF_IDENTITY(2.8, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-476.053), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053)), max(_GLF_IDENTITY(min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053)), (min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053))) / 1.0), _GLF_IDENTITY(min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053)), max(min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053)), _GLF_IDENTITY(min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053)), max(min(_GLF_FUZZED(-476.053), _GLF_FUZZED(_GLF_IDENTITY(-476.053, (false ? _GLF_FUZZED(-5683.6611) : -476.053)))), min(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053)))))))), (min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-476.053, (false ? _GLF_FUZZED(asinh(-47.36)) : -476.053))), (false ? _GLF_FUZZED(_GLF_IDENTITY(0.2, max(0.2, _GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED(-70.27)), bool(false)))))) : _GLF_FUZZED(-476.053))), _GLF_FUZZED(-476.053))) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) : 2.8, (false ? _GLF_IDENTITY(_GLF_FUZZED(-476.053), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(-476.053), clamp(_GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053), _GLF_FUZZED(-476.053))), _GLF_FUZZED(-476.053)), (min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-476.053, (_GLF_IDENTITY(-476.053, min(-476.053, -476.053))) - 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(-476.053)), ((false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(-476.053))) * 1.0)), _GLF_FUZZED(-476.053))) - _GLF_ZERO(0.0, injectionSwitch.x))) : 2.8) / exp(0.0)))), 40.64, 8014.7061, -2.0, 2706.1991, _GLF_IDENTITY(-50.84, (false ? _GLF_FUZZED(log2(9189.0193)) : -50.84)), -9798.6190)))
          {
           mat4x2(-700.969, -864.415, -4.0, 5.4, 639.161, -60.91, -330.135, 7124.4552);
           if(_GLF_DEAD(false))
            break;
           float _GLF_SWITCH_0_20v;
           ivec4(82692, -63213, -87932, _GLF_IDENTITY(55061, (55061) + 0));
           ;
           mat3x2 _GLF_SWITCH_0_21v;
           mat3x4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
           if(_GLF_DEAD(false))
            break;
           lessThanEqual(ivec4(44229, 63558, -7007, -41974), (ivec4(8353, -62168, 37284, -17666) | i));
          }
         mat4(_GLF_IDENTITY(180.870, min(_GLF_IDENTITY(180.870, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(180.870, min(180.870, 180.870)), (true ? _GLF_IDENTITY(180.870, min(180.870, 180.870)) : _GLF_FUZZED(-2.1))), 0.0, exp(0.0), log(1.0)))), 180.870)), -7603.7399, 493.084, -3.4, 5.6, 22.95, -7.0, -4270.6082, -4.5, 8.7, 44.24, 5821.3236, 96.87, -0.9, _GLF_IDENTITY(1120.5947, float(vec4(1120.5947, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), vec4(mat2x4(vec4(1.0, 1.0, 0.0, 1.0), 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, cos(0.0), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))), abs(1.0)))), -55.95);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         {
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
       ivec3 _GLF_SWITCH_0_25v[47];
       if(_GLF_DEAD(false))
        return;
       ;
       packSnorm4x8(radians(vec4(2.6, 561.437, _GLF_IDENTITY(-124.666, (true ? _GLF_IDENTITY(-124.666, 1.0 * (-124.666)) : _GLF_FUZZED(acosh(400.973)))), 7.1)));
       mat3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[40];
       if(_GLF_DEAD(false))
        return;
       mat4x2(-29.09, -43.35, -672.541, -7.6, 7305.1345, 20.18, _GLF_IDENTITY(283.979, max(283.979, 283.979)), _GLF_IDENTITY(39.04, max(_GLF_IDENTITY(_GLF_IDENTITY(39.04, float(_GLF_IDENTITY(vec4(39.04, sin(0.0), 0.0, round(length(normalize(1.0)))), vec4(mat4x2(vec4(39.04, sin(0.0), 0.0, round(length(normalize(1.0)))), 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0))))), min(39.04, _GLF_IDENTITY(39.04, mix(float(_GLF_FUZZED(88.57)), float(39.04), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 39.04)));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), false || (! (false || (false))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-135.017))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-30.17)), float(injectionSwitch.y), bool(true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false)))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true))))) || false))))
          continue;
         continue;
        }
       while((bool(subgroup_id) && (bvec2(false, false) != bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), true))))
        {
         while((_GLF_IDENTITY(-0.0, (-0.0) * abs(1.0)) >= _GLF_IDENTITY(4.8, (true ? 4.8 : _GLF_FUZZED(-0.5)))))
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)))))))))))
          return;
         bvec4 _GLF_SWITCH_0_28v[51], _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
         while(bvec4(false, false, true, false)[2])
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           ;
           mat3x4(_GLF_IDENTITY(8871.7179, (8871.7179) - 0.0), 5.2, -57.45, -8149.9639, -1588.4140, -3041.6501, 3522.0390, -931.865, 917.545, 8.5, 9422.5624, _GLF_IDENTITY(450.681, (450.681) / 1.0));
           uvec3(159565u, 24783u, 61783u);
           ;
           (usubBorrow(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u) + _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))) >> 0u)) / 1u)) / (1u | 1u))), ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))) >> 0u)) / 1u)) / (1u | 1u)))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))))), subgroup_id, subgroup_size) / _GLF_IDENTITY(atomicAnd(workgroup_id, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((virtual_gid >> virtual_gid)) : subgroup_size))), (true ? atomicAnd(workgroup_id, subgroup_size) : _GLF_FUZZED(4189u))));
           mat4x2 _GLF_SWITCH_0_31v;
           mat2 _GLF_SWITCH_0_32v;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     default:
     if(_GLF_DEAD(false))
      return;
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8300.4560, 3.1)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8300.4560, 3.1)))).y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, true, true))))), false)))) || false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}
