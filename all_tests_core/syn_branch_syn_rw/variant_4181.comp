#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, false)))) && true))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2079.2745) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))) || false, bool(bvec4((_GLF_DEAD(false)) || false, false, true, true)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false))))))))))))) || false, bool(bvec4((_GLF_DEAD(false)) || false, false, true, true))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) - 0u), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))))))) | (workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_size * subgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), (~ (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)), min(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)) ^ 0u), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(workgroup_base, subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED(atomicExchange(workgroup_base, subgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(atomicExchange(workgroup_base, subgroup_id))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(workgroup_base, subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED(atomicExchange(workgroup_base, subgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(atomicExchange(workgroup_base, subgroup_id))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)) % subgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), uint(uvec4((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), 1u, 0u, 1u))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u))), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? (~ (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), 1, 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), max(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))) << (0u ^ 0u)) % subgroup_size))) : _GLF_FUZZED(subgroup_base))), (~ (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec4(1, 0, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(65524))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) % subgroup_size))), (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u, 1u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u, 1u))))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (false) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < (subgroup_size / 2))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), (bool(_GLF_IDENTITY(bool((false)), true && (bool((false)))))) && true)))), _GLF_IDENTITY(true, false || (true))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             return;
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9271.1795))) * (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, exp(0.0)))))))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false)), false || (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh((mat2(92.51, 1.6, 3288.1483, 7465.8509) * vec2(-377.535, 576.848)))) : injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! ((_GLF_DEAD(false)) && true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(137.343, 3.5)) : injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false), true, false)))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))), true && (! (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_DEAD(false)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))), true && (! (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_DEAD(false))))))))))))), true && (! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))), true && (! (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), ! (! (bool(bool(_GLF_DEAD(false)))))))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), ! (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.0)), float((injectionSwitch)[1]), bool(true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, abs(1.0), 1.0, sin(0.0))), (float(mat4(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.0)), float((injectionSwitch)[1]), bool(true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, abs(1.0), 1.0, sin(0.0)))) + 0.0))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)), 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_IDENTITY(true, bool(bool(true))))))))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(vec2(_GLF_FUZZED(-6688.7100), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[1]), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], _GLF_FUZZED(1.3)), bvec2(true, false)))))).y)), 1.0, 0.0, abs(0.0))), float(vec4(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED((-448.528 / -721.050)), _GLF_FUZZED(5.6)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1]), bvec2(true, true)))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859)))))), clamp(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(5.5)), vec2(_GLF_FUZZED(-4729.3675), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859)))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859)))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859))))))))))[0], _GLF_FUZZED(-2.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]))) : _GLF_FUZZED(log2(refract(vec2(3.2, -78.22), vec2(-4.6, -3.2), 416.020))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), 1.0, 0.0, abs(0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0))))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))) > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))))))), false, false), true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.0)), float((injectionSwitch)[1]), bool(true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, abs(1.0), 1.0, sin(0.0))), (float(mat4(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.0)), float((injectionSwitch)[1]), bool(true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(-93.58, -7.7, -447.521)))), sqrt(1.0), 1.0, abs(0.0), 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(-93.58, -7.7, -447.521)))), sqrt(1.0), 1.0, abs(0.0), 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(-93.58, -7.7, -447.521)))), sqrt(1.0), 1.0, abs(0.0), 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(-93.58, -7.7, -447.521)))), sqrt(1.0), 1.0, abs(0.0), 0.0, 1.0))))), sin(0.0)))) + 0.0))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)), 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false, true, _GLF_IDENTITY(true, bool(bool(true))))))))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, _GLF_IDENTITY(2.5, (false ? _GLF_FUZZED(-9.9) : 2.5)), 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), clamp(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), length(vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)))[0], _GLF_FUZZED(float(2956u))), vec2(_GLF_FUZZED((5159.7211)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)))[1]), bvec2(false, true))))), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0))))) < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(vec2(_GLF_FUZZED(-6688.7100), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[1]), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], _GLF_FUZZED(1.3)), bvec2(true, false)))))).y)), 1.0, 0.0, abs(0.0))), float(vec4(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-448.528, (_GLF_IDENTITY(-448.528, float(mat4x2(-448.528, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))) / 1.0) / -721.050)), _GLF_FUZZED(5.6)), vec2((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1]), bvec2(true, true)))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-58.24))))))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859)))))), clamp(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(5.5)), vec2(_GLF_FUZZED(-4729.3675), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false)))))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859)))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, -8681.1175, -721.859)))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(870.687, -805.119, 58.98, 1.1, 8302.5769, 121.473, _GLF_IDENTITY(-8681.1175, (true ? -8681.1175 : _GLF_FUZZED(-98.98))), _GLF_IDENTITY(-721.859, (_GLF_IDENTITY(-721.859, (-721.859) / 1.0)) * 1.0)))))))))))[0], _GLF_FUZZED(-2.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-491.537), ((injectionSwitch))[1]), bvec2(false, true)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-491.537), ((injectionSwitch))[1]), bvec2(false, true)))[1], 0.0 + (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-491.537), ((injectionSwitch))[1]), bvec2(false, true)))[1])), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-491.537), ((injectionSwitch))[1]), bvec2(false, true)))[1]))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(5180.5142)), vec2(_GLF_FUZZED(-3.9), ((injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)))[0], _GLF_FUZZED(-2.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(722.633, 476.352, 2.5, 7.7).q, (true ? _GLF_IDENTITY(vec4(722.633, 476.352, 2.5, 7.7).q, clamp(vec4(722.633, 476.352, 2.5, 7.7).q, vec4(722.633, 476.352, 2.5, 7.7).q, vec4(722.633, 476.352, 2.5, 7.7).q)) : _GLF_FUZZED(sqrt(-6413.9106))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(722.633, 476.352, 2.5, 7.7).q), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sqrt(vec2(0.0, 0.0)))[1]))) : _GLF_FUZZED(log2(refract(vec2(3.2, -78.22), vec2(-4.6, -3.2), 416.020))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), 1.0, 0.0, abs(0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)))) / 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0))))) / 1.0, exp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))) * ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0))))) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-30.59)), 0.0 + (float(_GLF_FUZZED(-30.59)))), bool(false)))))))) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))))))), false, false), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec4(-48190, ivec2(-37384, -37036), -61513)[0]) : _GLF_IDENTITY(4, clamp(4, 4, 4)), int(ivec2(false ? _GLF_FUZZED(ivec4(-48190, ivec2(-37384, -37036), _GLF_IDENTITY(-61513, max(-61513, -61513)))[0]) : _GLF_IDENTITY(4, clamp(4, 4, 4)), 1))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))), true, true)), (bool(bvec3(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))), true, true))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
