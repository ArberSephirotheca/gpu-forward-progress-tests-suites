#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(88.40)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7435.5953) : injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7435.5953) : injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1384.1899)), bvec2(false, false))).y))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), (true ? min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))) : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / exp(0.0))) / 1.0)), (mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.9) : 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(mat2x3(-4931.4501, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0))))), vec2(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], float(mat3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], 0.0 + ((vec2(injectionSwitch.y, 0.0))[0])), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))), (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, min(-4931.4501, -4931.4501)))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, (-2.9) * round(length(normalize(vec2(1.0, 1.0)))))), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, min(-2.9, -2.9))), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), (false ? _GLF_FUZZED(vec2(6.3, 523.544)) : vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.7)))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), (true ? _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), clamp(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))))) : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true))))))))))))))))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), (true ? min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))) : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / exp(0.0))) / 1.0)), (mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.9) : 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(mat2x3(-4931.4501, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0))))), vec2(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], float(mat3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], 0.0 + ((vec2(injectionSwitch.y, 0.0))[0])), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))), (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, min(-4931.4501, -4931.4501)))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, (-2.9) * round(length(normalize(vec2(1.0, 1.0)))))), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, min(-2.9, -2.9))), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), (false ? _GLF_FUZZED(vec2(6.3, 523.544)) : vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.7)))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), (true ? _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), clamp(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))))) : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true))))))))))))))))), false || ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), (true ? min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))) : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / exp(0.0))) / 1.0)), (mat4(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))), 1.0, 1.0, 1.0, exp(log(1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.9) : 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(mat2x3(-4931.4501, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0))))), vec2(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], float(mat3(_GLF_IDENTITY((vec2(injectionSwitch.y, 0.0))[0], 0.0 + ((vec2(injectionSwitch.y, 0.0))[0])), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))), (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, min(-4931.4501, -4931.4501)))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, (-2.9) * round(length(normalize(vec2(1.0, 1.0)))))), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, min(-2.9, -2.9))), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), (false ? _GLF_FUZZED(vec2(6.3, 523.544)) : vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.7)))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), (true ? _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), clamp(min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.04)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)))), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))))) : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(_GLF_IDENTITY(-4931.4501, float(_GLF_IDENTITY(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)), (true ? mat4(mat4x2(-4931.4501, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0)) : _GLF_FUZZED(mat4(-53.48, -8008.5822, -9.3, 856.152, 3.4, 1.2, -60.71, 9.2, -9.1, -5.7, 7.6, -9.4, 19.89, -383.927, -285.941, 43.91)))))))))), vec2((vec2(injectionSwitch.y, 0.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 0.0)), exp(vec2(0.0, 0.0)) * ((vec2(injectionSwitch.y, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0), vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true)))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-4931.4501)), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true)))))))))))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)))), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), true, false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-591.766))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))), (_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0))))) | (_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))), (_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0))))) | (_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))), (_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(1), int(1)))), ((1) << 0) | ((1) << 0))))) | (_GLF_IDENTITY((1) << 0, 0 + (_GLF_IDENTITY((1) << 0, ((1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))) | (0))) | ((1) << 0))))))))) || false))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       continue;
      }
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       break;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) || false)))
        barrier();
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(bitfieldExtract(virtual_gid, -56140, 42209)) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u) : _GLF_FUZZED((subgroup_local_id --)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) ^ 0) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(0, 0, 0)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0))), 0 ^ ((_GLF_IDENTITY(0, max(0, 0))))))) | (0)) ^ (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), 1 * (_GLF_IDENTITY((64), ((64)) << 0)))))), 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), 0u | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))))))], uint(1), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bool(true))), true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(true))), true))))))), (injectionSwitch.x > injectionSwitch.y))));
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(95017) : 4)), 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, ~ (~ (4))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -640.238)))).y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0)) : _GLF_FUZZED(vec2(8.2, 753.194)))).y))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7918.9009) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), (false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))))))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)) + vec2(0.0, 0.0))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7918.9009) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), (false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))))))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)) + vec2(0.0, 0.0))).y))))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)))))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)))))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), ((true)) && true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(true && _GLF_IDENTITY((true), ! (! ((true)))), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bool(true && (true)))), ! (! (_GLF_IDENTITY(true && (true), bool(bool(true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))))), (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bool((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)))), false)))))))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-165.624) : _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sqrt(0.0), 0.0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-165.624) : _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sqrt(0.0), 0.0))))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), (injectionSwitch.x < injectionSwitch.y)))))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(5757.6353)))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), false, true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))) || false))))) || false), false, true)))), false)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), false, true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))) || false))))) || false), false, true)))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), false, true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))) || false))))) || false), false, true)))), false))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), false)), false, true)))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-79.28)), bool(false))))), injectionSwitch.y)))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))), false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > injectionSwitch.y))))))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))), false, false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec4(bvec2(bvec2(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true))), false, false))))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))), false)), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)))))))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)))))))))), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)))))))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), false, false, false)))))))))), false))))), true, true)))))), false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(67395u))), bool(false))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)))))))), false)), false, true), bvec3(bvec4(bvec3(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-615.388 * 521.412)) : injectionSwitch.x))))) - 0.0) > injectionSwitch.y))))), false)), false, _GLF_IDENTITY(true, (true) && true)), true)))), false))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), false)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(887.779))), (false ? _GLF_FUZZED(acosh(-21.70)) : injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-16.26 + 7.6))), bvec2(true, false))).y)))))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), true))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (false)))), false, true)))), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4030.2143)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y))), bool(true))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false))))
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 | (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.y), bool(true)))))))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0))), 1.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
