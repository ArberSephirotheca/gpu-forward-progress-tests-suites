#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 vec4 _f0;
 bvec2 _f1;
 mat4 _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_23 {
 bvec2 _f0;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_25 {
 uvec2 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 float _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 vec3 _f1;
 uvec3 _f2;
 bvec2 _f3;
 uint _f4;
 ivec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 bool _f1;
 ivec2 _f2;
 ivec4 _f3;
 mat3x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_16 {
 uint _f0;
 ivec3 _f1;
 mat2 _f2;
 uvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_17 {
 int _f0;
 _GLF_struct_16 _f1;
 vec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
 uint subgroup_base;
 mat3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_15 {
 uvec4 _f0;
 _GLF_struct_14 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_15 _f0;
 _GLF_struct_17 _f1;
 int _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_25 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_12 {
 float _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 bvec3 _f4;
 bool _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 mat2x4 _f1;
 bvec3 _f2;
 vec2 _f3;
 int _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 vec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 mat3x4 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 uint _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 vec4 _f1;
 mat2 _f2;
 ivec2 _f3;
 mat2x3 _f4;
 uvec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 uvec3 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 mat4x2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_1(_GLF_struct_0(uvec4(1u), uvec3(1u), mat3x4(1.0))), _GLF_struct_5(uvec2(1u), _GLF_struct_2(mat3(1.0), vec4(1.0), mat2(1.0), ivec2(1), mat2x3(1.0), uvec4(1u), vec2(1.0)), uvec3(1u), _GLF_struct_3(ivec3(1), 1u, uvec3(1u)), _GLF_struct_4(bvec4(true))), mat4x2(1.0), _GLF_struct_6(mat3x2(1.0)), _GLF_struct_11(_GLF_struct_7(mat3x2(1.0), vec3(1.0), mat3x4(1.0)), _GLF_struct_8(vec3(1.0), mat2x4(1.0), bvec3(true), vec2(1.0), 1), _GLF_struct_9(mat2x3(1.0), bvec4(true)), mat3x4(1.0), _GLF_struct_10(uvec2(1u), ivec3(1), mat2x4(1.0), mat3x4(1.0), bvec3(true), true, bvec3(true))), _GLF_struct_12(1.0, gl_SubgroupID));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_15(uvec4(1u), _GLF_struct_14(uvec3(1u), _GLF_struct_replacement_13._f5.subgroup_id * subgroup_size, mat3(1.0), mat4(1.0)), vec3(1.0)), _GLF_struct_17(1, _GLF_struct_16(1u, ivec3(1), mat2(1.0), uvec2(1u), 1u), vec3(1.0), bvec4(true)), 1, _GLF_struct_21(_GLF_struct_18(mat4x2(1.0), true, ivec2(1), ivec4(1), mat3x2(1.0), true), _GLF_struct_19(ivec4(1), vec3(1.0), uvec3(1u), bvec2(true), 1u, ivec4(1), mat4x2(1.0)), _GLF_struct_20(mat2(1.0), 1.0, bvec3(true))), _GLF_struct_25(uvec2(1u), _GLF_struct_22(uvec4(1u), mat3(1.0)), _GLF_struct_23(bvec2(true)), _GLF_struct_24(vec4(1.0), bvec2(true), mat4(1.0), ivec2(1), mat4x2(1.0))), mat2x3(1.0));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_26._f0._f1.subgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_26._f0._f1.subgroup_base + ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + 1) % subgroup_size);
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.z = read;
 if((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w % 2) == 0)
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.z, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
