#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)) && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), true, false)))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), false, false, false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(! (_GLF_IDENTITY(false, false || (false)))), true, true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), (_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), false))) || false)))))), false)))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)), true && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)), false || (bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))), false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec2(! (! (! (_GLF_IDENTITY(false, false || (false))))), false))))))))), false)))))))))))))))) && true))))), true, false))))))))))))))), bool(bvec4(_GLF_DEAD(false), false, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), bvec2(true, false))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), bvec2(true, false))))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))), min(1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))) >> 0u)) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true)))))))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.7))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(62.03, 9328.9758)) : min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), (subgroup_size) | (subgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : (subgroup_id)), max((false ? _GLF_FUZZED(subgroup_id) : (subgroup_id)), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id))))) ^ 0u), subgroup_id)), uint(uvec4(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY(-7545.3594, float(_GLF_IDENTITY(mat2(-7545.3594, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(-7545.3594, 0.0, 0.0, 1.0), (mat2(-7545.3594, 0.0, 0.0, 1.0)) * mat2(1.0))))))))), bool(false)))), 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup)))) ^ 0u), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_base)), ((_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_base))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) + subgroup_local_id, (_GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! ((true))))), (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! ((true))))), ! (! ((! _GLF_IDENTITY((true), ! (! ((true)))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! ((true))))), ! (! ((! _GLF_IDENTITY((true), ! (! ((true))))))))) || false)) && true)), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_id), 1u, 1u), uvec3(uvec3(uvec3(_GLF_FUZZED(subgroup_id), 1u, 1u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), ((subgroup_local_id + 1) % subgroup_size) << 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), ((subgroup_local_id + 1) % subgroup_size) << 0u)) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), ((subgroup_local_id + 1) % subgroup_size) << 0u)) / 1u) - 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), ((subgroup_local_id + 1) % subgroup_size) << 0u)) / 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < (subgroup_size / _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) * 1), 2, 2))), bool(bvec4(subgroup_local_id + 1 < (subgroup_size / _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) * 1), 2, 2))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, cos(0.0), length(0.0), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(_GLF_IDENTITY(vec2(-536.742, -8169.3649), min(vec2(-536.742, -8169.3649), vec2(-536.742, -8169.3649)))), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649)))))) / vec2(1.0, 1.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-536.742, -8169.3649)), max(_GLF_FUZZED(vec2(-536.742, -8169.3649)), _GLF_FUZZED(vec2(-536.742, -8169.3649)))))) / vec2(1.0, 1.0)))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, abs(1.0), 1.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false))), true, true, true)), false, false, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(mat2x3(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 0.0, 1.0, exp(length(0.0))), mat2x3(mat2x4(mat2x3(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 0.0, 1.0, exp(length(0.0))))))))).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) << 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), false), false))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))) | (uint(1))), 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(79622))))));
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2964.7679, -25.78)))))).y)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
