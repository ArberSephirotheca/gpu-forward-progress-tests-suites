#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-632.499)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-880.259) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))))))), true, true))))) && true)) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) && true), (injectionSwitch.x > injectionSwitch.y)), false, true))), _GLF_IDENTITY(false, bool(bool(false))), false), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - tan(vec2(0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * (1u ^ 0u));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-144.753)), float(injectionSwitch.x), bool(true)))))), 2)), ~ (~ (_GLF_IDENTITY(2, max(2, 2)))))])), gl_WorkGroupSize))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(7730u, 22621u, 121951u)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(77443))) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), min(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u ^ (gl_WorkGroupSize[2])))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], uint(uvec4(gl_WorkGroupSize[0], 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))) - 0u), 1u))))), 1u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), ~ (~ (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), gl_WorkGroupSize))), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), max(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), max(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u))))))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))))) | uvec3(0u, 0u, 0u), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(7730u, 22621u, 121951u)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)))])), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (true ? clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize) : _GLF_FUZZED(uvec3(40220u, 167938u, 192570u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (true ? clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize) : _GLF_FUZZED(uvec3(40220u, 167938u, 192570u))))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (true ? clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), 0u ^ (uint(gl_WorkGroupSize[1]))))), gl_WorkGroupSize[2])), gl_WorkGroupSize) : _GLF_FUZZED(uvec3(40220u, 167938u, 192570u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(2, (2) * 1)))])), gl_WorkGroupSize))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])))), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | 0u), gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))))), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))))), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))))), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))) << uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(7730u, 22621u, 121951u)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) - sin(0.0))), (false ? _GLF_FUZZED(-18897) : int(_GLF_ZERO(0.0, injectionSwitch.x)))))])), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) / 1u), gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0]))) >> 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), clamp(uvec3(7u), uvec3(7u), uvec3(7u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(7u), clamp(uvec3(7u), uvec3(7u), uvec3(7u)))))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), uvec3(_GLF_IDENTITY(uvec3(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)))), (uvec3(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-42782) : _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(-69742)))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), 0 + (int(ivec2(0, 1)))))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2])), (false ? _GLF_FUZZED(uvec3(74715u, 175351u, 113195u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))), min(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize[0], ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), _GLF_IDENTITY(1u, (1u) << 0u)))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | uvec3(0u, 0u, 0u))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) ^ 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << 0)], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), 1u)) | uvec4(0u, 0u, 0u, 0u)))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * (1u & 1u)), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u)), 0u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) ^ 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))))))) << uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(7730u, (7730u) | 0u), 22621u, 121951u)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (-659 & 0) | _GLF_IDENTITY((0), ((0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize)))))))))[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), clamp(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), max(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY((-659 & 0) | (0), max((-659 & 0) | (0), (-659 & 0) | (0))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY((-659 & 0) | (0), max((-659 & 0) | (0), (-659 & 0) | (0))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupSize))[2]))[0], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0])) : _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_local_id)))), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2]))))))), gl_WorkGroupSize), 1u))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | (gl_WorkGroupSize[2])))), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))) << uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | ((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(7730u, (7730u) | 0u), 22621u, 121951u)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (-659 & 0) | _GLF_IDENTITY((0), ((0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) & uvec3(158672u, 194671u, 3412u)) ^ (gl_WorkGroupSize)))))))))[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), clamp(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), max(uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY((-659 & 0) | (0), max((-659 & 0) | (0), (-659 & 0) | (0))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY((-659 & 0) | (0), max((-659 & 0) | (0), (-659 & 0) | (0))))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), 1u))))))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupSize))[2]))[0], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0])) : _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_local_id)))), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x)))])), gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), uvec3(uvec4(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2]))))))), gl_WorkGroupSize), 1u))))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | (gl_WorkGroupSize[2])))), gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))))) << uvec3(0u, 0u, 0u)))))))) | uvec3(0u, 0u, 0u)))))), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(35534u) : _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(packUnorm4x8(vec4(428.452, -1917.0068, 8514.4076, -705.812)))))) + 0u), 0u)))), 0u) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))), 0u)), (gl_WorkGroupSize)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(222.471)))))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))) && _GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), false, true, false)), (bool(bvec4(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))))), false, true, false))) || false)))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true)))))))), false || (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true)))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec3((false) && _GLF_IDENTITY(true, true && (true)), false, true)), (bool(bvec3((false) && _GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) && true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), false, true, false)), (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))) && true)) || false), false, true, false))) || false)))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true))))))), false || (! (! (_GLF_IDENTITY(true, true && (true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))))))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size - uvec3(191164u, 112603u, 85849u), ~ (_GLF_IDENTITY(~ (workgroup_size - uvec3(191164u, 112603u, 85849u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(~ (workgroup_size - uvec3(191164u, 112603u, 85849u)), (~ (workgroup_size - uvec3(191164u, 112603u, 85849u))) ^ uvec3(0u, 0u, 0u)))))))) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ~ (~ ((0u)))))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (1u ^ 1u) | (_GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ _GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))), 1u * _GLF_IDENTITY((uint(1u)), 0u + ((uint(1u)))))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))), 1u * (uint(1u)))) << 0u)), (uint(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))), max(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(163337u))))))), 1u * (uint(1u)))) << 0u))) | 0u)) >> 0u), ~ (~ (uint(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), 1u * (uint(1u)))) << 0u)))))), 1u, 1u) * (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u) ^ ((gl_WorkGroupID))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cos(injectionSwitch)) : injectionSwitch))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cos(injectionSwitch)) : injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cos(injectionSwitch)) : injectionSwitch)))) / vec2(1.0, 1.0))))).x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))), mix(float(_GLF_FUZZED(((85.11) + -4.1))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.6)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0, 1.0)))), bool(true))) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((85.11) + -4.1))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) > injectionSwitch.y, true, false))))))))) && true)))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((85.11) + -4.1))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((85.11) + -4.1))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) > injectionSwitch.y, true, false))))))))) && true))))))) || false), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), false || ((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), false || ((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))), _GLF_IDENTITY(false, true && (false))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), false || ((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), false || ((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))), _GLF_IDENTITY(false, true && (false))), true)))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true)))))), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) && true))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(75.17, -2.4)))), injectionSwitch)).y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))))))))))), ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))))))))), (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))))))))), true && (! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))))))))))) && true))))) || false)))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), _GLF_IDENTITY(true && (((! (false)))), bool(bool(true && (((! (false)))))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true && ((! _GLF_IDENTITY(((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))), true && (((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))), ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))))))))), true && (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))))))))), ! (_GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))))))))), ! (! (! (! (! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), true && (((! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (false))), true && (((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(((! (false))), true && (((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && ((! _GLF_IDENTITY(((! (false))), true && (((! (false)))))))))))))))))))))))) || false))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-622.271, -94.57)) : injectionSwitch)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-622.271, -94.57)) : injectionSwitch)), 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, sqrt(0.0), 0.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-3.2)), float(float(mat4x3(injectionSwitch.y, sqrt(0.0), 0.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0))), bool(true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), min((false ? _GLF_FUZZED(subgroup_size) : workgroup_base), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)))), (_GLF_IDENTITY(173910u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(173910u, max(173910u, 173910u)), clamp(_GLF_IDENTITY(173910u, max(173910u, 173910u)), _GLF_IDENTITY(173910u, max(173910u, 173910u)), _GLF_IDENTITY(173910u, max(173910u, 173910u)))), 0u))) & 0u)), clamp(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u)), uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u))), clamp((uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u))), ((uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u)))) / uvec2(1u, 1u)), (uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u))))) >> uvec2(0u, 0u)), (uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)), (173910u & 0u))) - uvec2(0u, 0u)))))))), ~ (~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u))) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), clamp(subgroup_base, subgroup_base, subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), _GLF_IDENTITY((min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) >> 0u, 0u ^ ((min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) >> 0u)))), _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), _GLF_IDENTITY(~ (~ (clamp(subgroup_base, subgroup_base, subgroup_base))), (_GLF_IDENTITY(~ (~ (clamp(subgroup_base, subgroup_base, subgroup_base))), min(~ (~ (clamp(subgroup_base, subgroup_base, subgroup_base))), ~ (~ (clamp(subgroup_base, subgroup_base, subgroup_base)))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), uint(uint(clamp(subgroup_base, subgroup_base, subgroup_base))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), uint(uint(clamp(subgroup_base, subgroup_base, subgroup_base))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), uint(uint(clamp(subgroup_base, subgroup_base, subgroup_base)))), (_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), uint(uint(clamp(subgroup_base, subgroup_base, subgroup_base))))) | (_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), uint(uint(clamp(subgroup_base, subgroup_base, subgroup_base)))))))) / 1u))))))))) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), subgroup_base, subgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (clamp(subgroup_base, subgroup_base, subgroup_base)) << 0u), min(clamp(subgroup_base, subgroup_base, subgroup_base), clamp(subgroup_base, subgroup_base, subgroup_base))), _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (true ? clamp(subgroup_base, subgroup_base, subgroup_base) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (true ? clamp(subgroup_base, subgroup_base, subgroup_base) : _GLF_FUZZED(workgroup_id))), max(_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (true ? clamp(subgroup_base, subgroup_base, subgroup_base) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), (true ? clamp(subgroup_base, subgroup_base, subgroup_base) : _GLF_FUZZED(workgroup_id)))))) / 1u)) >> 0u), _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, subgroup_base), _GLF_IDENTITY(min(clamp(subgroup_base, subgroup_base, subgroup_base), clamp(subgroup_base, subgroup_base, subgroup_base)), max(min(clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY(min(clamp(subgroup_base, subgroup_base, subgroup_base), clamp(subgroup_base, subgroup_base, subgroup_base)), (min(clamp(subgroup_base, subgroup_base, subgroup_base), clamp(subgroup_base, subgroup_base, subgroup_base))) / 1u))))))))), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size))), subgroup_base)))))), subgroup_base)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))))))) + 1) % subgroup_size)))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u) << 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) << 0u))), (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) << 0u)))) << 0u), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))))) - 0u)))) + 1) % subgroup_size)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) >> 0) : _GLF_FUZZED(-724))), (false ? _GLF_FUZZED(5988) : _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(86460) : _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), ~ (~ (_GLF_IDENTITY(2, min(2, 2)))))) ^ 0))) : _GLF_FUZZED(15067)))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) : _GLF_FUZZED(57.96))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(1.0)))), injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, false || (true)), false)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-89.89 * -4.9))), bool(false))))), (false ? _GLF_FUZZED(67504) : int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), float(mat4((injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch.x))), (injectionSwitch.x))))) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-279.255), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-372.390 * -350.614))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.5)), float(1.0), bool(true))))) * 1.0) : _GLF_FUZZED(3.3))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) | (~ (_injected_loop_counter))), (~ (_injected_loop_counter)) - _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 1 * (0)))))) | (~ _GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)), (((_injected_loop_counter))) + 0) * 1))))) > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((true ? -9.7 : 7.7) + 73.17))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-6.6, -5.3, -64.85))), float(mat2x4(_GLF_FUZZED(length(vec3(-6.6, -5.3, -64.85))), determinant(mat2(0.0, sin(0.0), 1.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0)), bool(true))), 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-0.3)), float(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.5)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))), max(_GLF_IDENTITY(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))), (true ? _GLF_IDENTITY(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))), min(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-27.79) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))), clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))))) : _GLF_FUZZED(6.3))), clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(860.651)), (true ? (true ? 1.0 : _GLF_FUZZED(860.651)) : _GLF_FUZZED(-1275.9315)))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0))))))))), 1.0 * (_GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) || false) ? 0.0 : _GLF_FUZZED(7.7)))))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((true ? _GLF_IDENTITY(-9.7, max(-9.7, -9.7)) : 7.7) + 73.17))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), _GLF_IDENTITY((0.0), ((0.0)) - 0.0))) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(length(vec3(-6.6, -5.3, -64.85)), 0.0 + (length(vec3(-6.6, -5.3, -64.85))))))), (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0)), bool(true))), 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(log(1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), clamp(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(log(1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x2(1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(log(1.0))), 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, abs(1.0), log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(log(1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), bool(true)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(731.347)), float(1.0), bool(true)))) - 0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)))), 1.0, 1.0))))))), clamp(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.0) : 1.0))) / 1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((true ? -9.7 : 7.7) + 73.17))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(length(vec3(-6.6, -5.3, -64.85))))), (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0)), bool(true))), 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.3, (_GLF_IDENTITY(-0.3, float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) + 0.0))), (float(_GLF_FUZZED(_GLF_IDENTITY(-0.3, (_GLF_IDENTITY(-0.3, float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) + 0.0)))) / 1.0), float(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2736.5391)), bool(false))), 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-3.0 / 6.5))), float(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))) + 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, round(length(_GLF_IDENTITY(normalize(1.0), mix(float(normalize(1.0)), float(_GLF_FUZZED(-8765.8432)), bool(false))))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.0) : 1.0))) / 1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((true ? -9.7 : 7.7) + 73.17))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(length(vec3(-6.6, -5.3, -64.85))))), (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0)), bool(true))), 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.3, (_GLF_IDENTITY(-0.3, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), max(float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), max(float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))))))) + 0.0))), (float(_GLF_FUZZED(_GLF_IDENTITY(-0.3, (_GLF_IDENTITY(-0.3, float(_GLF_IDENTITY(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-760.944))), 0.0)), 1.0, 0.0), transpose(transpose(mat4x3(-0.3, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) + 0.0)))) / 1.0), float(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2736.5391)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))), 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-3.0 / 6.5))), float(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * cos(0.0)))), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))) + 0.0)), 1.0, 1.0))))))) / 1.0)), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, log(1.0)), (mat4(1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, log(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) - 0.0), round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY((true ? -9.7 : 7.7) + 73.17, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.5, float(mat4(8.5, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), float((true ? -9.7 : 7.7) + 73.17), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true))) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(length(vec3(-6.6, -5.3, -64.85))))), (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0)), bool(true))), 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.3)), clamp(float(_GLF_FUZZED(-0.3)), float(_GLF_FUZZED(-0.3)), float(_GLF_FUZZED(-0.3)))), float(float(mat4x2(1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6960.6397))))), 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-528.595)), bool(false)))) / 1.0))), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))), (_GLF_IDENTITY(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0)))), mix(float(_GLF_FUZZED(301.428)), float(clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0))))), bool(true)))) / sqrt(1.0))))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + sin(0.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY((1.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(vec2(_GLF_IDENTITY((1.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), ((1.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) + 0.0), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY((true ? -9.7 : 7.7), min((true ? -9.7 : 7.7), (true ? -9.7 : 7.7))) + 73.17))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), (0.0) / 1.0) : _GLF_FUZZED(length(vec3(-6.6, -5.3, -64.85))))), (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0)), bool(true))), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-69.86))))), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.3, min(-0.3, -0.3)))), float(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true))), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, round(length(normalize(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-4.0)))))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((true ? -9.7 : 7.7) + 73.17))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(length(vec3(-6.6, _GLF_IDENTITY(-5.3, max(_GLF_IDENTITY(-5.3, float(mat2x4(-5.3, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), -5.3)), -64.85))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0)))))) / 1.0)), bool(true))), 1.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-0.3)), float(float(mat4x2(1.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), max(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat4x3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0)))))))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))) - 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, log(1.0)))))), 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(860.651))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), (float(vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0))))))))))))) / round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))).x > injectionSwitch.y) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        continue;
      }
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - log(vec2(1.0, 1.0))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) + sin(vec2(0.0, 0.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) + vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(654.737) : 0.0, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(654.737) : 0.0, min(false ? _GLF_FUZZED(654.737) : 0.0, false ? _GLF_FUZZED(654.737) : 0.0))), float(_GLF_FUZZED(9127.2554)), bool(false))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(sin(_GLF_ZERO(0.0, injectionSwitch.x)), (sin(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(3.3) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) - 0.0), 0.0, 1.0, exp(0.0)), (mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(654.737) : 0.0, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(654.737) : 0.0, min(false ? _GLF_FUZZED(654.737) : 0.0, false ? _GLF_FUZZED(654.737) : 0.0))), float(_GLF_FUZZED(9127.2554)), bool(false))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(sin(_GLF_ZERO(0.0, injectionSwitch.x)), (sin(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(3.3) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) - 0.0), 0.0, 1.0, exp(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), clamp(((injectionSwitch) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), ((injectionSwitch) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), ((injectionSwitch) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0)))), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), min(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) - vec2(0.0, 0.0)))) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))).y)) && true)), _GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false))) || false)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) + vec2(0.0, 0.0))))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0)) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0)) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))), (((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0)) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))) - vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0)) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))))).y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true)))))), true && (_GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false))) || false)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), true))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec2(_GLF_FUZZED(injectionSwitch)))) : injectionSwitch)))) + vec2(0.0, 0.0))))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0)) / vec2(1.0, 1.0))) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + length(0.0)), 0.0)))))))))).y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(_GLF_IDENTITY(false, false || (false))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), length(vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))).y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false))) || false, bool(bool((bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false))) || false))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), true)))))))))) || false)))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), ((bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) || false) || false)), (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool(! (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((bool(! (injectionSwitch.x > injectionSwitch.y))) || false)))))) || false)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))), true))))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-53.04, -78.62)))) : injectionSwitch))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-6.1, 2.9)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) + vec2(0.0, 0.0))))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8.4), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-73.33)), bvec2(true, false))))), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-2458.0590), _GLF_FUZZED(-8469.7115)), bvec2(false, false)))))) * mat2(1.0)) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, log(1.0), 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-10.11)), float(tan(0.0)), bool(true))), length(vec2(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))).y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true))))))))))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false)))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)), bool(bvec4(bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (vec2(injectionSwitch.y, 0.0)) * mat2(1.0)))), (injectionSwitch.y) / 1.0))), false)), false, false, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, false, false)))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, false, false)))) || false)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, false, false)))) || false)))))))) && true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-57204), min(float(-57204), float(-57204)))), _GLF_FUZZED(-5.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))), (bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) && true))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
