#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_36 {
 mat2x3 _f0;
} ;

struct _GLF_struct_35 {
 vec2 _f0;
 bvec3 _f1;
 mat4 _f2;
 uint _f3;
 mat2 _f4;
 mat3 _f5;
 float _f6;
} ;

struct _GLF_struct_34 {
 ivec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_37 {
 mat4x2 _f0;
 _GLF_struct_34 _f1;
 _GLF_struct_35 _f2;
 vec4 _f3;
 bool _f4;
 _GLF_struct_36 _f5;
} ;

struct _GLF_struct_32 {
 bvec3 _f0;
} ;

struct _GLF_struct_31 {
 float _f0;
} ;

struct _GLF_struct_30 {
 int _f0;
 bvec3 _f1;
 float _f2;
 mat2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_33 {
 uint _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
 mat3 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_27 {
 mat4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
 uvec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_28 {
 _GLF_struct_25 _f0;
 bvec3 _f1;
 _GLF_struct_26 _f2;
 mat4x3 _f3;
 _GLF_struct_27 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_38 {
 _GLF_struct_28 _f0;
 int _f1;
 uint subgroup_local_id;
 _GLF_struct_33 _f2;
 mat4x2 _f3;
 _GLF_struct_37 _f4;
 mat2x3 _f5;
 int _f6;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 vec3 _f1;
 uint _f2;
 ivec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 uint _f1;
 mat4x2 _f2;
 uvec3 _f3;
 bvec3 _f4;
 mat4x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
} ;

struct _GLF_struct_19 {
 uint _f0;
 bvec2 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 vec2 _f1;
 uvec2 _f2;
 uvec3 _f3;
 _GLF_struct_17 _f4;
 mat4x2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_24 {
 int _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_20 _f2;
 uint subgroup_size;
 int _f3;
 _GLF_struct_23 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 bvec2 _f1;
 bool _f2;
 ivec4 _f3;
 mat3x2 _f4;
 bool _f5;
 mat4 _f6;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 vec3 _f1;
 mat3 _f2;
 ivec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 ivec2 _f1;
 bvec2 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_15 {
 uint workgroup_size;
 bvec3 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 bvec4 _f1;
 bool _f2;
 mat3x4 _f3;
 vec2 _f4;
 mat2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 float _f1;
 ivec4 _f2;
 _GLF_struct_9 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 uvec4 _f1;
 mat2 _f2;
 vec4 _f3;
 bool _f4;
 uvec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 mat3 _f1;
 _GLF_struct_7 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 uint _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat2x3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 vec3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 int _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_11 {
 bool _f0;
 _GLF_struct_1 _f1;
 uint _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_8 _f4;
 uint read;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(218.447) : injectionSwitch.y))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(1, _GLF_struct_18(_GLF_struct_16(vec4(1.0)), vec2(1.0), uvec2(1u), uvec3(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u)))), _GLF_struct_17(ivec2(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), uvec2(1u)), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(33.82)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true)))), 1.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), float(vec2(length(normalize(1.0)), 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(33.82)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0 + (_GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x), 0.0, 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(33.82)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6109.4455) : 0.0)), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))), mat4x2(1.0)), _GLF_struct_20(_GLF_struct_19(1u, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), mat3x4(1.0), mat4x3(1.0))), gl_SubgroupSize, _GLF_IDENTITY(1, (1) | (1)), _GLF_struct_23(_GLF_struct_21(uvec3(1u), 1u, mat4x2(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), bvec3(true), mat4x3(1.0), mat4(1.0)), _GLF_struct_22(mat3x2(1.0), vec3(1.0), 1u, ivec3(1), ivec2(1))), mat3x2(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_28(_GLF_struct_25(vec3(1.0), uvec4(1u), uvec4(1u)), bvec3(true), _GLF_struct_26(mat3x2(1.0), mat2x3(1.0), mat4x2(1.0), ivec3(1), uvec2(1u)), mat4x3(1.0), _GLF_struct_27(mat4(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-1293.0048, -3310.0041, -9.9, 77.69)) : _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * vec4(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), 1.0, length(vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(vec4(-1293.0048, -3310.0041, -9.9, 77.69)) : _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * vec4(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), 1.0, length(vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat4(1.0))))), mat3(1.0)), 1, gl_SubgroupInvocationID, _GLF_struct_33(1u, _GLF_struct_29(mat3x4(1.0), mat2x3(1.0), mat4x3(1.0), mat3x4(1.0), bvec2(true)), _GLF_struct_30(1, bvec3(_GLF_IDENTITY(true, ! (! (true)))), 1.0, mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9811.5335))))), 0.0)), log(1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(1.0, 1.0, abs(0.0))), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(1.0, 1.0, abs(0.0)))), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(54.78, -50.02, 6.2, 999.039, 70.90, -1.5, -444.502, 87.78, -8.7, 980.959, -1722.1924, 992.513, -438.901, -8.8, -0.3, -93.70)) : mat4(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(1.0, 1.0, abs(0.0))), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.4)), float(1.0), bool(true))), (false ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.1)), float(1.0), bool(true)))))), vec3(1.0, 1.0, abs(0.0)))), 1.0, 1.0, 0.0)))))), mat4x3(1.0)), _GLF_struct_31(1.0), mat3(1.0), _GLF_struct_32(bvec3(true))), mat4x2(1.0), _GLF_struct_37(mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(1.9)), max(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(1.9)), (true ? (true ? 1.0 : _GLF_FUZZED(1.9)) : _GLF_FUZZED(-1.3))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(1.9)), (true ? (true ? 1.0 : _GLF_FUZZED(1.9)) : _GLF_FUZZED((4.4 + -8.5))))))), (1.0) + _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, log(1.0)), mat2(1.0) * (mat2(0.0, 0.0, 1.0, log(1.0)))))), 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))))), _GLF_struct_34(ivec3(1), mat2x3(1.0)), _GLF_struct_35(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))), (vec2(1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), bvec3(true), mat4(1.0), 1u, mat2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), mat3(1.0), 1.0), vec4(1.0), true, _GLF_struct_36(mat2x3(1.0))), mat2x3(1.0), 1);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ~ _GLF_IDENTITY((~ ((gl_NumWorkGroups.x) | 0u)), 1u * ((~ ((gl_NumWorkGroups.x) | 0u)))))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ~ _GLF_IDENTITY((~ ((gl_NumWorkGroups.x) | 0u)), 1u * ((~ ((gl_NumWorkGroups.x) | 0u)))))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u | (1u))), uint(1u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ~ _GLF_IDENTITY((~ ((gl_NumWorkGroups.x) | 0u)), 1u * ((~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) << 0u)))) | 0u)))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ~ _GLF_IDENTITY((~ ((gl_NumWorkGroups.x) | 0u)), 1u * ((~ ((gl_NumWorkGroups.x) | 0u)))))), uint(uvec2((_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ~ _GLF_IDENTITY((~ ((gl_NumWorkGroups.x) | 0u)), 1u * _GLF_IDENTITY(((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, max((gl_NumWorkGroups.x) | 0u, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) ^ 0u)))))), max(_GLF_IDENTITY(((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, max((gl_NumWorkGroups.x) | 0u, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) ^ 0u)))))), max(((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, max((gl_NumWorkGroups.x) | 0u, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) ^ 0u)))))), ((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, max((gl_NumWorkGroups.x) | 0u, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) ^ 0u)))))))), ((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, max((gl_NumWorkGroups.x) | 0u, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) ^ 0u))))))))))), 0u))))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u) : _GLF_FUZZED(subgroup_id)))))));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u))), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_struct_14(ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), 1 * (_GLF_IDENTITY(1, int(int(1)))))))), ivec2(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_struct_12(mat3x2(1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(1.0), ivec4(1), mat2x4(1.0)), _GLF_struct_13(mat2x4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false))), true, ivec4(1), mat3x2(1.0), true, _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(true, false || (true)) ? mat4(1.0) : _GLF_FUZZED(mat4(-476.552, 6.0, -8.2, -658.892, -4.2, -310.925, 38.17, 7.8, 222.464, 69.77, 9122.9167, 5.2, -8.2, 69.10, 76.33, 7.5)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3(false, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_struct_replacement_15.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(105.656, 9.8)))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-8.4, 4.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(105.656, 9.8)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), true && (bool(bvec4(_GLF_DEAD(false), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(faceforward(-873.621, -9.2, -2.8)))), false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) && true), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), false), true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, (subgroup_id * _GLF_struct_replacement_24.subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)))) - 0u), min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, (subgroup_id * _GLF_struct_replacement_24.subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)))), ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, (subgroup_id * _GLF_struct_replacement_24.subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u))))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_24.subgroup_size, (subgroup_id * _GLF_struct_replacement_24.subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)))) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(acosh(5067.7430)))))) > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_38.subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_38.subgroup_local_id, min(_GLF_struct_replacement_38.subgroup_local_id, _GLF_struct_replacement_38.subgroup_local_id)) + 1) % _GLF_struct_replacement_24.subgroup_size);
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(true, _GLF_struct_1(_GLF_struct_0(mat2x3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))))), mat2x3(1.0), mat2x3(1.0))), 1u, _GLF_struct_6(_GLF_struct_2(bvec2(true)), _GLF_struct_3(vec2(1.0)), vec3(1.0), _GLF_struct_4(_GLF_IDENTITY(1, (_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) + (0)) ^ 0) | (1)), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-48.31)), float(1.0), bool(true)))), mat4x2(1.0)), _GLF_struct_5(mat2x3(1.0), 1u, mat3x4(1.0)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(62972 & 0, ~ (~ (62972 & 0))))), _GLF_IDENTITY(1, ~ (~ (1))))), 1))), _GLF_struct_8(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-70.58, -0.8, -3.8, 3861.0990)) : mat2(1.0))), mat3(1.0), _GLF_struct_7(mat3x2(1.0), uvec4(1u), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), vec4(1.0), true, uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), false, true))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) && true)), bvec2(bvec4(bvec2(true), false, true))), false, true)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) && true)), bvec2(bvec4(bvec2(true), false, true))), false, true)))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(86.62), (_GLF_IDENTITY(_GLF_FUZZED(86.62), (true ? _GLF_FUZZED(86.62) : _GLF_FUZZED(4.1)))) - 0.0))))) < injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(86.62))))) < injectionSwitch.y)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), false, true)))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bool(true)))), false, true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), false, true)))))), false), false))), true)))))), uvec4(1u)), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 2), _GLF_struct_10(mat4x3(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(63.14) : 1.0)), 1.0)), float(mat2x3(1.0, 0.0, cos(0.0), 1.0, log(1.0), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(abs(vec3(0.0, 0.0, 0.0)))), mat2x4(_GLF_IDENTITY(mat4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(abs(vec3(0.0, 0.0, 0.0))))), transpose(transpose(mat4(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(abs(vec3(0.0, 0.0, 0.0))))))))))))))), clamp(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x3(1.0, 0.0, cos(0.0), 1.0, log(1.0), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.1))), 1.0, 1.0)), float(mat2x3(1.0, 0.0, cos(0.0), 1.0, log(1.0), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))), float(mat4x2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.7)), float(0.0), bool(true))), cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, log(1.0), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ivec4(0, _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (0 ^ 1)))), 0, 0) | (ivec4(1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ivec4(0, _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (0 ^ 1)))), 0, 0) | (ivec4(1))), (_GLF_IDENTITY(ivec4(1), ivec4(0, _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (0 ^ 1)))), 0, 0) | (ivec4(1)))) | (_GLF_IDENTITY(ivec4(1), ivec4(0, _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (0 ^ 1)))), 0, 0) | (ivec4(1)))))))), _GLF_struct_9(mat2x4(1.0), bvec4(true), true, mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) * 1.0)), clamp(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) * 1.0)), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) * 1.0)), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) * 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(asin(44.84)) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), (1.0) * 1.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(75.64)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mix(float(float(_GLF_IDENTITY(1.0, (1.0) * 1.0))), float(_GLF_FUZZED(-33.52)), bool(false))), bool(true))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-43.19)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(75.64)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mix(float(float(_GLF_IDENTITY(1.0, (1.0) * 1.0))), float(_GLF_FUZZED(-33.52)), bool(false))), bool(true))), 1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-398.797) : 1.0)))))), 1.0))), vec2(1.0), mat2(1.0), uvec2(1u)), vec3(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min(_GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(-7.4)), bool(false))), (injectionSwitch.x) / 1.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if((_GLF_struct_replacement_38.subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(356.982), clamp(_GLF_IDENTITY(_GLF_FUZZED(356.982), float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(356.982), clamp(_GLF_FUZZED(356.982), _GLF_FUZZED(356.982), _GLF_FUZZED(356.982))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(356.982), _GLF_FUZZED(356.982))), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))).y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1])), vec2(_GLF_IDENTITY(mat3x4(mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1])), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1])), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))))))), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (false ? _GLF_FUZZED(9509.5791) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), _GLF_IDENTITY(vec2(mat4x2(vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)), clamp(vec2(mat4x2(vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)), vec2(mat4x2(vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)), vec2(mat4x2(vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(356.982), _GLF_FUZZED(72.06)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))) || false)), false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((- 2.1)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(-4382.1812)) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))))), false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) : injectionSwitch))[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9473.3785), _GLF_FUZZED(536.336)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))[0], injectionSwitch[1])).y) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec4((next_virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((next_virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))) >> 0u))), min(((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))), ((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> 0u, 0u + ((next_virtual_gid) >> 0u))))))) / 1u) | (next_virtual_gid))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && ((! (injectionSwitch.x > injectionSwitch.y))), bool(bool(true && ((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_IDENTITY(false, ! (! (false))), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) - tan(0.0)), 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), false, false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_11.read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-9061.9786)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
