#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) && true), false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), false, true))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))))))))) && true, (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))))))))) && true, bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))))))))) && true))))))) || false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && ((true))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && ((true))) || false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && ((true))) || false)))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && ((true))) || false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && ((true))) || false)))), true, false), true))))) && true))), true), false, true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0), 0.0 + (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(5.3) : (injectionSwitch.x)))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(-2.0, -6106.3214, -80.24), vec3(-0.3, -708.694, 7.2))) : injectionSwitch.x)), 0.0 + (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(54.98)), bool(false)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, sin(0.0))), (float(mat2(1.0, 1.0, 0.0, sin(0.0)))) / 1.0)), 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(0.0), 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(0.0), 0.0)))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(0.0), 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2983.6910)), float(1.0), bool(true))))), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (_GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), normalize(1.0), normalize(1.0)))) + 0.0))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(0.0), 0.0)))))) > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.6)), float(0.0), bool(true))), 0.0, 0.0, 1.0))), _GLF_IDENTITY((0.0), min((0.0), (0.0))) * 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED((true ? 1.5 : 379.704))), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y)))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-5.6, 1.9)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))))).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false, true, false))))), false, true)))) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))), true)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) && true)))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4867.1830)), vec2(_GLF_FUZZED(vec4(20.76, -774.237, -537.952, -15.47).x), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) && true))))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) && true)))))) || false), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), false)))))), false, false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! _GLF_IDENTITY((! (bool(false))), (_GLF_IDENTITY((! (bool(false))), false || ((! (bool(false)))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)))) && true)))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true)))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(3788.8009, -1.1, 1.4, 84.93), (mat2(3788.8009, -1.1, 1.4, 84.93)) - mat2(0.0, 0.0, 0.0, 0.0))) : mat2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7665.9712)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0), 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.0) : 0.0))) * 1.0), 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.3)), float(0.0), bool(true))))), 0.0, 0.0)), mat2(mat4x3((false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(3788.8009, clamp(3788.8009, _GLF_IDENTITY(3788.8009, (false ? _GLF_FUZZED(4518.7660) : 3788.8009)), 3788.8009)), -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(6725.1644)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)), 0.0, 0.0, 0.0)))), float(vec2(float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)), 0.0, 0.0, 0.0)))), 0.0))))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))) / 1.0), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)), (_GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93))) - mat2(0.0, 0.0, 0.0, 0.0)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))) / 1.0), 1.0, 1.0, log(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0, 1.0))), 0.0, 0.0, abs(sqrt(0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(3939.8355)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), mat2(mat2x4((false ? _GLF_FUZZED(mat2(3788.8009, -1.1, 1.4, 84.93)) : mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-5.2), max(_GLF_IDENTITY(_GLF_FUZZED(-5.2), float(mat2(_GLF_FUZZED(-5.2), 0.0, 0.0, 1.0))), _GLF_FUZZED(-5.2))))), 0.0)))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(76.21, 7962.4495)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(vec2(-2.1, 2.5))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6755.8192), _GLF_FUZZED(7.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.1, (false ? _GLF_FUZZED(2.8) : -2.1)), 2.5))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0), (mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(vec2(-2.1, 2.5))), max(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2.1, 2.5)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(vec2(-2.1, 2.5)), tan(0.0), 0.0), (vec4(_GLF_FUZZED(vec2(-2.1, 2.5)), tan(0.0), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(vec2(-2.1, 2.5)), tan(0.0), 0.0), (vec4(_GLF_FUZZED(vec2(-2.1, 2.5)), tan(0.0), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(vec2(76.21, 7962.4495)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))))) : _GLF_FUZZED(vec2(-2.1, 2.5))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.1, (_GLF_IDENTITY(-2.1, clamp(-2.1, -2.1, -2.1))) - 0.0), 2.5))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.1, max(-2.1, _GLF_IDENTITY(-2.1, clamp(-2.1, -2.1, -2.1)))), 2.5))), min((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), vec2(mat2x4((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.1, (-2.1) - tan(0.0)), 2.5)))))).y)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), (bool((true))) || false)))) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2x4(-6.7, -141.271, -1.2, 47.74, -5.5, -3221.0471, -505.119, 7.5)))))), injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))))) : _GLF_FUZZED(vec2(5.5, 6.4))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2x4(-6.7, -141.271, -1.2, 47.74, -5.5, -3221.0471, -505.119, 7.5)))))), injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, _GLF_IDENTITY(2.5, (_GLF_IDENTITY(2.5, (2.5) / 1.0)) / abs(1.0)))))))).y))), _GLF_IDENTITY(float(_GLF_FUZZED(-414.082)), (float(_GLF_FUZZED(-414.082))) - 0.0), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.1, 2.5), vec2(mat3(_GLF_IDENTITY(vec2(-2.1, 2.5), clamp(vec2(-2.1, 2.5), vec2(-2.1, 2.5), vec2(-2.1, 2.5))), exp(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)))))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-2.1, 2.5)), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-2.1, 2.5))) * mat2(1.0))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-2.1, 2.5))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-2.1, 2.5))), mix(vec2(_GLF_FUZZED(692.637), ((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-2.1, 2.5))))[1]), vec2(((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-2.1, 2.5))))[0], _GLF_FUZZED(-67.29)), bvec2(true, false)))) + vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(vec2(-2.1, 2.5)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))), (false ? _GLF_FUZZED((vec3(514.353, -905.466, 7854.1884) * mat2x3(7838.8638, 3664.7315, 22.36, -2.8, -8.0, 0.4))) : (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5))))))))[0], _GLF_FUZZED(-273.304)), vec2(_GLF_FUZZED(2079.7448), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(3830.1350))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.1, 2.5), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(vec2(-2.1, 2.5), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(vec2(-2.1, 2.5), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat4x2(vec2(-2.1, 2.5), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(vec2(-2.1, 2.5), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch)))))))))[1]), bvec2(false, true)))).y : _GLF_FUZZED(-3707.1467)))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y, (false ? _GLF_FUZZED(tanh(sinh(-3.3))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.1, 2.5), clamp(vec2(-2.1, 2.5), vec2(-2.1, 2.5), vec2(-2.1, 2.5)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.1, 2.5)))))).y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-2.1, 2.5)), (_GLF_FUZZED(vec2(-2.1, 2.5))) * mat2(1.0)), min(_GLF_FUZZED(vec2(-2.1, 2.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-2.1, 2.5)), mat2(1.0) * (_GLF_FUZZED(vec2(-2.1, 2.5)))))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2.1, 2.5)), min(_GLF_FUZZED(vec2(-2.1, 2.5)), _GLF_FUZZED(vec2(-2.1, 2.5)))))).y))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(74.60)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))), true))))))))), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id, uint(uint(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-365.474, -636.085, 2541.0117, 42.75)) : mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-365.474, -636.085, 2541.0117, 42.75)) : mat2(injectionSwitch, 0.0, 1.0))))), transpose(transpose(mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-365.474, -636.085, 2541.0117, 42.75)) : mat2(injectionSwitch, 0.0, 1.0)))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atan(-28.58, -290.118)) : injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_size) : subgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id)))))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) >> 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u)))) + (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id)))), subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(12.79)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(12.79)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : subgroup_id)), subgroup_id, subgroup_id))))) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (1u) >> 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) >> 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.1, 8.8)) : injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(5u, (5u) | (5u)), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(5u, (5u) | (5u)), 1u, 1u, 1u)))))))), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uint(_GLF_IDENTITY(uint(5u), uint(5u))))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(5u)), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u | (5u)))), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 0u)))) << 0u)) ^ 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (0u ^ 0u))), (uint(5u)) | 0u), uint(5u)), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 0u))))) : _GLF_FUZZED(workgroup_size))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), 0u | (max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), exp(abs(0.0))))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((bool(bool(injectionSwitch.x < injectionSwitch.y))) && true, bool(bvec4((bool(bool(injectionSwitch.x < injectionSwitch.y))) && true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(false)), ((bool(false))) && true)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true)))), false || (! (! _GLF_IDENTITY((bool(false)), ((bool(false))) && true)))))), (_GLF_IDENTITY(! (! (bool(false))), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))) && true)) || false)))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch, min(false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))), max(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))))))))) / vec2(1.0, 1.0)).y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))) / vec2(1.0, 1.0)).y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))) / vec2(1.0, 1.0)).y) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-38.81, float(_GLF_IDENTITY(float(_GLF_IDENTITY(-38.81, (-38.81) - 0.0)), clamp(float(_GLF_IDENTITY(-38.81, (-38.81) - 0.0)), float(_GLF_IDENTITY(-38.81, (-38.81) - 0.0)), float(_GLF_IDENTITY(-38.81, (-38.81) - 0.0)))))), 7.9)) : injectionSwitch))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.81, 7.9)) : injectionSwitch))) / vec2(1.0, 1.0)).y) / 1.0)))) || false))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), (injectionSwitch.x > injectionSwitch.y))), true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, exp(0.0), 1.0, 0.0)), (true ? vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, exp(0.0), 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).y)))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))) || false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), true && (_GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.1) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9535.3336), _GLF_FUZZED(44.14)), bvec2(false, false))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * 1.0)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false)), bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false)), false))))), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false)), bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false)), false))))), false, false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false)), bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false)), false))))), false, false)), false, true)), false, false))))))), false, false, false))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) - 0))), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((82231 | 36787), min((82231 | 36787), (82231 | 36787)))), clamp(_GLF_FUZZED((_GLF_IDENTITY(82231, (_GLF_IDENTITY(82231, (82231) ^ 0)) << 0) | 36787)), _GLF_FUZZED((82231 | 36787)), _GLF_FUZZED((82231 | 36787)))))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((82231 | 36787), min((82231 | 36787), (82231 | 36787)))), clamp(_GLF_FUZZED((_GLF_IDENTITY(82231, (_GLF_IDENTITY(82231, (82231) ^ 0)) << 0) | 36787)), _GLF_FUZZED((82231 | 36787)), _GLF_FUZZED((82231 | 36787))))))) >> 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))), false, false)), false, false)), bool(bvec4(bool(bvec3(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))), false, false)), false, false)), false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), false), true))))))), ! (_GLF_IDENTITY(! (bool(bool(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size))), ! (! _GLF_IDENTITY((! (bool(bool(subgroup_local_id + 1 < subgroup_size)))), false || (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9135.2551)), bool(false)))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    return;
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u ^ (read)), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x))) * 1.0)) / 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) && true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))))))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, false)))), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && ((false)))))) || false)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-946.555, -612.359)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-1012.7410) : float(injectionSwitch.x))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
