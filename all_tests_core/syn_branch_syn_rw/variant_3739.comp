#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 mat2x4 _f0;
 uvec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
} ;

struct _GLF_struct_18 {
 mat4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_17 {
 int _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 ivec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_16 _f0;
 uint _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 uint _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 uvec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 ivec2 _f1;
 _GLF_struct_15 _f2;
 ivec2 _f3;
 uint workgroup_base;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 vec3 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 bvec4 _f1;
 float _f2;
 vec4 _f3;
 mat2x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 uint _f1;
 mat2x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 vec2 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 ivec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 bvec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 mat4 _f3;
 uvec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 bvec4 _f1;
 _GLF_struct_0 _f2;
 uint _f3;
 ivec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_5 _f2;
 float _f3;
 _GLF_struct_10 _f4;
 uint virtual_gid;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true)), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))), _GLF_IDENTITY(true, (true) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))), true))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-4548.5658)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-4548.5658)), bool(false)))) / 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + sqrt(abs(vec2(0.0, 0.0))), ((injectionSwitch) + sqrt(abs(vec2(0.0, 0.0)))) * mat2(1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(mat4(1.0), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) + _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), (false ? _GLF_FUZZED(ivec2(26071, 61581)) : ~ ((_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), ~ (~ (~ ((_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))))))))))), _GLF_struct_15(_GLF_struct_14(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-494.902) : 1.0))), uvec2(1u), ivec4(1))), ivec2(1), workgroup_size * workgroup_id, _GLF_struct_21(_GLF_struct_16(vec2(1.0), ivec2(1), mat4(1.0)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))), _GLF_struct_17(1, uvec2(1u), mat2(1.0)), _GLF_struct_18(mat4(1.0), mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), mat2x4(1.0)), _GLF_struct_19(mat2x3(1.0)), 1u, _GLF_struct_20(mat2x4(1.0), uvec3(1u), bvec3(true))));
 uint subgroup_base = _GLF_IDENTITY(subgroup_size * subgroup_id, (_GLF_IDENTITY(subgroup_size * subgroup_id, max(subgroup_size * subgroup_id, subgroup_size * subgroup_id))) >> (_GLF_IDENTITY(4700u & 0u, min(4700u & 0u, 4700u & 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_IDENTITY(ivec3(1), ivec3(ivec3(_GLF_IDENTITY(ivec3(1), ivec3(ivec3(ivec3(1))))))), _GLF_struct_1(bvec3(_GLF_IDENTITY(true, ! (! (true)))), bvec4(true), _GLF_struct_0(mat3(1.0), ivec4(1), mat4x2(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(702.721, -7.3, 7.4, -4726.7799, -9.9, -38.89, 2.4, 3.3, 70.15, 10.73, -8270.5364, _GLF_IDENTITY(-8.2, _GLF_IDENTITY(float(mat3(-8.2, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (float(_GLF_IDENTITY(mat3(-8.2, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(-8.2, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0)), 1117.7980, 8097.2698, 395.576, _GLF_IDENTITY(49.97, mix(float(_GLF_FUZZED(-3732.5068)), float(49.97), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))) : mat4(1.0))) : _GLF_FUZZED((+ mat4(_GLF_IDENTITY(2374.3381, min(2374.3381, 2374.3381)), 300.039, 6144.3043, -7231.2237, 82.37, _GLF_IDENTITY(-296.862, _GLF_IDENTITY(sqrt(1.0) * (-296.862), (true ? _GLF_IDENTITY(sqrt(1.0) * (-296.862), min(sqrt(1.0) * (-296.862), sqrt(1.0) * _GLF_IDENTITY((-296.862), ((-296.862)) + 0.0))) : _GLF_FUZZED(9.0)))), 5795.7561, 5015.8068, -155.181, 3.1, -71.55, 6.8, 45.20, 218.130, -977.935, -911.106))))), uvec2(1u), mat2x3(1.0)), 1u, ivec2(1), ivec4(1)), _GLF_struct_5(_GLF_struct_2(vec2(1.0), bvec4(true), uvec4(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | (1u)))))), _GLF_struct_3(mat2x3(1.0), bvec4(true), mat4x3(1.0), mat3x4(1.0), vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0 * (0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0 * (0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(197.493)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(mat2x3(1.0 * (0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(197.493)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)), 1.0 * (float(mat2x3(1.0 * (0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(197.493)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat3x4(float(mat3(_GLF_IDENTITY(float(mat2x3(1.0 * (0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(197.493)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)), 1.0 * (float(mat2x3(1.0 * (0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(197.493)), _GLF_IDENTITY(bool(false), (bool(false)) || false))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)))), 0.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0)))), max(float(mat2x3(1.0 * (0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)), float(mat2x3(1.0 * (0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-333.141))), 1.0)))))), 1.0, 1.0))))), _GLF_struct_4(mat3x4(1.0), mat4x2(1.0), mat2x4(1.0), ivec3(1), mat4x3(1.0)), ivec4(1)), 1.0, _GLF_struct_10(_GLF_struct_6(mat3x2(1.0), 1u, mat2x3(1.0), mat3x4(1.0)), _GLF_struct_7(uvec2(1u), bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false, false)))), 1.0, vec4(1.0), mat2x3(1.0), ivec3(1)), vec2(1.0), _GLF_struct_8(ivec2(1), bvec3(true)), _GLF_struct_9(mat3x4(1.0))), _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (1u & 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (1u & 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uint(uvec3(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (1u & 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (1u & 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(uvec3(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (1u & 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) << 0u), _GLF_struct_12(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-162.887)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))), vec3(1.0), _GLF_struct_11(mat2x4(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_22.workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) - 0u)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_13.virtual_gid], (_GLF_IDENTITY(buf[_GLF_struct_replacement_13.virtual_gid], uint(uvec4(buf[_GLF_struct_replacement_13.virtual_gid], _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY(1u, (1u) - 0u)))))), 0u, 0u)))) | 0u), 4, 64, _GLF_IDENTITY(2, (2) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_local_id))))) + 1 < (subgroup_size / 2))
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(5.5)), bool(false))) > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false, false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.389))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))), false, false)), true)))))), true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((1622.1215 / 734.223))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), sqrt(0.0), 1.0, 1.0)), min(float(mat2x3(injectionSwitch.x, 1.0, abs(0.0), sqrt(0.0), 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 1.0, abs(0.0), sqrt(0.0), 1.0, 1.0))))) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, _GLF_IDENTITY(172.160, 0.0 + (172.160)))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0)), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, 172.160)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true))))) && true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-4.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1.4), float(mat4x2(_GLF_FUZZED(1.4), determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1109.8265)), float(0.0), bool(true))), 0.0))), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), bvec2(false, true))) : _GLF_FUZZED(vec2(-97.50, -0.4)))).x > injectionSwitch.y)))))) || false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(40090u))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y)))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))))))))))))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), (true && (_GLF_IDENTITY(true, (true) && true))) || false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((1622.1215 / 734.223))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), sqrt(0.0), 1.0, 1.0)), min(float(mat2x3(injectionSwitch.x, 1.0, abs(0.0), sqrt(0.0), 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 1.0, abs(0.0), sqrt(0.0), 1.0, 1.0))))) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, _GLF_IDENTITY(172.160, 0.0 + (172.160)))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0)), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, 172.160)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true))))) && true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-4.8)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1.4), float(mat4x2(_GLF_FUZZED(1.4), determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1109.8265)), float(0.0), bool(true))), 0.0))), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), bvec2(false, true))) : _GLF_FUZZED(vec2(-97.50, -0.4)))).x > injectionSwitch.y)))))) || false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(40090u))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y)))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))))))))))))))))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), (true && (_GLF_IDENTITY(true, (true) && true))) || false)))))))) && true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, true)))))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))) || false), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true))), false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true, true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, max(1, 1)), 0, (0 << _GLF_IDENTITY(int(5), int(5))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, false, false)))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, false, false)))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(false)))))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))))))) && true), false || (bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false))))))))), false)))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_13.virtual_gid], read, 4, 64, 4);
}
