#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(347.880)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, exp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 0.0, 1.0)), (float(vec4(injectionSwitch.y, exp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 0.0, 1.0))) * 1.0)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, true)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false)), min(mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false))))), 1.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-69.77))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8631.8067) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[0], log(1.0) + ((vec4(injectionSwitch, 0.0, 0.0))[0])), _GLF_FUZZED(748.969), _GLF_FUZZED(-462.036), _GLF_FUZZED(2.5)), vec4(_GLF_FUZZED(-70.56), (vec4(injectionSwitch, 0.0, 0.0))[1], (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), bvec4(false, true, true, true))))).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((4.0 * injectionSwitch)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((4.0 * injectionSwitch)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((4.0 * injectionSwitch)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((4.0 * injectionSwitch)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true), true, false))))), true && (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((4.0 * injectionSwitch)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((4.0 * injectionSwitch)) : injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true), true, false)))))))))))) || false), false))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8631.8067) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4((vec4(injectionSwitch, 0.0, 0.0))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(_GLF_FUZZED(748.969), (_GLF_FUZZED(_GLF_IDENTITY(748.969, max(748.969, 748.969)))) - 0.0), _GLF_FUZZED(-462.036), _GLF_FUZZED(2.5)), vec4(_GLF_FUZZED(-70.56), _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[1], (_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[1], float(mat4((vec4(injectionSwitch, 0.0, 0.0))[1], 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) + 0.0), (vec4(injectionSwitch, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), clamp((vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))))[3]), bvec4(false, true, true, true))))).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true))))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true))))) || false, false)))), false))))), false, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8631.8067) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4((vec4(injectionSwitch, 0.0, 0.0))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(_GLF_FUZZED(748.969), (_GLF_FUZZED(_GLF_IDENTITY(748.969, max(748.969, 748.969)))) - 0.0), _GLF_FUZZED(-462.036), _GLF_FUZZED(2.5)), vec4(_GLF_FUZZED(-70.56), _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[1], (_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[1], float(mat4((vec4(injectionSwitch, 0.0, 0.0))[1], 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) + 0.0), (vec4(injectionSwitch, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), clamp((vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(-6.0, -1.6)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))))[3]), bvec4(false, true, true, true))))).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true))))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true && (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))), true))))) || false, false)))), false))))), false, true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - _GLF_ZERO(0.0, injectionSwitch.x))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)), true, true, true)))))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))))))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) && true)) || false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? injectionSwitch.x : _GLF_FUZZED(3467.8551))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) * mat4(1.0)))) > injectionSwitch.y), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false))), false, false)))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(_GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y) || false)))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false)))), (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9952.9722), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4468.5449)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false))))), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), _GLF_IDENTITY(false || (bool(_GLF_DEAD(false))), bool(bvec2(false || (bool(_GLF_DEAD(false))), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), false, _GLF_IDENTITY(true, (true) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), true && _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bvec2(((false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(((false)), true), bvec2(bvec3(bvec2(((false)), true), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, determinant(mat3(tan(0.0), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, sin(tan(0.0)), 1.0)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))), false, false, false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-976.434))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))) || false))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(normalize(2.3)) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), max(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(vec2(431.632, 328.758))))))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), max(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(vec2(431.632, 328.758))))))).y))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), max(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(vec2(431.632, 328.758))))))).y)))))))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(947.242)), vec2(_GLF_FUZZED(-2.5), ((injectionSwitch))[1]), bvec2(false, true)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-388.258), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(-4.5)), bvec2(false, false))) + (injectionSwitch)).y)), false, _GLF_IDENTITY(false, ! (! (false))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2436.1130)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-2436.1130)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-2436.1130)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)))), false, _GLF_IDENTITY(false, false || (false))))))))))) || false)))))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(normalize(2.3)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-388.258), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false, false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))))))) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), true, false)))))), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2436.1130)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), false, false))))))))) || false)))))), bool(bvec3(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(normalize(2.3)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-388.258), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0), vec2(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-388.258), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-388.258), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0), 1.0, 0.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-388.258), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0), 1.0, 0.0, 1.0, 1.0))))))))).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false, _GLF_IDENTITY(false, ! (! (false))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false))) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false))) || false), false), false, false))), true, false))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2436.1130)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), false, false))))))))) || false)))))), true, true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_FUZZED(5732.4205)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), bool(true)))) - abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) > injectionSwitch.y)))))))
        return;
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false)))))))))) || false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0)), log(1.0), 0.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0)), log(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0)), log(1.0), 0.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0)), log(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0)), log(1.0), 0.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0)), log(1.0), 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-195.761) : injectionSwitch.y))))) * 1.0))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0)), max(float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0)), float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0))))) > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-195.761) : injectionSwitch.y))))) * 1.0))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0)), max(float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0)), float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 1.0))))) > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-92.72)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-92.72)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true, true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED((subgroup_size + subgroup_id)) : gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.7), _GLF_FUZZED((false ? -214.097 : 156.204))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))).y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || false)))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || false)))))))))) || false))))
            barrier();
           return;
          }
         return;
        }
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))) && true)) && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true)))) && true))))), true && (! (! _GLF_IDENTITY(((false)), bool(bool(((false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(50.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))))) || false), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))) && true), false, true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))))))) && true))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.4) : injectionSwitch.y)))))))) && true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || false), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))), bool(bool(! (false)))))) || false, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bool(_GLF_IDENTITY(! (false), bool(bool(! (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bool(_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bool(_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), false, true)))), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || ((_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), ! (! (_GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)))))))))), bool(bvec2(((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || ((_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false)))))))) || false))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.9))), exp(0.0), 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, sin(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))) * 1.0), ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-48.10)), bvec2(true, false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-5379.5390, 3.3)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-48.10)), bvec2(true, false))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.5), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), (vec2(_GLF_FUZZED(6.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1], min(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]) - 0.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]) - 0.0, min(((injectionSwitch)[1]) - 0.0, ((injectionSwitch)[1]) - 0.0)), ((injectionSwitch)[1]) - 0.0, ((injectionSwitch)[1]) - 0.0))), (injectionSwitch)[1])))) * mat2(1.0)), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-48.10), max(_GLF_FUZZED(-48.10), _GLF_FUZZED(-48.10)))), vec2(_GLF_IDENTITY(mat3x4(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-48.10), max(_GLF_FUZZED(-48.10), _GLF_FUZZED(-48.10)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), transpose(transpose(mat3x4(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-48.10), max(_GLF_FUZZED(-48.10), _GLF_FUZZED(-48.10)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))), bvec2(true, false))))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(172.891)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bool(bvec3(bool(true), true, true))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) + 0.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, true), false))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), (bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))) || false)), true && (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), (bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))) || false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, false))))))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)) && true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z, clamp(workgroup_size * GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z, workgroup_size * GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, clamp(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id)))).z, uint(_GLF_IDENTITY(uint(workgroup_size * GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z), (false ? _GLF_FUZZED(subgroup_size) : uint(workgroup_size * GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z)))))));
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) >> 0u), _GLF_IDENTITY((subgroup_size) | 0u, _GLF_IDENTITY(max((subgroup_size) | 0u, (subgroup_size) | 0u), uint(uint(max((subgroup_size) | 0u, (subgroup_size) | 0u)))))) + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, _GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(_GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), 1u * (_GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), (min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y)) | (min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y))))), clamp(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id))).y) - 0u)), _GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), (_GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), clamp(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), _GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), (min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y)) | (min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y))), min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y)))) / (0u ^ 1u)), _GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), (false ? _GLF_FUZZED(91978u) : _GLF_IDENTITY(min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y), (min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y)) | 0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) | (0u)), 0u)) ^ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x)) * subgroup_size)) + ((GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(uint(2u), uint(2u))))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (0u & 149309u) ^ _GLF_IDENTITY((0u), 0u | ((_GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), clamp(workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)) ^ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)).x, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x)) * subgroup_size)) + ((GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (0u & 149309u) ^ (0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (0u & 149309u) ^ (0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (0u & 149309u) ^ (0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (0u & 149309u) ^ (0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) * 1u)))), workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u))))) / 1u), 0u)) ^ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, min(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x) << 0u), GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x)) * subgroup_size)) + ((GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_size))) / 1u)) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), ~ (_GLF_IDENTITY(~ ((uint(2u))), (~ ((uint(2u)))) * 1u))) - 0u))))), _GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u), uint(2u))))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 0u ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 0u | (clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 0u ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) << 0u))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (0u & 149309u) ^ (0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) / 1u)) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(packUnorm4x8(vec4(671.976, -764.539, 518.405, 106.277))) : 2u))) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))))), workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)) ^ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, min(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x, GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x)) * subgroup_size)) + ((GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u | (0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), min(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(0u), uint(0u)))))))), uint(2u))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) & 149309u) ^ (0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), false, false, true))))), false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(65.03)), vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], max((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))[1], _GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], float(mat2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0)))[1], 0.0, 0.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_IDENTITY(_GLF_FUZZED(429.716), (false ? _GLF_FUZZED(-2653.9187) : _GLF_FUZZED(429.716)))), vec2(_GLF_FUZZED(7021.7462), ((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], max((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], _GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], float(mat2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], 0.0, 0.0, 1.0))))), (_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], max((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY(mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : mix(vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[1], _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) * 1))))], _GLF_FUZZED(429.716)), clamp(vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) * 1))))], _GLF_FUZZED(429.716)), vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) * 1))))], _GLF_FUZZED(429.716)), _GLF_IDENTITY(vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) * 1))))], _GLF_FUZZED(429.716)), (vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) * 1))))], _GLF_FUZZED(429.716))) - vec2(0.0, 0.0)))), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-5.8, -80.21)) : vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) * 1))))], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))), true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))[1], float(mat2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY(mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), float(_GLF_FUZZED(6.4)), bool(false)))) - 0.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), mix(vec2(_GLF_FUZZED(572.887), _GLF_FUZZED(-767.879)), vec2(_GLF_IDENTITY((mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), float(_GLF_FUZZED(6.4)), bool(false)))) - 0.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))[0], max(_GLF_IDENTITY((mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), float(_GLF_FUZZED(6.4)), bool(false)))) - 0.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))[0], (false ? _GLF_FUZZED(8.5) : (mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), float(_GLF_FUZZED(6.4)), bool(false)))) - 0.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))[0])), (mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), float(_GLF_FUZZED(6.4)), bool(false)))) - 0.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))[0])), (mix(vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(429.716)), vec2(_GLF_FUZZED(7021.7462), _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], min(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], _GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), float(_GLF_FUZZED(6.4)), bool(false)))) - 0.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))[1]), bvec2(true, true))))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))[1], 0.0, 0.0, 1.0)))))) + 0.0)) - 0.0)), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, false)))), false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec3(64.09, 7.7, 7883.7650).r)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), _GLF_IDENTITY((_GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))), ((_GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1))))) ^ 0) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)) * (1), (1 * (1)) / 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(72158) : 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(55944, (55944) | (55944))) : 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))).y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((9792.8960 + -9.3))), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false)), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))) || false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))) || false, false || (_GLF_IDENTITY((! (false)), true && ((! (false)))) || false)), false, true)))))))) || false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), (false ? _GLF_FUZZED(atan(sin(39.92), exp2(-95.41))) : float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y) && true)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, _GLF_IDENTITY(-2860.1095, (-2860.1095) - 0.0), -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-94.79)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), 0.0, 0.0)))))), bool(_GLF_IDENTITY(true, ! (! (true)))))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0), (false ? _GLF_FUZZED(mat2x4(1.4, 3.3, 0.4, -5.3, -403.656, -0.5, -61.22, -116.979)) : mat2x4(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), bool(true))) > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(-1.0, -2860.1095, -21.55, 9.8).x, clamp(vec4(-1.0, -2860.1095, -21.55, 9.8).x, vec4(-1.0, -2860.1095, -21.55, 9.8).x, _GLF_IDENTITY(vec4(-1.0, -2860.1095, -21.55, 9.8).x, (vec4(-1.0, -2860.1095, -21.55, 9.8).x) / 1.0))))), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_FUZZED(-5474.9236)), float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), bool(true))), bool(true))) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(9.7) : max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0)) / 1.0)) / 1.0)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), bool(true))) > injectionSwitch.y))), false || (! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((false ? 6093.5628 : 6.8)))))))), bool(true))) > injectionSwitch.y))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) / exp(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) / exp(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) / exp(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) / exp(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0)))))), bool(true))) - 0.0) : _GLF_FUZZED(2103.0816)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(sign(9.8))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-361.877) : injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), bool(true))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-361.877) : injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), bool(true))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, mix(float(_GLF_FUZZED(vec4(-1.0, -2860.1095, -21.55, 9.8).x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-361.877) : injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), bool(true))) > injectionSwitch.y)))))))))))) || false))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7595.9337, -9542.2515)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))) > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))), false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8863.2717)), vec2(_GLF_FUZZED(66.73), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), ! (! (true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))))) && true))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sin(0.0), sqrt(1.0)), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sin(0.0), sqrt(1.0)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, ((virtual_gid) - 0u) + 0u))], _GLF_IDENTITY(read, min(read, read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), false)), bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), false)), false))))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))) && true, (_GLF_IDENTITY((bool(bvec2(false, true))) && true, ! (_GLF_IDENTITY(! ((bool(bvec2(false, true))) && true), ! (! (! ((bool(bvec2(false, true))) && true))))))) || false)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
