#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(5911.7050), (((injectionSwitch)) * mat2(1.0))[1]), vec2((((injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-48.51)), bvec2(true, false))))[1]), bvec2(false, true))).y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true))))) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(-7483.5885, mix(float(_GLF_FUZZED(-9.8)), float(-7483.5885), bool(true))), 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(-7483.5885, 9.9, -0.9).s, min(vec3(-7483.5885, 9.9, -0.9).s, vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y))) && true))))))) || false), false))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, _GLF_IDENTITY(-0.9, min(-0.9, _GLF_IDENTITY(-0.9, max(_GLF_IDENTITY(-0.9, min(-0.9, -0.9)), -0.9))))).s)), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)), (_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)))[0], clamp((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)))[0])), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-7483.5885, 9.9, -0.9).s)))), vec2(_GLF_FUZZED(-101.715), (injectionSwitch)[1]), bvec2(false, true)))[1]), vec2(_GLF_FUZZED(-40.72), _GLF_FUZZED(-689.038)), bvec2(false, false)))) - vec2(0.0, 0.0))).y))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), (true) && true), true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * _GLF_IDENTITY((max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(5551.9590)), float(_GLF_IDENTITY((max(injectionSwitch.y, injectionSwitch.y)), max((max(injectionSwitch.y, injectionSwitch.y)), (max(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false))), false, false))))))))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) << 0u))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))), ((uvec3(uvec3(gl_NumWorkGroups)))) | ((uvec3(uvec3(gl_NumWorkGroups)))))))) | (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(uvec4(uvec3(gl_NumWorkGroups), 0u))))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))))).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))))).x)), 0u + (~ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))))).x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (gl_NumWorkGroups))))))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u)))))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)) : _GLF_FUZZED(subgroup_id)))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u))))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)))) >> uvec3(0u, 0u, 0u)) * _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), uvec3(uvec3((uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), (uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) / 1u))))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u)))))))))))))).x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u)))))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)) : _GLF_FUZZED(subgroup_id)))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u))))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)))) >> uvec3(0u, 0u, 0u)) * _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), uvec3(uvec3((uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), (uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) / 1u))))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u)))))))))))))).x, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u)))))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)) : _GLF_FUZZED(subgroup_id)))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u))))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)))) >> uvec3(0u, 0u, 0u)) * _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), uvec3(uvec3((uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), (uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) / 1u))))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u)))))))))))))).x))))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | _GLF_IDENTITY((1u), max((1u), _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), 0u + (_GLF_IDENTITY((1u), ((1u)) >> (0u | 0u)))))))))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))))))))).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (~ (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))) | (uvec3(124097u, 120203u, 149274u) & uvec3(0u, 0u, 0u))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))))))) | (gl_NumWorkGroups)))), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups))))))))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (uvec3(gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u)))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))) * (uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))))))))))).x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u)))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))))), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.1)))))), max(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)), (true ? vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, mix(float(_GLF_FUZZED(-884.661)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(3583.9525)), bool(false)))), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true ? vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))) + (0.0)), 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch), mix(vec2((true ? vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(799.143)))) / 1.0), 0.0)), 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), float(_GLF_IDENTITY(mat4x2(log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, cos(0.0), 0.0))), mat4x2(mat4(mat4x2(log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, cos(0.0), 0.0)))))))))) + (0.0)), 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch))[0], (true ? vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))) + (0.0)), 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(-3184.6095), _GLF_FUZZED(7.1)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(3583.9525)), bool(false)))), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)), (true ? vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))) + (0.0)), 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(3583.9525)), bool(false)))), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)), (true ? vec2(mat3x2(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), length(vec2(_GLF_IDENTITY(0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))) + (0.0)), 0.0)), 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))))).x), float(_GLF_FUZZED((-3.9 * -9.7))), bool(false)))), bool(true)))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.x, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0))))))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))) * 1.0))), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), _GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat2x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(606.485)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(14.94)), bool(false))))), 0.0, 0.0)))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-58.75)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0))))), 0.0, 0.0, 0.0)), (true ? float(mat2x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-93.71)))))))))) + _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), 0u))) << 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(_GLF_IDENTITY(vec2(tan(0.0), 1.0), (vec2(tan(0.0), 1.0)) + sqrt(vec2(0.0, 0.0))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ~ (_GLF_IDENTITY(~ ((0u | 0u)), 0u ^ (~ ((0u | 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), uint(6u))), 0u))) << 0u, 0u | ((_GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(6u, 0u + (6u))))), uint(6u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, ~ (~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, 0u ^ ((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u))))))) << 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(_GLF_IDENTITY(vec2(tan(0.0), 1.0), (vec2(tan(0.0), 1.0)) + sqrt(vec2(0.0, 0.0))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ~ (_GLF_IDENTITY(~ ((0u | 0u)), 0u ^ (~ ((0u | 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), uint(6u))), 0u))) << 0u, 0u | ((_GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(6u, 0u + (6u))))), uint(6u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, ~ (~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, 0u ^ ((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u))))))) << 0u))), clamp(~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(_GLF_IDENTITY(vec2(tan(0.0), 1.0), (vec2(tan(0.0), 1.0)) + sqrt(vec2(0.0, 0.0))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ~ (_GLF_IDENTITY(~ ((0u | 0u)), 0u ^ (~ ((0u | 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), uint(6u))), 0u))) << 0u, 0u | ((_GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(6u, 0u + (6u))))), uint(6u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, ~ (~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, 0u ^ ((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u))))))) << 0u))), ~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(_GLF_IDENTITY(vec2(tan(0.0), 1.0), (vec2(tan(0.0), 1.0)) + sqrt(vec2(0.0, 0.0))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ~ (_GLF_IDENTITY(~ ((0u | 0u)), 0u ^ (~ ((0u | 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), uint(6u))), 0u))) << 0u, 0u | ((_GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(6u, 0u + (6u))))), uint(6u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, ~ (~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, 0u ^ ((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u))))))) << 0u))), ~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(tan(0.0), 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(_GLF_IDENTITY(vec2(tan(0.0), 1.0), (vec2(tan(0.0), 1.0)) + sqrt(vec2(0.0, 0.0))), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ~ (_GLF_IDENTITY(~ ((0u | 0u)), 0u ^ (~ ((0u | 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), uint(6u))), 0u))) << 0u, 0u | ((_GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) ^ (max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | uvec2(0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(6u, 0u + (6u))))), uint(6u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, ~ (~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u, 0u ^ ((uint(uvec4(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) / 1u))))))) << 0u))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(mod(injectionSwitch, vec2(36.77, 13.57))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.5)), bool(false))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-515.317)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(413.748), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(79.68)), bvec2(true, false))))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_FUZZED(vec2(-9.6, -81.45)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-31.67, 6.4)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9862.5503, -66.41)) : injectionSwitch)))), (injectionSwitch) - vec2(0.0, 0.0)).y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(209.099), _GLF_IDENTITY(float(float(_GLF_FUZZED(209.099))), max(float(float(_GLF_FUZZED(209.099))), _GLF_IDENTITY(float(float(_GLF_FUZZED(209.099))), float(mat4x2(float(float(_GLF_FUZZED(209.099))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))), bool(false))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(58.34)), vec2(_GLF_FUZZED(-737.053), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(4.3)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(_GLF_IDENTITY(true, true && (true))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(58.34)), vec2(_GLF_FUZZED(-737.053), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(4.3)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(_GLF_IDENTITY(true, true && (true))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6486.3085)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), _GLF_IDENTITY(true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y)) && (_GLF_IDENTITY(true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(67.87) : _GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch))[1], min((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]))), vec2(_GLF_FUZZED(5087.2936), _GLF_FUZZED(-384.820)), bvec2(false, false)))).y))))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), workgroup_id)), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), workgroup_id)))))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u) + (workgroup_id)), workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u)))), subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0)), min(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(2.8, -1.9)))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(vec3(-8.6, -89.98, -4.2).x)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(false)))))), true))))))), (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), true)))))))) && true)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || false))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))))) && true), true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))])) | 0u)))))) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ ((_GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid])))) | 0u)))))) ^ 0u)), 0u | (uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))))]), _GLF_IDENTITY((_GLF_IDENTITY((buf[virtual_gid]), uint(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uvec2(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> uvec2(0u, 0u))), min(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uvec2(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> uvec2(0u, 0u))), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uvec2(_GLF_IDENTITY(uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2((buf[virtual_gid]), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> uvec2(0u, 0u))))))))) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), (~ (((buf[virtual_gid])) | 0u)) + (0u & 181657u)), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)), 0u | (uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED((atomicAnd(subgroup_base, virtual_gid) / workgroup_base))))), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)), 0u | (uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), _GLF_IDENTITY(max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u)), uint(uvec3(max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u)), 0u, 1u)))), ~ (((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))])) | 0u)))))) ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u))))), (true ? _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ ((_GLF_IDENTITY((buf[virtual_gid]), min(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(uint(uvec4((buf[virtual_gid]), 1u, 0u, 1u)), 0u | (uint(uvec4((buf[virtual_gid]), 1u, 0u, 1u))))), (buf[virtual_gid])))) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u))))) : _GLF_FUZZED(atomicXor(subgroup_id, workgroup_base))))) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)), 0u | _GLF_IDENTITY((uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u))), clamp(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u))), ((uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)))) - 0u), (uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u))), (uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)))))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), clamp(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u)))) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), min(_GLF_IDENTITY(~ (((buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, (0u | 0u), 1u)))])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)), 0u | (uint(uint(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(((buf[virtual_gid])) | 0u, ~ (_GLF_IDENTITY(~ (((buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) - 0u)))])) | 0u), min(_GLF_IDENTITY(~ (((buf[virtual_gid])) | 0u), max(~ (((buf[virtual_gid])) | 0u), ~ (((buf[virtual_gid])) | 0u))), ~ (((buf[virtual_gid])) | 0u)))))) ^ 0u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))), ((buf[virtual_gid])) | 0u)), (false ? _GLF_FUZZED(subgroup_base) : ~ (_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u)) | 0u))))))) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), (uvec4(0u, 1u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) << 0u)) : _GLF_FUZZED((subgroup_size << _GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) << 0u)) : _GLF_FUZZED((subgroup_size << _GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) << 0u)) : _GLF_FUZZED((subgroup_size << _GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(~ (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) << 0u)) : _GLF_FUZZED((subgroup_size << _GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u | (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u) ^ 0u))), 4, 64, _GLF_IDENTITY(2, (2) | (2)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), false, _GLF_IDENTITY(true, (true) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (! (bool(bvec2(bool(false), true)))))))))) || false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(0.0 + (injectionSwitch[1]), float(mat2x4(0.0 + (injectionSwitch[1]), 0.0, abs(0.0), round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_FUZZED(-233.988)), float(injectionSwitch[1]), bool(true)), max(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-233.988)), (float(_GLF_FUZZED(-233.988))) * 1.0), float(injectionSwitch[1]), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-233.988)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(-263.823)), bool(false)))), bool(true)), mix(float(mix(float(_GLF_FUZZED(-233.988)), float(injectionSwitch[1]), bool(true))), float(_GLF_FUZZED(-29.22)), bool(false)))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.9)), float(1.0), bool(true))))), mat2(1.0) * (((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.9)), float(1.0), bool(true)))))))[0])), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-69.35), _GLF_FUZZED(2698.5764)), bvec2(false, false))))) * mat2(1.0)).x > injectionSwitch.y))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec3((injectionSwitch), 0.0)), _GLF_IDENTITY(vec2(vec3(vec2(vec3((injectionSwitch), 0.0)), 0.0)), max(vec2(vec3(vec2(_GLF_IDENTITY(vec3((injectionSwitch), 0.0), clamp(vec3((injectionSwitch), 0.0), vec3((injectionSwitch), 0.0), _GLF_IDENTITY(vec3((injectionSwitch), 0.0), (false ? _GLF_FUZZED(vec3(3.0, -4.3, 379.982)) : _GLF_IDENTITY(vec3((injectionSwitch), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), 0.0)) * vec3(1.0, 1.0, 1.0))))))), 0.0)), vec2(vec3(vec2(vec3((injectionSwitch), 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - abs(0.0)))))))) * mat2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(75.02), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0])), _GLF_FUZZED(-3.2)), bvec2(true, false))))).x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sin(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0), 0.0), (true ? mat2x3(injectionSwitch, sin(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0), 0.0) : _GLF_FUZZED(mat2x3(-1.4, -2.5, 4382.4085, 2.6, 445.493, 63.99)))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-60.56)), float(injectionSwitch.y), bool(true)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), false, false)))))))), false || (bool(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), false, false)))))))))))))))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))) || false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))) || _GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(reflect(vec2(9.2, 38.62), vec2(-994.883, -1420.2746))) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6938.3735)), vec2(_GLF_FUZZED(7665.8606), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(1.8)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), true && (bool(true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), true && (bool(true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(bool(true), true && (bool(true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (3) ^ 0))) | _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(ivec4(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), 0, 0, 1)))), max((_GLF_IDENTITY(int(3), int(ivec4(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), 0, 0, 1)))), (_GLF_IDENTITY(int(3), int(ivec4(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), 0, 0, 1))))))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(false ? _GLF_FUZZED(-61914) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), (~ (int(3))) | 0))), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) >> 0), (false ? _GLF_FUZZED(-61914) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), (~ (int(3))) | 0))), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) >> 0)) + 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), true, false, false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
