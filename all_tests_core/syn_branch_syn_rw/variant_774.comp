#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))), true, false))), false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), (min(injectionSwitch[0], injectionSwitch[0])) / 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))[_GLF_IDENTITY(1, (1) * 1)])), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(dot(injectionSwitch, vec2(3.5, -15.72)), -4834.5250)) : injectionSwitch.x)) < injectionSwitch.y)) && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(mat4x3(exp(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))), exp(vec2(0.0, 0.0)), _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(mat3x4(exp(vec2(0.0, 0.0)), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))))))))) || false, false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))))))))) || false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))))))))) || false, false, false))), bool(bvec4(! (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))))))))) || false, false, false))), true, false, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(64.02) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! _GLF_IDENTITY((! (false)), true && ((! (false)))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 62.21))), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), ! (! (true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) ^ 0u) | (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-82.66)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(84829u) : 1u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(84829u) : _GLF_IDENTITY(1u, (1u) - 0u))))), (uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(84829u) : 1u))))) | 0u)) * (workgroup_size)) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) << 0u))) >> 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), (0u | 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u, ((max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u) | ((max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u, uint(uvec3(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + subgroup_local_id)) / 1u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), 1u), uvec2(0u, 0u) ^ (uvec2((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)))), (uint(uint((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u))))) - 0u))))))) >> 0u)) | ((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (3u))), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), uint(uvec2(_GLF_IDENTITY((max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), min((max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), 1u))) / 1u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)) | ((subgroup_local_id))) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), 0u + (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u | (((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(uvec4(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), (0u | 0u), 0u, 1u)))) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)), (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u))) | 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)))) : _GLF_FUZZED(29259u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) + 0u, clamp((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id), (0u | 0u) | ((subgroup_id))) + 0u, _GLF_IDENTITY((subgroup_id) + 0u, (true ? _GLF_IDENTITY((subgroup_id), (true ? (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size))) + 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))))) * subgroup_size) * 1u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) + 1) ^ 0u, (_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) + 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) + 0u), 0u, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) + 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) + 0u), 0u, 0u, 1u)) * uvec4(1u, 1u, 1u, 1u))))))) ^ 0u), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) + 0u) ^ 0u)))) ^ _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (uvec4(0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))), min(0u, 0u)), 1u, 0u)))))))) | ((subgroup_local_id + 1) ^ 0u)))), max((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) ^ 0u, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) ^ 0u) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) ^ 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) ^ 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) ^ 0u, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))))) ^ 0u) ^ 0u)) | 0u)) ^ 0u))))) | ((subgroup_local_id + 1) ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), min(int(ivec2(1, 1)), int(ivec2(1, 1))))), 0))), _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup)))) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (0u) * (1u ^ 0u)), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) ^ 0u) ^ 0u))))) | (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) ^ 0u)))), 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, max((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, clamp((subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(70975u) : 0u)), (subgroup_local_id + 1) ^ 0u, (subgroup_local_id + 1) ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)) + 0u) ^ 0u) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)) + 0u) ^ 0u) ^ 0u) >> 0u, 0u | (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)) + 0u) ^ 0u) ^ 0u) >> 0u, (((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)) + 0u) ^ 0u) ^ 0u) >> 0u) >> 0u)))))))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) ^ 0u, (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) : _GLF_FUZZED(workgroup_id))) + 1)) + 0u, (true ? ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)) + 0u : _GLF_FUZZED(num_workgroup)))) ^ 0u) ^ 0u))))))) | ((subgroup_local_id + 1) ^ 0u)))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(4), int(4))) | (0))) ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || ((false) && true))))), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))) | (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-21.34)), vec2(_GLF_FUZZED(13.45), (injectionSwitch)[1]), bvec2(false, true))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) - 0), min(0, 0)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0)))), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))), 0 | ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))))) : _GLF_FUZZED(98051)))), 1, 1, (0 ^ 0))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7515.2963)), (true ? float(_GLF_FUZZED(7515.2963)) : _GLF_FUZZED(-6109.1554))), float(injectionSwitch.x), bool(true)))))) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9483.2760), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5435.0652)), bvec2(true, false))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5645.1441)), bool(false))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-7.1, 41.61)))))).x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), clamp(virtual_gid, virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | 0), 64)), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), true && (bool(bvec3(_GLF_DEAD(false), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
