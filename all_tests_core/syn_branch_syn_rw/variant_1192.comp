#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 ivec4 _f0;
 uvec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_22 {
 mat3 _f0;
 uvec2 _f1;
 uvec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 uvec2 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 mat3x2 _f1;
 bool _f2;
 mat2x3 _f3;
 bvec2 _f4;
 vec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 int _f3;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_18 {
 int _f0;
} ;

struct _GLF_struct_25 {
 mat3x4 _f0;
 vec4 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_24 _f4;
 vec3 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 mat3x2 _f1;
 mat4 _f2;
 uint workgroup_size;
 uvec4 _f3;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 bvec4 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 mat3 _f1;
 bvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 vec3 _f1;
 float _f2;
 float _f3;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 mat2 _f1;
 mat3 _f2;
 float _f3;
 uint _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 mat4x2 _f1;
 vec4 _f2;
 mat3x4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 int _f1;
 mat2 _f2;
 mat3x4 _f3;
 bool _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 float _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 bool _f1;
 ivec4 _f2;
 uint virtual_gid;
 _GLF_struct_13 _f3;
 mat2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_5 {
 uint subgroup_id;
 ivec4 _f0;
 int _f1;
 uint _f2;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 mat2x3 _f1;
 vec4 _f2;
 int _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 int _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 vec3 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 bvec2 _f4;
 int _f5;
 bool _f6;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bvec3 _f1;
 mat2x4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 int _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 int _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)), false))), (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(false, true && (false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_DEAD(false)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(true && (_GLF_DEAD(false)), false, true)), (bool(bvec3(true && (_GLF_DEAD(false)), false, true))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), false || (! _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ((true)) && true), true))))))))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(1u, max(1u, 1u)), bvec3(_GLF_IDENTITY(true, (true) && true)), mat2x4(1.0), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-56.63, -3916.9925, 247.793, -1.0, 706.660, 77.41, 14.95, -7.1, -7.1, -9.1, -2.5, _GLF_IDENTITY(53.82, clamp(53.82, 53.82, _GLF_IDENTITY(53.82, (53.82) * 1.0))), 0.2, 1.3, _GLF_IDENTITY(5022.4515, min(5022.4515, 5022.4515)), -0.3)) : mat4(1.0)))), _GLF_struct_1(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), vec3(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(vec3(1.0), vec3(1.0), vec3(1.0)), vec3(_GLF_IDENTITY(mat3x2(clamp(vec3(1.0), vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, abs(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))))))), vec3(1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(7.0, -566.636, -1113.0337, -8.6, -470.028, -3.9)) : mat3x2(clamp(vec3(1.0), vec3(1.0), vec3(1.0)), 0.0, 0.0, 0.0))))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-3.3, (-3.3) * 1.0), -81.55, 836.091))))), mat2x3(1.0), uvec4(1u), bvec2(true), _GLF_IDENTITY(1, (1) - 0), true), 1, _GLF_struct_2(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1, _GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), (ivec4(1)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), min(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0)))))), ivec4(1), _GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(-62078) : (1)))) / 1)))))))))))), _GLF_struct_3(vec3(1.0), mat2x3(1.0), vec4(1.0), 1, uvec4(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) * 1u)))))), _GLF_struct_5(gl_SubgroupID, ivec4(1), 1, 1u), 1);
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(mat3x4(1.0), vec4(1.0), _GLF_struct_18(1), _GLF_struct_21(uvec3(1u), _GLF_struct_19(vec2(1.0), mat2x3(1.0), mat2(1.0), 1), _GLF_struct_20(mat2(1.0), mat3x2(1.0), true, mat2x3(1.0), bvec2(true), vec2(1.0), mat4x3(1.0))), _GLF_struct_24(ivec3(1), uvec2(1u), _GLF_struct_22(mat3(1.0), uvec2(1u), uvec2(1u), bvec4(true)), _GLF_struct_23(ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17252)))), uvec4(1u), bvec3(true))), vec3(1.0), gl_SubgroupSize);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_IDENTITY(vec3(1.0), (true ? vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(-104.651, -67.16, -3.0), (76.23 - vec3(47.54, -8.0, 6.8)))) : 1.0)), max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.8)), bool(false))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) : _GLF_FUZZED(vec3(-581.372, -4.8, _GLF_IDENTITY(-467.559, mix(float(-467.559), float(_GLF_FUZZED(-9808.0867)), bool(false))))))), bvec4(true), _GLF_struct_15(mat3x4(1.0)), _GLF_struct_16(ivec2(1), mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat4(1.0), gl_WorkGroupSize.x, uvec4(1u)), _GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.0)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_17._f3.workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), max(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(uint(workgroup_id)))))));
 uint subgroup_base = _GLF_struct_replacement_25.subgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_id, 0u | (_GLF_struct_replacement_6._f1.subgroup_id))) / 1u)) / (1u | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_9(ivec2(1), mat2x4(1.0), mat3x2(1.0), _GLF_struct_7(mat4(1.0), 1, mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat3x4(1.0), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), uvec4(1u)), _GLF_struct_8(mat2(1.0), mat4x2(1.0), vec4(1.0), mat3x4(1.0), uvec3(1u)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-325.621)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)))), true, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (1 & 1) * (_GLF_IDENTITY(int(int(1)), int(_GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) | (int(int(int(1))))))))))), workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_13(_GLF_struct_10(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), 1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true)))), mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))))), (mat4x3(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true)))))) * mat4(1.0))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat3(1.0), 1.0, 1u), _GLF_struct_11(bvec4(true), vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-4211.1033, -7419.5120))))) / vec2(1.0, 1.0)).x), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(mat3(-9.5, -1.4, 7.0, -690.854, 3.2, 4431.3086, -2.6, -8.7, 19.44))) : mat4(1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5570.7047) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, abs(1.0)), max(vec3(1.0, 0.0, abs(1.0)), vec3(1.0, 0.0, abs(1.0)))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), 0.0), mat4x2(mat4x3(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0), mat4x2(mat4x3(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0), mat4x2(mat4x3(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(tan(0.0), 0.0, cos(0.0), tan(0.0))), dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(tan(0.0), 0.0, cos(0.0), tan(0.0)))) * (1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(tan(0.0), 0.0, cos(0.0), tan(0.0))), dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(tan(0.0), 0.0, cos(0.0), tan(0.0)))) * (1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0))))), float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mat4x2(mat4x3(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0)))))))), 0.0, 1.0))), 1.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(vec2(abs(0.0), 0.0)), min(float(vec2(abs(0.0), 0.0)), float(vec2(abs(0.0), 0.0))))), abs(0.0))))))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mix(float(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(32.17)), bool(false))), float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mix(float(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(32.17)), bool(false))), float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), log(1.0))), (false ? _GLF_FUZZED(-63.20) : float(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mix(float(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(32.17)), bool(false))), float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.2) : 0.0)), 1.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), log(1.0)))))))), _GLF_struct_12(vec2(1.0), mat3(1.0), bvec3(true), vec2(1.0))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) % _GLF_struct_replacement_25.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, false)))), bool(bool(bool(bool(bool(bvec4(false, true, false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_14.virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))) + 1 < (_GLF_struct_replacement_25.subgroup_size / _GLF_IDENTITY(2, ~ (~ (2)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))[0], _GLF_FUZZED(float(37881u))), vec2(_GLF_FUZZED(-990.369), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true))))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(26.03) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0))), (false ? _GLF_FUZZED(26.03) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0)))) / 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0)), (mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(26.03) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / cos(sin(0.0))), 0.0, 0.0, 0.0, 1.0)), 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(26.03) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(6.0), max(true ? 0.0 : _GLF_FUZZED(6.0), true ? 0.0 : _GLF_FUZZED(6.0))))), (false ? _GLF_FUZZED(26.03) : _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(908.031))) : _GLF_IDENTITY(_GLF_FUZZED(6.0), max(_GLF_FUZZED(6.0), _GLF_FUZZED(6.0)))))) / 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0)), (mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(26.03) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / cos(sin(0.0))), 0.0, 0.0, 0.0, 1.0)), 1.0)))) / 1.0))), (_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / exp(0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.5)), float(0.0), bool(true))))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))), float(mat3x2(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, sin(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))) + 0.0))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) / 1), 4)));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_14.virtual_gid], _GLF_IDENTITY(read, (read) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, int(int(4))), 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true, bool(bvec4((false) && true, true, true, false)))), true && _GLF_IDENTITY((false), ((false)) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))))))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (false)))))), false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)))))), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) && true) && _GLF_IDENTITY((false), false || ((false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false)), bool(bvec2(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false)), _GLF_IDENTITY(false, ! (! (false))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-11.37)))))) * mat2(1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(-559.669, 7468.9127, -4.2, 6280.4609).q)), float(1.0), bool(true)))))) - vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, sin(0.0), 0.0, 0.0), (true ? vec4(0.0, sin(0.0), 0.0, 0.0) : _GLF_FUZZED(vec4(5086.0167, 0.7, 91.05, 134.709)))))), 0.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(5576.7466)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0))).y), bool(true))) : _GLF_FUZZED(inversesqrt(5.7))))))), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(362.514) : 0.0)), 0.0)), 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))))), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0)))), max(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0)))), (true ? float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0)))) : _GLF_FUZZED(-88.00)))))), injectionSwitch.x)) > injectionSwitch.y))))), true))) && true))) && true))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, true, false)))) && true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
