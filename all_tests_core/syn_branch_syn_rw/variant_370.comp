#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) ^ 0)), (int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(_GLF_ONE(1.0, injectionSwitch.y)) * (2)) : _GLF_FUZZED(-1746))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), (true ? (int(2)) : _GLF_FUZZED(_injected_loop_counter))) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, (_GLF_IDENTITY((int(2)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), int(ivec3((int(2)), 0, 0))))), 0)), clamp(int(ivec2(_GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), int(ivec3((int(2)), 0, 0))))), 0)), int(ivec2(_GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), int(ivec3((int(2)), 0, 0))))), 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), int(ivec3((int(2)), 0, 0))))), 0)), int(ivec3(int(ivec2(_GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), int(ivec3((int(2)), 0, 0))))), 0)), 1, 0)))))) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) - 0), ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 0 + (~ (int(2))))))) + 0)) << 0) | ((int(2)) << 0))), 0, 0)), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))), int(_GLF_IDENTITY(ivec2((false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))), 0), clamp(_GLF_IDENTITY(ivec2((false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))), 0), ~ (~ (ivec2((false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))), 0)))), ivec2((false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))), 0), ivec2((false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))), 0)))))))) / 1)))))), _GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), ~ (~ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))))))), max(clamp(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), ~ (~ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))))))), _GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), ~ (~ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))))))), max(clamp(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), ~ (~ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))))))), clamp(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1)))))), ~ (~ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) << 0, ((int(2)) << 0) | ((int(2)) << 0))), 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec3(_GLF_IDENTITY(int(2), (int(2)) << 0), 0, 0)))))) / 1))))))))))))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))), ! (! _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(1110.6568) : injectionSwitch[1])))).y)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false))), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))) && true)) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true))) && true))))))))), true && ((! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(1110.6568) : injectionSwitch[1])))).y)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false))), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))) && true)) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, false)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true))) && true))))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(83.43, 888.485), vec2(8.1, 6.6))) : injectionSwitch)))).x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
        continue;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 0u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 0u)) | (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 0u))))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) ^ 0u)) >> 0u))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(63383u, (_GLF_IDENTITY(63383u, (63383u) | 0u)) / 1u), 25383u, 109384u)) : gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8587.4813), _GLF_FUZZED((true ? -6251.4541 : 783.835))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u))) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base))) ^ 0u) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) >> 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) >> 0u))) | (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) >> 0u))))))) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), clamp((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), min((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2)))))))) - 0u))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), max((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))), (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, 2))))))))))) == _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + 0))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).x, float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).x))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat3(vec2(mat2(injectionSwitch, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).x)))) > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))) || false))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, false, false)), true && (bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, false, false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), true && ((((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false)))) || false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false))))))))))))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))) && true))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))), true && _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))) && true)), true && (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))) && true))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), _GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))), false || (true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false), false, true, false))), false || (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false), false, true, false)))))))))), ! (! (false))))), _GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))), ! (! (true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), false))))), ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), (bool((_GLF_IDENTITY(false, ! (! (false)))))) && true))), false))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))) && true))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))))) || false))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))))) && true))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), (_GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))) || false)), true, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)))).x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false), false, true, false)))))))), ! (! (false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false)) && true))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))) && true))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(8.6)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(92.72)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(8.6)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(92.72)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(8.6)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(92.72)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))) && true))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(8.6)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(92.72)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(8.6)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(92.72)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(8.6)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(92.72)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false)))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (! (bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))), bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false)))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))))), ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false)))), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true)))))))))))))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))), ! (! (false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), true)))) || false))))), ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), true)))) || false))))), ! (! (false))))), false), bvec2(bvec3(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), true)))) || false))))), ! (! (false))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), true)))) || false))))), ! (! (false))))), false), bvec2(bvec3(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.7546)), float(injectionSwitch.y), bool(true)))))), true)))), true)))) || false))))), ! (! (false))))), false), true)))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), _GLF_IDENTITY(false, (false) && true), false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))), true && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! (! (false)))))) && true), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))), bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))) || false)) || false), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false), false, true, false))), ! (! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) || false)) || false), false, true, false))))))))))), ! (! (false))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) && true, true && ((! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))))))))), false, false, true))))), (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ((! (false))) && true)))))), ! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))))), _GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))), false))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))), false))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! (false)))))))), false))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))), false))), false, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))))))))) || false)) && true))))))))) && true)), true))))
    {
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ 0u, min((next_virtual_gid) ^ 0u, _GLF_IDENTITY((next_virtual_gid) ^ 0u, min(_GLF_IDENTITY((next_virtual_gid) ^ 0u, ~ (~ ((next_virtual_gid) ^ 0u))), (next_virtual_gid) ^ 0u)))))], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, int(int(4))))))), 64, 4);
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), bool(bvec2(bool(bvec3(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), false)))))), bool(bvec2(! (! (_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), bool(bvec2(bool(bvec3(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), false)))))), false))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (true ? _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 0u))) : _GLF_FUZZED(subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (true ? _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u)))), (_GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 1u, 0u))) : _GLF_FUZZED(subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0u) >> 0u)), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec2(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((virtual_gid) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) >> 0u)) - 0u))), uint(uvec2(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u)))))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))], read, 4, 64, _GLF_IDENTITY(4, (4) / 1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
}
