#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8428.1677) : injectionSwitch.y))) * abs(1.0))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))) || false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(1.0)) - vec2(0.0, 0.0))).y)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), false, false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true) || (bool(_GLF_IDENTITY(bvec3(((false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(((false)), false, false), bvec3(bvec4(bvec3(((false)), false, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-534.584)), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-534.584)), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, injectionSwitch.y))))) * 1.0))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, -8.8)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(13.42, 4.3)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0)))), (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0))))) + 0.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))) * mat4(1.0))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))) * mat4(1.0)))) * mat2(1.0))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))) || ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, -8.8)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, tan(0.0))) * mat4(1.0))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))) * mat4(1.0)))) * mat2(1.0))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))).y, (false ? _GLF_FUZZED(intBitsToFloat(-86491)) : injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), ! (! (! ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)))))))))))))))) && true)))))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(bvec3(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)), false)))))), (false) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))))), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false)))), bool(bvec2(bool(bool(bool(bvec2(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), true, false, false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), true)))))) && true)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(115619u, 74413u, 53225u), uvec3(uvec3(_GLF_IDENTITY(uvec3(115619u, 74413u, 53225u), clamp(uvec3(115619u, 74413u, 53225u), uvec3(115619u, 74413u, 53225u), uvec3(115619u, 74413u, 53225u))))))) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), uvec3(uvec3((gl_WorkGroupID) - uvec3(0u, 0u, 0u))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))))))))))).x), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))))))))))).x), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107798u, 39587u, 189525u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u))))))))))).x)) << 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.4)), bvec2(true, false))).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(878.253)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-346.744), _GLF_FUZZED(-21.88)), bvec2(false, false)))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(878.253)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID) >> (uvec3(0u, 0u, 0u) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u), 0u))))), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED(num_workgroup)))) ^ 0u))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(878.253, mix(float(_GLF_IDENTITY(878.253, mix(float(_GLF_FUZZED(-0.1)), float(878.253), bool(true)))), float(_GLF_FUZZED(-69.41)), bool(false))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(num_workgroup))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(num_workgroup)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u))))).x, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(878.253, mix(float(_GLF_IDENTITY(878.253, mix(float(_GLF_FUZZED(-0.1)), float(878.253), bool(true)))), float(_GLF_FUZZED(-69.41)), bool(false))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(878.253, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(878.253, mix(float(_GLF_FUZZED(-0.1)), float(878.253), bool(true))), (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(878.253, mix(float(_GLF_FUZZED(-0.1)), float(878.253), bool(true)))))), _GLF_IDENTITY(float(_GLF_FUZZED(-69.41)), clamp(float(_GLF_FUZZED(-69.41)), _GLF_IDENTITY(float(_GLF_FUZZED(-69.41)), (float(_GLF_FUZZED(-69.41))) + 0.0), float(_GLF_FUZZED(-69.41)))), bool(false))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(num_workgroup)))) ^ 0u))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(878.253, mix(float(_GLF_IDENTITY(878.253, mix(float(_GLF_FUZZED(-0.1)), float(878.253), bool(true)))), float(_GLF_FUZZED(-69.41)), bool(false))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uvec3(115619u, 74413u, 53225u)) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 1u * (1u)) * (0u)) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (true ? _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)) : _GLF_FUZZED(uint(true)))))))) ^ 0u))))).x) << 0u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(878.253)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(115619u, 74413u, 53225u), ~ (~ (uvec3(115619u, 74413u, 53225u))))) : gl_WorkGroupID)), max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(89741u, 179704u, 91781u)) : gl_WorkGroupID)), (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) | (_GLF_IDENTITY(1u, (1u) - 0u))), 1u)) * (0u), uint(uint(1u * (0u))))) : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(155103u) : (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) | (_GLF_IDENTITY(1u, (1u) - 0u))), 1u)) * (0u), uint(uint(1u * (0u))))) : _GLF_FUZZED(num_workgroup)))))) ^ _GLF_IDENTITY(0u, min(0u, 0u))))))).x))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(115619u, _GLF_IDENTITY(clamp(115619u, 115619u, 115619u), (clamp(115619u, 115619u, 115619u)) * 1u)), 74413u, 53225u)) : gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(46474u, 181795u, 149748u)))) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(46474u, 181795u, 149748u)))) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(46474u, 181795u, 149748u)))) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))))).x)) - _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((0u | 0u) / 1u, _GLF_IDENTITY(uint(uvec3((0u | 0u) / 1u, 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))), (0u | 0u))) / 1u, 1u, 1u)), uint(uvec3((0u | 0u) / 1u, 1u, 1u))))))), (true ? (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((0u | 0u) / 1u, _GLF_IDENTITY(uint(uvec3((0u | 0u) / 1u, 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))), (0u | 0u))) / 1u, 1u, 1u)), uint(uvec3((0u | 0u) / 1u, 1u, 1u))))))) : _GLF_FUZZED(num_workgroup)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(791.162))), (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(791.162))), (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(791.162))), (injectionSwitch.x > injectionSwitch.y) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))))) : _GLF_FUZZED(distance(87.08, -5.1)))), 1.0), (clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), 1.0)) / 1.0)), injectionSwitch.y), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(determinant(mat3(-362.953, -729.750, _GLF_IDENTITY(8.7, max(8.7, 8.7)), -12.83, -9875.3171, -24.16, -3929.8337, _GLF_IDENTITY(13.21, clamp(13.21, 13.21, _GLF_IDENTITY(_GLF_IDENTITY(13.21, max(13.21, 13.21)), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(13.21, max(13.21, 13.21)))))), -919.828))) : _GLF_ONE(1.0, injectionSwitch.y)))), (float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), _GLF_IDENTITY(float(1.0), float(mat4x2(float(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(true))))) : _GLF_FUZZED(distance(87.08, -5.1)))), 1.0), (clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.848)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), 1.0)) / 1.0)), injectionSwitch.y), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(determinant(mat3(-362.953, -729.750, 8.7, -12.83, -9875.3171, -24.16, -3929.8337, _GLF_IDENTITY(13.21, clamp(13.21, 13.21, _GLF_IDENTITY(_GLF_IDENTITY(13.21, max(13.21, 13.21)), (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(13.21, max(13.21, 13.21)))))), -919.828))) : _GLF_ONE(1.0, injectionSwitch.y))))) + 0.0), float(_GLF_FUZZED((5850.6568 - -4.5))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(6.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(6.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(6.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(6.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2x3((injectionSwitch), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 1.0)), mat2(1.0) * (vec2(mat2x3((injectionSwitch), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 1.0))))), vec2(mat4x2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y)) * (injectionSwitch))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (true ? vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.8) : 1.0)), 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.9)), float(1.0), bool(true))))), 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(injectionSwitch)))))).y)) ? _GLF_FUZZED(3.5) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + _GLF_IDENTITY((_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))).y)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(fma(-75.27, 0.0, -184.755))))), min((_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))), mat2(1.0) * (vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0)))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), min(vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0))))))))).y)))) : _GLF_FUZZED(-5.4))))))) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) / vec2(1.0, 1.0))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]), max((injectionSwitch[1]), (injectionSwitch[1]))) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(-1.7, -57528)) : 0.0))) + abs(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((injectionSwitch[1]), max((injectionSwitch[1]), (injectionSwitch[1]))) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]), max((injectionSwitch[1]), (injectionSwitch[1]))) + 0.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]), max((injectionSwitch[1]), (injectionSwitch[1]))) + 0.0, (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]), max((injectionSwitch[1]), (injectionSwitch[1]))), (_GLF_IDENTITY((injectionSwitch[1]), max((injectionSwitch[1]), (injectionSwitch[1])))) / 1.0) + 0.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))).x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec3(true && (true), false, false)), (bool(bvec3(true && (true), false, false))) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(-766.387)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(-766.387)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true, false)), bool(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(-766.387)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true, false)), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_FUZZED(61.24)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((947.208 + -95.32))), vec2(_GLF_FUZZED(8.9), (injectionSwitch)[1]), bvec2(false, true))).x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED((false ? (7.8 - 73.56) : 2.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false), true))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) - 0.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))))) + 0.0) + 0.0)) - 0.0), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(log2(7804.5167)))), injectionSwitch.x)) > injectionSwitch.y) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false))) || false)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (false) && true)))) && true))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))), bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(false)))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), true && ((! (false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), max(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (true ? ~ (workgroup_base + subgroup_base) : _GLF_FUZZED(subgroup_base))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), 0u + _GLF_IDENTITY((0u ^ (subgroup_local_id)), min(_GLF_IDENTITY((0u ^ (subgroup_local_id)), ((0u ^ (subgroup_local_id))) | 0u), (0u ^ (subgroup_local_id))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || false, ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || false)))), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u)), (uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u))) | (uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u)))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, (0u ^ 0u)))), max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), min((1u), (1u))), _GLF_IDENTITY((1u), (true ? (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) >> 0u))))) : _GLF_FUZZED(workgroup_id))), (1u))) / 1u)))), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), workgroup_base + subgroup_base))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))), (uint(_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)))) << 0u)) << 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))))))))) << 0u)) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (workgroup_base)) + subgroup_base, workgroup_base + subgroup_base)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u)))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, (0u ^ 0u)))), max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), min((1u), (1u))), _GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(workgroup_id))), (1u))) / 1u)))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), uint(uvec2((workgroup_base + subgroup_base), 1u))) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, workgroup_base + subgroup_base))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)) | (subgroup_base)), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (workgroup_base), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_base, workgroup_base + subgroup_base)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u)))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, (0u ^ 0u)))), max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))), clamp(_GLF_IDENTITY((1u), min((1u), (1u))), _GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(workgroup_id))), (1u))) / 1u)))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | (workgroup_base + subgroup_base), ((workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) ^ 0u), workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (workgroup_base)) + subgroup_base, workgroup_base + subgroup_base))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)))) | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) * 1u))))))) ^ 0u), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) << 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (workgroup_base), 1u * ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(uvec2(uint(7u), _GLF_IDENTITY((0u & 75085u), ((0u & 75085u)) + 0u)), min(uvec2(uint(7u), _GLF_IDENTITY((0u & 75085u), ((0u & 75085u)) + 0u)), uvec2(uint(7u), _GLF_IDENTITY((0u & 75085u), ((0u & 75085u)) + 0u)))))), uint(7u))) ^ (workgroup_base)))) + subgroup_base, workgroup_base + subgroup_base))) : _GLF_FUZZED((subgroup_size * virtual_gid))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u)))), (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u))))) - 0u), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))) * 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), (! (false)) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(injectionSwitch, -301.945)) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true && (false)))), (_GLF_IDENTITY(false, true && (false))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), (! (false)) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), true && (! (bool(bvec2(false, false))))))), ! (! (bool(bvec2(false, false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), true && (! (bool(bvec2(false, false))))))), ! (! (bool(bvec2(false, false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), true && (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ((bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))) || false))))), ! (! (bool(bvec2(false, false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sign(8334.9019)) : 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2945.5661)), bool(false))), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(-169.005, -8259.7844, -928.462, _GLF_IDENTITY(-7.0, (-7.0) / 1.0), -1271.5053, 504.398, -5.2, -4.3, 9259.1226, 5527.5520, 47.70, -535.534, -2.6, 1374.9027, -78.18, 493.035))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)), next_virtual_gid)), min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED((next_virtual_gid --)) : next_virtual_gid)))), uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)) ^ uvec2(0u, 0u), (true ? (uvec2(next_virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), 1u * ((0u)))) >> 0u))) << 0u)) ^ _GLF_IDENTITY(0u, min(0u, 0u))))) ^ uvec2(0u, 0u) : _GLF_FUZZED(uvec2(39297u, 40236u))))))), _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED((subgroup_base)))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (0u) >> (192326u & 0u)) | (next_virtual_gid))))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1197.7274)), float(0.0), bool(true))), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec4(-100.571, 4.9, -2.4, -0.4)) : vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec4(-100.571, 4.9, -2.4, -0.4)) : vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec4(-100.571, 4.9, -2.4, -0.4)) : vec4(0.0, 0.0, 0.0, 1.0)))))))))))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(1.0), tan(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))), vec4(mat4x2(vec4(injectionSwitch, log(1.0), tan(0.0)), exp(tan(0.0)), determinant(mat2(0.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0))))).y, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(step(30.97, _GLF_IDENTITY(4.4, min(4.4, 4.4)))))), _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (false ? _GLF_FUZZED(abs((-0.9 + 3.2))) : _GLF_IDENTITY(max(0.0, 0.0), clamp(_GLF_IDENTITY(max(0.0, 0.0), (false ? _GLF_FUZZED(20.28) : max(0.0, 0.0))), _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(3.3)), float(max(0.0, 0.0)), bool(true))), max(0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(vec4(0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)))))))))) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(injectionSwitch, _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(253.445)), bool(false))), tan(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.3))))))).y) && _GLF_IDENTITY(true, (true) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1197.7274)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(374.110)), bool(false)))))), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-100.571, float(mat4x3(-100.571, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, sqrt(1.0), 0.0, 0.0))), 4.9, -2.4, -0.4)) : vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(1.0))), (false ? _GLF_FUZZED(vec4(-100.571, 4.9, -2.4, -0.4)) : vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec4(-100.571, 4.9, -2.4, -0.4)) : vec4(0.0, 0.0, 0.0, 1.0)))))))))))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(1.0), tan(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))), _GLF_IDENTITY(vec4(mat4x2(vec4(injectionSwitch, log(1.0), tan(0.0)), exp(tan(0.0)), determinant(mat2(0.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0)), vec4(mat3x2(vec4(mat4x2(vec4(injectionSwitch, log(1.0), tan(0.0)), exp(tan(0.0)), determinant(mat2(0.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0)), 1.0, 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(step(30.97, _GLF_IDENTITY(4.4, min(4.4, 4.4)))), max(_GLF_FUZZED(step(30.97, _GLF_IDENTITY(4.4, min(4.4, 4.4)))), _GLF_FUZZED(step(30.97, _GLF_IDENTITY(4.4, min(4.4, 4.4)))))))), _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (false ? _GLF_FUZZED(abs((-0.9 + 3.2))) : _GLF_IDENTITY(max(0.0, 0.0), clamp(_GLF_IDENTITY(max(0.0, 0.0), (false ? _GLF_FUZZED(20.28) : max(0.0, 0.0))), _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(3.3)), float(max(0.0, 0.0)), bool(true))), max(0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(vec4(0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)))))))))) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(injectionSwitch, _GLF_IDENTITY(log(1.0), mix(_GLF_IDENTITY(float(log(1.0)), max(float(log(1.0)), _GLF_IDENTITY(float(log(1.0)), min(_GLF_IDENTITY(float(log(1.0)), clamp(float(log(1.0)), float(log(1.0)), float(log(1.0)))), _GLF_IDENTITY(float(log(1.0)), clamp(float(log(1.0)), float(log(1.0)), float(log(1.0)))))))), float(_GLF_FUZZED(_GLF_IDENTITY(253.445, min(253.445, 253.445)))), bool(false))), tan(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.3))))))).y) && _GLF_IDENTITY(true, (true) || false)))))))))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     subgroupBarrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(true, ! (! (true))), true, false)), ! (! (bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(163194u))), vec2(_GLF_FUZZED(-1024.4822), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(163194u))), vec2(_GLF_FUZZED(-1024.4822), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-66.17, 3.8)) : (injectionSwitch)))))[0], _GLF_FUZZED(float(163194u))), vec2(_GLF_FUZZED(-1024.4822), (injectionSwitch)[1]), bvec2(false, true)))))) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))), true, true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(1.7))) * (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, sqrt(1.0), 0.0)))) - 0.0)) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) * 1.0))))), 0.0, 0.0)), (false ? _GLF_FUZZED(-18.17) : determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), 0.0, 0.0)), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0), (false ? _GLF_FUZZED(-0.0) : false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))) * 1.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0))))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0 + _GLF_IDENTITY((determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * 1.0)) / 1.0)), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0, 0.0))), float(vec4((determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(4.6) : (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, cos(0.0), round(length(normalize(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * 1.0)) / 1.0)), (false ? _GLF_FUZZED(mod(-613.311, -7894.5746)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0, 0.0))), 1.0, 0.0, 0.0)))))), determinant(mat3(1.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, sqrt(0.0), 1.0))), (mat4x2(injectionSwitch.x, 1.0, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(450.401)), bool(false))), 0.0, 0.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), determinant(mat3(1.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, sqrt(0.0), 1.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), (_GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), clamp(float(vec2(injectionSwitch.x, 0.0)), float(vec2(injectionSwitch.x, 0.0)), float(vec2(injectionSwitch.x, 0.0))))) / 1.0)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).y)) ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-80857, (-80857) | (_GLF_IDENTITY(-80857, (-80857) ^ 0)))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
