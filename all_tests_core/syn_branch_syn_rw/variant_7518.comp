#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.y), bool(true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? -1109.0105 : 10.94))), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? -1109.0105 : 10.94))), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), false, false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)))) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-335.245)), float(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))), bool(true)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[0], injectionSwitch[0])), mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))[0], injectionSwitch[0]))), float(_GLF_FUZZED(-0.4)), bool(false))), injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[0], injectionSwitch[0])), mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))[0], injectionSwitch[0]))), float(_GLF_FUZZED(-0.4)), bool(false))), injectionSwitch[1])).y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)), bool(bvec2(_GLF_DEAD(false), true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-38.69)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)), true, false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0))), injectionSwitch.y, injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))) * mat2(1.0), 1.0, 1.0, sqrt(1.0), 0.0), (false ? _GLF_FUZZED(mat2x3(-8216.3710, 9007.3208, -888.094, 568.969, -1.6, -9613.3493)) : mat2x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))) * mat2(1.0), 1.0, 1.0, sqrt(1.0), 0.0))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))), (injectionSwitch) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-1.4), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))))))[0], _GLF_FUZZED(8.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) + abs(vec2(0.0, 0.0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 0.0, cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), abs(0.0), 1.0, 1.0, 0.0, 0.0), (true ? mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 0.0, cos(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 0.0, cos(0.0)))), abs(0.0), 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(-10.00, -264.174, -26.19, 9322.8981, 515.398, 52.85, -9.4, 955.123, 3854.4689, 21.56, -300.071, -55.38)))))), 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(3.0, 500.139)) : (injectionSwitch) / vec2(1.0, 1.0)))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(3.0, 500.139)) : (injectionSwitch) / vec2(1.0, 1.0))))))))))) : _GLF_FUZZED(vec2(4.6, -9.9)))) - vec2(0.0, 0.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0), (false ? _GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760)) : mat3(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))), 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760)), (_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : mat3(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (vec2(0.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) * 1.0)), 0.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))))[0], (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760)), (true ? _GLF_IDENTITY(_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760)), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760))), (transpose(_GLF_FUZZED(mat3(562.329, 631.504, -554.074, -8.6, 9.9, 720.946, -0.9, 505.633, -839.760)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat3(-374.846, 96.18, 6381.0030, -8.4, 6704.3480, -3996.0745, 4.1, 4515.2120, -8.5)))) : mat3(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0)), 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)), (float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0))) - 0.0))) + 0.0)))), 1.0)))))[1]), vec2(_GLF_FUZZED(float(37112)), _GLF_FUZZED(6893.1256)), bvec2(false, false)))), (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-79.32)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))))), 1.0))) - vec2(0.0, 0.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3((injectionSwitch) / vec2(1.0, 1.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0)), (vec2(mat3((injectionSwitch) / vec2(1.0, 1.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))) * vec2(1.0, 1.0))))) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(1.4), _GLF_FUZZED(21.32)), bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(6.5), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))) - vec2(0.0, 0.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(float(64732))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) : _GLF_FUZZED(vec2(720.200, _GLF_IDENTITY(-3789.8863, min(_GLF_IDENTITY(-3789.8863, float(mat3x2(-3789.8863, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(95.92)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, 0.0))), -3789.8863))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-9.4 * 4697.0087)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(147604u))), bvec2(true, false))), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[0], _GLF_FUZZED(-1.3)), vec2(_GLF_FUZZED(-1.7), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[1], float(_GLF_IDENTITY(mat3(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[1], 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[1], 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), bvec2(false, true))))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-7247.1364, -269.788)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), bvec2(_GLF_IDENTITY(true, false || (true)), false)))) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(((subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(((subgroup_id) | (subgroup_id)), uint(uvec3(_GLF_IDENTITY(((subgroup_id) | (subgroup_id)), (((subgroup_id) | (subgroup_id))) - 0u), 1u, 0u)))) << 0u) | 0u))))) - 0u), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(((subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(((subgroup_id) | (subgroup_id)), uint(uvec3(_GLF_IDENTITY(((subgroup_id) | (subgroup_id)), (((subgroup_id) | (subgroup_id))) - 0u), 1u, 0u)))) << 0u) | 0u))))) - 0u) : _GLF_FUZZED(atomicMin(subgroup_local_id, workgroup_base)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(_GLF_IDENTITY(uint(subgroup_id), uint(uvec3(uint(subgroup_id), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(uint(subgroup_id)))), 0u, 0u)))), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))) | (subgroup_id))))) - 0u)))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(((subgroup_id) | (subgroup_id)), 0u ^ (_GLF_IDENTITY(((subgroup_id) | (subgroup_id)), 0u ^ (((subgroup_id) | (subgroup_id)))))) | 0u))))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, (((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) & 1u) * (subgroup_id)))), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) * 1u) : _GLF_FUZZED(subgroup_local_id))))))), (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(packUnorm4x8(vec4(-45.35, -25.46, 44.19, 5.3)))))), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))))) - 0u)))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | 0u))))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(_GLF_IDENTITY(uint(subgroup_id), uint(uvec2(uint(subgroup_id), 1u))))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | 0u))))), (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | 0u)))))) | (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | 0u)))))))))) - 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))) - 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))) - 0u))), ((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))) - 0u)))) * 1u)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | 0u))))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), _GLF_IDENTITY((uint(uint(subgroup_id))), ((uint(uint(subgroup_id)))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, 1u, 1u)))))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u + (uint(5u))), _GLF_IDENTITY(uint(5u), clamp(_GLF_IDENTITY(uint(5u), 0u + (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id)))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))))) + 0u)) - 0u))))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(((subgroup_id) | (subgroup_id)) | 0u, (((subgroup_id) | (subgroup_id)) | 0u) << (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) << 0u)))))))))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_id)), max(uint(uint(subgroup_id)), _GLF_IDENTITY(uint(uint(subgroup_id)), ~ (~ (uint(uint(subgroup_id))))))), 1u, 0u))), _GLF_IDENTITY((uint(uint(subgroup_id))), min((uint(uint(subgroup_id))), (uint(uint(subgroup_id))))) | (uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))))), 0u, 0u)))), (subgroup_id) | (subgroup_id))))) - 0u)))))) * subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u))))) << 0u))))))) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) / 1u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))) || false), false, true, true))))), false)), (bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), false))) && true)) || false), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), true, false, false)))), false), true, true)))), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false)), ! (! _GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false))), bool(bvec3(_GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false))), ! (! ((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false)))))), true, true)))), ! (! (! (_GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false))), bool(bvec3(_GLF_IDENTITY((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false))), ! (! ((bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), false)))))), true, true)))))))))))) && true)) || false)) || false)) && true)))) ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))) / 1u)))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u, 1u)))), 0u | (clamp(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1, subgroup_local_id + 1)), 0u, 1u)))))))), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((_GLF_FUZZED(num_workgroup)) * 1u, _GLF_IDENTITY(((_GLF_FUZZED(num_workgroup)) * 1u) * 1u, ~ (~ (_GLF_IDENTITY(((_GLF_FUZZED(num_workgroup)) * 1u) * 1u, 0u | (((_GLF_FUZZED(num_workgroup)) * 1u) * 1u))))))) : (subgroup_local_id + 1)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((0u & 199433u) + (subgroup_local_id), uint(_GLF_IDENTITY(uvec4((0u & 199433u) + (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), ~ (~ (uvec4((0u & 199433u) + (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))))), (false ? _GLF_FUZZED(75505u) : _GLF_IDENTITY(_GLF_IDENTITY((0u & 199433u) + (subgroup_local_id), uint(_GLF_IDENTITY(uvec4((0u & 199433u) + (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), ~ (~ (uvec4((0u & 199433u) + (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))))), (_GLF_IDENTITY((0u & 199433u) + (subgroup_local_id), uint(_GLF_IDENTITY(uvec4((0u & 199433u) + (subgroup_local_id), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9586.3954)), bool(false))), injectionSwitch.x)), 0u, 0u), ~ (~ (uvec4((0u & 199433u) + (subgroup_local_id), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(floatBitsToUint(-4104.2733))))))), 0u, 0u))))))) / 1u))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), ~ (~ (0u ^ (subgroup_local_id))))))) + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(_GLF_IDENTITY(1, (1) / 1)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), (4))), (false ? _GLF_FUZZED(41226) : _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), (4))), max(_GLF_IDENTITY((4), min((4), (4))), _GLF_IDENTITY((4), min((4), (4))))))) >> 0)) - 0, (false ? _GLF_FUZZED(-54763) : (_GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) * 1), (4))) >> 0)) - 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(58693, (_GLF_IDENTITY(58693, (58693) / 1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) : 4)), _GLF_IDENTITY((4), min((4), (4))) >> 0)) - 0)) << 0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ^ workgroup_size), ((subgroup_size ^ workgroup_size)) | ((subgroup_size ^ workgroup_size)))) : subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id : _GLF_FUZZED((+ 65492u))))), (false ? _GLF_FUZZED((subgroup_size ^ workgroup_size)) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ^ workgroup_size), ((subgroup_size ^ workgroup_size)) | ((subgroup_size ^ workgroup_size)))) : subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id : _GLF_FUZZED((+ 65492u))))), (false ? _GLF_FUZZED((subgroup_size ^ workgroup_size)) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ^ workgroup_size), ((subgroup_size ^ workgroup_size)) | ((subgroup_size ^ workgroup_size)))) : subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id : _GLF_FUZZED((+ 65492u))))), (false ? _GLF_FUZZED((subgroup_size ^ workgroup_size)) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ^ workgroup_size), ((subgroup_size ^ workgroup_size)) | ((subgroup_size ^ workgroup_size)))) : subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id : _GLF_FUZZED((+ 65492u))))), (false ? _GLF_FUZZED((subgroup_size ^ workgroup_size)) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ^ workgroup_size), ((subgroup_size ^ workgroup_size)) | ((subgroup_size ^ workgroup_size)))) : subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id : _GLF_FUZZED((+ 65492u))))), (false ? _GLF_FUZZED((subgroup_size ^ workgroup_size)) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 1) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ^ workgroup_size), ((subgroup_size ^ workgroup_size)) | ((subgroup_size ^ workgroup_size)))) : subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size ^ workgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_FUZZED((subgroup_size ^ workgroup_size)), 1u, 0u))))) : subgroup_local_id : _GLF_FUZZED((+ 65492u))))), (false ? _GLF_FUZZED((subgroup_size ^ workgroup_size)) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 1))))) - 0u), min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1)), subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))))))) : subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u) : _GLF_FUZZED(workgroup_size)))) : subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), (false ? _GLF_FUZZED(ivec3(-85793, -98026, 69133)) : ivec3(1, 0, 1))))), 1)))))))))), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) / 1u))))) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(821.486))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), bool(bool(bool(bvec3(_GLF_DEAD(false), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), false, false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), false, false, false)))), true && (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))))), false, false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))), false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)))))))), false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))), false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-4249.7412)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(8.7)), bool(false))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), tan(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) : _GLF_FUZZED(-8.5))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat3x4(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-4249.7412)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), _GLF_IDENTITY(float(_GLF_FUZZED(8.7)), min(float(_GLF_FUZZED(8.7)), float(_GLF_FUZZED(8.7)))), _GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) - 0.0)))), true))), tan(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-8.5))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), round(length(normalize(1.0))), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-4249.7412)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(8.7)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-4249.7412)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(8.7)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(_GLF_IDENTITY(-4249.7412, min(-4249.7412, -4249.7412)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) * _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(8.7)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-4249.7412)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(8.7)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), tan(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) + 0.0) : _GLF_FUZZED(-8.5))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat3x4(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-4249.7412)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), clamp(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), float((injectionSwitch)[0]))), float((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)]))), float(_GLF_FUZZED(_GLF_IDENTITY(8.7, clamp(8.7, 8.7, 8.7)))), bool(false))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-13.21), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.7)), bvec2(true, false))).x < injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, false))), false)))))), tan(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(round(length(normalize(abs(1.0)))) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), min(round(length(normalize(abs(1.0)))) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(round(length(normalize(abs(1.0)))) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(7.1) : round(length(normalize(abs(1.0)))) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), 0.0, 0.0)) : _GLF_FUZZED(-8.5))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), round(length(normalize(1.0))), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(5.6), _GLF_FUZZED(-2.5), _GLF_FUZZED(179.900), (vec4(0.0, 0.0, 0.0, 1.0))[3]), vec4(_GLF_IDENTITY((vec4(0.0, 0.0, 0.0, 1.0))[0], ((vec4(0.0, 0.0, 0.0, 1.0))[0]) + 0.0), (vec4(0.0, 0.0, 0.0, 1.0))[1], (vec4(0.0, 0.0, 0.0, 1.0))[2], _GLF_FUZZED(-4.2)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), min(dot(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.5)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), abs(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0)), clamp(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0)), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0)), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0))))) * sqrt(vec2(1.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.22)), float(0.0), bool(true))), 0.0)), abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, 0.0 + (-1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat4x2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))))))) - sin(vec2(0.0, 0.0)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))), true, true, false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))), true, true, false)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))), true, true, false)), false)), true), bvec3(bvec3(bvec3(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))), true, true, false)), false)), true)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, sqrt(1.0), 0.0, 1.0, 1.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(88.64)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))), min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(88.64)), vec2(_GLF_FUZZED(0.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))), min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) * vec2(1.0, 1.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), true, true)))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ (0 ^ 0)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))) | (64), ~ (~ ((0 >> _GLF_IDENTITY(int(7), int(7))) | _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) ^ 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) ^ 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) ^ 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) ^ 0))) | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) ^ 0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) ^ 0), 64))) - 0)))) ^ (0 ^ 0)), (_GLF_IDENTITY(0, (0) >> 0) >> _GLF_IDENTITY(int(7), int(7))) | (64))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ (0 ^ 0)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) / 1), 0 >> _GLF_IDENTITY(int(7), int(7))))) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) / 1))) ^ (0 ^ 0)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), int(7))), 1 * (~ (_GLF_IDENTITY(int(7), int(7)))))))) | (64))) | 0))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-6.1), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((126.753 / -785.678))), float(1.0), bool(true)))))), max(_GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 1.0))), ((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - log(vec2(1.0, 1.0))), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), ((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.3)), bool(false))), 1.0, 1.0))))))[1]), vec2((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], max((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1]))), vec2(_GLF_FUZZED(56.19), _GLF_FUZZED((8.3 * 5.8))), bvec2(false, false)))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[0], _GLF_FUZZED(-211.273)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6988.5606)), vec2(_GLF_FUZZED(85.16), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false)), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false)), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false))))).x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false)), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY(_GLF_FUZZED(1.6), (false ? _GLF_FUZZED(52.50) : _GLF_FUZZED(1.6)))), bvec2(false, false))))).x > injectionSwitch.y)), false, true))) || false)))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) && true)), false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.3)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-889.829, 7.3)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-889.829, 7.3)) : injectionSwitch) : _GLF_FUZZED(vec2(-9087.1800, -37.07))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-889.829, 7.3)), (_GLF_FUZZED(vec2(-889.829, 7.3))) * mat2(1.0)) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-889.829, 7.3)), (_GLF_FUZZED(vec2(-889.829, 7.3))) * mat2(1.0)) : injectionSwitch), max(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-889.829, 7.3)), (_GLF_FUZZED(vec2(-889.829, 7.3))) * mat2(1.0)) : injectionSwitch), mix(vec2(_GLF_FUZZED(84.41), _GLF_FUZZED(-956.199)), vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-889.829, 7.3)), (_GLF_FUZZED(vec2(-889.829, 7.3))) * mat2(1.0)) : injectionSwitch))[0], ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-889.829, 7.3)), (_GLF_FUZZED(vec2(-889.829, 7.3))) * mat2(1.0)) : injectionSwitch))[1]), bvec2(true, true))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-889.829, 7.3)), (_GLF_FUZZED(vec2(-889.829, 7.3))) * mat2(1.0)) : injectionSwitch))) : _GLF_FUZZED(vec2(8.0, 23.82))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-889.829, _GLF_IDENTITY(7.3, (7.3) + 0.0))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (true))))))), true && (bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
