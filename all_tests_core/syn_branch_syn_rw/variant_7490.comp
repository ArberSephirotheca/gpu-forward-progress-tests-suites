#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 uvec4 _f0;
 uvec2 _f1;
 ivec2 _f2;
 bvec3 _f3;
 mat4 _f4;
 mat3x4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_14 {
 int _f0;
 mat2x4 _f1;
 _GLF_struct_13 _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_10 {
 int _f0;
 uint subgroup_local_id;
 int _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_14 _f2;
 ivec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 vec3 _f1;
 uvec4 _f2;
 ivec3 _f3;
 mat3x4 _f4;
 vec4 _f5;
 float _f6;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 mat4x3 _f1;
 int _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 uvec2 _f1;
 vec2 _f2;
 vec2 _f3;
 vec2 _f4;
 bvec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 bvec2 _f2;
 ivec2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 bvec2 _f1;
 uint workgroup_size;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 mat4x2 _f1;
 vec2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 vec4 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_8 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_10(1, gl_SubgroupInvocationID, 1), _GLF_struct_12(_GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, max(_GLF_IDENTITY((1.0) + 0.0, (false ? _GLF_FUZZED(3.3) : (1.0) + 0.0)), (1.0) + 0.0)))))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, max(_GLF_IDENTITY((1.0) + 0.0, (false ? _GLF_FUZZED(3.3) : (1.0) + 0.0)), (1.0) + 0.0)))))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), 1.0), (false ? _GLF_FUZZED(mat2(-9.7, 52.08, -180.273, -8.9)) : mat2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, max(_GLF_IDENTITY((1.0) + 0.0, (false ? _GLF_FUZZED(3.3) : (1.0) + 0.0)), (1.0) + 0.0)))))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), 1.0))))), mat4x2(1.0))), _GLF_struct_14(1, mat2x4(1.0), _GLF_struct_13(uvec4(1u), uvec2(1u), ivec2(1), bvec3(true), mat4(1.0), mat3x4(1.0), uvec3(1u)), uvec4(1u), mat2x3(1.0)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1))))) - ivec4(0, 0, 0, 0)), true);
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat2x3(1.0), _GLF_struct_1(_GLF_struct_0(vec4(1.0), mat3(1.0))), _GLF_struct_4(bvec4(true), mat2x3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - abs(0.0)), float(_GLF_FUZZED(8876.6028)), bool(false)))), _GLF_struct_2(uvec2(1u), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED((-23.45 + -3.2))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), vec2(1.0), uvec2(1u)), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_struct_3(mat4x2(1.0), bvec2(true), gl_WorkGroupSize.x, bvec3(true), bvec4(true))), _GLF_struct_8(_GLF_struct_5(bvec2(true), uvec2(1u), vec2(1.0), vec2(1.0), vec2(1.0), bvec4(true), true), _GLF_struct_6(mat4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), int(5))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY((5) >> 0, ((5) >> 0) - 0))), int(5))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), int(5)))) - 0), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), int(5))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), int(5)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), int(5)) : _GLF_FUZZED((true ? 28893 : 7948))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) ^ 0)) >> 0)), 0 | (int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (5) >> 0)))))))) * (_GLF_IDENTITY(0 | (1), max(_GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(77953) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0)) | (1))), 0 | (1))))))) >> 0), vec3(1.0)), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 ^ (~ (0))))) + _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) << 0)))))) >> _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(ivec2(ivec4(ivec2(0, 0), 0, 0)), (true ? ivec2(ivec4(ivec2(0, 0), 0, 0)) : _GLF_FUZZED(ivec2(-9655, -99933))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), ivec2(ivec4(ivec2(0, 0), 0, 0))), ivec2(ivec3(_GLF_IDENTITY(ivec2(0, 0), ivec2(ivec4(ivec2(0, 0), 0, 0))), 0)))) * ivec2(1, 1)), ivec2(_GLF_IDENTITY(0, (0) | 0), 0)))), ~ (~ (_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), _GLF_IDENTITY((~ (ivec2(1))), ((~ (ivec2(1)))) | (ivec2(0, 0) << _GLF_IDENTITY(ivec2(8), _GLF_IDENTITY(ivec2(8), (ivec2(8)) << ivec2(0, 0))))) | (_GLF_IDENTITY(~ (ivec2(1)), max(~ (ivec2(1)), ~ (ivec2(1))))))))))), _GLF_struct_7(uvec2(1u), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-7.1, _GLF_IDENTITY(-9214.3825, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(false), float(mat3x2(float(false), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0)))))))), float(-9214.3825), bool(true))), 341.557, 8.2, -33.06, _GLF_IDENTITY(3.3, (true ? _GLF_IDENTITY(3.3, (_GLF_IDENTITY(true, (true) || false) ? 3.3 : _GLF_FUZZED(2.5))) : _GLF_FUZZED(pow(_GLF_IDENTITY(5101.0345, log(1.0) + (_GLF_IDENTITY(5101.0345, (true ? 5101.0345 : _GLF_FUZZED(-5281.3517))))), 800.390)))), -80.50, 3.3)) : mat4x2(1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(determinant(mat2(abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), min(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(-5528.5075) : _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0)))), 1.0)), 1.0), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(step(10.11, vec2(7.1, 37.95))[0]))), 1.0))), min(1.0, 1.0))))), float(_GLF_FUZZED(-9.6)), bool(false))))), min(determinant(_GLF_IDENTITY(mat2(abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-9.6)), bool(false)))), mat2(mat3x4(mat2(abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-9.6)), bool(false)))))))), determinant(mat2(abs(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-6.9)), clamp(float(_GLF_FUZZED(-6.9)), _GLF_IDENTITY(float(_GLF_FUZZED(-6.9)), clamp(float(_GLF_FUZZED(-6.9)), float(_GLF_FUZZED(-6.9)), float(_GLF_FUZZED(-6.9)))), float(_GLF_FUZZED(-6.9)))), bool(false)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))), float(_GLF_FUZZED(-9.6)), bool(false))))))) * (1.0)), 0.0, 1.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2247.6446)), mix(float(float(_GLF_FUZZED(2247.6446))), float(_GLF_FUZZED(-65.13)), bool(false))), float(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-7.1, -9214.3825, 341.557, _GLF_IDENTITY(8.2, max(8.2, 8.2)), -33.06, 3.3, -80.50, 3.3)) : mat4x2(1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(mix(float(sqrt(0.0)), float(_GLF_FUZZED(-2.1)), bool(false)), (mix(float(sqrt(0.0)), float(_GLF_FUZZED(-2.1)), bool(false))) - sqrt(0.0)))), (clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(mix(float(sqrt(0.0)), float(_GLF_FUZZED(-2.1)), bool(false)), (mix(float(sqrt(0.0)), float(_GLF_FUZZED(-2.1)), bool(false))) - sqrt(0.0))))) / exp(0.0))), 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), false))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), false))))))), true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), _GLF_IDENTITY(false, bool(bvec2(false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true), false)))), true))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), _GLF_IDENTITY(true, (true) || false), true), true)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))), true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), true, true)), bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))))), true))))), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), true, true)), bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))))), true))))), true))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), true, true)), bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))))), true))))), true))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bool(true), true, true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(true), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), true, true)), bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))))), true))))), true))))))))), false)))))), true)))), _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(true, (true) || false)), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), true), bvec3(bvec3(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (false))) || false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(false, true && (false))))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false, false))))), true, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false))))), false))))))), ! (! (((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), true, true)), bvec3(bvec3(bvec3(bvec3(bool(true), true, true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), true), bvec3(bvec3(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (false))) || false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, false))))), true, _GLF_IDENTITY(false, (false) || false), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false))))), false)))))))))) || false, false || (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), ! (! (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))))))))))))), true), bvec3(bvec3(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false, false))))))) || (false), true, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (false))) || false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false, false))))), true, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false))))), false))))))), _GLF_IDENTITY(! (! (((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true)))))))), true), bvec3(bvec3(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (false))) || false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))) || false, false))))), true, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false))))), false))))))))), true && (! (! (((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true)))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) || false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || false, bool(bvec2((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))) || false, false))))), true, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false))))), false)))))))))))) || false))))))))))), _GLF_IDENTITY(uvec4(1u), (uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))))) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), mat3x4(1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (_GLF_IDENTITY(! (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! (! (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (_GLF_IDENTITY(! (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! (! (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (_GLF_IDENTITY(! (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! (! (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))) && true)))))))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))) && true) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true, (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && true) && true))))))) && true)))))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) && true) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))) && true))))))))))))) || false) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))) && true) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-233.313), max(_GLF_FUZZED(_GLF_IDENTITY(-233.313, (_GLF_IDENTITY(-233.313, (true ? -233.313 : _GLF_FUZZED(330.713)))) / _GLF_IDENTITY(dot(vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_FUZZED(-233.313)))), float(injectionSwitch.y), bool(true))), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-233.313), max(_GLF_FUZZED(_GLF_IDENTITY(-233.313, 1.0 * (-233.313))), _GLF_FUZZED(-233.313)))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-67.68)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_9._f2._f4.workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))).x > injectionSwitch.y, true)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))).x > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))).x > injectionSwitch.y, true))) && true)))))) || _GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_struct_replacement_15._f0.subgroup_local_id, uint(uint(workgroup_base + subgroup_base + _GLF_struct_replacement_15._f0.subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_struct_replacement_15._f0.subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base))) | 0u) + ((_GLF_IDENTITY(_GLF_struct_replacement_15._f0.subgroup_local_id, (_GLF_struct_replacement_15._f0.subgroup_local_id) / 1u) + _GLF_IDENTITY(1, _GLF_IDENTITY(1, int(int(1))) * _GLF_IDENTITY((1), max((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((1), ((1)) ^ 0))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))) && (false), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((false), true && ((false))), true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (false))), true, true, _GLF_IDENTITY(true, bool(bool(true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))) || false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, false))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), vec2(_GLF_IDENTITY(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0), (true ? _GLF_IDENTITY(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0), clamp(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0), _GLF_IDENTITY(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0), mix(vec4(_GLF_FUZZED(-782.149), _GLF_FUZZED(9652.3230), (vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0))[2], _GLF_FUZZED(9.6)), vec4((vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0))[0], (vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0))[1], _GLF_FUZZED(-2.3), (vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0))[3]), bvec4(true, true, false, true))), vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), 1.0, 1.0))) : _GLF_FUZZED(vec4(-446.039, -600.431, 49.97, 9.5))))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(759.629, 170.320, 197.102, -6.0, -13.81, 4.4)) : _GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if((_GLF_struct_replacement_15._f0.subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, false)), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0))))))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))))) && true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0))))))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))))) && true))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (! (false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ (1))), 4, 64, 4);
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
