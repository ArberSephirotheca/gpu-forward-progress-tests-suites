#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-1.5, 30.27, -0.9, 4.5)))) * (injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false)))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((! (bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))), ((! (bool(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, true)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))) || false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, true)))), false, false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (true)) || false))))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(97.97)), bool(false)))) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, true && (true)))))), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0 + (float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(204.332)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(204.332)), bvec2(true, false)))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false)), mix(float(mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), float(_GLF_FUZZED(-441.376)), bool(false)))), _GLF_FUZZED(204.332)), bvec2(true, false))).x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(float((injectionSwitch)[1])), (float(float((injectionSwitch)[1]))) - 0.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(204.332, (_GLF_IDENTITY(204.332, (204.332) - 0.0)) / 1.0))), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY(vec2(392.797, -7896.1456), _GLF_IDENTITY(vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0))))))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(204.332)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY(vec2(392.797, -7896.1456), _GLF_IDENTITY(vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0))))))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(204.332)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY(vec2(392.797, -7896.1456), _GLF_IDENTITY(vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0))))))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(204.332)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY(vec2(392.797, -7896.1456), _GLF_IDENTITY(vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(vec4(vec2(392.797, -7896.1456), 0.0, 0.0))))))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false))), _GLF_FUZZED(204.332)), bvec2(true, false))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(392.797, -7896.1456))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))))), _GLF_FUZZED(204.332)), bvec2(true, false))).x) / 1.0), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false)), min(mix(float(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), float(vec2(_GLF_IDENTITY(min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), (min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))) / 1.0), 0.0))))), float(_GLF_FUZZED(vec2(-6411.9785, _GLF_IDENTITY(7.6, max(7.6, 7.6))).y)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), bool(false)), (true ? mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(unpackUnorm2x16(subgroup_size)) : (injectionSwitch)))[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(vec2(-6411.9785, 7.6).y)), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, true, true)))) : _GLF_FUZZED(-89.78)))))), _GLF_FUZZED(204.332)), bvec2(true, false))).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]))[0], clamp((vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]))[0], (vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]))[0], (false ? _GLF_FUZZED(11.70) : (vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]))[0])))), (vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], mix(float((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0]), float(_GLF_FUZZED(vec4(3.6, 6987.4072, -3666.9636, -264.481).y)), bool(false))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), mat2(1.0) * _GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), min(((vec2(vec4(injectionSwitch, 0.0, 1.0)))), ((vec2(vec4(injectionSwitch, 0.0, 1.0))))))))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0), mat2(mat3x4(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0))), 1.0, 0.0))))))))[1]))[1]), vec2(_GLF_FUZZED(908.084), _GLF_FUZZED(-7.2)), bvec2(false, false))), vec2(_GLF_FUZZED(-7.5), _GLF_IDENTITY(_GLF_FUZZED(7.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(7.0), min(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) - 0.0), _GLF_FUZZED(7.0))), _GLF_FUZZED(7.0)))), bvec2(false, false)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(575.511, -51.56)) : injectionSwitch)))), injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED((-4.5))), bvec2(false, false))))), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-58.51)), float(1.0), bool(true)))) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))))[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_FUZZED(-6.4)), bool(false))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-72.74)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))) : _GLF_FUZZED(-345.928))), injectionSwitch.x)) > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2537.1382)), float(injectionSwitch.y), bool(true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2537.1382)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true)))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)) > injectionSwitch.y))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.38), _GLF_FUZZED(-2993.7317)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3.4) : injectionSwitch[1]))) + 0.0)) - 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, false || (true)))), true && ((false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << (0u | 0u))], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) >> (0 & -40930))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), int(int((0 >> _GLF_IDENTITY(int(2), int(2)))))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), int(int((0 >> _GLF_IDENTITY(int(2), int(2)))))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), (ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), int(int((0 >> _GLF_IDENTITY(int(2), int(2)))))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0)) | (ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), int(int((0 >> _GLF_IDENTITY(int(2), int(2)))))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0)))) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), int(int((0 >> _GLF_IDENTITY(int(2), int(2)))))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), (ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), int(int((0 >> _GLF_IDENTITY(int(2), int(2)))))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0)) - ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(int(2)))))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), clamp(ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(int(2)))))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(int(2)))))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(int(2)))))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0))), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) | (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), 0 + ((0 >> _GLF_IDENTITY(int(2), int(2))))) | (4))), 1, 1, 0))), ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0), ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), clamp((0 >> _GLF_IDENTITY(int(2), int(2))) | (4), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec4(int(2), 0, 0, 1), (ivec4(int(2), 0, 0, 1)) | (ivec4(int(2), 0, 0, 1)))))) >> (0 << _GLF_IDENTITY(int(1), int(1)))), int(2))) | (4), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4))), 1, 1, 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 0))), (0 >> _GLF_IDENTITY(int(2), int(2))) | (4)), int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(2), int(2))))) | (4)), _GLF_IDENTITY(0, (0) << 0))))) >> 0))), 64, 2))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))) && true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), float(_GLF_FUZZED(-167.978)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), float(_GLF_FUZZED(-167.978)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), float(_GLF_FUZZED(-167.978)), bool(false)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), float(_GLF_FUZZED(-167.978)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), float(_GLF_FUZZED(-167.978)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), float(_GLF_FUZZED(-167.978)), bool(false))) : _GLF_FUZZED(-7.4))))))) > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)))) > injectionSwitch.y))))), false)), false || (bool(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)))) > injectionSwitch.y))))), false)))), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(5.4, -1.1)))), injectionSwitch)).y), _GLF_IDENTITY(! (! (bool(injectionSwitch.x > injectionSwitch.y))), false || (! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))))), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.0)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-612.746)))) / 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y, injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y, injectionSwitch.y)))), (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(639.216, -3.2)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0), injectionSwitch.y, injectionSwitch.y))))) && true)) || false)) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (0u | 0u) | (read)), 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, clamp(64, 64, 64)))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(! (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))))))) && true), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
