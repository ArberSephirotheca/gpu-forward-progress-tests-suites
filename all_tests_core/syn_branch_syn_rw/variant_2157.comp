#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups))))))), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), clamp(~ (~ (workgroup_size * workgroup_id)), ~ (~ (workgroup_size * workgroup_id)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), clamp((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) | 0u))), min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), clamp((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) >> 0u, ((workgroup_id) >> 0u) << 0u)))), (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))), _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) | 0u))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), uint(uint(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), uint(uint(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))), (workgroup_id))))) >> 0u))), clamp((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), (_GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ~ (~ (_GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) / 1u))))) | 0u))), (~ _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), clamp((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) >> 0u, ((workgroup_id) >> 0u) - 0u)))), (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), _GLF_IDENTITY((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ((~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) | 0u)))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false)))) || false), true, true)), false))))))), true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) | (1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-60.02)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(abs(-9211.5478), (abs(_GLF_IDENTITY(-9211.5478, min(-9211.5478, _GLF_IDENTITY(-9211.5478, clamp(-9211.5478, _GLF_IDENTITY(-9211.5478, float(mat3x2(-9211.5478, 1.0, 1.0, 0.0, 0.0, 0.0))), -9211.5478)))))) / 1.0)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(workgroup_size), 1.0 * (uintBitsToFloat(workgroup_size)))), (_GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(workgroup_size), 1.0 * (uintBitsToFloat(workgroup_size))))) + 0.0) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))), _GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, 0 + (0))), (clamp(_GLF_IDENTITY(0, int(ivec4(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(4), int(4)))))), (0) / 1), _GLF_IDENTITY(0, 1 * (0)))), 1, 1))), _GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, 0 + (0)))) ^ 0));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(_GLF_IDENTITY(uvec2(read, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), clamp(uvec2(read, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(read, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(read, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, ((4) ^ 0) | 0)), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) | 0)), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) | (0)), 1, 0))) ^ (4))))) ^ 0), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), ~ (0)), (false ? _GLF_FUZZED(atomicOr(i, 3025)) : min(_GLF_IDENTITY(~ (0), ~ (~ (~ _GLF_IDENTITY((0), max((0), (0)))))), ~ (0)))))))), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) >> 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4), ~ (~ (clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))))), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4)))), min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4)))), 0 ^ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4)))), max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4)))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, 0 ^ (4))))))))))) ^ 0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | 0) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))), 0 ^ (4))))) ^ 0)) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(30088)))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0)))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) | 0)), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), ~ (0)))))), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (true ? 0 ^ (4) : _GLF_FUZZED(ivec3(64002, 56958, -88671)[1]))))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) >> 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, ((1 & 1) | 1), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), min(ivec4(4, ((1 & 1) | 1), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ivec4(4, ((1 & 1) | 1), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4), ~ (~ (clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))))), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) << 0)), 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, min(0, 0))), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) * 1))))) ^ 0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0)))), 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max((4) - 0, (4) - 0))), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4)))), 0 ^ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))))) | (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))))) ^ _GLF_IDENTITY(0, ~ (~ (0))))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0)) << 0))))))))) >> 0), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true)))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)) && true), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)) && true), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))), bool(bvec2(! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))), true)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (true ? vec2(0.0, 0.0) + (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0))))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) || false))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true, true, false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true, true, false))), true), true), bvec3(bvec4(bvec3(bvec2(! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true, true, false))), true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))) || false)), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) || false))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, false))))))), true, true, true))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), (_GLF_IDENTITY(bool((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), false || (bool((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - determinant(mat2(0.0, 1.0, 0.0, 0.0))) * 1.0) > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))))))), false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(7755.0544)), vec2(_GLF_FUZZED(-362.571), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch))) * mat2(1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))], _GLF_FUZZED(7755.0544)), vec2(_GLF_FUZZED(-362.571), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), clamp(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(1.0), tan(0.0), 0.0, sqrt(0.0), 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(1.0), tan(0.0), 0.0, sqrt(0.0), 1.0, 0.0, 0.0)))))), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, _GLF_IDENTITY(0.0, abs(1.0) * (_GLF_IDENTITY(0.0, float(vec3(0.0, log(1.0), 1.0))))))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch))) * mat2(1.0)))[1]), bvec2(false, true))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
