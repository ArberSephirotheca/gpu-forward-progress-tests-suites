#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))))).y), 0.0, tan(0.0), 1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(446.377)), vec2(_GLF_FUZZED(vec4(4.0, -987.564, _GLF_IDENTITY(8.0, (8.0) / 1.0), 6.4).x), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), true, true)))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(446.377)), vec2(_GLF_FUZZED(vec4(4.0, -987.564, _GLF_IDENTITY(8.0, (8.0) / 1.0), 6.4).x), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), true, true)))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(446.377)), vec2(_GLF_FUZZED(vec4(4.0, -987.564, _GLF_IDENTITY(8.0, (8.0) / 1.0), 6.4).x), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), true, true)))))).x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(446.377)), vec2(_GLF_FUZZED(vec4(4.0, -987.564, _GLF_IDENTITY(8.0, (8.0) / 1.0), 6.4).x), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), true, true)))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(446.377)), vec2(_GLF_FUZZED(vec4(4.0, -987.564, _GLF_IDENTITY(8.0, (8.0) / 1.0), 6.4).x), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))), false, false))), false, false)), true, true)))))).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), false, true)))))))
  return;
 uint subgroup_base = subgroup_size * _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(max(subgroup_size, (subgroup_id ^ subgroup_local_id)), (_GLF_IDENTITY(max(subgroup_size, (subgroup_id ^ subgroup_local_id)), clamp(max(subgroup_size, (subgroup_id ^ subgroup_local_id)), max(subgroup_size, (subgroup_id ^ subgroup_local_id)), max(subgroup_size, (subgroup_id ^ subgroup_local_id))))) - 0u)) : subgroup_local_id))), (false ? _GLF_FUZZED(159178u) : (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(max(subgroup_size, (subgroup_id ^ subgroup_local_id))) : subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)) >> _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (0u), (0u)))) & 72856u), ((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u))))), 0u | (~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))))))), (0u), (0u)))) & 72856u)) >> 0u), _GLF_IDENTITY(((~ (subgroup_local_id)) >> _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (0u), (0u)))) & 72856u), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (0u), (0u)))) & 72856u)), 0u + (((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (0u), (0u)))) & 72856u)))) >> 0u)) - (0u | 0u), ~ (~ (((~ (subgroup_local_id)) >> _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (0u)))) & 72856u), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (0u), (0u)))) & 72856u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (((_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) + 0u), clamp(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))), (0u), (0u)))) & 72856u)))) >> 0u)) - (0u | 0u))))), (_GLF_IDENTITY((~ (subgroup_local_id)), 0u | ((~ (subgroup_local_id)))) >> (0u & 72856u)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(max(subgroup_size, (subgroup_id ^ subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(max(subgroup_size, (subgroup_id ^ subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_FUZZED(max(subgroup_size, (subgroup_id ^ subgroup_local_id)))))) >> 0u) : subgroup_local_id))), _GLF_IDENTITY((~ (subgroup_local_id)) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 72856u), ((_GLF_IDENTITY(~ (subgroup_local_id), uint(_GLF_IDENTITY(uvec2(~ (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(~ (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(~ (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> (0u & 72856u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id ^ subgroup_local_id))) : subgroup_local_id))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)))) >> (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), 0u | (_GLF_IDENTITY((0u) | (0u), max((0u) | (0u), _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | 0u)))))) & 72856u), ((~ (subgroup_local_id)) >> (0u & 72856u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-12.25)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), bvec2(true, false))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-12.25)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), bvec2(true, false))).x, (false ? _GLF_FUZZED(-12.40) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-12.25)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), bvec2(true, false))).x))), float(_GLF_FUZZED(-35.12)), bool(false)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(max(subgroup_size, (subgroup_id ^ subgroup_local_id))) : subgroup_local_id))), _GLF_IDENTITY((~ (subgroup_local_id)) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) & 72856u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)) & 72856u)))), _GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), (((~ (subgroup_local_id)) >> (0u & 72856u))) * 1u), 1u), (uvec2(_GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), (((~ (subgroup_local_id)) >> (0u & 72856u))) * 1u), 1u)) | (uvec2(_GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), (((~ (subgroup_local_id)) >> (0u & 72856u))) * 1u), 1u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), (((~ (subgroup_local_id)) >> (0u & 72856u))) * 1u), 1u), (uvec2(_GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), (((~ (subgroup_local_id)) >> (0u & 72856u))) * 1u), 1u)) | (uvec2(_GLF_IDENTITY(((~ (subgroup_local_id)) >> (0u & 72856u)), (((~ (subgroup_local_id)) >> (0u & 72856u))) * 1u), 1u)))), 1u, 1u, (0u & 2079u))))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), abs(1.0), 0.0, tan(0.0), 1.0)), max(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), abs(1.0), 0.0, tan(0.0), 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-53.81), _GLF_FUZZED(85.06)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), abs(1.0), 0.0, tan(0.0), 1.0)))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(max(subgroup_size, (subgroup_id ^ subgroup_local_id))) : subgroup_local_id))), _GLF_IDENTITY((~ (subgroup_local_id)) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 72856u), ((~ (subgroup_local_id)) >> (_GLF_IDENTITY(0u & 72856u, (true ? _GLF_IDENTITY(0u & 72856u, ~ (~ _GLF_IDENTITY((0u & 72856u), ((0u & 72856u)) | ((0u & 72856u))))) : _GLF_FUZZED(atomicMin(subgroup_id, (~ workgroup_id))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), (true ? buf[virtual_gid] : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))))))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) ^ 0, max((64) ^ 0, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-94778) : _GLF_IDENTITY(64, 0 | (64))))) ^ 0))), 2);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(clamp(1, 1, 1))))), 1)) < (subgroup_size / 2), (subgroup_local_id + 1 < (subgroup_size / 2)) && true))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 0.0))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))))))), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) >> 0))), min((uint(_GLF_IDENTITY(1, 0 | (1)))), (uint(1)))), (false ? _GLF_FUZZED(151098u) : _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) >> 0))), min((uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (uint(1)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> 0))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), max(min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u), (_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u)) >> 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), uint(uint((uint(1)))))) >> 0u)), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1)))), (uint(1)))), ((uint(1))) ^ 0u), (uint(1)))))))) : _GLF_FUZZED(virtual_gid), max(true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), max(min(_GLF_IDENTITY((uint(1)), ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1))))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) ^ 0u))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), _GLF_IDENTITY((min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u, ((min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u) | 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))))) : _GLF_FUZZED(virtual_gid), _GLF_IDENTITY(true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), max(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) | (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) ^ 0u), (uint(1)))))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))))) : _GLF_FUZZED(virtual_gid), max(true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), max(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), max(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), max(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ (min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))))))))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 1u, 0u, 0u)))) / 1u))), max(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(virtual_gid) : uint(1)))), ((uint(1))) ^ 0u), (uint(1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), (min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))), ((uint(1))) ^ 0u), (uint(_GLF_IDENTITY(1, (1) ^ 0))))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))), ~ (~ _GLF_IDENTITY((min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))), (_GLF_IDENTITY((min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1)))), ((min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(1))))) + 0u)) ^ 0u))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) ^ 0u), (uint(_GLF_IDENTITY(1, (1) >> 0))))))))) : _GLF_FUZZED(virtual_gid)))))))))), ~ (~ (~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), min((1), (1))) >> _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))))), min(_GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), (uint(1)))), (uint(1))))))))), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
 if(_GLF_DEAD(false))
  return;
}
