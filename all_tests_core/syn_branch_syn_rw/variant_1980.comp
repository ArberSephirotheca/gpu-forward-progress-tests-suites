#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), min(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(92.14))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 44.35)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(6.5, -542.222).x)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y) - 0.0))), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-387.746))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7229.9941))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.y), bool(true)))), bool(true))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0)), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7229.9941))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat4(1.0) * (mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))))), bool(true))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 1.0, sqrt(1.0))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))) || false))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(3.8)), bool(false))), injectionSwitch[1])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(3.8)), bool(false))), injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(3.8)), bool(false))), injectionSwitch[1])).y))), (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(3.8)), bool(false))), injectionSwitch[1])).y)))) && true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, true)))) || false))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))) || false))))) && true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(bvec3(true, false, true)), false, true, false)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)))), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2887.9546) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-7.4)), float(6.2), bool(true)))), _GLF_FUZZED(-7.0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), false, false))))))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.4, -2.2, -7.0).g)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.17)), float(injectionSwitch.y), bool(true))))))), false))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(88348)))], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) + 0)))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-7.4)), float(6.2), _GLF_IDENTITY(bool(true), (bool(true)) || false)))), _GLF_FUZZED(-7.0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), false, false))))))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, ! (! (false)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, _GLF_IDENTITY(false, ! (! (false)))))))), injectionSwitch)).x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))), true))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(415.953)), vec2(_GLF_FUZZED((212.038)), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.8) : injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.8) : injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((true ? (workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup)))), 0u ^ ((true ? (workgroup_size) : _GLF_FUZZED(num_workgroup))))) ^ 0u, (_GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(num_workgroup))) ^ 0u) / 1u)))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u)))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << _GLF_IDENTITY(0u, (0u) ^ 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))) ^ 0u))) << 0u))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u));
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0), max(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0))), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) ^ 0)))) - 0)), 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), uint(uvec3((next_virtual_gid) | (next_virtual_gid), 0u, (0u | 0u)))))], uint(1), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (64)), 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false)), false, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true), false)), false, true)))))))))))))))))), true && _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7062.8153)), bool(false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.1) : 1.0)) * (injectionSwitch.y)), min(_GLF_IDENTITY((1.0 * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((1.0 * (injectionSwitch.y)), min((1.0 * (injectionSwitch.y)), (1.0 * (injectionSwitch.y)))), float(mat3x4(_GLF_IDENTITY((1.0 * (injectionSwitch.y)), min((1.0 * (injectionSwitch.y)), (1.0 * (injectionSwitch.y)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0)))), float(_GLF_FUZZED(-911.822)), bool(false))), (1.0 * (injectionSwitch.y)))) - length(sin(vec3(0.0, 0.0, 0.0)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6778.1760)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6778.1760)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6778.1760)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6778.1760)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6778.1760)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6778.1760)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) && true), false, true)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))) : _GLF_FUZZED(2069.6582))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-27.32) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))).y))))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))).y))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), mix(vec2(_GLF_FUZZED(-170.534), _GLF_FUZZED(9.2)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y))))), true))))), false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false))) || false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))).y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))).y))))), true, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))).y))))), true, _GLF_IDENTITY(true, (true) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))).y))))), true, _GLF_IDENTITY(true, (true) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (true) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.2, -0.1)) : injectionSwitch)).y))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), _GLF_IDENTITY((vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))) * mat2(1.0), vec2(vec3((vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))) * mat2(1.0), 1.0))))).y))))), true))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(53.88)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.y), bool(true)))))))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false))) || false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), true && ((! (true)))), false, false, false))), (_GLF_IDENTITY(! (! (true)), true && (! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), false || (! ((! (true)))))))))) || false)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, true)))))), false)), true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-38.98), _GLF_FUZZED((367.587 * -758.202))), bvec2(false, false))).x < injectionSwitch.y))))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))), false)), true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-38.98), _GLF_FUZZED((367.587 * -758.202))), bvec2(false, false))).x < injectionSwitch.y))))))))))))))))) || false))))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false)))))))))) || false))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false)))))))))) || false))), true, false)), bool(bvec4(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || _GLF_IDENTITY(false, false || (false))), ! (! (! ((_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))) || false)))))) || false)))))))))) || false))), true, false)), false, false, false))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
