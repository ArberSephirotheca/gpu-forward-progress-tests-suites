#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 bvec2 _f0;
 ivec3 _f1;
 vec3 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_10 {
 uint workgroup_base;
 mat3 _f0;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 vec3 _f3;
 mat3x2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_7 {
 int _f0;
 mat3x4 _f1;
 uint _f2;
 int _f3;
 vec3 _f4;
 bool _f5;
 vec4 _f6;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 bvec4 _f1;
 ivec4 _f2;
 mat2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 vec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 vec4 _f1;
 _GLF_struct_6 _f2;
 uvec3 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 mat3x4 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat2x4 _f1;
 uvec4 _f2;
 bool _f3;
 mat4 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 float _f0;
 int _f1;
 bvec2 _f2;
 bool _f3;
 vec4 _f4;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat2x4 _f1;
 uint workgroup_size;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 vec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), false), false))))), (! (_GLF_DEAD(false))) || false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), bool(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x4(vec2(vec3(injectionSwitch, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), bool(bool(false)))))), true, true))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), false || (_GLF_IDENTITY(! (false), true && (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), false || (_GLF_IDENTITY(! (false), true && (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), false, false)))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8531.4195)), bool(false))))), true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8531.4195)), bool(false))))), true, false))), ! (! (bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8531.4195)), bool(false))))), true, false)))))))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1051.3359)))))))), mat2x4(1.0), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_struct_0(1.0, 1, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), false)))), true))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), false)))), true))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), false)))), true))), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), false)))), true))), false)))), false)))), false, true)))), true, vec4(1.0)), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(9355.1750), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-90.67)), vec4((vec4(1.0))[0], _GLF_FUZZED(5.9), _GLF_FUZZED(9.6), (vec4(1.0))[3]), bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(vec4(_GLF_FUZZED(5930.5641), _GLF_FUZZED(-2.3), (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) + 0)], _GLF_FUZZED(64.77), _GLF_FUZZED((-29.15))), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false, false))), ivec4(1)), _GLF_struct_2(true, mat2x4(1.0), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), mat4(1.0))), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-149.181)), 1.0 * (float(_GLF_FUZZED(-149.181)))), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-149.181)), bool(false)), mix(float(mix(float(1.0), float(_GLF_FUZZED(-149.181)), bool(false))), float(_GLF_FUZZED(-200.169)), bool(false))), mix(float(1.0), float(_GLF_FUZZED(-149.181)), bool(false)))))) / 1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)) + vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.5)), bool(false))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9227.3493) : 0.0)), _GLF_IDENTITY(0.0, float(mat3x2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((4986.1918 / 9377.4365))), float(0.0), bool(true))), 0.0, abs(1.0), 1.0, 0.0)))), min(_GLF_IDENTITY((vec3(1.0)), clamp(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) - vec3(0.0, 0.0, 0.0)), (vec3(1.0)), (vec3(1.0)))) + vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0), (vec3(1.0)) + vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, min((0.0) / 1.0, (0.0) / 1.0))) : _GLF_FUZZED(7.9)))))), _GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY((vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(1.0, 1.0, 1.0)))) + vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), max((vec3(1.0)) + vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), ((vec3(1.0)) + vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)))), (vec3(1.0)) + vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))))), 0.0, 0.0)), mat3(1.0) * (min(_GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), max((vec3(1.0)) + vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), ((vec3(1.0)) + vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)))), (vec3(1.0)) + vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))))), 0.0, 0.0)))))), (true ? (_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) + vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY((vec3(1.0)) + vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-85.50)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0), max((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), ((vec3(1.0)) + vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)))), (vec3(1.0)) + vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(868.651)), bool(false))))), 0.0, 0.0)))) : _GLF_FUZZED(_GLF_IDENTITY(vec3(2.0, 4701.0925, -4286.3298), max(vec3(2.0, 4701.0925, -4286.3298), vec3(2.0, 4701.0925, -4286.3298)))))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0) * (mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), max(_GLF_IDENTITY((vec3(1.0)) + vec3(0.0, 0.0, 0.0), vec3(mat4((vec3(1.0)) + vec3(0.0, 0.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(24807u))), float(0.0), bool(true))), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 0.0))), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.3) : 1.0))) / 1.0))) + vec3(0.0, 0.0, 0.0))))), vec3(mat4x3(vec3(1.0, 1.0, 1.0) * (mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-6293.6665, 5.9, 8.3)) : vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + vec3(0.0, 0.0, 0.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-6293.6665, 5.9, 8.3)) : vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + vec3(0.0, 0.0, 0.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-6293.6665, 5.9, 8.3)) : vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + vec3(0.0, 0.0, 0.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-6293.6665, 5.9, 8.3)) : vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + vec3(0.0, 0.0, 0.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-6293.6665, 5.9, 8.3)) : vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + vec3(0.0, 0.0, 0.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY((vec3(1.0)) + _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-6293.6665, 5.9, 8.3)) : vec3(0.0, 0.0, 0.0))), min((vec3(1.0)) + vec3(0.0, 0.0, 0.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(24.37)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), 1.0))), 0.0)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(3.6) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(vec3(-9.7, 2967.9775, _GLF_IDENTITY(-32.24, float(mat4x2(-32.24, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))).r), _GLF_FUZZED(-8274.4492)), bvec2(false, false))).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6645.4266)), bool(false)))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4((gl_WorkGroupID), 1u))) - uvec3(0u, 0u, 0u)).x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(uvec2(1u), mat3x4(1.0), _GLF_struct_9(_GLF_struct_5(mat2x3(1.0), vec2(1.0), mat2x4(1.0)), vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), (true ? mat2(1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat2(2.0, _GLF_IDENTITY(-2.0, _GLF_IDENTITY(float(mat2(-2.0, 0.0, 1.0, abs(1.0))), (float(mat2(-2.0, 0.0, 1.0, abs(1.0)))) / 1.0)), -8.0, 1.1), (false ? _GLF_FUZZED(mat2(3463.4682, 4.3, 1.6, 80.21)) : mat2(2.0, _GLF_IDENTITY(-2.0, _GLF_IDENTITY(float(mat2(-2.0, 0.0, 1.0, abs(1.0))), (float(mat2(-2.0, 0.0, 1.0, abs(1.0)))) / 1.0)), -8.0, 1.1))))))))), _GLF_struct_6(mat2x4(1.0), bvec4(true), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec4(1)), clamp(~ _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) << ivec4(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0)))), 0, 0)), ~ (ivec4(1)), _GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0))), (~ (ivec4(1))) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(42637) : 0))))))), (~ (_GLF_IDENTITY(~ (ivec4(1)), clamp(~ (ivec4(1)), ~ _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) << ivec4(_GLF_IDENTITY(0, (0) - 0), 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(1)), (~ (ivec4(1))) >> ivec4(0, 0, 0, 0)))))) << ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))) | (0)), 0))), mat2(1.0), mat3x2(1.0)), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u))))) | 0u), 1u))), _GLF_struct_7(1, mat3x4(1.0), 1u, _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-516.491), _GLF_FUZZED(-8100.6484), _GLF_FUZZED(88.87)), vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(true, true, true))), true, vec4(1.0)), _GLF_struct_8(mat3x4(1.0), mat3x2(1.0), bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec2(! (bool(true)), false)))))))), vec3(1.0), mat3x2(1.0), mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-5952.0236), (false ? _GLF_FUZZED(-2.7) : _GLF_FUZZED(-5952.0236))))))), uvec4(1u)), _GLF_struct_10(_GLF_IDENTITY(_GLF_struct_replacement_4._f0.workgroup_size * workgroup_id, min(_GLF_struct_replacement_4._f0.workgroup_size * workgroup_id, _GLF_struct_replacement_4._f0.workgroup_size * workgroup_id)), mat3(1.0)), bvec2(_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, true))), _GLF_IDENTITY(bool(bvec4((true), false, true, true)), (bool(bvec4((true), false, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))) - 0.0)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), true && (! (! (! (_GLF_DEAD(false)))))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0)))) - tan(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-503.234)), bool(false)), min(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-503.234)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-503.234)), bool(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)) * mat2(1.0))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-293.697) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2(_GLF_FUZZED(-8505.0541), _GLF_FUZZED(3.7)), bvec2(false, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))) || false)), true, false))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (_GLF_struct_replacement_11._f3.workgroup_base) | (_GLF_struct_replacement_11._f3.workgroup_base)) + subgroup_base), 0u ^ (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (_GLF_struct_replacement_11._f3.workgroup_base) | (_GLF_struct_replacement_11._f3.workgroup_base)) + subgroup_base))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))), uint(6u)))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base), uint(uvec4(~ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base), (1u ^ 0u), 0u, 0u)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u)) | 0u), uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) << 0u), (_GLF_IDENTITY(6u, (6u) << 0u)) | (_GLF_IDENTITY(6u, (6u) << 0u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) - max(num_workgroup, workgroup_id))))))), (true ? _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))))) / 1u))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base), uint(uvec4(~ _GLF_IDENTITY((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base), ((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base)) + 0u)))), (1u ^ 0u), 0u, 0u)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u)) | 0u), uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) << 0u), (_GLF_IDENTITY(6u, (6u) << 0u)) | (_GLF_IDENTITY(6u, (6u) << 0u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), min(subgroup_local_id, subgroup_local_id)) - max(num_workgroup, workgroup_id))))))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base))) ^ 0u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base) >> 0u, 0u | (_GLF_IDENTITY((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base) >> 0u, ~ (~ (_GLF_IDENTITY((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base) >> 0u, 1u * ((_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base) >> 0u))))))))))) / (_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) ^ 0u)) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u)))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8317.4856)), vec2(_GLF_FUZZED(-6.4), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)))))), (true ? (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(75495u) : 1u))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) | uvec3(0u, 0u, 0u)))), 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) / 1u))), uint(_GLF_IDENTITY(6u, (6u) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) + 0u), _GLF_FUZZED(subgroup_id))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u + (_GLF_IDENTITY(6u, (6u) << 0u)))), max(uint(_GLF_IDENTITY(6u, 0u + (_GLF_IDENTITY(6u, (6u) << 0u)))), uint(_GLF_IDENTITY(6u, 0u + (_GLF_IDENTITY(6u, (6u) << 0u))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(_GLF_IDENTITY(167411u, (_GLF_IDENTITY(167411u, 0u | _GLF_IDENTITY((167411u), ((167411u)) / 1u))) - 0u)) : uint(6u)))))), min(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))), max((_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_IDENTITY(_GLF_FUZZED(167411u), (_GLF_FUZZED(167411u)) << 0u) : uint(6u))))), (0u ^ 1u) * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_IDENTITY(_GLF_FUZZED(167411u), (_GLF_FUZZED(167411u)) << 0u) : uint(6u)))))))), _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, 1u, 0u, (0u ^ 1u)), clamp(uvec4(subgroup_base, 1u, 0u, (0u ^ 1u)), uvec4(subgroup_base, 1u, 0u, (0u ^ 1u)), uvec4(subgroup_base, 1u, 0u, (0u ^ 1u)))))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f3.workgroup_base + subgroup_base))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 0u)))), clamp(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 0u)))), ~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 0u)))), ~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 0u)))))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(167411u) : uint(6u)))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, false, true)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false))), false, false, true)))))), true, false, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), false || ((_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), (((true))) && true)))))), false || _GLF_IDENTITY((! (! ((true)))), ! (! ((! (! ((true))))))))))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u))), (virtual_gid) >> 0u)) : _GLF_IDENTITY(_GLF_struct_replacement_11._f3.workgroup_base, min(_GLF_struct_replacement_11._f3.workgroup_base, _GLF_struct_replacement_11._f3.workgroup_base)))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1)), max(((subgroup_local_id + 1)), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), (true ? max(_GLF_IDENTITY(uint(5u), (uint(5u)) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), uint(5u)) : _GLF_FUZZED(subgroup_id)))) - 0u))))))))))) >> 0u) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(167996u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))) ? subgroup_size : _GLF_FUZZED(167996u))), uint(uint(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(167996u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, false || (true)) ? subgroup_size : _GLF_FUZZED(167996u))), min(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(167996u))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(167996u))))))), (subgroup_size) ^ _GLF_IDENTITY(0u, (0u) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true)))))))), true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))), min((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))))) : _GLF_FUZZED(26810u)))) % 2) == 0, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))))) % 2) == 0, ! (! ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))), uint(uvec2(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))), 0u))))) % _GLF_IDENTITY(2, (2) * 1)) == 0)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_12.next_virtual_gid, ~ (~ (_GLF_struct_replacement_12.next_virtual_gid)))], uint(1), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(5), int(5))))))), 64, _GLF_IDENTITY(4, (4) >> 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false)) ? _GLF_FUZZED(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.5, -4.4), _GLF_IDENTITY(min(vec2(0.5, -4.4), vec2(0.5, -4.4)), (min(vec2(0.5, -4.4), vec2(0.5, -4.4))) / cos(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(-7.0, 9183.6713)) : _GLF_IDENTITY(vec2(0.5, -4.4), _GLF_IDENTITY(min(vec2(0.5, -4.4), vec2(0.5, -4.4)), (min(vec2(0.5, -4.4), vec2(0.5, -4.4))) / cos(vec2(0.0, 0.0)))))))) : injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(28.29, min(28.29, _GLF_IDENTITY(28.29, clamp(28.29, 28.29, 28.29)))) - 977.758))), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(float(82688u))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(-7530.8848))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x))), bool(true))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_12.next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED((vec4(-17.89, 21.76, -0.5, -23.59) * mat2x4(-51.00, -9932.7244, 8.0, 9.5, 62.52, -8.8, -9.7, 425.379))))), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec2(float(vec2(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)))), 1.0)), (float(vec2(float(vec2(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)))), 1.0))) / 1.0))))), true))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), false), true), bvec3(bvec3(bvec3(bvec2(! (false), false), true))))))), false || (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), false), true), bvec3(bvec3(bvec3(bvec2(! (false), false), true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, false, true))))) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), true))), true)))))))))), false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(! (false), false), true)))), false || (bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), false, true)), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, false)))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, false)))))))))))) || false), (! (false)) && true))))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (! (! (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), ! (! (! (! (false))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true, true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec4(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false, true, true))), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec4(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), false, true, false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((! (false)))), bool(bvec4(bool(! ((! (false)))), true, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(! ((! (false)))), bool(bvec4(bool(! ((! (false)))), true, true, false)))), false, true, false)))))))), false)), false, true, false)))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec4(bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false)), false, true, false))))))), (! (bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) || false), bool(bvec4(bool(bvec2(! (false), false)), false, true, false)))))))) || false))))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))), false))), true, false))), bvec2(bvec3(bvec2(false, false), true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))), false))), true, false))), bvec2(bvec3(bvec2(false, false), true)))))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), (((false))) || false)))))))))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) && ((false)))) && true))))))))), bool(bvec2(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true)))))))) || _GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), float(vec3(injectionSwitch.y, 0.0, 0.0))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), float(vec3(injectionSwitch.y, 0.0, 0.0))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), float(vec3(injectionSwitch.y, 0.0, 0.0))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)) || false, false || ((! (false)) || false))) && true)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), true && (! (false))))))) && true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), bvec2(bvec4(bvec2(false, true), true, false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ((! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))) || false))) && true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
