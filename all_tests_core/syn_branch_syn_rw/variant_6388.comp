#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint virtual_gid;
 ivec3 _f0;
 uint _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.y = _GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)), ! (! ((_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, false || ((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), vec2(vec3(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-17.05, -2.3, -750.753, 7629.7696)) : mat2(1.0))) * (injectionSwitch)))))).y)))))))))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))) || false) || false, ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))) && true)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))))))))) || false))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))) && true)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))))))))) || false))))), bool(bool((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))) && true)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))))))))) || false)))))))))))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(492.133), _GLF_FUZZED(-49.99)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(abs(1.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y))))) || false))))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))), ! (! ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))))))))) && _GLF_IDENTITY(true, (true) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, true, false)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))) || false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false)), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))) || false)) || false)))))) || false), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))) || false)) || false)))))) || false), bool(bool(((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))) || false)) || false)))))) || false)))), false, true, true)))))))))))))))) || false)), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false, true))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false))))))))) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, sqrt(0.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, sqrt(0.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0)), 1.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, sqrt(0.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, sqrt(0.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0)), 1.0)))))) - vec2(0.0, 0.0))).x)) > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false), false))), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false), false))), true, false))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))))))), _GLF_IDENTITY((! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(50.28), _GLF_FUZZED(-312.522)), bvec2(false, false))).y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(9.1, -42.85)))).y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 1.0, sin(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), dot(vec4(1.0, 1.0, sin(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))) || false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false))))), false, false, false)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))), false)))))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false), bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false, false), false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size)).z * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) | 0u)), 0u | (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) | 0u))));
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(workgroup_base + subgroup_base + subgroup_local_id, ivec3(1), 1u);
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) % subgroup_size, 0u | ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uint read = atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))), ! (! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))))))), ! (! (! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, max(2, 2)))), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), 2, 2)), 2))))))) == _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size.x], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size) : GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size) : GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size[0], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size[1], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size[2]))))), (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size) : GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size) : GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size) : GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size))) / (uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u))))) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size), (_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size)) | uvec3(0u, 0u, 0u))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ((false)) && true)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_struct_replacement_0.virtual_gid], _GLF_IDENTITY(read, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), ~ (~ (uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u))), _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(read)))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), max(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u))), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (4u) - 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), max((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), max(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u))), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (4u) - 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), max((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(uint(-9.5)))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(4u)) : _GLF_FUZZED(subgroup_id))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))))), 0u), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), 0u), (uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) | uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(subgroup_size))))), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) - 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u))), _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(read)))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), max(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u))), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (4u) - 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), max((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), max(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u))), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (4u) - 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), max((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(uint(-9.5)))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(4u)) : _GLF_FUZZED(subgroup_id))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))))), 0u), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), 0u), (uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) | uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(subgroup_size))))), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) - 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u))), _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(read)))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), max(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u))), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (4u) - 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), max((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), max(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u), uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(1u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u))), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, (4u) - 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), max((_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), uvec4(0u, 0u, 0u, 0u) + (~ (uvec4(_GLF_IDENTITY(uvec3(read, ((_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(uint(-9.5)))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(4u)) : _GLF_FUZZED(subgroup_id))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))))), 0u), (_GLF_IDENTITY(uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u))))), 0u), (uvec3(read, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) | uvec3(0u, 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(subgroup_size))))), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) - 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))))))))), 4, 64, 4);
}
