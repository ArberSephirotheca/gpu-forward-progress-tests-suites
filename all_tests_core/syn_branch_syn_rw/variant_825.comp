#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0))))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], ~ (~ (gl_NumWorkGroups[2]))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(5136u, 103730u, 105755u), (uvec3(_GLF_IDENTITY(5136u, max(5136u, 5136u)), 103730u, 105755u)) / uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (~ (_GLF_IDENTITY(1u, (1u) / 1u))) / 1u), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))), (~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))) / 1u))))), 1u, 1u))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uint(gl_WorkGroupID.x)), (uint(uint(gl_WorkGroupID.x))) | 0u));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) >> 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u)))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u)))), 1u * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u))))))) - 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u)))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) / 1u) ^ 0u)) - 0u), ((workgroup_base) / 1u) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id)), 0u | (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) | (subgroup_id))))))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))))) + subgroup_local_id))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) / 1u) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))) | (~ (subgroup_local_id))))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id << subgroup_local_id)))) + subgroup_id * subgroup_size + subgroup_local_id)) / 1u)) >> 0u))))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) | (1u))) + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base))))))), workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))) ^ 0u) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))) ^ 0u) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))) ^ 0u) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))) ^ 0u) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size)))) / 1u)) | (71107u & 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ((1 ^ 1) << _GLF_IDENTITY(int(1), int(1))) | (1)), 1))) % subgroup_size)));
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (true ? _GLF_IDENTITY(~ (buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))]), 0u ^ (~ (buf[virtual_gid]))) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) * 1)))), clamp(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) * 1)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) * 1)))), min(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) * 1)))), _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) * 1)))))), _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) * 1)))))), 64, _GLF_IDENTITY(0, 0 + (0)));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(min(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(47885))) - 0)), min(_GLF_IDENTITY(min(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(47885))) - 0)), (_GLF_IDENTITY(min(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(47885))) - 0)), (min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), max(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), (int(4)) >> 0))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), ~ (_GLF_IDENTITY(~ (int(4)), 0 | (~ (int(4))))))), (true ? (int(4)) : _GLF_FUZZED(47885))) - 0))) << 0)) - 0), min(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(47885))) - 0))))), int(4)) : _GLF_FUZZED(31831)))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))) / 1, (_GLF_IDENTITY((1), max((1), (1))) / 1) >> (0 >> _GLF_IDENTITY(int(1), int(1)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, true)), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, true))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false))) || false), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false))) || false), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false))) || false), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false))) || false), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))))))))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false || (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec4(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) || false), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, false, true)))))), false, false, false)))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))), (bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true && ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) || false)))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false)))))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter < 1, true, false, true)), (bool(bvec4(_injected_loop_counter < 1, true, false, true))) && true))))))))), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), bool(bvec2(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), true))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))), true, false)), true))))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1))))))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), bool(bvec3(bool(bool(_injected_loop_counter < 1)), false, true))))))))))))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true))))))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))), ! (! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < 1)))))))))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_injected_loop_counter < 1, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true, true)))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false)))))) || false)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, false)))))) || false)))))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))), false)))))) || false))), true))))))); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << (0 << _GLF_IDENTITY(int(8), int(8)))), max(64, 64)), 4);
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_TRUE(true)) && true), true && (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! ((_GLF_WRAPPED_IF_TRUE(true))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) || false))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1)), 1)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) > _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY((_injected_loop_counter > _GLF_IDENTITY(0, (0) / 1)) || false, ! (! (_GLF_IDENTITY((_injected_loop_counter > _GLF_IDENTITY(0, (0) / 1)) || false, false || ((_injected_loop_counter > _GLF_IDENTITY(0, (0) / 1)) || false))))))); _injected_loop_counter --)
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
    }
   else
    {
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
  }
}
