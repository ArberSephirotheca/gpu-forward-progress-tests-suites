#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, true))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 74:
     for(uvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v; true; min(ivec3(39458, -35089, -82624), ivec3(38196, 22802, -34826)))
      {
       ((_GLF_IDENTITY(false ? uvec3(41071u, 84020u, 69500u) : uvec3(191168u, 164243u, 174546u), uvec3(_GLF_IDENTITY(uvec3(false ? uvec3(41071u, 84020u, 69500u) : uvec3(191168u, 164243u, 174546u)), uvec3(0u, 0u, 0u) + (uvec3(false ? uvec3(41071u, 84020u, 69500u) : uvec3(191168u, 164243u, 174546u))))))) + max(virtual_gid, num_workgroup));
       if(_GLF_DEAD(false))
        return;
       ivec4 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
       for(mat3x4 _GLF_SWITCH_3_4v[33], _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v; bvec3(true, true, true)[0]; (mat3x2(9.3, -84.46, 56.03, -2107.4059, -5.5, -74.16)))
        {
         68076;
        }
       do
        {
         float _GLF_SWITCH_3_7v[64], _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         (ivec2(95113, _GLF_IDENTITY(89636, int(ivec2(_GLF_IDENTITY(89636, (_GLF_IDENTITY(89636, (89636) ^ 0)) | (89636)), 0)))) & (ivec2(-7035, 63345) >> -53867));
         do
          {
           if(_GLF_DEAD(false))
            break;
           vec3 _GLF_SWITCH_3_10v[4], _GLF_SWITCH_3_11v[42];
           ;
           mat3 _GLF_SWITCH_3_12v[78], _GLF_SWITCH_3_13v;
           ;
           mat2x3 _GLF_SWITCH_3_14v;
           ivec4 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v;
          }
         while((96239 == -95141));
         mat4x2 _GLF_SWITCH_3_18v[52];
         {
          vec4(757.215, -7.1, -3.2, 5782.6887);
          equal(uvec4(15023u, 138300u, 18337u, 83443u), uvec4(14599u, 36923u, 141202u, 6428u));
         }
         if((bvec3(false, true, false) == bvec3(true, true, true)))
          {
           vec3(-36.18, 9.6, _GLF_IDENTITY(963.918, (true ? _GLF_IDENTITY(963.918, (963.918) - 0.0) : _GLF_FUZZED(92.19))));
           bvec3(true);
           mat3x2 _GLF_SWITCH_3_19v;
           mat3x4(mat3x2(-181.707, -1.6, 771.513, 5.7, 8375.2939, -3167.1480));
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           (uvec3(151188u, 132092u, 153166u) * uvec3(113861u, 65517u, 124616u));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
            return;
           vec2 _GLF_SWITCH_3_20v[67];
           _GLF_SWITCH_3_8v;
           (21949 / (-13895 | ivec2(-67806, 68111)));
           equal(ivec2(22371, 12048), ivec2(50142, 51543));
          }
         if(_GLF_DEAD(false))
          return;
         uvec4 _GLF_SWITCH_3_21v[86], _GLF_SWITCH_3_22v[19];
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         vec3 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v, _GLF_SWITCH_3_25v[68];
         vec3 _GLF_SWITCH_3_26v[36], _GLF_SWITCH_3_27v[31], _GLF_SWITCH_3_28v;
         if((mat4x2(mat2(6.0, 695.384, -60.73, -2008.0397)) != (mat3x2(-561.258, 281.611, -91.42, -66.60, -2256.2640, -7.0) * mat4x3(6601.2430, -2.1, 5855.2980, 7.8, 1.1, -0.9, 2.1, -9.2, 26.82, -17.28, -55.92, 5.4))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           ((_GLF_IDENTITY(vec4(-8901.0174, -214.176, -2040.0952, 4.7), (vec4(-8901.0174, -214.176, -2040.0952, 4.7)) * mat4(1.0)) / 4197.3569) * mat4(8.3, 47.25, -469.796, 1376.7391, 525.312, 265.028, 3241.2511, -17.05, 1.9, 5.0, -63.89, -6.2, 8096.6461, 5636.6618, 8.2, 1.1));
           max(uvec3(154411u, 55778u, 168389u), uvec3(138461u, 142639u, 118689u));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           -85060;
           (vec3(2.0, -52.76, 88.64) * float(66811));
           mat4x3 _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v;
           (ivec2(_GLF_IDENTITY(-57708, clamp(-57708, -57708, -57708)), 77822) << -46589);
          }
         {
          bool _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v, _GLF_SWITCH_3_33v;
          not(lessThanEqual(_GLF_SWITCH_3_28v, _GLF_IDENTITY(vec3(0.6, -266.514, 4.0), mix(vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(-5.3), (vec3(0.6, -266.514, 4.0))[2]), vec3((vec3(0.6, -266.514, 4.0))[0], (vec3(0.6, -266.514, 4.0))[1], _GLF_FUZZED(-6.5)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)))));
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            mat2x3(-6.0, -75.51, -54.85, -35.92, -2.4, 2.8);
           }
          else
           {
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             return;
           }
          else
           {
           }
          (workgroup_size | _GLF_SWITCH_3_1v);
          bool _GLF_SWITCH_3_34v[68];
          bool _GLF_SWITCH_3_35v, _GLF_SWITCH_3_36v;
          mat2x4 _GLF_SWITCH_3_37v;
          bvec3 _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v[22], _GLF_SWITCH_3_40v;
          if(_GLF_DEAD(false))
           break;
          mat3x2 _GLF_SWITCH_3_41v, _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v;
          if(_GLF_DEAD(false))
           continue;
         }
         if(_GLF_DEAD(false))
          continue;
        }
       while((_GLF_SWITCH_3_2v != _GLF_SWITCH_3_2v));
       if(_GLF_DEAD(false))
        break;
      }
     case 60:
     {
      if(true)
       {
        bvec4(lessThanEqual(uvec2(98835u, 28507u), uvec2(119290u, 12951u)), bvec2(true, false));
        for(ivec2 _GLF_SWITCH_3_44v[50], _GLF_SWITCH_3_45v, _GLF_SWITCH_3_46v; _GLF_IDENTITY(true, false || (true)); length(-857.566))
         {
          lessThanEqual(acos(_GLF_IDENTITY(vec2(-8.8, -659.520), (_GLF_IDENTITY(vec2(-8.8, -659.520), mix(vec2((vec2(-8.8, -659.520))[0], _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED(93.15), (vec2(-8.8, -659.520))[1]), bvec2(false, true)))) - vec2(0.0, 0.0))), vec2(-7469.1799, 9.5));
          bvec4 _GLF_SWITCH_3_47v[27], _GLF_SWITCH_3_48v[23], _GLF_SWITCH_3_49v;
          mat2 _GLF_SWITCH_3_50v;
          ;
          vec3 _GLF_SWITCH_3_51v, _GLF_SWITCH_3_52v[36];
          vec2 _GLF_SWITCH_3_53v, _GLF_SWITCH_3_54v, _GLF_SWITCH_3_55v;
          vec2 _GLF_SWITCH_3_56v, _GLF_SWITCH_3_57v[53];
          bvec3 _GLF_SWITCH_3_58v, _GLF_SWITCH_3_59v[65], _GLF_SWITCH_3_60v;
          (mat2x4(-4.5, -5593.1656, 950.712, _GLF_IDENTITY(932.769, mix(float(_GLF_FUZZED(874.569)), float(932.769), bool(true))), 7276.4922, -3.2, -482.659, 791.745) + mat2x4(-5.4, -9092.1831, -14.91, 558.978, -30.78, 54.42, 19.93, -6.0));
         }
        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
         {
          if(_GLF_DEAD(false))
           return;
         }
        {
         if(_GLF_DEAD(false))
          return;
         mat2x3 _GLF_SWITCH_3_61v[20];
         uvec4(71506u, 86514u, 81898u, 76719u);
         true;
         ;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          return;
         greaterThan(vec2(643.384, 1.1), vec2(33.64, 7.1));
         mat2x3 _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v[53];
         mat3x4(8.2, -1.3, -259.283, 8.1, -85.43, 8.6, 3.3, 14.99, 3.0, 4351.8622, -1269.4836, 2.4);
         bvec4(bvec3(true, false, false), (bvec2(false, true) == bvec2(false, false)));
         ivec3 _GLF_SWITCH_3_64v[96], _GLF_SWITCH_3_65v;
        }
       }
      mat3(-3.2, 7340.9186, 2.0, 53.81, 3422.2430, 9.5, -360.816, 0.1, -2.9);
      bool _GLF_SWITCH_3_66v[63];
      if(all(notEqual(uvec3(127487u, 71528u, 64880u), uvec3(63555u, 37779u, 122331u))))
       {
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
        vec3(_GLF_IDENTITY(-851.034, min(-851.034, _GLF_IDENTITY(-851.034, max(_GLF_IDENTITY(-851.034, (true ? _GLF_IDENTITY(-851.034, (true ? _GLF_IDENTITY(-851.034, (-851.034) - 0.0) : _GLF_FUZZED(27.59))) : _GLF_FUZZED(5.3))), -851.034)))), -9563.1134, -8.9);
        roundEven(injectionSwitch);
        if((bvec2(true, false) == bvec2(false, false)))
         {
         }
        uint _GLF_SWITCH_3_67v;
       }
      else
       {
        ivec2 _GLF_SWITCH_3_68v;
        do
         {
          if(_GLF_DEAD(false))
           return;
         }
        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        {
         (_GLF_IDENTITY((mat2x4(mat2(15.05, -0.2, 1.4, -8.4)) * mat4x2(-7188.5175, 8347.7991, -9542.1853, -2134.5176, -2548.7613, 7793.2092, 9.3, 4.6)) - -737.717, (_GLF_IDENTITY((mat2x4(mat2(15.05, -0.2, 1.4, -8.4)) * mat4x2(-7188.5175, 8347.7991, -9542.1853, -2134.5176, -2548.7613, 7793.2092, 9.3, 4.6)) - -737.717, (true ? _GLF_IDENTITY((mat2x4(mat2(15.05, -0.2, 1.4, -8.4)) * mat4x2(-7188.5175, 8347.7991, -9542.1853, -2134.5176, -2548.7613, 7793.2092, 9.3, 4.6)) - -737.717, ((mat2x4(mat2(15.05, -0.2, 1.4, -8.4)) * mat4x2(-7188.5175, 8347.7991, -9542.1853, -2134.5176, -2548.7613, 7793.2092, 9.3, 4.6)) - -737.717) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(0.1, -77.49, 675.265, -8.2, -2912.2093, 8.4, 1.0, -1304.1770, -8541.2634, -406.722, 5.4, -7.7, -8.8, -4640.1064, -4490.9332, -1402.2189))))) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))));
         uvec3 _GLF_SWITCH_3_69v, _GLF_SWITCH_3_70v[36], _GLF_SWITCH_3_71v[49];
         bvec3 _GLF_SWITCH_3_72v[87], _GLF_SWITCH_3_73v;
         _GLF_SWITCH_3_73v;
         mat4(469.650, -8889.8583, -2.1, -49.89, -8018.6556, 6.6, -8.8, -5183.8987, -49.23, 42.76, 627.541, -7.6, _GLF_IDENTITY(9258.2582, clamp(9258.2582, _GLF_IDENTITY(9258.2582, _GLF_IDENTITY(mix(float(9258.2582), float(_GLF_FUZZED(-1.7)), bool(false)), float(_GLF_IDENTITY(vec2(mix(float(9258.2582), float(_GLF_FUZZED(-1.7)), bool(false)), 1.0), clamp(vec2(mix(float(9258.2582), float(_GLF_FUZZED(-1.7)), bool(false)), 1.0), vec2(mix(float(9258.2582), float(_GLF_FUZZED(-1.7)), bool(false)), 1.0), vec2(mix(float(9258.2582), float(_GLF_FUZZED(-1.7)), bool(false)), 1.0)))))), 9258.2582)), -2.1, -2.0, 7.3);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         vec2(2240.1153, 891.345);
         if(_GLF_DEAD(false))
          return;
         ivec3(-38130, -44568, -32452);
        }
        {
         ;
         ivec2 _GLF_SWITCH_3_74v, _GLF_SWITCH_3_75v, _GLF_SWITCH_3_76v;
         mat3x4 _GLF_SWITCH_3_77v, _GLF_SWITCH_3_78v, _GLF_SWITCH_3_79v[29];
         _GLF_SWITCH_3_75v;
         ;
         bvec3(true, false, false);
        }
        for(bvec3 _GLF_SWITCH_3_80v[10], _GLF_SWITCH_3_81v; false; (17490 & (bitfieldReverse(-39140) ^ ivec4(40113, -72144, 10800, -29049))))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              return;
             }
            else
             {
             }
           }
          ;
          ;
          uvec2 _GLF_SWITCH_3_82v, _GLF_SWITCH_3_83v, _GLF_SWITCH_3_84v[42];
         }
        while(true)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
             continue;
            break;
           }
          mat4(-4.4, -0.5, -7606.4705, 4613.6720, 442.199, 0.8, 341.295, -1.1, -836.897, 7439.6278, -1.4, 988.244, -404.356, -4649.5413, 6934.1217, 9.8);
          ;
          ;
          float _GLF_SWITCH_3_85v;
          mat4x2 _GLF_SWITCH_3_86v, _GLF_SWITCH_3_87v;
          uvec3 _GLF_SWITCH_3_88v[14];
         }
        bitfieldInsert(_GLF_SWITCH_3_68v, _GLF_SWITCH_3_68v, bitfieldExtract(-69697, 1723, 85676), 74260);
        ivec2 _GLF_SWITCH_3_89v, _GLF_SWITCH_3_90v;
       }
      ;
     }
     case 0:
     case 50:
     case 7:
     case 48:
     case 58:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 26:
     case 8:
     case 16:
     case 2:
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 5:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     {
      if(_GLF_DEAD(false))
       return;
      if((bvec3(false, false, true) != bvec3(true, true, true)))
       {
        if(_GLF_DEAD(false))
         return;
        {
         (ivec2(66, -24797) == ivec2(61623, 73635));
        }
        for(uvec4 _GLF_SWITCH_3_91v, _GLF_SWITCH_3_92v, _GLF_SWITCH_3_93v[28]; true; mat2x3(mat4x2(-317.219, 4650.0633, -655.503, 552.961, 17.23, -8158.1511, 4.1, 58.38)))
         {
          mix(uvec3(68377u, 191671u, 95374u), uvec3(34555u, 19973u, 179890u), bvec3(true, true, true));
          ;
         }
        while(true)
         {
          clamp((virtual_gid / uvec3(168058u, 116183u, 192622u)), subgroup_size, workgroup_size);
         }
        mat4x3(mat2(-619.525, 3901.1312, -6809.5425, 1.5));
        {
         float _GLF_SWITCH_3_94v, _GLF_SWITCH_3_95v[38];
        }
        if(false)
         {
          uvec4(78041u, 168800u, 150166u, 194329u);
          vec4(5.6, -4.0, 89.58, -0.0);
          vec3(-85.17, -4860.0778, -149.048);
          if(_GLF_DEAD(false))
           return;
          mat2x4(-338.753, 9.2, -8.4, -3.5, -6847.2702, 2685.0353, -1.4, _GLF_IDENTITY(-583.702, min(-583.702, -583.702)));
          mat4x2 _GLF_SWITCH_3_96v;
         }
        {
         mat4x3 _GLF_SWITCH_3_97v, _GLF_SWITCH_3_98v;
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        839.137;
       }
      mat4 _GLF_SWITCH_3_99v;
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        mat4(764.053, -37.30, -175.837, -6388.2724, 732.648, 95.43, -1306.0111, 298.141, 84.91, 771.135, 0.3, _GLF_IDENTITY(-7278.5532, mix(float(-7278.5532), float(_GLF_FUZZED(0.8)), bool(false))), -2693.9528, 8.1, 5.9, -70.86);
       }
      else
       {
       }
     }
     if(_GLF_DEAD(false))
      return;
     case 52:
     bool _GLF_SWITCH_3_100v[34], _GLF_SWITCH_3_101v, _GLF_SWITCH_3_102v;
     default:
     1;
    }
  }
 else
  {
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 8:
       mat4(-117.830, 42.71, 9734.8857, -6.9, -21.31, -7.0, 87.51, -1349.8078, 8522.0127, -8.6, -893.537, 0.2, 714.379, 8.2, -82.61, 7699.6289);
       case 57:
       if(_GLF_DEAD(false))
        return;
       for(float _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; false; (uvec3(173324u, 153385u, 161158u) % uint(_GLF_SWITCH_0_1v)))
        {
         if(true)
          {
           if(_GLF_DEAD(false))
            break;
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 61:
              vec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
               continue;
              case 46:
              if(_GLF_DEAD(false))
               break;
              vec4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
              if(_GLF_DEAD(false))
               continue;
              case 0:
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              while(_GLF_WRAPPED_LOOP(false));
              mat2x4(75.48, -391.391, 7.5, -873.179, -51.84, 5097.2019, 6.2, 1.0);
              (_GLF_IDENTITY(_GLF_IDENTITY(mat3(-3.3, 2503.8729, 6073.0135, -7.7, -448.538, -924.627, 6.2, -0.7, 1.2) / mat3(8232.5057, -5.0, 32.78, 969.662, 5.6, -852.489, 299.455, 59.63, -2822.1074), (false ? _GLF_FUZZED(mat3(871.139, 9.6, -5.3, -80.22, 267.204, -2.1, -9.1, 7.9, -437.078)) : mat3(-3.3, 2503.8729, 6073.0135, -7.7, -448.538, -924.627, 6.2, -0.7, 1.2) / mat3(8232.5057, -5.0, 32.78, 969.662, 5.6, -852.489, 299.455, 59.63, -2822.1074))), mat3(mat3x4(mat3(-3.3, 2503.8729, 6073.0135, -7.7, -448.538, -924.627, 6.2, -0.7, 1.2) / mat3(8232.5057, -5.0, 32.78, 969.662, 5.6, -852.489, 299.455, 59.63, -2822.1074)))));
              if(_GLF_DEAD(false))
               continue;
              mat3x4 _GLF_SWITCH_0_2v;
              if(_GLF_DEAD(false))
               continue;
              (- (++ _GLF_SWITCH_0_2v));
              float _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[12];
              float _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
              ;
              vec3 _GLF_SWITCH_0_8v;
              if(_GLF_DEAD(false))
               return;
              break;
              default:
              1;
             }
           }
           uvec4 _GLF_SWITCH_0_9v[57], _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
          }
         else
          {
           {
            vec3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            clamp(-69087, 74486, -78113);
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              (mat3x4(-9916.7787, -85.09, 91.01, 91.91, -8663.2233, -4834.4093, -349.860, -1.4, 9316.2174, -290.867, -6.6, 8004.8095) - mat3x4(5.1, 431.517, -8761.2736, 66.95, 958.633, -7.8, -51.88, -0.5, 499.172, -9.8, 7138.8671, -827.451));
             }
            else
             {
             }
            mat4(_GLF_IDENTITY(-91.93, (-91.93) / 1.0), 0.2, 8.8, 824.140, 41.74, -6886.3159, 6746.7162, 6.6, -5156.8649, 5.8, 1595.6685, 66.63, 9.4, -6.8, 0.7, -39.31);
            ;
            mat2x4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
            bvec2((vec4(1.8, -9624.6647, 40.53, -4910.8432) == vec4(-208.232, -1.8, _GLF_IDENTITY(-61.15, max(-61.15, -61.15)), 386.484)), true);
           }
           uvec4(179140u, 70642u, 55159u, 78679u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(mat3x4 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v; true; uvec4(101142u, 17281u, 105956u, _GLF_IDENTITY(123356u, (_GLF_IDENTITY(123356u, max(123356u, 123356u))) >> (6958u & 0u))).rara)
            {
             bvec4 _GLF_SWITCH_0_20v;
             mat4x2 _GLF_SWITCH_0_21v;
            }
          }
         vec4 _GLF_SWITCH_0_22v;
         for(         (true ? (mat4x3(-2.1, 4.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0))), -120.020, 3669.9821, 32.05, 57.21, -0.1, 4.7, -686.888, -77.74, 82.43) - mat4x3(5.4, -378.325, -3.8, 11.90, -60.87, -5904.2543, 9851.3259, -664.443, 1.8, 257.695, 0.3, 3.8)) : mat4x3(2277.4341, 19.00, -4.1, 211.465, _GLF_IDENTITY(-82.81, max(_GLF_IDENTITY(-82.81, _GLF_IDENTITY(float(mat4(-82.81, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat4(-82.81, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), -82.81)), -23.68, -88.65, -9.4, 3.8, -4.8, -8.2, 0.5));
 (subgroup_local_id < (subgroup_local_id)); _GLF_IDENTITY(uvec2(171534u, 151467u), (uvec2(171534u, 151467u)) << uvec2(0u, 0u)))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
            break;
           do
            {
             if(_GLF_DEAD(false))
              return;
             mat3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[12], _GLF_SWITCH_0_25v;
             ;
             mat4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 _GLF_IDENTITY((_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v), mix(float(_GLF_FUZZED((-2.2 - -91.41))), float(_GLF_IDENTITY((_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v), clamp(_GLF_IDENTITY((_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v), min((_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v), (_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v))), (_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v), (_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v)))), bool(true)));
                }
              }
             mat4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[12];
             if(_GLF_DEAD(false))
              continue;
             max(32673u, workgroup_size);
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               any(bvec4(true, false, false, false));
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(false);
           if(_GLF_DEAD(false))
            continue;
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.0)))))))
             break;
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              distance(_GLF_SWITCH_0_1v, _GLF_SWITCH_0_1v);
             }
            uint _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v[38];
            for(int _injected_loop_counter = (-78032 & (1 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              -95314;
             }
            (workgroup_base * _GLF_IDENTITY(uvec3(150288u, 162673u, 44105u), max(uvec3(150288u, 162673u, 44105u), _GLF_IDENTITY(uvec3(150288u, 162673u, 44105u), (_GLF_IDENTITY(uvec3(150288u, 162673u, 44105u), _GLF_IDENTITY((uvec3(150288u, 162673u, _GLF_IDENTITY(44105u, ~ (~ (44105u))))) | (uvec3(150288u, 162673u, 44105u)), ~ (_GLF_IDENTITY(~ ((uvec3(150288u, 162673u, _GLF_IDENTITY(44105u, ~ (~ (44105u))))) | (uvec3(150288u, 162673u, 44105u))), (~ ((uvec3(150288u, 162673u, _GLF_IDENTITY(44105u, ~ (~ (44105u))))) | (uvec3(150288u, 162673u, 44105u)))) | uvec3(0u, 0u, 0u)))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))))));
            (virtual_gid + virtual_gid);
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
             continue;
            ivec2(-21322, -24501);
           }
           if(_GLF_DEAD(false))
            break;
           int _GLF_SWITCH_0_33v[17], _GLF_SWITCH_0_34v[14], _GLF_SWITCH_0_35v[31];
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           ivec4 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
           floatBitsToInt(-8.7);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           ivec2 _GLF_SWITCH_0_38v[81], _GLF_SWITCH_0_39v[46], _GLF_SWITCH_0_40v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           (mat2(-455.300, -336.058, 6244.2802, _GLF_IDENTITY(53.72, max(_GLF_IDENTITY(53.72, (false ? _GLF_FUZZED((_GLF_SWITCH_0_0v ++)) : _GLF_IDENTITY(53.72, (53.72) * 1.0))), 53.72))) + intBitsToFloat(31440));
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 37138)); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       case 0:
       if(_GLF_DEAD(false))
        return;
       case 97:
       int i = 0;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 94:
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       break;
       case 18:
       while(true)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         bvec4 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v[22];
         if(_GLF_DEAD(false))
          break;
         for(         _GLF_SWITCH_0_42v.yzx;
 true; subgroup_local_id)
          {
           for(vec4 _GLF_SWITCH_0_44v[84], _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v[13]; true; vec3(-347.034, 9738.2896, -5.6))
            {
             uvec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
             ((mat3(mat4x3(-1.5, -36.74, -494.459, -220.696, 3794.3913, -3982.7335, 312.580, -35.35, -5.4, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), log(1.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), log(1.0)), vec4(0.0, 1.0, 0.0, 0.0))) * (1.0)), 3.7, -523.886)) + mat3(-311.889, -71.31, _GLF_IDENTITY(-1.0, (false ? _GLF_FUZZED(951.551) : -1.0)), 9594.3060, -5.0, 958.752, 3656.9792, -15.67, 2890.4438)) , false);
             if(_GLF_DEAD(false))
              break;
            }
           mat3x2(_GLF_IDENTITY(5.7, mix(float(5.7), float(_GLF_FUZZED(2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -3.4, 21.67, -3.7, 651.341, -95.81);
           bvec2(false, false);
           for(           num_workgroup;
 (mat3x2(-931.348, -5.1, -6632.8735, -4320.4216, 87.66, 32.99) != mat3x2(4.5, 7.4, -860.814, 52.37, 1.9, -9.5)); uvec2(157738u, 23530u))
            {
             ivec4(50912, -11006, -12358, _GLF_IDENTITY(92264, (_GLF_IDENTITY(92264, (_GLF_IDENTITY(92264, ~ (~ (92264)))) - 0)) | 0));
             mat2x3(-18.93, 8.8, -5412.8878, -8021.1827, -0.5, 41.54);
            }
           for(vec3 _GLF_SWITCH_0_50v[85], _GLF_SWITCH_0_51v[60]; false; (mat2x3(-3.3, 1.1, -92.30, -3.4, -1.9, 1.7) * mat4x2(836.780, 9.2, -9.5, -3.6, 1442.8706, -251.861, 5467.7334, 7.3)))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 5:
               vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[58];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
               case 25:
               mat2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[85];
               case 0:
               if(_GLF_DEAD(false))
                break;
               float(93272u);
               case 52:
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               case 85:
               uvec2(166192u, 167077u);
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               case 71:
               case 41:
               if(_GLF_DEAD(false))
                continue;
               float _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
               case 17:
               do
                {
                 mat2x4(-1.3, -6383.6138, -37.85, 2.6, -1.4, 106.305, 3.5, 8532.3984);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               case 12:
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat4x2(-3.9, -6040.6807, -89.74, 0.1, _GLF_IDENTITY(6.0, float(float(6.0))), -15.77, 9.9, 28.51);
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               mat4x2 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v[17];
               case 21:
               mat4x2 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v[9];
               case 93:
               (mat2x3(9.3, -1481.4302, -7261.3499, -5325.4401, 9971.8792, -3775.8258));
               break;
               default:
               1;
              }
            }
          }
         -731.170;
         while(false)
          {
           while(false)
            {
             switch(_GLF_IDENTITY(_GLF_SWITCH((0 & (-78571 | (66546)))), (_GLF_SWITCH((0 & (-78571 | (66546))))) / 1))
              {
               case 49:
               _GLF_SWITCH_0_41v.zw;
               if(_GLF_DEAD(false))
                continue;
               case 0:
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               case 42:
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 ;
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(((9429 - 8449) & 0)))
                    {
                     case 0:
                     case 56:
                     case 23:
                     case 14:
                     case 85:
                     if(_GLF_DEAD(false))
                      return;
                     case 3:
                     case 17:
                     case 30:
                     return;
                     break;
                     case 55:
                     mat4x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[30];
                     case 96:
                     (ivec2(22015, -89556) % i);
                     default:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       1;
                      }
                    }
                  }
                }
               case 10:
               if(_GLF_DEAD(false))
                continue;
               case 50:
               case 95:
               if(_GLF_DEAD(false))
                return;
               case 48:
               if(_GLF_DEAD(false))
                break;
               case 89:
               case 41:
               vec3(43.75, -8093.1585, 38.93);
               case 40:
               (mat4x3(-81.75, -7.9, -781.145, -5.1, -66.29, -62.91, -56.98, _GLF_IDENTITY(_GLF_IDENTITY(-5918.8680, (-5918.8680) - 0.0), mix(float(-5918.8680), float(_GLF_FUZZED(6.8)), bool(false))), 4376.8502, -8.3, 6.4, -80.31) / 7.7);
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 65:
               _GLF_IDENTITY((false ? mat2(904.893, 7997.0497, 74.84, 3.2) : (mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477))), transpose(_GLF_IDENTITY(transpose((false ? mat2(904.893, 7997.0497, 74.84, 3.2) : (mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477)))), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(transpose(_GLF_IDENTITY((false ? mat2(904.893, 7997.0497, 74.84, 3.2) : (mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, _GLF_IDENTITY(_GLF_IDENTITY(13.79, clamp(_GLF_IDENTITY(13.79, mix(float(13.79), float(_GLF_FUZZED(63.14)), bool(false))), 13.79, 13.79)), (_GLF_IDENTITY(13.79, clamp(_GLF_IDENTITY(13.79, mix(float(13.79), float(_GLF_FUZZED(63.14)), bool(false))), 13.79, 13.79))) / 1.0), -3443.7477))), (true ? (false ? mat2(904.893, 7997.0497, 74.84, 3.2) : (mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, _GLF_IDENTITY(_GLF_IDENTITY(13.79, clamp(_GLF_IDENTITY(13.79, mix(float(13.79), float(_GLF_FUZZED(63.14)), bool(false))), 13.79, 13.79)), (_GLF_IDENTITY(13.79, clamp(_GLF_IDENTITY(13.79, mix(float(13.79), float(_GLF_FUZZED(63.14)), bool(false))), 13.79, 13.79))) / 1.0), -3443.7477))) : _GLF_FUZZED(mat2(870.343, 718.548, 5665.0244, 2.7))))), transpose(transpose(transpose((false ? _GLF_IDENTITY(mat2(904.893, 7997.0497, 74.84, 3.2), transpose(transpose(_GLF_IDENTITY(mat2(904.893, 7997.0497, 74.84, 3.2), transpose(_GLF_IDENTITY(transpose(mat2(904.893, 7997.0497, 74.84, 3.2)), mat2(mat3(transpose(mat2(904.893, 7997.0497, 74.84, 3.2)))))))))) : (mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477))))))))), (mat2(mat4x2(_GLF_IDENTITY(transpose((false ? mat2(904.893, 7997.0497, 74.84, 3.2) : _GLF_IDENTITY((mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477)), transpose(transpose(_GLF_IDENTITY((mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477)), ((mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477))) / mat2(1.0, 1.0, 1.0, 1.0))))))), transpose(transpose(transpose((false ? mat2(904.893, 7997.0497, 74.84, 3.2) : (_GLF_IDENTITY(mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, _GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(-875.974))), 13.79, -3443.7477), transpose(transpose(mat2(9.2, 733.103, -141.318, -708.025) / mat2(-269.765, -8.9, 13.79, -3443.7477))))))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))));
               if(_GLF_DEAD(false))
                break;
               break;
               case 62:
               ;
               case 29:
               (i | ivec2(-29890, 8963));
               default:
               1;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
            {
             min(ivec3(-35600, 47625, -68201), ivec3(-78790, -67016, 75305));
            }
           uint _GLF_SWITCH_0_59v;
           uvec4(137261u, 183423u, 185491u, 84778u);
          }
         {
          if(_GLF_DEAD(false))
           continue;
          do
           {
            ;
            bool _GLF_SWITCH_0_60v;
            ;
            -1.2;
            uvec2(29611u, 63432u);
            vec4 _GLF_SWITCH_0_61v;
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
             continue;
            _GLF_SWITCH_0_60v;
            ;
            if(_GLF_DEAD(false))
             continue;
           }
          while((uvec4(uvec2(82103u, 46031u), workgroup_base, 63385u) == bitfieldReverse(uvec4(84871u, 181837u, 151921u, 107789u))));
          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
           {
            bvec3 _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v;
           }
          if(_GLF_DEAD(false))
           break;
          {
           refract(1387.5397, -620.776, -7.5);
           ivec2 _GLF_SWITCH_0_64v;
          }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          bvec2 _GLF_SWITCH_0_65v[92], _GLF_SWITCH_0_66v[69], _GLF_SWITCH_0_67v;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            switch(_GLF_SWITCH(0))
             {
              case 37:
              uvec2(70975u, 77779u);
              case 0:
              case 81:
              case 87:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              case 68:
              case 45:
              case 92:
              case 24:
              continue;
              break;
              case 34:
              uvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
              default:
              1;
             }
           }
          if(_GLF_DEAD(false))
           continue;
         }
         if(_GLF_DEAD(false))
          continue;
         mat3x4 _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v;
         uvec2(88618u, 135419u);
        }
       case 93:
       uvec3(114861u, 48683u, 112372u);
       default:
       1;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   switch(_GLF_SWITCH((_GLF_IDENTITY(0, (0) | (0)) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))))))
    {
     case 63:
     (+ mat2x3(-6.3, 3.1, -71.45, 94.35, -5.2, -30.91));
     case 0:
     case 83:
     case 64:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 44:
     if(_GLF_DEAD(false))
      return;
     if(true)
      {
       if(_GLF_DEAD(false))
        return;
       bvec3(false, true, true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       {
        for(        (mat4x2(-28.74, -375.060, 7.9, -2842.8663, -1.2, -96.76, -589.274, -4.3) , mat4x3(6.8, 394.038, -2.9, -12.88, 65.33, 31.35, 531.073, 39.57, -2886.5892, 73.97, -72.41, 3.9));
 _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))))); mat2x4(fma(67.35, _GLF_IDENTITY(6.5, max(_GLF_IDENTITY(6.5, (false ? _GLF_FUZZED(8.2) : 6.5)), 6.5)), vec4(9.3, -3658.3245, 385.162, 4.2).r), 50.20, -646.330, 180.452, uintBitsToFloat(workgroup_id), 4208.6518, -26.40, -6.7))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
           break;
          (mat4x3(0.3, -956.038, 0.3, -564.482, 69.15, 1.9, 4.9, 7.5, -0.6, -184.847, 3.0, 367.235) * (mat2x4(-4735.4772, -95.73, -5134.4359, 758.086, 6.7, -8.6, -2782.3395, -3.7)));
          ;
          (ivec3(3012, -16576, 36347) , mat2(5.0, 5.1, 3.5, 6.2));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          ;
          false;
          vec3(5.5, 9880.0064, 9491.7061);
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), int(2))), int(int(~ (_GLF_IDENTITY(int(2), int(2)))))), ~ (_GLF_IDENTITY(int(2), int(2)))))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
           {
            uvec3(55742u, 113913u, 118612u);
           }
          ivec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
         }
        if(_GLF_DEAD(false))
         return;
        for(        uvec2(190632u, 65660u);
 bvec3(false, true, false).y; uvec2(131300u, 49827u))
         {
          bvec2 _GLF_SWITCH_1_3v[88], _GLF_SWITCH_1_4v[21];
          mat4x2(_GLF_IDENTITY(-5.2, max(-5.2, -5.2)), -155.801, 27.98, -6.9, -68.57, -0.8, -72.56, -6.8);
         }
        {
         _GLF_IDENTITY(mat4(7.5, -8307.9437, 6.3, -8.3, 70.42, 7606.7417, 3.7, 6.2, -761.601, -393.792, 9.5, 6.5, 0.8, -2461.2161, 1671.3836, 47.67), (false ? _GLF_FUZZED(mat4(-11.87, -24.86, 5.1, -7.4, 8.3, -7.1, 43.39, -8151.2261, -34.09, -9.4, -8.9, 900.195, -1.3, -3561.6141, -0.4, 0.1)) : mat4(7.5, -8307.9437, 6.3, -8.3, 70.42, 7606.7417, 3.7, 6.2, -761.601, -393.792, 9.5, 6.5, 0.8, -2461.2161, 1671.3836, 47.67)));
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           switch(_GLF_SWITCH((0 | 0)))
            {
             case 0:
             case 52:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             case 60:
             case 81:
             case 48:
             case 86:
             case 63:
             case 24:
             return;
             break;
             default:
             1;
            }
          }
         mat2x3(8.9, -8.3, -76.88, 9.1, -72.64, -922.999);
         bvec3(true, false, false);
         239.841;
         uvec3(193637u, 72686u, 147980u);
        }
       }
       uvec3 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(false)
          {
           switch(_GLF_SWITCH((0 | 0)))
            {
             case 69:
             uvec2 _GLF_SWITCH_4_0v[47], _GLF_SWITCH_4_1v[80], _GLF_SWITCH_4_2v[39];
             case 88:
             ;
             case 0:
             uvec4(193427u, 13024u, 196778u, 122853u);
             case 8:
             (uvec4(7765u, 188065u, 132987u, 30724u) != uvec4(119213u, 104329u, 150509u, 134609u));
             case 2:
             if(_GLF_DEAD(false))
              return;
             case 70:
             case 54:
             case 56:
             case 91:
             ivec4 _GLF_SWITCH_1_8v[86], _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v;
             break;
             default:
             1;
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         bvec2(false, true);
        }
       mat3x2 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v[83];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(mat4 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v; true; all(bvec4(true, true, false, false)))
            {
             uvec4 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v[69];
             ;
             if(_GLF_DEAD(false))
              continue;
             ivec2 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v[62];
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               mat3(0.8, 44.36, -7670.3076, -0.1, -21.00, 8441.4535, -86.34, 76.52, -38.13);
              }
             (_GLF_SWITCH_1_15v.bgr ++);
             uvec4 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v;
             mat4(5445.7870, 62.94, -0.8, 1.8, -0.9, -2.0, 3.9, -2.1, 6067.7163, 914.621, 4674.4780, _GLF_IDENTITY(-5987.2035, min(_GLF_IDENTITY(-5987.2035, mix(float(-5987.2035), float(_GLF_FUZZED(-73.25)), bool(false))), -5987.2035)), -0.6, 4909.8844, -4.7, -289.149);
            }
          }
         {
          bvec3(false, false, true);
         }
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          ivec2(60845, -5065);
          mat2x4(-5.3, 2.4, 8.4, 8.3, 63.64, -7592.1180, -2.0, 7.7);
          uvec2 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v[94];
         }
         if((mat4x3(-9.5, -3007.5399, -621.060, -82.20, 741.450, 9.8, -56.44, 4101.7395, -2.6, -14.83, -350.066, -83.03) != mat4x3(279.731, 21.30, -93.89, -88.88, -7.5, -89.50, -1740.9731, -71.55, -9.8, -6.1, 542.719, _GLF_IDENTITY(30.39, (30.39) + 0.0))))
          {
           mat4 _GLF_SWITCH_1_25v[44], _GLF_SWITCH_1_26v[88];
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false)))))
            return;
           if(_GLF_DEAD(false))
            return;
           mat4 _GLF_SWITCH_1_27v[10], _GLF_SWITCH_1_28v[68];
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           min(vec3(-155.385, 568.301, 9.8), vec3(7.5, 263.676, -6389.3502));
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             vec4(-6.5, 9501.2479, 826.669, 8.7);
            }
           else
            {
            }
           ;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             equal(ivec4(76583, -93946, -86690, 3830), ivec4(33016, 35550, -82841, 69812));
            }
           ivec3 _GLF_SWITCH_1_29v;
          }
         mat3x4 _GLF_SWITCH_1_30v, _GLF_SWITCH_1_31v;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       (-75528 | (-22749 % ivec3(-18274, 39377, -44867)));
       while(false)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           vec4(-64.61, -5.1, 285.797, 841.866);
          }
         -96664;
        }
       if(_GLF_DEAD(false))
        return;
      }
     case 46:
     {
      while((60.02 < -6.3))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
       }
      length(vec4(-488.163, 543.596, 84.78, -94.32));
      if((-99517 == -47169))
       {
        (mat2x3(-216.604, -7144.6867, 32.78, 4.8, 735.149, -96.98) - 5.6);
        mat2x4 _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v;
        {
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
          {
           case 0:
           uvec4(72787u, 103826u, 24248u, 135234u);
           if(_GLF_DEAD(false))
            return;
           (mat4x2(-83.74, -9375.8216, 4562.2698, -2.2, -8431.3928, 8980.1531, 6.6, 4.0));
           uvec3 _GLF_SWITCH_1_34v;
           ivec2(-13369, 82995);
           if(_GLF_DEAD(false))
            return;
           uvec4(166150u, 46929u, 184744u, 190024u);
           case 68:
           if(_GLF_DEAD(false))
            return;
           mat2x3 _GLF_SWITCH_1_35v, _GLF_SWITCH_1_36v;
           _GLF_SWITCH_1_33v;
           ivec3(-32510, -52171, 3285);
           break;
           default:
           1;
          }
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        for(        true;
 false; uvec3(141455u, 55468u, 122106u))
         {
         }
        (- mat3(16.30, 119.793, -7.5, 80.96, 624.508, 68.90, -5577.3710, 26.19, -9928.0643));
        if((ivec2(68185, -52310) == abs(ivec2(-54565, 28321))))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              return;
             }
           }
          (+ mat2(-364.993, 1.9, -0.3, 65.66));
          mat2x3 _GLF_SWITCH_1_37v, _GLF_SWITCH_1_38v[66], _GLF_SWITCH_1_39v;
         }
        mat4 _GLF_SWITCH_1_40v[45], _GLF_SWITCH_1_41v;
       }
      vec2 _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v, _GLF_SWITCH_1_44v;
      ;
      do
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          uvec3(162426u, 25512u, 163559u);
         }
        if(_GLF_DEAD(false))
         continue;
        ;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        ;
        while(true)
         {
          if(_GLF_DEAD(false))
           break;
          mat4x3(-267.388, _GLF_IDENTITY(-4370.2815, (false ? _GLF_FUZZED(-9.7) : -4370.2815)), -5.6, -846.201, -0.6, 1.1, -3.1, -6.1, -4.2, -6885.9078, 923.523, 4.0);
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            vec3(-2659.9013, 4.7, 362.754);
            if(_GLF_DEAD(false))
             continue;
           }
          else
           {
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            ldexp(vec3(-9948.4581, 37.97, 836.572), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-79547, (-79547) | 0), _GLF_IDENTITY(-10960, min(-10960, -10960)), 87151), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(-79547, (-79547) | 0), _GLF_IDENTITY(-10960, min(-10960, -10960)), 87151))), 55234));
           }
          else
           {
           }
          uvec3 _GLF_SWITCH_1_45v[72];
          if(_GLF_DEAD(false))
           return;
          (uvec3(uvec2(141462u, 70092u), _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_id)))) * subgroup_local_id);
         }
        if(bool(90895))
         {
         }
        for(mat2x3 _GLF_SWITCH_1_46v, _GLF_SWITCH_1_47v[56], _GLF_SWITCH_1_48v; true; bvec3(true, false, true))
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 0:
            (mat4x2(-9.4, 0.2, -53.17, 358.690, 9.0, -786.320, 4381.3893, -3859.1692) + 85.81);
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               return;
             }
            (-99585 & ivec4(-83078, 41563, -51009, 21816));
            case 59:
            int _GLF_SWITCH_1_49v[93], _GLF_SWITCH_1_50v[10], _GLF_SWITCH_1_51v[58];
            int _GLF_SWITCH_1_52v, _GLF_SWITCH_1_53v, _GLF_SWITCH_1_54v[40];
            uvec4(167034u, 104599u, 191677u, 165617u);
            mat3 _GLF_SWITCH_1_55v;
            mat4(2670.6557, 2.7, -209.471, -5.2, 4.3, -1.1, 5098.0045, -3021.8854, -28.66, -2.3, 541.539, -6155.3653, -320.215, -3.9, -2.5, -3.3);
            if(_GLF_DEAD(false))
             continue;
            break;
            case 96:
            _GLF_SWITCH_1_52v;
            default:
            1;
            if(_GLF_DEAD(false))
             continue;
           }
         }
        for(        mat3x2(565.677, 44.66, 38.73, -110.415, -2.1, 0.9);
 (-143.891 > -5540.3519); mat4x3(69.22, _GLF_IDENTITY(3.9, min(3.9, 3.9)), 793.186, 7.8, 5356.8068, -3.1, -3.4, -952.041, -323.458, -16.82, 8.5, 1.9))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            break;
           }
          vec3(-493.739, -6.1, -29.48);
         }
       }
      while(bvec4(true, false, true, true).z);
      if(_GLF_DEAD(false))
       return;
      for(int _injected_loop_counter = ((0 ^ 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
       {
        while(true)
         {
          vec4(-943.714, -0.0, -779.030, 13.59);
          uvec4 _GLF_SWITCH_1_56v, _GLF_SWITCH_1_57v, _GLF_SWITCH_1_58v[20];
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          5.9;
         }
       }
      if(_GLF_WRAPPED_IF_FALSE(false))
       {
       }
      else
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        mat4x3(-1.0, 89.29, -8.6, -384.442, -872.882, -84.00, 806.056, 8.2, 9.2, -0.1, -3.3, 319.392);
       }
      for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (45810 & 0)); _injected_loop_counter --)
       {
        if(_GLF_DEAD(false))
         return;
       }
      mat4x3(-5.4, -124.196, 8.2, -20.25, -85.33, -4.5, -71.09, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED((-4.2 - 2.0)) : -0.0)), _GLF_IDENTITY(_GLF_IDENTITY(-12.59, (true ? -12.59 : _GLF_FUZZED(1.7))), mix(float(-12.59), float(_GLF_FUZZED(90.27)), bool(false))), 30.45, -4782.8494, 137.005);
     }
     if(_GLF_DEAD(false))
      return;
     default:
     1;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
