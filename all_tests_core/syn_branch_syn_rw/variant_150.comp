#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uvec4 _f0;
 uint _f1;
 vec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 ivec2 _f3;
 bvec2 _f4;
 vec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
 vec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 bool _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 vec4 _f2;
 float _f3;
 mat4x3 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 bvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 int _f1;
 bool _f2;
} ;

struct _GLF_struct_5 {
 float _f0;
 float _f1;
 int _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 float _f1;
 uint subgroup_id;
 mat3x4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_4 _f0;
 mat2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_1 {
 uint workgroup_id;
 mat2 _f0;
 mat2x3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 bvec3 _f1;
 vec3 _f2;
 bvec4 _f3;
 mat4 _f4;
 int _f5;
} ;

struct _GLF_struct_2 {
 bool _f0;
 _GLF_struct_0 _f1;
 mat4x3 _f2;
 mat4 _f3;
 mat2 _f4;
 uint _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_3 {
 float _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-96.57)), bool(false))) > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_4(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, abs(1.0), log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x))), min(float(mat4x2(0.0, 0.0, abs(1.0), log(1.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(69.13)), bool(false)))), vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(-8194.6427)), bvec2(false, false))))).x))), float(mat4x2(0.0, 0.0, abs(1.0), log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, gl_SubgroupID, mat3x4(1.0)), mat2(1.0), _GLF_struct_7(_GLF_struct_5(1.0, 1.0, _GLF_IDENTITY(1, (1) ^ 0)), _GLF_struct_6(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), false))))), false)))))), 1, true)), _GLF_struct_8(mat2x3(1.0), bvec2(true), mat3x4(1.0)), _GLF_struct_13(_GLF_struct_9(mat3x2(1.0), true), _GLF_struct_10(vec4(1.0), mat4x3(1.0), uvec4(1u), mat3x4(1.0), mat3x4(1.0), vec2(1.0), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))), vec4(1.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED((71.46 - -7.5))), float(sin(0.0)), bool(true)))), mat4x3(1.0), _GLF_struct_11(mat2(1.0), mat4x2(1.0), mat3x4(1.0), ivec2(1), bvec2(true), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-327.042)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(float(float(1.0))), float(_GLF_FUZZED((- 235.734))), bool(false)))), 1.0))), bool(true)))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-327.042)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(float(float(1.0))), float(_GLF_FUZZED((- 235.734))), bool(false)))), 1.0))), bool(true)))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-327.042)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(float(float(1.0))), float(_GLF_FUZZED((- 235.734))), bool(false)))), 1.0))), bool(true)))))))), mat2(1.0)), _GLF_struct_12(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), 1u, vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ivec2(1))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (gl_NumWorkGroups) << uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false))) || false))))), true && (false)), true, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), log(1.0)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), log(1.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), log(1.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), log(1.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.8))) : _GLF_FUZZED(-5.3))), 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4726.9635))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) / 1.0))), log(1.0)))).y)), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), log(1.0)))).y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(_GLF_IDENTITY((93601u & 0u), min((93601u & 0u), _GLF_IDENTITY((93601u & 0u), ~ (~ ((93601u & 0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((93601u & 0u), min((93601u & 0u), _GLF_IDENTITY((93601u & 0u), ~ (~ ((93601u & 0u)))))), ~ (~ (_GLF_IDENTITY((93601u & 0u), min((93601u & 0u), _GLF_IDENTITY((93601u & 0u), ~ (~ ((93601u & 0u))))))))))))) & uvec3(197922u, _GLF_IDENTITY(48513u, ~ (_GLF_IDENTITY(~ (48513u), (~ (48513u)) - 0u))), 51040u))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1.0, _GLF_struct_2(true, _GLF_struct_0(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), bvec3(true), vec3(1.0), bvec4(true), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-9.0, -4.6, 947.134, _GLF_IDENTITY(-9414.4378, min(-9414.4378, _GLF_IDENTITY(-9414.4378, 1.0 * (_GLF_IDENTITY(-9414.4378, (-9414.4378) - 0.0))))), -6.6, 0.7, -3.3, 4.2, -16.22, -9.3, _GLF_IDENTITY(7.8, min(_GLF_IDENTITY(7.8, min(7.8, 7.8)), 7.8)), -841.316, -222.326, -5.6, 314.734, _GLF_IDENTITY(476.368, max(476.368, 476.368)))) : mat4(1.0))), 1), mat4x3(1.0), mat4(1.0), mat2(1.0), 1u, _GLF_struct_1(gl_WorkGroupID.x, mat2(1.0), mat2x3(1.0), ivec3(1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false)))), (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), false), bvec2(bvec3(bvec2(bool(false), false), false))))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), bvec2(false, true)))))) / cos(sqrt(vec2(0.0, 0.0)))).y)))), true && ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), abs(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), injectionSwitch[1])).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), abs(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), injectionSwitch[1])).x > injectionSwitch.y))) && true)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true)))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED(4275.5272), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4746.2275) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && true))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-43.43)), bool(false)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-43.43)), bool(false)))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)).y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))))) && true)))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_3._f1._f6.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base, 0u ^ (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_struct_replacement_14._f0.subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))), ~ (~ (clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(170554u) : 0u)), 0u, 0u)))))), clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (false ? _GLF_FUZZED(uvec4(149807u, 82079u, 32145u, 32621u)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, max(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, max(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base))))))) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u))), (clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))).z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w) >> _GLF_IDENTITY(0u, (0u) << 0u)) + subgroup_base + GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), (bool(bool(_GLF_DEAD(false)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(true && (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), true && (true && (false))), true && (_GLF_IDENTITY(true && (false), true && (true && (false)))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true && (true && (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) && (false), ! (! (_GLF_IDENTITY(true && (false), true && (true && (false)))))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w, ~ (~ (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY(((subgroup_base)), min(((subgroup_base)), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)))))) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), ((_GLF_IDENTITY(subgroup_base, (1u ^ 1u) | (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(87494u))))))) << 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base)))))))), clamp(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base)))))))), _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))), ~ (_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base)))))))), _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base)))))))))))))) - 0u) + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z) | 0u));
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, 64)))), 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-809.596)), vec2(_GLF_FUZZED(1868.7624), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0), transpose(transpose(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0))))), vec2(mat2(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0), transpose(transpose(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), sqrt(0.0), 0.0))))), 0.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -101.539 : 818.600))), vec2(_GLF_FUZZED(float(int(-5143.7147))), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (false) || false) || (! (false)))))))), ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))), false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, sqrt(1.0), 0.0))).y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7267.7763)), vec2(_GLF_FUZZED(0.6), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, clamp((1) ^ 0, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, 0 ^ ((1) ^ 0))) - 0), (1) ^ 0))), 1))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + (1)))), 0, 1, (1 | 0)))), _GLF_IDENTITY(1, (1) ^ 0), 1))), (uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0))), 0 ^ (int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0))))), int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0)))))), _GLF_IDENTITY(1, (1) ^ 0), 1)))) ^ 0u), uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0)), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0)), _GLF_IDENTITY((true ? ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0)) : _GLF_FUZZED(floatBitsToInt(vec4(-1.9, 848.991, 44.69, _GLF_IDENTITY(-245.111, (-245.111) / abs(1.0)))))), (false ? _GLF_FUZZED(ivec4(41509, 63803, 42923, -19107)) : (true ? ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, (1 | 0)) : _GLF_FUZZED(floatBitsToInt(vec4(-1.9, 848.991, 44.69, _GLF_IDENTITY(-245.111, (-245.111) / abs(1.0))))))))))))), _GLF_IDENTITY(1, (1) ^ 0), 1))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x) ^ 0u)], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), bool(bvec4(false, true, false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(146356u)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(146356u)), max(_GLF_FUZZED(float(146356u)), _GLF_FUZZED(float(146356u)))), _GLF_IDENTITY(_GLF_FUZZED(float(146356u)), min(_GLF_FUZZED(float(146356u)), _GLF_FUZZED(float(146356u)))), _GLF_FUZZED(float(146356u)))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), bvec2(true, _GLF_IDENTITY(false, true && (false))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(146356u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), bvec2(true, _GLF_IDENTITY(false, true && (false))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(146356u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, true && (false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, true && (false))), false)))))))).x > injectionSwitch.y)))))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
