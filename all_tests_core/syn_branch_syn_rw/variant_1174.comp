#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 ivec4 _f0;
 int _f1;
 mat4x2 _f2;
 mat4 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_23 {
 bvec2 _f0;
 uint _f1;
 uvec3 _f2;
 ivec3 _f3;
 vec4 _f4;
 bvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_22 {
 mat4x2 _f0;
 mat4x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_25 {
 ivec4 _f0;
 _GLF_struct_22 _f1;
 uint _f2;
 uint _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_24 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 uvec4 _f1;
 vec2 _f2;
 ivec2 _f3;
 int _f4;
} ;

struct _GLF_struct_19 {
 mat4x2 _f0;
 mat2 _f1;
 vec4 _f2;
 mat3 _f3;
 mat2x3 _f4;
 mat2x4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 bvec3 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 uvec3 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_26 {
 uint subgroup_size;
 _GLF_struct_21 _f0;
 _GLF_struct_25 _f1;
 int _f2;
 vec2 _f3;
} ;

struct _GLF_struct_15 {
 int _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 mat4 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 mat2x3 _f1;
 uint _f2;
 mat2x3 _f3;
 mat2x4 _f4;
 uvec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 float _f1;
 ivec2 _f2;
 uvec3 _f3;
 bool _f4;
 uvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 uvec4 _f1;
 int _f2;
 mat3 _f3;
 uvec2 _f4;
 uvec3 _f5;
 float _f6;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 mat3 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 vec3 _f3;
 uint _f4;
 ivec3 _f5;
 uint _f6;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 bvec3 _f1;
 bool _f2;
 _GLF_struct_6 _f3;
 ivec3 _f4;
 bvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_17 {
 uint subgroup_base;
 _GLF_struct_7 _f0;
 uvec4 _f1;
 _GLF_struct_12 _f2;
 uvec2 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uint virtual_gid;
 ivec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat3x2 _f1;
 mat3 _f2;
 mat3x2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 vec4 _f3;
 mat4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
 mat2x4 _f3;
 float _f4;
 uvec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat4 _f1;
 mat2x3 _f2;
 vec3 _f3;
 uvec3 _f4;
 uint subgroup_id;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) / uvec2(1u, 1u)), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-27.94, -6217.3098, -64.51, -8.8, _GLF_IDENTITY(5.9, max(5.9, _GLF_IDENTITY(5.9, _GLF_IDENTITY((5.9), float(mat3x4((5.9), _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), 0.0, sqrt(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sqrt(0.0), 0.0, sqrt(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, log(1.0), 1.0, 0.0))) / 1.0))), 337.482, -3.0, -5.4, -364.628, _GLF_IDENTITY(_GLF_IDENTITY(-137.454, (false ? _GLF_FUZZED(dot(vec4(5399.3123, 918.671, _GLF_IDENTITY(7204.5464, 1.0 * (7204.5464)), -32.86), vec4(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, float(float(9.1))), _GLF_IDENTITY(9.1, min(9.1, 9.1)))), -74.37, 38.18, -5.5))) : _GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))))))))), max(_GLF_IDENTITY(-137.454, (false ? _GLF_FUZZED(dot(vec4(5399.3123, 918.671, _GLF_IDENTITY(7204.5464, 1.0 * (7204.5464)), -32.86), vec4(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, float(float(9.1))), _GLF_IDENTITY(9.1, min(9.1, 9.1)))), -74.37, 38.18, -5.5))) : _GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(-137.454, (false ? _GLF_FUZZED(dot(vec4(5399.3123, 918.671, _GLF_IDENTITY(7204.5464, 1.0 * (7204.5464)), -32.86), vec4(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, float(float(9.1))), _GLF_IDENTITY(9.1, min(9.1, 9.1)))), -74.37, 38.18, -5.5))) : _GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))))))))), max(_GLF_IDENTITY(-137.454, (false ? _GLF_FUZZED(dot(vec4(5399.3123, 918.671, _GLF_IDENTITY(7204.5464, 1.0 * (7204.5464)), -32.86), vec4(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, float(float(9.1))), _GLF_IDENTITY(9.1, min(9.1, 9.1)))), -74.37, 38.18, -5.5))) : _GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))))))))), _GLF_IDENTITY(-137.454, (false ? _GLF_FUZZED(dot(vec4(5399.3123, 918.671, _GLF_IDENTITY(7204.5464, 1.0 * (7204.5464)), -32.86), vec4(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, float(float(9.1))), _GLF_IDENTITY(9.1, min(9.1, 9.1)))), -74.37, 38.18, -5.5))) : _GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))), float(_GLF_IDENTITY(_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454)), 0.0 + (_GLF_IDENTITY(-137.454, max(_GLF_IDENTITY(-137.454, max(-137.454, -137.454)), -137.454))))))))))))))), 7274.9545, -24.21, -37.34, -6.1, -3.7, -9.6))))) - mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.6) : 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(981.038, max(981.038, 981.038)))), float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.5))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 0.0 : _GLF_FUZZED(431.382)))), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), (0.0) * 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0)), mat2x3(1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5493.5111)), float(1.0), bool(true)))), _GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), 1u))), gl_SubgroupID, mat2x4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), ! (! (false || (false))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3756.3054)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5)))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))), mix(vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(5601.1972)), vec2(((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(2319.6120, -1.5)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(vec2(2319.6120, -1.5))))))[0], ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0))))).y) + 0.0))) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true)))).y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))), mix(vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(5601.1972)), vec2(((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false))))) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))))[0], ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(2319.6120, -1.5), mix(vec2((vec2(2319.6120, -1.5))[0], (vec2(2319.6120, -1.5))[1]), vec2(_GLF_FUZZED(6984.1272), _GLF_FUZZED(-61.34)), bvec2(false, false))))), mix(vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(5601.1972)), vec2(((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))))[0], ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(vec2(2319.6120, -1.5))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(793.168), _GLF_FUZZED(float(50812u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mod(2.5, -3551.0436))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(gl_SubgroupSize, _GLF_struct_21(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(97233u, 72172u)) : uvec2(1u)), ~ (~ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(97233u, 72172u)) : uvec2(1u)))))), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_struct_18(uvec4(1u), bvec3(true)), _GLF_struct_19(mat4x2(1.0), mat2(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), mat3(1.0), mat2x3(1.0), mat2x4(1.0), mat2(1.0)), uvec3(1u), _GLF_struct_20(mat2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) >> 0u)), vec2(1.0), ivec2(1), _GLF_IDENTITY(1, 0 | (1)))), _GLF_struct_25(ivec4(1), _GLF_struct_22(mat4x2(1.0), mat4x3(1.0), bvec4(true)), 1u, 1u, _GLF_struct_23(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1u, uvec3(1u), ivec3(1), vec4(1.0), bvec3(true), 1), _GLF_struct_24(ivec4(1), 1, mat4x2(1.0), mat4(1.0), true, mat4x2(1.0)), mat3x2(1.0)), 1, vec2(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u ^ 0u)), 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u ^ 0u)), 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) ^ 0u))), 0u, 0u)) | ((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u ^ 0u)), 0u, 0u)))) >> uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(~ (gl_WorkGroupSize))), _GLF_IDENTITY((uvec3(uvec3(~ (gl_WorkGroupSize)))), (true ? _GLF_IDENTITY((uvec3(uvec3(~ (gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(~ (gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(160516u, 20939u, 77501u)))) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec3(uvec3(~ (gl_WorkGroupSize))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(~ (gl_WorkGroupSize))), min(uvec3(uvec3(~ (gl_WorkGroupSize))), uvec3(uvec3(~ (gl_WorkGroupSize)))))), clamp((uvec3(uvec3(~ (gl_WorkGroupSize)))), (uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), (uvec3(uvec3(~ (gl_WorkGroupSize)))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(~ (gl_WorkGroupSize))), (uvec3(uvec3(~ (gl_WorkGroupSize)))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(~ (gl_WorkGroupSize))), (uvec3(uvec3(~ (gl_WorkGroupSize)))) >> uvec3(0u, 0u, 0u))))))).x, 1u, 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u + (workgroup_size), (0u + (workgroup_size)) << 0u))))) + 0u)) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u), _GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(_GLF_IDENTITY(uvec2(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 1u), (uvec2(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 1u)) << uvec2(0u, 0u))))) ^ 0u))) * 1u, min(((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(_GLF_IDENTITY(uvec2(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 1u), (uvec2(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 1u)) << uvec2(0u, 0u))))) ^ 0u))) * 1u, ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(_GLF_IDENTITY(uvec2(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 1u), (uvec2(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 1u)) << uvec2(0u, 0u))))) ^ 0u))) * 1u)))))) | (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u + (workgroup_size)))), max(~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u + (workgroup_size)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u + (workgroup_size)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) << 0u))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | ((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))))))) ^ 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) << 0u))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))))))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | ((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))))))) ^ 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u + (workgroup_size), max(0u + (workgroup_size), 0u + (workgroup_size)))))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), min((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), 0u), (uvec2(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), 0u)) | (uvec2(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), 0u))))) + (workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), clamp((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))) + 0u)))))))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), ~ (~ (((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) | 0u)))), 1u * ((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))), 1u, 0u))) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))))))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u, ~ (~ (((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) ^ 0u))) * 1u))))))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(uint(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ~ (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ~ (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ~ (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))))) | 0u)) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), max(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), ~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), uint(uvec3(((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), 0u, 1u)))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))) / 1u))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u)))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) + (workgroup_size)))), uint(uint(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) << 0u)) / 1u)) - 0u)) ^ 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u, (((_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) ^ 0u))) * 1u) / 1u))))) | (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))))))), (~ ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))))) | 0u)) | 0u)) - 0u))))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_replacement_26.subgroup_size * _GLF_struct_replacement_0.subgroup_id, _GLF_struct_7(uvec4(1u), bvec3(true), _GLF_IDENTITY(true, (true) && true), _GLF_struct_6(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)), 0.0), transpose(transpose(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))), mat2x3(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), vec3(1.0), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) * 1u)), 1u)), ivec3(1), 1u), ivec3(_GLF_IDENTITY(1, min(1, 1))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(bool(true)))))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))), ~ (_GLF_IDENTITY(~ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))))), clamp((~ (uvec4(1u))), (~ _GLF_IDENTITY((uvec4(1u)), (_GLF_IDENTITY((uvec4(1u)), (true ? _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | ((uvec4(1u)))) : _GLF_FUZZED(uvec4(193379u, 36676u, 158698u, 178263u))))) | uvec4(0u, 0u, 0u, 0u))), (~ (uvec4(1u)))))))), _GLF_struct_12(_GLF_struct_8(mat4x3(1.0), mat4x2(1.0)), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_9(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((true), _GLF_IDENTITY(true && ((true)), ! (! (true && ((true)))))), ! (! (false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && _GLF_IDENTITY(((true)), ! (! ((_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((true), _GLF_IDENTITY(true && ((true)), ! (! (true && ((true)))))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false || _GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bvec2(bvec2(bvec2(! (false || _GLF_IDENTITY(_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true)))))), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true)))))), true), false, false))))) && true))))), false))))), (bool(_GLF_IDENTITY(bvec2(! (false || _GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (! (((true))))))), false), bvec2(bvec2(bvec2(! (false || _GLF_IDENTITY((true), true && _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (((true))), true && (_GLF_IDENTITY(! (((true))), ! (! (! (_GLF_IDENTITY(((true)), bool(bvec2(_GLF_IDENTITY(((true)), true && (((true)))), true))))))))))))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), uvec4(1u), 1, mat3(1.0), uvec2(1u), uvec3(1u), 1.0), _GLF_struct_10(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u, 0u)), 1.0, ivec2(_GLF_IDENTITY(1, (1) * 1)), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, (true) && true)))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true)))))) && true))), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true)))))) && true)))))), uvec4(1u), ivec4(_GLF_IDENTITY(1, max(1, 1)))), _GLF_struct_11(1u, mat2x3(1.0), 1u, mat2x3(1.0), mat2x4(1.0), uvec4(1u), mat2x4(1.0)), mat2x4(1.0)), uvec2(1u), _GLF_struct_13(mat3x2(1.0)), _GLF_struct_16(vec3(1.0), mat4(1.0), _GLF_struct_14(mat3(1.0), mat4x2(1.0)), _GLF_struct_15(1, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), uvec2(1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), ivec2(1), _GLF_struct_1(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), mat3x4(1.0), vec4(1.0), mat4(1.0), vec4(1.0)), mat2x4(1.0), 1.0, uvec3(1u), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_4(_GLF_struct_3(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), workgroup_base + _GLF_struct_replacement_17.subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) + (ivec4(1))), clamp(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1))), ivec4(1))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), mix(float(clamp(0.0, 0.0, 0.0)), float(_GLF_FUZZED((-939.176 / 452.547))), bool(false))))))), mat3x2(1.0), _GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0)))), mat3x2(1.0), mat4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false)), ! (! (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, false))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_17.subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1))) % _GLF_struct_replacement_26.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x2(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), log(1.0), 1.0, 0.0)))).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x2(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), log(1.0), 1.0, 0.0)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x2(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), log(1.0), 1.0, 0.0)))).y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_5._f1._f0.virtual_gid, (_GLF_struct_replacement_5._f1._f0.virtual_gid) * 1u)], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), _GLF_IDENTITY(uint(uint(subgroup_local_id)), (_GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec4(uint(uint(subgroup_local_id)), 0u, 0u, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | 0u))))) >> 0u)) + 1 < (_GLF_struct_replacement_26.subgroup_size / 2))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1)) | 0))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))), ! (! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (false)) || ((_GLF_IDENTITY(false, ! (! (false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0)))), max((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0)))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0)))), ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0))))) * mat2(1.0)))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0)))), max((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0)))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0)))), ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(round(injectionSwitch)), (_GLF_FUZZED(round(injectionSwitch))) / exp(vec2(0.0, 0.0))))) * mat2(1.0)))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y)))) || false))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y)))))) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, true && (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(77.75))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, true)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), false, false, true)))) && true) && true))), _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), true)), bool(bvec3(bool(bvec2(bool(bool(false)), true)), false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + sin(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_5._f1._f0.virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
}
