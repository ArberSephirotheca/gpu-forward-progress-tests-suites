#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), false, true), true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), true))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true), true))))))), false, false, true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_local_id)))).y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-2.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)), false, true, true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))), injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0)) / 1.0) > injectionSwitch.y))) || false))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), mix(float(_GLF_FUZZED(-4246.0055)), float(float(vec2(injectionSwitch.y, 0.0))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false)), float(mat4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false)), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) + 0.0) > injectionSwitch.y))) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) + 0.0) > injectionSwitch.y))) || false)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) / 1.0)) + 0.0) > injectionSwitch.y))) || false))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, _GLF_IDENTITY(false, false || (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size))), min((subgroup_id * subgroup_size), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), 0u | (1u * (subgroup_id)))) * subgroup_size) << 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) ^ (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u + (uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) ^ (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), min((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size), (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size) << _GLF_IDENTITY(0u, 1u * (0u))))), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) ^ (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u + (uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) ^ (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), min((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size), (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size) << _GLF_IDENTITY(0u, 1u * (0u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base)))) / (1u & 1u)) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), (false ? _GLF_FUZZED((workgroup_id --)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, 0u ^ (7u)), 7u))))) | (workgroup_base)))), (workgroup_base) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base))) * 1u))) + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uint(0.1)) : workgroup_base)) + subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : workgroup_base + subgroup_base))) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))) / 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))), (_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))), ~ (~ (0u ^ ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))))) | (0u ^ ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))))))))) : workgroup_base + subgroup_base))) * 1u))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base))) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_base))))), (workgroup_base))) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) * 1u))) + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base))) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_base))))), (workgroup_base))) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) * 1u))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base))) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_base))))), (workgroup_base))) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) * 1u))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base))) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_base))))), (workgroup_base))) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) * 1u))) + subgroup_local_id) / 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), uint(uvec2(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), 0u))), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), uint(uvec2(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), 0u))), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), uint(uvec2(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), 0u))), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), uint(uvec2(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), 0u))), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))))), clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0))), 1.0, 1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat2x4(tan(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), abs(0.0), 1.0, sqrt(1.0), 1.0)), (true ? float(mat2x4(tan(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), abs(0.0), 1.0, sqrt(1.0), 1.0)) : _GLF_FUZZED(-0.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1550.4375))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1550.4375))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1550.4375))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) / 1u, ~ (~ (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) / 1u)))) | (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) / 1u)), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) / 1u)))], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0 + (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))), _GLF_IDENTITY(true, bool(bvec2(true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), bool(bool(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(false, (false) || false))), true))))))) && true)))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))) || false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), false, false), false)))))))) || false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(3.4) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(true, false))).y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), min(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))))))) + 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0)) | 0), 1)), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), min(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))))))) + 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0)) | 0), 1)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), min(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))))))) + 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0)) | 0), 1)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), min(max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0)))))))) + 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0)) | 0), 1))) ^ 0)))), _GLF_IDENTITY(((subgroup_local_id % 2) == _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (21832 & 0) ^ (_GLF_IDENTITY(0, (0) << 0))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) ^ 0)), 0 + ((_GLF_IDENTITY(0, (0) ^ 0)))) | 0), 1)))), ! (! (((subgroup_local_id % 2) == _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (21832 & 0) ^ (_GLF_IDENTITY(0, (0) << 0))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) ^ 0)) / 1)) | (_GLF_IDENTITY(0, (0) ^ 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) ^ 0)), 0 + ((_GLF_IDENTITY(0, (0) ^ 0)))) | 0), 1))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))) || (false)), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))) | (0u ^ 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), clamp(float(mat2(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) * 1.0), float(mat2(1.0, 1.0, 0.0, 0.0))))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0)), clamp(float(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(705.641)), bool(false))), 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) * 1.0), float(mat2(1.0, 1.0, 0.0, 0.0))))))).y))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false || (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false))))) || false))), false, false), true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)))))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, false), true)))))), false)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(false, (false) || false))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)))) || _GLF_IDENTITY(false, true && (false))))), false || (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))))))) || false))), false, false), true)))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-8336.4548)), vec2(_GLF_FUZZED(8122.6113), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-159.967) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u | (_GLF_IDENTITY(~ (virtual_gid), 1u * (~ (virtual_gid)))))))], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(93938) : 4), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(93938) : 4)) + 0)) : _GLF_FUZZED(-70831))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) - 0), 0 | (false ? _GLF_FUZZED(93938) : _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(41849))), 0), (ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(41849))), 0)) ^ ivec2(0, 0)))))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-70831, (-70831) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-70831, (-70831) ^ 0), (false ? _GLF_FUZZED(-93432) : _GLF_IDENTITY(_GLF_IDENTITY(-70831, (-70831) ^ 0), ~ (~ (_GLF_IDENTITY(-70831, (-70831) ^ 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(-70831, (-70831) ^ 0), (false ? _GLF_FUZZED(-93432) : _GLF_IDENTITY(_GLF_IDENTITY(-70831, _GLF_IDENTITY((-70831) ^ 0, max((-70831) ^ 0, (-70831) ^ 0))), ~ (~ (_GLF_IDENTITY(-70831, (-70831) ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(-70831, (_GLF_IDENTITY(-70831, (true ? -70831 : _GLF_FUZZED(-81647)))) ^ 0), (false ? _GLF_FUZZED(-93432) : _GLF_IDENTITY(_GLF_IDENTITY(-70831, (-70831) ^ 0), ~ (~ (_GLF_IDENTITY(-70831, (-70831) ^ 0)))))))), _GLF_IDENTITY(-70831, (-70831) ^ 0)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))) ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831), 0 ^ (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) << 0)))))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, 0 ^ (false ? _GLF_FUZZED(93938) : 4))) << 0))))) : _GLF_FUZZED(-70831))))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)) ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831))), _GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831)), clamp((true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831)), (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831)), (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831))))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), max(clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4))), (clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)))) ^ 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))), 0 | (_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831)))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4))), (clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)))) ^ 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(93938) : 4)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))), 0 | (_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | (_GLF_FUZZED(-70831))))))))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false))))))) && true)) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(93938), int(ivec3(_GLF_FUZZED(93938), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), max(_GLF_FUZZED(93938), _GLF_IDENTITY(_GLF_FUZZED(93938), (_GLF_IDENTITY(_GLF_FUZZED(93938), int(ivec2(_GLF_FUZZED(93938), 1)))) | (_GLF_FUZZED(93938))))) : 4)) : _GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | _GLF_IDENTITY((_GLF_FUZZED(-70831)), ((_GLF_FUZZED(-70831))) | ((_GLF_FUZZED(-70831)))))))))), ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false)))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false))))))) && true)) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(93938), int(ivec3(_GLF_FUZZED(93938), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), max(_GLF_FUZZED(93938), _GLF_IDENTITY(_GLF_FUZZED(93938), (_GLF_IDENTITY(_GLF_FUZZED(93938), int(ivec2(_GLF_FUZZED(93938), 1)))) | (_GLF_FUZZED(93938))))) : 4)) : _GLF_IDENTITY(_GLF_FUZZED(-70831), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-70831), (_GLF_FUZZED(-70831)) | _GLF_IDENTITY((_GLF_FUZZED(-70831)), ((_GLF_FUZZED(-70831))) | ((_GLF_FUZZED(-70831))))))))))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(93938), 0 | (_GLF_IDENTITY(_GLF_FUZZED(93938), (_GLF_FUZZED(93938)) << 0))) : 4)) : _GLF_FUZZED(-70831))), (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(93938), 0 | (_GLF_IDENTITY(_GLF_FUZZED(93938), (_GLF_FUZZED(93938)) << 0))) : 4)) : _GLF_FUZZED(_GLF_IDENTITY(-70831, 1 * (-70831)))))) + (0 | 0))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(93938), clamp(_GLF_FUZZED(93938), _GLF_FUZZED(93938), _GLF_FUZZED(93938))) : 4)) : _GLF_FUZZED(-70831))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (true ? 4 : _GLF_FUZZED(-43930))), (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93938) : 4)) : _GLF_FUZZED(-70831))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) | 0), (false ? _GLF_FUZZED(93938) : 4) | (false ? _GLF_FUZZED(93938) : 4)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) | (false ? _GLF_FUZZED(93938) : 4)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))), ~ (~ (int(ivec2(_GLF_IDENTITY(false ? _GLF_FUZZED(93938) : 4, (false ? _GLF_FUZZED(93938) : 4) | (false ? _GLF_FUZZED(93938) : 4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))))))) : _GLF_FUZZED(_GLF_IDENTITY(-70831, (false ? _GLF_FUZZED(20200) : -70831))))))))) >> 0)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, false))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, false))))))))), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
