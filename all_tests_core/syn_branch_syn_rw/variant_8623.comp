#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true)))))), true && (false)), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (0u & 18781u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) << 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(true && (false), true)), (bool(bvec2(true && (false), true))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9485.7038) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), true, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), true, true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), true, true, false)), false)))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0))), injectionSwitch)).y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, min((subgroup_id) << 0u, (subgroup_id) << 0u))) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(_GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(-3668.0404) : 0.0 + (injectionSwitch.x))), 0.0 + (injectionSwitch.x), _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(0.0 + (injectionSwitch.x)), float(_GLF_FUZZED(52.14)), bool(false)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u | 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (0u ^ 0u)))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)) << 0u, (((workgroup_base + subgroup_base)) << 0u) << 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)) + 0u))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) >> 0u, ((workgroup_base + subgroup_base) >> 0u) ^ 0u)), ~ (~ (uint(_GLF_IDENTITY((workgroup_base + subgroup_base) >> _GLF_IDENTITY(0u, 0u ^ (0u)), ((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u)))))))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u | 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u)))))) ^ 0u)))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, 0u, 0u, 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base)) + subgroup_base) >> 0u, ((workgroup_base + subgroup_base) >> 0u) ^ 0u)), ~ (~ (uint(_GLF_IDENTITY((workgroup_base + subgroup_base) >> 0u, _GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u, max(((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u, ((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u)))))))))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(0u, ~ (~ (0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u | 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) ^ 0u))), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), 0u ^ (((workgroup_base + subgroup_base)))) << 0u)))))) ^ 0u)))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, 0u, 0u, 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base)) + subgroup_base) >> 0u, ((workgroup_base + subgroup_base) >> 0u) ^ 0u)), ~ (~ (uint(_GLF_IDENTITY((workgroup_base + subgroup_base) >> 0u, _GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u, max(((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u, ((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u)))))))))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u | 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (0u | 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) : _GLF_FUZZED(subgroup_id))) + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_size))), workgroup_base + subgroup_base, workgroup_base + subgroup_base))), ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u))) << 0u)))))) >> 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), clamp(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base))))))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), min(((workgroup_base + subgroup_base)), _GLF_IDENTITY(((workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(((workgroup_base + subgroup_base)), (((workgroup_base + subgroup_base))) | (((workgroup_base + subgroup_base))))))))) << 0u)))))) >> 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) >> 0u, ((workgroup_base + subgroup_base) >> 0u) ^ 0u)), ~ (~ (uint(_GLF_IDENTITY((workgroup_base + subgroup_base) >> 0u, ((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u + (0u))))) ^ 0u)))))))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u | 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), min(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))))) >> 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) >> 0u, ((workgroup_base + subgroup_base) >> 0u) ^ 0u)), ~ (~ (uint(_GLF_IDENTITY((workgroup_base + subgroup_base) >> 0u, ((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_size)))) >> 0u) ^ 0u)))))))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))) | 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(9347.1494)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || (! ((_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))))))), true && (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))) && true))))))))) || false)))))), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))) && true), false, true, false)))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))) || false))))))))))) || false))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))), (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))))) || false)), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false, false)), false || (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false, false))))))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)))))), true, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), _GLF_IDENTITY(true, bool(bool(true))))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))))))), true)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true), false))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))))), true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) << (0u | 0u)), (workgroup_base) >> 0u) + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY((float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0, ((float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, log(abs(1.0)), 0.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat2x3(1.0, log(abs(1.0)), 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(mat2x3(1.0, log(abs(1.0)), 0.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat2x3(1.0, log(abs(1.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat4x2(float(_GLF_IDENTITY(mat2x3(1.0, log(abs(1.0)), 0.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat2x3(1.0, log(abs(1.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))))))), false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false))) > injectionSwitch.y), false)), false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(25.72) : injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(_GLF_IDENTITY(false, true && (false))))) > injectionSwitch.y), false))))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)) && true))))))), false || (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))) || false)))))))), false || (injectionSwitch.x > injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y)) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ ((subgroup_local_id % 2)))) == _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), max(0 | (0), _GLF_IDENTITY(0 | (0), 1 * (0 | (0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.9)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))), injectionSwitch)).y)) && _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), ! (! (bool(bvec3(false, true, false))))), true, true, true))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))).y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) / 1) : _GLF_FUZZED(18653)))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) | (64)))), clamp(64, 64, 64)), 64), 0 | (clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64)))))), min(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) | (64)))), clamp(64, 64, 64)), 64), 0 | (clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64)))))), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) | (64)))), clamp(64, 64, 64)), 64), 0 | (clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64)))))), int(ivec3(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) | (64)))), clamp(64, 64, 64)), 64), 0 | (clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64)))))), 0, 0))))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
}
