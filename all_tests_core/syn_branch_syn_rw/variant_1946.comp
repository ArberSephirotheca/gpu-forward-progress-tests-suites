#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], ((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.9) : 0.0))) + 0.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)))), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], ((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), clamp(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)))), min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)))), bvec2(false, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], ((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]) - 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)))), bvec2(false, false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-25912, 1129))) : mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], ((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]) - 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), _GLF_IDENTITY(min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7))), mix(vec2((min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7))))[0], _GLF_FUZZED(-137.389)), vec2(_GLF_FUZZED(-1.4), (min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7))))[1]), bvec2(false, true)))), bvec2(false, false))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], ((injectionSwitch)[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))]) - 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-911.704), max(_GLF_FUZZED(-911.704), _GLF_FUZZED(-911.704))), _GLF_FUZZED(1.7)), min(vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)))), bvec2(false, false))).x) / 1.0))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_FUZZED(7.2)), bool(true)))), float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51.95) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), bool(true))))), float(_GLF_FUZZED(-19.14)), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-911.704), _GLF_FUZZED(1.7)), bvec2(false, false))).x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_FUZZED(7.2)), bool(true)))), _GLF_IDENTITY(float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), clamp(float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat3(float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(true))))), float(_GLF_FUZZED(-19.14)), bool(false))) > injectionSwitch.y)) && true))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-5.0)), _GLF_FUZZED(-68.25)), bvec2(false, false))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-758.928)), float(injectionSwitch.x), bool(true))), 0.0)))), float(_GLF_FUZZED(3245.8713)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))) && true))))))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5925.1303)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(abs(vec3(9.5, -29.08, 2.3))) : vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), min(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))))))), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(abs(vec3(9.5, -29.08, 2.3))) : vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), min(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)))))))))))) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5925.1303)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(abs(vec3(9.5, -29.08, 2.3))) : vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), min(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))))))), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(abs(vec3(9.5, -29.08, 2.3))) : vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), min(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)))))))))))) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5925.1303)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(abs(vec3(9.5, -29.08, 2.3))) : vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), min(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))))))))), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))), (false ? _GLF_FUZZED(abs(vec3(9.5, -29.08, 2.3))) : vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, _GLF_IDENTITY(-7625.6891, clamp(-7625.6891, -7625.6891, -7625.6891)), 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), float(_GLF_FUZZED(5.6)), bool(false)))))))) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), min(tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), tan(vec3(0.0, 0.0, 0.0)) + (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(-7.1, 748.679, -7625.6891, 9.4).g)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)))))))))))) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)))).y))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - 0)), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), false || ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || false))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), bool(bvec3((! (bool(bool(false)))), true, false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), bool(bvec3((! (bool(bool(false)))), true, false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), bool(bvec3((! (bool(bool(false)))), true, false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), bool(bvec3((! (bool(bool(false)))), true, false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || false), true && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false)))))))), ! (! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), _GLF_IDENTITY((bool(bool(false))) || false, ((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false) || false)), true && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true)))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               return;
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-816.392)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)).y)))), true, false), true))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) >> 0u), min(~ (subgroup_id), ~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), clamp(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), _GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), ~ (~ (uvec2((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u)))), uvec2((subgroup_local_id + 1) % subgroup_size, 0u)))))), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (uint(uint(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u));
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 0u), clamp(uvec2(buf[virtual_gid], 0u), uvec2(buf[virtual_gid], 0u), uvec2(buf[virtual_gid], 0u))))), max(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 0u), clamp(uvec2(buf[virtual_gid], 0u), uvec2(buf[virtual_gid], 0u), uvec2(buf[virtual_gid], 0u))))), _GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 0u), clamp(uvec2(buf[virtual_gid], 0u), uvec2(buf[virtual_gid], 0u), uvec2(buf[virtual_gid], 0u))))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))) << 0), _GLF_IDENTITY(0, max(0, 0))))) + 0));
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(70569)))))), 1, 1)), ~ (~ (int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) ^ 0), (0 >> _GLF_IDENTITY(int(8), int(8))), 1, 1)))))), _GLF_IDENTITY(64, (64) | (64)), 4);
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), (! (_injected_loop_counter != 1)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), (! (_injected_loop_counter != 1)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))) && true, ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, true && (false))))) && true) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))) && true))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))) && true))), false), false), true))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (true)))))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.0)), bool(false))) > injectionSwitch.y))))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
      }
    }
   int i = _GLF_IDENTITY(0, min(0, 0));
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) * 1.0)))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))) / 1u))), uint(uint((_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)), (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u))) / 1u))))))], read, 4, 64, 4);
  }
}
