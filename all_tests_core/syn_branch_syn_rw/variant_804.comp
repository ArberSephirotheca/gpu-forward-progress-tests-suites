#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), clamp(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))).x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(359.425), _GLF_FUZZED(2481.5153)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(mat4x2(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), float(injectionSwitch.x), float(injectionSwitch.x))), (float(injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(417.771)), float(0.0), bool(true))))))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(-7.2)), float(float(injectionSwitch.x)), bool(true))), float(mat4(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(-7.2)), float(float(injectionSwitch.x)), bool(true))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0)), dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0))), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_IDENTITY(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0 * (round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), 0.0, 1.0)))), mix(float(_GLF_FUZZED(-777.594)), float(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_FUZZED(0.0)))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_FUZZED(0.0)))), mix(float(_GLF_FUZZED(440.103)), float((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_FUZZED(0.0))))), bool(true)))), float(_GLF_FUZZED(3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((1.0)) / 1.0))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(359.425), _GLF_FUZZED(2481.5153)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(mat4x2(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), float(injectionSwitch.x), float(injectionSwitch.x))), (float(injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(417.771)), float(0.0), bool(true))))))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(0.0), 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(-7.2)), float(float(injectionSwitch.x)), bool(true))), float(mat4(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(-7.2)), float(float(injectionSwitch.x)), bool(true))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0)), dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0))), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_IDENTITY(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0 * (round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), 0.0, 1.0)))), mix(float(_GLF_FUZZED(-777.594)), float(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_FUZZED(0.0)))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_FUZZED(0.0)))), mix(float(_GLF_FUZZED(440.103)), float((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_FUZZED(0.0))))), bool(true)))), float(_GLF_FUZZED(3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((1.0)) / 1.0))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true)), min(mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(-26.27)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0))))), mix(float(_GLF_FUZZED(-27.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0)))))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (true ? float(_GLF_FUZZED(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false) ? float(_GLF_FUZZED(0.0)) : _GLF_FUZZED(91.85))), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), mix(vec2(_GLF_FUZZED(-3.1), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))[0], _GLF_FUZZED(-4.1)), bvec2(true, false))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))) - 0.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(-81.96))))), _GLF_IDENTITY((_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (true ? _GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(mat2x3(-0.0, 748.237, 471.508, -2832.9905, 7.5, -0.0))))), clamp(float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (true ? _GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(mat2x3(-0.0, 748.237, 471.508, -2832.9905, 7.5, -0.0))))), float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (true ? _GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(mat2x3(-0.0, 748.237, 471.508, -2832.9905, 7.5, -0.0))))), float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (true ? _GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat2x3(float(injectionSwitch.x), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(mat2x3(-0.0, 748.237, 471.508, -2832.9905, 7.5, -0.0)))))))), (float(injectionSwitch.x)) + 0.0)) - 0.0) - 0.0)), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(injectionSwitch.x), float(vec2(float(injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(float(injectionSwitch.x), float(vec2(float(injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0))))), (float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))) * 1.0))) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true)))))))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / _GLF_IDENTITY(determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.4) : determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), max(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0)))))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(68.34) : 1.0))))), cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(-4.0)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) + vec2(0.0, 0.0)), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), clamp(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) / sqrt(1.0)), _GLF_FUZZED(8.3))))) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))).x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(-26.27)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0))))), mix(float(_GLF_FUZZED(-27.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0)))))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(-26.27)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0))))), mix(float(_GLF_FUZZED(-27.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0)))))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(-26.27)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0))))), mix(float(_GLF_FUZZED(-27.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0)))))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y)))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) * 1.0))))), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(-26.27)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x3(float(injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, cos(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, tan(0.0), 1.0))), _GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-52.93) : float(injectionSwitch.x))))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), bool(true))), injectionSwitch.x), max(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x)))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x)))), (false ? _GLF_FUZZED(-1103.4941) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x)))), float(vec4(clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x)))), 1.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))))), bool(true))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), float(injectionSwitch.x))))), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec2(float(injectionSwitch.x), 1.0)), float(_GLF_IDENTITY(mat4x3(float(vec2(float(injectionSwitch.x), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3(float(vec2(float(injectionSwitch.x), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(-585.935, -103.280, 4.0, 698.490, 185.956, 587.180, 9986.3015, 2.2, 3.8, -0.5, 421.274, 5.2))))))), _GLF_IDENTITY((float(injectionSwitch.x)) + 0.0, min((float(injectionSwitch.x)) + 0.0, (float(injectionSwitch.x)) + 0.0)))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), float(vec2(float(injectionSwitch.x), 1.0)))))))) * 1.0), bool(true))), injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_IDENTITY(_GLF_FUZZED(0.0), (true ? _GLF_FUZZED(0.0) : _GLF_FUZZED(3923.5251)))))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.3) : 0.0))), (_GLF_IDENTITY(_GLF_FUZZED(0.0), _GLF_IDENTITY(min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)), (min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0))) / round(length(normalize(vec2(1.0, 1.0))))))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED(506.929)), bool(false))), _GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(-7.5, -3.4, 25.32).t)), float(length(normalize(vec2(1.0, 1.0)))), bool(true)))) / 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), min((_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mix(float(_GLF_FUZZED(-27.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? -946.245 : 2174.4138))), bool(false))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))), float(_GLF_FUZZED(88.74)), bool(false)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.x), bool(true))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), max(_GLF_IDENTITY(_GLF_FUZZED(0.0), (false ? _GLF_FUZZED(19.21) : _GLF_FUZZED(0.0))), _GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))))) + 0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.0), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(0.0), 1.0, sin(log(1.0)), 1.0), mat2(1.0) * (mat2(_GLF_FUZZED(0.0), 1.0, sin(log(1.0)), 1.0))))), _GLF_FUZZED(0.0)))) / determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(vec4(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0)), 0.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), 1.0)))))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) + vec2(0.0, 0.0))))), min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) + vec2(0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) + vec2(0.0, 0.0)))))))).x)) > injectionSwitch.y))))) || false))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7462.1155), _GLF_FUZZED(61.52)), bvec2(false, false))) : _GLF_FUZZED(vec2(6.5, 6.0)))).x > injectionSwitch.y))) || false))))) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-9.8, -17.25).t)), vec2(_GLF_FUZZED(2259.8808), (injectionSwitch)[1]), bvec2(false, true))).x) / 1.0) > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((1 | 1), max((1 | 1), (1 | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62219) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + (0 >> _GLF_IDENTITY(int(1), int(1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), clamp(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED((++ workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / 1u)) / (0u ^ 1u))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(56692u) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), 0u | (1u * (subgroup_size))))) ^ 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u, 0u ^ ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / 1u)) / (0u ^ 1u))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(56692u) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), 0u | (1u * (subgroup_size))))) ^ 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u, 0u ^ ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u)))))) >> 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u))))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, 0u | ((subgroup_size) >> 0u)))) - 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), clamp(clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), min(clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u))))))) | (clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u))))))))), max(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 1u))), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u))))))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_size))))) ^ 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u)))), uint(uvec2(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) >> 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)) * (subgroup_size))) ^ 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u))) ^ 0u)))), 0u))))))))))) * 1u))) >> 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), true))))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 ^ 0))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if((subgroup_local_id % 2) == 0)
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, _GLF_IDENTITY(64, int(ivec4(64, 1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))), 0 ^ (max(64, _GLF_IDENTITY(64, int(ivec4(64, 1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1))))))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), bool(bvec2(_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), ((! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))) && true), true)))) && true)))))))))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), (_GLF_DEAD(false)) || false))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), bool(bool(true && (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(89.45), _GLF_FUZZED(-51.46)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) / exp(vec2(0.0, 0.0))).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) < injectionSwitch.y))), true, true))), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(775.066), (injectionSwitch)[1]), bvec2(false, true))))).y))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) | (1)), 1))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, 1, 1)), max(int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) ^ 0), 1, 1, 1)), int(ivec4(4, 1, 1, 1))))));
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x) / 1.0) > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true)))))) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
  barrier();
}
