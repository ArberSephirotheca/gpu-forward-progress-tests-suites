#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2x4 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
 uint virtual_gid;
 uint _f1;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 uint _f1;
 bvec4 _f2;
 mat3x2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 mat3x2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 vec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 vec4 _f1;
 mat4 _f2;
 bvec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 vec3 _f1;
 _GLF_struct_8 _f2;
 uint _f3;
 vec4 _f4;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((3.5 + -883.374))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-742.423)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), ~ (_GLF_IDENTITY(~ (max(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED((true ? subgroup_local_id : subgroup_local_id))))))) / 1u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED((true ? subgroup_local_id : subgroup_local_id))))))) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED((true ? subgroup_local_id : subgroup_local_id))))))) / 1u))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), (uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) ^ (_GLF_IDENTITY(~ (max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(163770u) : gl_WorkGroupSize.x)))), gl_WorkGroupSize.x))))), (~ (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) + 0u)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x)))))))))))), uint(uvec4(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)))), 1u, 0u, 0u))))))) / 1u))))), ~ (~ (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u), (false ? _GLF_FUZZED(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039)) : uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u)))))))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u), (false ? _GLF_FUZZED(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039)) : uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u)))))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039)) : uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039), min(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039), bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039)))) : uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + ((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039), min(bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039), bitfieldInsert(uvec4(56280u, 54621u, 64253u, 10107u), uvec4(131049u, 192604u, 77573u, 134226u), -11705, 87039)))) : uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u))))))))))))), ~ (_GLF_IDENTITY(~ (max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u + (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) ^ (_GLF_IDENTITY(~ (max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) / 1u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) / 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)))).x, gl_WorkGroupSize.x)))), gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x), 0u | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) : _GLF_FUZZED(num_workgroup))), 1u, (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(1u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), ~ (~ (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(_GLF_IDENTITY(uvec4(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u), (uvec4(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))), min(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u))))))))), 0u ^ (_GLF_IDENTITY(max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, gl_WorkGroupSize.x), 0u | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) : _GLF_FUZZED(num_workgroup))), 1u, _GLF_IDENTITY((1u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(subgroup_size))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_IDENTITY((1u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(subgroup_size))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ ((1u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(subgroup_size))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), (1u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(subgroup_size))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))), gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_size)))))) * 1u), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))), 0u + (~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))))) / 1u))), 0u, 0u)))), 0u | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(12293u, 74470u, 33694u) - uvec3(54044u, 177487u, 150397u))) : gl_WorkGroupSize)))).x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), _GLF_IDENTITY(min(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u))))), clamp(_GLF_IDENTITY(min(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u))))), (min(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))))) + 0u), min(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u))))), min(0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u)))), 0u + (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec4(max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u, 0u, 0u))))))))))))))) / 1u)))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (((! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (((! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))))))), ! (_GLF_IDENTITY(! (bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))))), ! (! (! (bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), float(_GLF_IDENTITY(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0), ((mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(54.24, (54.24) - 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(8082.3544, -0.7), vec2(569.861, -1210.9864))))).x, injectionSwitch.x)) > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false, false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false), false))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), bool(bvec3(bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), false, false)))))))), false), false))), false, true)), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false), false))), false, true)), false, true))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9396.1996), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(589.981)), bool(false))), (injectionSwitch)[0])), _GLF_FUZZED(-873.437)), bvec2(true, false))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch.yy))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(0.0)))))).y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch.yy))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(0.0)))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false)))))))))), false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0))))) || false)) && true), true, false)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) + (workgroup_size)))), 0u ^ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) + (workgroup_size)))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), 0u | (_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id)))) - 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) ^ uvec3(0u, 0u, 0u))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) ^ uvec3(0u, 0u, 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)))), true, true), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))))), false, false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))))), false, false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))))), false, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false, bool(bool(false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(false, bool(bool(false)))), false, true), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(bool(bool(bool(false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(bool(bool(bool(bool(bool(false))))), bool(bvec3(bool(bool(bool(bool(bool(false))))), false, true)))))), ((! (_GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(bool(bool(bool(bool(bool(false))))), bool(bvec3(bool(bool(bool(bool(bool(false))))), false, true))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), false, false))))))))))) && true)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(mat2x4(1.0), _GLF_struct_0(mat4(1.0)), _GLF_struct_1(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (vec4(1.0))))), vec4(1.0), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(1748.0956))), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(879.814) : 1.0)))), exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)), min((_GLF_IDENTITY(0.0, (0.0) * 1.0)), (_GLF_IDENTITY(0.0, (0.0) * 1.0)))) + 0.0)) * 1.0)), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, sqrt(0.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(exp(0.0), float(vec4(_GLF_IDENTITY(exp(0.0), float(mat3(exp(0.0), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))), cos(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4.2)))), 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0), (mat4x2(1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) : _GLF_FUZZED(mat3(6.3, 472.500, -817.056, 100.284, 6.6, 38.76, 7.0, _GLF_IDENTITY(7.4, min(7.4, _GLF_IDENTITY(7.4, max(7.4, 7.4)))), 9467.8509))))) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-255.821)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), 0.0, 0.0, 1.0), (mat3(1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(17.82)), float(0.0), bool(true))), 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.9)), bool(false)))), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), 0.0, 0.0, 1.0)) * mat3(1.0)), mat3(1.0) * (mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(9.8))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(9.8))), (_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(9.8))), (true ? _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0)), (true ? _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(0.3))) : _GLF_FUZZED(9.8))) : _GLF_FUZZED(-71.64)))) - 0.0) : _GLF_FUZZED(529.804))), 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(degrees(27.04))))), 1.0)), exp(0.0), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? sin(0.0) : _GLF_FUZZED(-7547.9539)))) / 1.0), 1.0)), exp(0.0), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), exp(0.0), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), 1.0)), exp(0.0), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), 0.0, sqrt(0.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))))), 0.0, sin(0.0), 1.0)), exp(0.0), cos(0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0, 0.0, 1.0)))))))), bvec3(_GLF_IDENTITY(true, (true) && true)), mat2(1.0)), _GLF_struct_2(uvec4(1u), mat4x3(1.0), uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0)))))))), (vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-93.69)), float(1.0), bool(true)))))))))) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0)))))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.6)), float(1.0), bool(true))), 1.0)), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, log(1.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))))))), mix(float(_GLF_FUZZED(-6.5)), float(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, log(1.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0)))))))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))), mix(vec3(_GLF_FUZZED(-6.9), _GLF_FUZZED(-962.454), ((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))))[2]), vec3(((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))))[0], ((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))))[1], _GLF_FUZZED(9.2)), bvec3(true, true, false))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(mat3x2(vec3(1.0, 1.0, 1.0), cos(sin(0.0)), 0.0, 0.0)), mix(vec3(_GLF_FUZZED(-6.8), (vec3(mat3x2(vec3(1.0, 1.0, 1.0), cos(sin(0.0)), 0.0, 0.0)))[1], (vec3(mat3x2(vec3(1.0, 1.0, 1.0), cos(sin(0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)))))[2]), vec3(_GLF_IDENTITY((vec3(mat3x2(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, 1.0))), cos(_GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(float(sin(0.0))), clamp(float(float(sin(0.0))), float(float(sin(0.0))), float(float(sin(0.0))))))), 0.0, 0.0)))[0], min((vec3(mat3x2(vec3(1.0, 1.0, 1.0), cos(sin(0.0)), 0.0, 0.0)))[0], (vec3(mat3x2(vec3(1.0, 1.0, 1.0), cos(sin(0.0)), 0.0, 0.0)))[0])), _GLF_FUZZED(22.96), _GLF_FUZZED(-348.469)), bvec3(true, false, false))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0)))))), (vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))) / vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 0.0 + ((1.0))) / 1.0), 1.0, 1.0)))))), mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(2.0) : 1.0), ((false ? _GLF_FUZZED(2.0) : 1.0)) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)))))))) : _GLF_FUZZED((3.5 + -1.6)), max(true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)) ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)))) : _GLF_FUZZED((3.5 + -1.6)), true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)))) : _GLF_FUZZED((3.5 + -1.6))))))))), vec3(1.0), _GLF_struct_8(_GLF_struct_4(mat4x3(1.0), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bool(! (_GLF_IDENTITY(true, false || (true)))))))), bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), mat4x2(1.0)), _GLF_struct_5(mat3x2(1.0), 1u, bvec4(true), mat3x2(1.0), mat2(1.0)), _GLF_struct_6(true, workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | 0u, uint(uvec3((subgroup_base) | 0u, 0u, 1u)))) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(max(subgroup_base, subgroup_local_id)) : subgroup_local_id)), 1u), mat3x2(1.0), _GLF_struct_7(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat3x4(1.0), mat2x4(1.0))), 1u, vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.4)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), min(min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0))))), mat2x4(1.0));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 1u))), subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) * 1u)) << 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) * 1u)) << 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) << 0u))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) * 1u)) << 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) << 0u))), 1u, 0u), (false ? _GLF_FUZZED((uvec3(195781u, 180066u, 127027u) % uvec3(107191u, 113093u, 108852u))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) * 1u)) << 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) << 0u))), 1u, 0u)))) - uvec3(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) % _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true)))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_9._f2._f2.virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(buf[_GLF_struct_replacement_9._f2._f2.virtual_gid], (buf[_GLF_struct_replacement_9._f2._f2.virtual_gid]) * 1u))), 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (~ (4))), 4), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (~ (4))), 4), (min(_GLF_IDENTITY(4, ~ (~ (4))), 4)) >> 0)) << 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - (0 >> _GLF_IDENTITY(int(4), int(4))))), 0 + ((_GLF_IDENTITY(4, (4) - (0 >> _GLF_IDENTITY(int(4), int(4))))))))), 4), (min(_GLF_IDENTITY(4, ~ (~ (4))), 4)) << 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-24073) : 4)), ~ (~ (4))), 4), (min(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))))), 4)) << 0))) + 0)) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(vec3(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-1.6))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-1.6))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), exp(0.0), sqrt(1.0)))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, ~ (~ (4))), 4), (min(_GLF_IDENTITY(4, ~ (~ (4))), 4)) << _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81022) : 0))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-35782)))), 4), (min(_GLF_IDENTITY(4, ~ (~ (4))), 4)) << 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))))))), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2219.4167))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.7)))))), float(_GLF_FUZZED((70.02 * -7.6))), bool(false))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sqrt(1.0))), (vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sqrt(1.0))), (vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sqrt(1.0))), (vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sqrt(1.0))), (vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sqrt(1.0))), (vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sqrt(1.0))), (vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, abs(cos(0.0)), 1.0, 1.0, 0.0, 0.0, exp(0.0)), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, abs(cos(0.0)), 1.0, 1.0, 0.0, 0.0, exp(0.0)), (mat3(injectionSwitch, 1.0, abs(cos(0.0)), 1.0, 1.0, 0.0, 0.0, exp(0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, false)))), false, false, true)))))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_9._f2._f2.virtual_gid], read, _GLF_IDENTITY(4, (4) | 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
