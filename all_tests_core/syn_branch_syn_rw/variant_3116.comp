#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) * 1)), 0 | _GLF_IDENTITY((int(6)), ((int(6))) | ((int(6)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) * 1)), 0 | _GLF_IDENTITY((int(6)), ((int(6))) | ((int(6)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) * 1)), 0 | _GLF_IDENTITY((int(6)), ((int(6))) | ((int(6))))))) << 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) * 1)), 0 | _GLF_IDENTITY((int(6)), ((int(6))) | ((int(6))))))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-79.62)), float(injectionSwitch.x), bool(true))), float(mat4x3(injectionSwitch.x, log(1.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.z = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))))), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))))))) * mat2(1.0)) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.5)), float(1.0), bool(true)))))), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0)))))).x, (false ? _GLF_FUZZED(55.50) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9720.0997)), float(1.0), bool(true)))))) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)))))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(5.0)), bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(5.0)), bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))) * vec2(1.0, 1.0)), 0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) - length(0.0))), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))))) * mat2(1.0), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))))) * vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(8561.9714)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2(mat3x2(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))))) * mat2(1.0), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))))) * vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(8561.9714)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2(mat3x2(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))))) * mat2(1.0), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))))) * vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(8561.9714)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2(mat3x2(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))))) * mat2(1.0), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))))) * vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(8561.9714)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2(mat3x2(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(sqrt(1.0))))) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, _GLF_IDENTITY(-9409.5089, mix(float(_GLF_FUZZED(-0.9)), float(-9409.5089), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), vec2(mat4x3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, _GLF_IDENTITY(-9409.5089, mix(float(_GLF_FUZZED(-0.9)), float(-9409.5089), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 0.0, tan(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, log(1.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0)))))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, -9409.5089)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, _GLF_IDENTITY(-9409.5089, mix(float(_GLF_FUZZED(-0.9)), float(-9409.5089), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), vec2(mat4x3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(739.509, _GLF_IDENTITY(-9409.5089, mix(float(_GLF_FUZZED(-0.9)), float(-9409.5089), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 0.0, tan(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, log(1.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0)))))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))) / vec2(1.0, 1.0)) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))))[0], (((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))))[0]) - 0.0), _GLF_FUZZED(-116.554)), vec2(_GLF_FUZZED(float(154824u)), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))))[1]), bvec2(false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, (false ? _GLF_FUZZED(55.50) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(sqrt(0.0), 0.0), vec2(1.0, 1.0))), 1.0, 0.0)), max(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(sqrt(0.0), 0.0), vec2(1.0, 1.0))), 1.0, 0.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(sqrt(0.0), 0.0), vec2(1.0, 1.0))), 1.0, 0.0))))))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0), mat3(1.0) * (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0)))) + abs(vec3(0.0, 0.0, 0.0))))), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) - length(0.0))), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch))) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))))) * vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(8561.9714)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0))) * vec2(1.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)))))).x)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(sqrt(1.0))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.8)), float(injectionSwitch.x), bool(true))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) * (1 & 1)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) * (1 & 1))))) && true); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(7525)))) - 0))
    {
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false, false))), true))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
        {
         barrier();
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.6)), float(injectionSwitch.y), bool(true)))) - 0.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(313.022)), bool(false))))), 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), float(_GLF_FUZZED((- 8.9))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(69.07)), float(0.0), bool(true)))))), 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))) && true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, bool(bool(false)))))))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(934.379), _GLF_FUZZED(2.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(false, (false) && true)) || false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), 1u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), 1u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), 0u))))))) - uvec3(0u, 0u, 0u)) / uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(packHalf2x16(vec2(1.4, 93.51))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(610.097)))))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          break;
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) | (int(2))), clamp(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) | (int(2))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) | (int(2))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) | (int(2))))), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5548.8280) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(460.827)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 & -83723, (0 & -83723) | (0 & -83723))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w = _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, bool(bool(true))) ? workgroup_id : _GLF_FUZZED(num_workgroup))), 0u + (workgroup_id)), _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(workgroup_size))), 2u))), min((2u) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(workgroup_size))), 2u))), (2u) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(workgroup_size))), 2u))))))), clamp(uint(2u), uint(2u), uint(2u))))))) / _GLF_IDENTITY(1u, (1u) / 1u)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), true, false, false))) && true), false, true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.8))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-313.566)), vec2(_GLF_FUZZED(-23.98), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED((3.0))), bvec2(false, false))).x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-605.121)))))))), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))).y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false || _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       return;
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(22207))) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-621.495))), injectionSwitch.y))), mix(float(_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y))), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), float(_GLF_FUZZED((57.87))), bool(false))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), (_GLF_DEAD(false)) || false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, clamp(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, ~ _GLF_IDENTITY((~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)), ((~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w))) | (_GLF_IDENTITY((~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)), ((~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w))) << 0u)))), workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)), clamp(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, (true ? workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w : _GLF_FUZZED(workgroup_id)))), (~ (_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, (true ? workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w : _GLF_FUZZED(workgroup_id))))) / 1u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, 0u ^ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)))), (_GLF_IDENTITY((~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)), (true ? (~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)) : _GLF_FUZZED(workgroup_id)))) >> (194672u & 0u))), workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w)), _GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, ~ (~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w))), workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w), (clamp(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, ~ (~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w))), workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w)) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, clamp(_GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w, ~ (~ (workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w, max(workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w, workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w))) | (workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).w)), workgroup_size * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w))));
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.z * subgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.z * subgroup_size) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (! (false))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))), 0 + (int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-50476 & 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), false))))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))
        barrier();
       break;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), int(6))), (int(_GLF_IDENTITY(int(6), int(6)))) | 0)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), int(6))), (int(_GLF_IDENTITY(int(6), int(6)))) | 0))) >> 0))), 0 ^ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), int(6))), (int(_GLF_IDENTITY(int(6), int(6)))) | 0)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), int(6))), (int(_GLF_IDENTITY(int(6), int(6)))) | 0))) >> 0))))))))); _injected_loop_counter ++)
        {
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) / 1) ^ 0))), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)))), ! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)))), ! (! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)))))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false, false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) / 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 | 0), ! (! (_injected_loop_counter > (0 | 0))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
        {
         do
          {
           for(int _injected_loop_counter = (((0 & -38860) >> _GLF_IDENTITY(int(7), int(7))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
           _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y = subgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y = subgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y = subgroup_base) ^ 0u, 1u * (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y = subgroup_base) ^ 0u, ~ (~ ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y = subgroup_base) ^ 0u))))))) * 1u);
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))))))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = (-44210 & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5))), ! (! (_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - 0), int(5))))))) && true)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             continue;
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(1914.1849)), max((true ? injectionSwitch.y : _GLF_FUZZED(1914.1849)), (true ? injectionSwitch.y : _GLF_FUZZED(1914.1849)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), min((1), (1)))) >> 0), (1))) * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true, true, false))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false))) || false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false))) || false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))), (! (false)) && _GLF_IDENTITY(true, (true) || false))) || false), true, false))), false))))))))));
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? injectionSwitch.x : _GLF_FUZZED(min(4889.2312, 2.3)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(min(4889.2312, 2.3)))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), false, false)))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(76.37), 1.0 * (true ? injectionSwitch.y : _GLF_FUZZED(76.37)))))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.8))), injectionSwitch.y, injectionSwitch.y))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, clamp(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id)).y, max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)) : _GLF_FUZZED(subgroup_id))), workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(false ? _GLF_FUZZED(subgroup_base) : workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, false ? _GLF_FUZZED(subgroup_base) : workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), (false ? _GLF_FUZZED(subgroup_local_id) : (false ? _GLF_FUZZED(subgroup_base) : workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))))))) | (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) << 0u), min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)))) >> 0u), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y), max(_GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y), 0u | (_GLF_IDENTITY(min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y), (min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)) + 0u))), min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))))), 1u, 1u, 0u))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u) ^ 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))))))) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (uint(7u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u) ^ 0u))))) << 0u))), _GLF_IDENTITY(0u + (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u))), (true ? _GLF_IDENTITY(0u + (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u))), (0u + (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u)))) / 1u) : _GLF_FUZZED(subgroup_id))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)).y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, (0u | 0u)))), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | 0u), min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u), max(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u), uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id))))))) << 0u) ^ 0u)) << 0u))), _GLF_IDENTITY(0u + (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id))) ^ uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u) ^ 0u), ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) & 96689u) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u) ^ 0u)))) << 0u))), 0u + (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u, 0u + ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))) | (uint(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), 1u, 1u, 0u))))) << 0u) ^ 0u)) << 0u))), _GLF_IDENTITY(0u, (0u) >> 0u) + (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) << 0u)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)))), 1u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)))), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))), ((workgroup_base)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u)))), workgroup_base)) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, max(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id) + uvec4(0u, 0u, 0u, 0u)))).y, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y), clamp(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y), min((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id))).y), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)))))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size);
 do
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 65845); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(refract(9525.7358, -4372.3149, 8.0)) : injectionSwitch.x), float(mat3x4((false ? _GLF_FUZZED(refract(9525.7358, -4372.3149, 8.0)) : injectionSwitch.x), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.2, -0.2)) : injectionSwitch)))).y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)))))
  barrier();
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(false)) || false))), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     break;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 0u)))))) - 0u), 4, 64, _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) | 0)) | (3))), int(3))))) | (_GLF_IDENTITY(2, (2) << 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-772.557), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-772.557), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, false)))) - log(vec2(1.0, 1.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true)))) || false))
        {
         return;
        }
       else
        {
        }
      }
    }
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), float(mat2x3(float(vec2(injectionSwitch.y, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0, exp(0.0), 0.0, 0.0)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))), false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) * 1)), 4, 64, 4);
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     subgroupBarrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         return;
        }
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false))))))))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false, true))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false), false)))), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false, true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), false, true)))))) || false))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, (true) || false) && (_GLF_WRAPPED_IF_TRUE(true)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_id) : read))) << 0u))), 4, 64, 4);
      }
     else
      {
      }
    }
  }
}
