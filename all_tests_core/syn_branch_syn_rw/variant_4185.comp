#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat4x3 _f0;
 ivec3 _f1;
 uint subgroup_base;
 ivec2 _f2;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat4x2 _f1;
 int _f2;
 float _f3;
 mat4x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat4x2 _f1;
 uint _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 bvec2 _f1;
 uint num_workgroup;
 _GLF_struct_2 _f2;
 _GLF_struct_4 _f3;
 bvec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_base;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.y = subgroup_id;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.y = GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.y;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.z = subgroup_local_id;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat2(1.0), bvec2(true), gl_NumWorkGroups.x, _GLF_struct_2(_GLF_struct_0(vec2(1.0), mat4x2(1.0), 1u, mat2(1.0)), _GLF_struct_1(uvec2(1u)), bvec3(true), bvec4(true)), _GLF_struct_4(_GLF_struct_3(bvec4(true), mat4x2(1.0), 1, 1.0, mat4x3(1.0), mat2x4(1.0))), bvec2(true));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.w;
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.y = workgroup_base;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.z = GLF_merged2_0_1_4_1_1_14readworkgroup_base.y;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4x3(1.0), ivec3(1), subgroup_size * GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.y, ivec2(1));
 uint virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.z + _GLF_struct_replacement_6.subgroup_base + GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.z;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.z + _GLF_struct_replacement_6.subgroup_base + ((GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.z + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.x = GLF_merged2_0_1_4_1_1_14readworkgroup_base.x;
 if(GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.z + 1 < (subgroup_size / 2))
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readsubgroup_idworkgroup_baseworkgroup_id.x, 4, 64, 4);
}
