#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   switch(_GLF_SWITCH(0))
    {
     case 39:
     while(bvec2(false, true)[1])
      {
       while((bvec3(false, true, false) != bvec3(true, true, false)))
        {
         {
          bool _GLF_SWITCH_0_0v;
          ivec3(-64488, -25768, 87520);
          findMSB(-87814);
          ;
          subgroup_size;
          bvec4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
         }
         if(bool(-14120))
          {
          }
        }
       if((mix(bvec2(false, false), bvec2(true, true), bvec2(true, true)) == bvec4(false, false, true, true).ra))
        {
         while(false)
          {
           sign(vec3(-5.9, 72.41, 3.1));
           (mat3(-3.5, -6.0, -8.0, 420.799, -342.981, -9.1, 1313.2342, 97.91, -525.911));
           ;
           mix(ivec4(63027, 50425, -40465, 28796), ivec4(68898, 57972, 58926, -35970), bvec4(true, true, true, true));
          }
        }
       (uvec4(144697u, 70317u, 192219u, 2126u) + uvec4(125518u, 84755u, 93092u, 171788u));
       ;
       if((virtual_gid > packSnorm2x16(injectionSwitch)))
        {
         mat3x2(4.4, 8.5, 484.787, -0.0, 2.1, 44.44);
         bvec4(bvec2(false, false), not(bvec2(true, false)));
         ivec4 _GLF_SWITCH_0_3v;
         mat4(763.840, 53.47, -44.20, -0.3, 6.4, 4.2, 0.8, 834.832, -1206.3419, 3.4, -0.5, 36.50, 49.89, 8.4, -694.440, 4.9);
         bvec3 _GLF_SWITCH_0_4v;
         while((bvec4(true, false, true, true) == bvec4(false, true, true, false)))
          {
          }
         if(true)
          {
           mat2x3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
           mat4x2(mat4(251.805, 43.79, -4.4, 3204.2041, 651.885, 652.947, 6.5, -2259.6122, -6.1, 5326.6895, 6.3, 63.47, -8.8, -9.4, -3896.7803, -4.8));
           ivec2 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[42];
           ;
           uvec2(49478u, 35078u);
           bitfieldExtract(21537, 9142, (62752 << -67409));
          }
         for(         mix(bvec4(true, false, true, false), bvec4(true, true, false, false), bvec4(false));
 (mat2x3(-7.7, -926.204, -6.3, 0.3, 1524.4383, -216.663) != mat2x3(-7.8, -6314.3694, 8.9, -315.251, 628.130, -434.780)); _GLF_SWITCH_0_3v)
          {
           bvec4(false, true, true, false);
           uvec2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
           mat4x2 _GLF_SWITCH_0_13v[63];
           mat2 _GLF_SWITCH_0_14v[6], _GLF_SWITCH_0_15v;
           bvec4 _GLF_SWITCH_0_16v[28];
          }
        }
       else
        {
        }
       -66897;
       for(uvec4 _GLF_SWITCH_0_17v[43]; false; bvec4(true, false, true, true))
        {
         while((vec2(-8.5, -4.3) == injectionSwitch))
          {
           mat2x3(-62.26, -3.3, 0.3, 3.1, -8.7, 7646.3316);
           mat4x3 _GLF_SWITCH_0_18v;
           mat4x2(9.5, 32.10, -741.450, -4.5, -1885.3454, -301.038, -346.528, 7445.1111);
           mat3 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
           uvec2 _GLF_SWITCH_0_22v[22], _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[76];
           mat3 _GLF_SWITCH_0_25v;
          }
         for(mat4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v; true; mat2(-4.3, -66.42, -1.6, -9.9))
          {
           -1.9;
           bvec2 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
           ivec2(-51730, -66497);
           ivec2(-21987, 18412);
           floor(vec4(7.1, 4.2, -12.20, 2.8));
           mat3x4 _GLF_SWITCH_0_30v;
          }
         if(false)
          {
           (vec4(20.17, 9.4, 441.233, 2.6));
           bitfieldReverse(uvec4(30914u, 107961u, 152862u, 148314u));
           ((workgroup_base ++) | uvec2(66989u, 27515u));
           mat2x4 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
           mat3x2 _GLF_SWITCH_0_34v[34];
           ivec4(54856, -16040, -95731, 89602);
           ;
          }
         else
          {
           uint _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
           bool _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
           ;
           mat3x2 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
           bool _GLF_SWITCH_0_43v;
           ;
           vec2 _GLF_SWITCH_0_44v[87], _GLF_SWITCH_0_45v[53], _GLF_SWITCH_0_46v[50];
           (_GLF_SWITCH_0_42v --);
           mat4(381.424, -5.9, -3.0, -590.064, -9.4, -50.52, -457.504, -6.6, 123.250, 7.7, -8.7, 560.559, -25.11, 4.1, 4.1, -43.97);
          }
         mat2x3 _GLF_SWITCH_0_47v[32], _GLF_SWITCH_0_48v[62];
         while(((mat2x3(-59.23, 2804.5939, 9.1, -844.845, 6357.1775, -6282.6971) , uvec2(114381u, 25792u)) != uvec2(129034u, 184345u)))
          {
           ivec4(-37722, -9763, 26546, 83054);
           ;
           false;
           sign(-81316);
           vec4(-250.281, -46.31, -9.6, -4.1).pqt;
           mat2x3(7.6, -833.793, 874.133, -415.412, 1229.9348, 209.790);
           mat3x2 _GLF_SWITCH_0_49v[86];
          }
         uvec4(91873u, 76317u, 145792u, 167542u);
         float _GLF_SWITCH_0_50v[4], _GLF_SWITCH_0_51v[37];
        }
       for(mat4x2 _GLF_SWITCH_0_52v; false; uvec3(111504u, 4632u, 122117u))
        {
         for(         (bvec3(true, false, false) , mat3x4(mat4x3(113.710, 90.27, -284.560, 868.903, 46.44, 114.770, 90.10, -7.0, 7.5, -1717.8070, 6291.4610, 20.22)));
 false; bvec4(bool(workgroup_base), false, all(bvec2(false, true)), true))
          {
           mat3x2 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v;
           mat2(-3968.7803, 64.84, 9124.9339, 1.2);
           ivec2 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v;
           ivec3(-84522, -89434, 90049);
           mat3 _GLF_SWITCH_0_59v[98], _GLF_SWITCH_0_60v;
           _GLF_SWITCH_0_53v;
           mat4x3(-4677.5252, 6.7, -56.59, -54.86, 38.96, 8308.4017, -8.1, -3.0, -34.98, -0.3, -1.5, -3.6);
           (mat2x3(-43.59, -535.269, 5.7, 4.6, 777.279, 0.0) * (_GLF_SWITCH_0_53v * mat4x3(481.975, 633.734, 4.7, 57.72, -58.08, -74.53, -4.4, 4.1, 7.1, -923.608, -1786.8009, 34.75)));
           (mat4x3(-1269.0319, -5.6, -1511.2080, 3779.3316, 6.6, -3.3, 5.9, -9.8, 87.99, -345.938, 7847.8813, 4.6) * mat2x4(814.895, 5.4, -251.120, -5.8, 9986.5047, -9460.8574, 1.3, 3742.3218));
          }
         mat2x4(_GLF_SWITCH_0_52v);
         equal(uvec3(189457u, 29747u, 109808u), uvec3(79341u, 59026u, 105214u));
         for(ivec3 _GLF_SWITCH_0_61v; true; (~ uvec2(184149u, 187276u)))
          {
           bvec4(true, false, false, true);
           ;
           greaterThanEqual(vec3(21.58, -0.6, 676.414), vec3(660.050, -2586.5319, -2619.1788));
           (bvec4(true, true, false, false));
           mat3x2 _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v;
           mat2(-48.94, 79.98, -3.2, 60.79);
           mat3 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[61];
          }
         {
          injectionSwitch;
          ;
          workgroup_id;
          vec4 _GLF_SWITCH_0_66v, _GLF_SWITCH_0_67v[64];
          mat3x2(mat4x2(mat3x4(3.7, -3271.4474, 856.222, 892.195, 60.11, 98.18, -34.77, 2.6, -404.392, 176.208, -40.51, -4.6)));
          mat4x2(atan(injectionSwitch), injectionSwitch, injectionSwitch, vec2(30.14, 563.387));
         }
         mat3x2((mat2x3(-68.97, 1.7, -6905.3503, 893.467, -122.556, 751.686) / mat2x3(-174.179, -64.14, -3.4, -7.0, 2.9, -1621.6360)));
         (injectionSwitch , findMSB(uvec4(71561u, 3411u, 179071u, 102199u)));
         mat4x3(2167.3378, -3.0, -5.5, 9920.8352, 4.5, -5.6, -12.11, 59.30, -7.0, 52.09, -9691.3373, -2316.2575);
         mat3x4(log2(roundEven(vec4(-79.24, -749.243, 1.9, 9.9))), vec4(-389.229, 5.1, -6776.2082, -3.2), vec4(-497.209, 1.8, -1.9, 3560.2036));
        }
      }
     case 0:
     case 51:
     case 48:
     case 3:
     case 8:
     case 60:
     case 35:
     case 62:
     case 67:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 61:
     {
      bvec4 _GLF_SWITCH_0_68v;
      for(mat3x2 _GLF_SWITCH_0_69v, _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v; (ivec3(-27747, 57455, -89960) == ivec3(-66776, -98264, 69867)); matrixCompMult(mat2x3(-453.553, 988.867, -17.61, -4.8, -3474.0694, -6864.4409), mat2x3(-1651.6510, -7.6, 9538.7656, -626.146, -4557.9240, -9970.0531)))
       {
        for(ivec2 _GLF_SWITCH_0_72v[20]; false; uvec4(196103u, 28723u, 171575u, 41113u))
         {
          (true ? uvec3(93612u, 24762u, 163929u) : uvec3(62591u, 51366u, 16966u));
          bitfieldInsert(num_workgroup, subgroup_size, -63925, -84476);
          bvec3 _GLF_SWITCH_0_73v[81];
          ;
         }
        (ivec4(10526, 96732, -22109, 2883) | ivec4(1483, 13223, -86068, 29242));
       }
      vec3(-572.084, 7636.3870, -5177.0509);
      ;
      mat4(mat3x2(537.508, 9.2, 9.9, 7088.1466, -26.87, -7594.0498));
      (uvec3(194351u, 27690u, 147420u) * uvec3(9550u, 56567u, 28506u));
      mat4x3 _GLF_SWITCH_0_74v[7], _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v;
      uvec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
      ((uvec2(179390u, 122787u) << subgroup_base) << uvec2(126946u, 91951u));
     }
     case 45:
     bvec2 _GLF_SWITCH_0_79v[14];
     default:
     1;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
