#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))), injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0)) * mat4(1.0))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(-2035.4759)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), _GLF_IDENTITY(((injectionSwitch)[1]) / 1.0, (((injectionSwitch)[1]) / 1.0) - log(abs(1.0))))), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), clamp(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(_GLF_IDENTITY(float(193669u), max(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), float(193669u)))), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), clamp(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(_GLF_IDENTITY(float(193669u), max(_GLF_IDENTITY(_GLF_IDENTITY(float(193669u), clamp(float(193669u), _GLF_IDENTITY(float(193669u), (true ? float(193669u) : _GLF_FUZZED(-5.0))), float(193669u))), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), float(193669u)))), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759)), (vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), clamp(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(_GLF_IDENTITY(float(193669u), max(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), float(193669u)))), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759))) * mat2(1.0))) - vec2(0.0, 0.0)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]) / 1.0, (true ? ((injectionSwitch)[1]) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), max(1.0, 1.0)), 1.0)) : _GLF_FUZZED(-9.9))))), bvec2(true, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), (true ? _GLF_FUZZED(float(193669u)) : _GLF_FUZZED(565.814))), max(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(float(_GLF_IDENTITY(193669u, (193669u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_FUZZED(-2035.4759)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(193669u, min(193669u, 193669u)))), _GLF_IDENTITY(_GLF_FUZZED(-2035.4759), clamp(_GLF_FUZZED(-2035.4759), _GLF_IDENTITY(_GLF_FUZZED(-2035.4759), _GLF_IDENTITY((_GLF_FUZZED(-2035.4759)), mix(float(_GLF_FUZZED(-407.851)), float(_GLF_IDENTITY((_GLF_FUZZED(-2035.4759)), float(mat2x3((_GLF_FUZZED(-2035.4759)), 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2035.4759, min(-2035.4759, -2035.4759))), (true ? _GLF_FUZZED(-2035.4759) : _GLF_FUZZED(-35.72)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(-304.582), _GLF_FUZZED(77.29)), bvec2(false, false))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-724.754) : injectionSwitch[0])), injectionSwitch[1])).x), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0)), abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.6) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), clamp(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(_GLF_IDENTITY(float(193669u), max(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), float(193669u)))), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), clamp(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(_GLF_IDENTITY(float(193669u), max(_GLF_IDENTITY(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false))), mix(float(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false)))), float(_GLF_FUZZED(9.9)), bool(false))), _GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), bool(false)))))) + 0.0), float(193669u)))), _GLF_FUZZED(float(_GLF_IDENTITY(193669u, min(_GLF_IDENTITY(193669u, (193669u) * (1u | 1u)), 193669u)))))), _GLF_FUZZED(-2035.4759)), (vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), clamp(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(_GLF_IDENTITY(float(193669u), max(_GLF_IDENTITY(float(193669u), mix(float(float(193669u)), float(_GLF_FUZZED(9274.5994)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))))), float(_GLF_IDENTITY(193669u, (193669u) ^ 0u))))), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759))) * mat2(1.0))) - vec2(0.0, 0.0)), vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(((injectionSwitch)[1]) / 1.0, (true ? ((injectionSwitch)[1]) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) : _GLF_FUZZED(-9.9))))), bvec2(true, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), max(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759)), (vec2(_GLF_IDENTITY(_GLF_FUZZED(float(193669u)), max(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(float(193669u)))), _GLF_FUZZED(-2035.4759))) - vec2(0.0, 0.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(193669u, min(193669u, 193669u)))), _GLF_IDENTITY(_GLF_FUZZED(-2035.4759), clamp(_GLF_FUZZED(-2035.4759), _GLF_IDENTITY(_GLF_FUZZED(-2035.4759), _GLF_IDENTITY((_GLF_FUZZED(-2035.4759)), mix(float(_GLF_FUZZED(-407.851)), float(_GLF_IDENTITY((_GLF_FUZZED(-2035.4759)), float(mat2x3((_GLF_FUZZED(-2035.4759)), 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(-2035.4759), (true ? _GLF_FUZZED(-2035.4759) : _GLF_FUZZED(_GLF_IDENTITY(-35.72, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19.75) : _GLF_IDENTITY(-35.72, min(-35.72, -35.72)))))))))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0))), ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(-304.582), _GLF_FUZZED(77.29)), bvec2(false, false))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(193669u, 0u ^ (_GLF_IDENTITY(193669u, uint(uint(_GLF_IDENTITY(193669u, (193669u) / 1u)))))))), _GLF_FUZZED(-2035.4759)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED(mat2(-4.3, 6.4, 12.72, -983.949)) : mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * (vec2(_GLF_FUZZED(float(193669u)), _GLF_FUZZED(-2035.4759)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), max(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, clamp(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0, _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (((injectionSwitch)[1]))), ((injectionSwitch)[1]), ((injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), clamp(_GLF_IDENTITY(((injectionSwitch)[1]), 1.0 * (((injectionSwitch)[1]))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), ((injectionSwitch)[1]))) / 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).x > injectionSwitch.y)))))))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0)), 0.0) + (injectionSwitch), (_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) + vec2(0.0, 0.0)))), 1.0, 1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), vec2(0.0, 0.0))) + (injectionSwitch), 1.0, 1.0)))))) / vec2(1.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(_GLF_IDENTITY(mat2(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.6))), 0.0) + (injectionSwitch), 1.0, 1.0), mat2(1.0) * (mat2(vec2(0.0, 0.0) + (injectionSwitch), 1.0, 1.0)))))) / vec2(1.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)))) * 1.0), float(_GLF_FUZZED(696.490)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || _GLF_IDENTITY(false, true && (false)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))) / vec2(3.2, 9.5))) : injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))))))))), clamp(abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))))))))), _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))))))))), (true ? abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))))))))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))))))))), max(abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))))))))), abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1]))), vec2(_GLF_FUZZED(-385.708), _GLF_FUZZED(-21.66)), bvec2(false, false)))) * (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? (_GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(exp(-5.3)))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674)))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-70.19)), bool(false)))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0)) / vec2(1.0, 1.0)) + _GLF_IDENTITY((vec2(-8.3, -3511.8674)), max((vec2(-8.3, -3511.8674)), (vec2(-8.3, -3511.8674))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) / vec2(_GLF_IDENTITY(3.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92.57) : 3.2)), 9.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(0.0, 0.0))))) + (vec2(-8.3, -3511.8674))), max(_GLF_IDENTITY(vec2(-8.3, -3511.8674), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2197.7620)), bool(false))), 0.0) + (vec2(-8.3, -3511.8674))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674), (false ? _GLF_FUZZED(vec2(-44.05, -39.11)) : vec2(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -3511.8674))), min(vec2(-8.3, -3511.8674), vec2(-8.3, -3511.8674))), vec2(0.0, 0.0) + (vec2(-8.3, -3511.8674))))) / _GLF_IDENTITY(vec2(3.2, 9.5), (vec2(3.2, 9.5)) * mat2(1.0)))) : injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(983.495)), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(0.7)) : injectionSwitch.y))), 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.82)), bool(false)))))))))))))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch, mix(vec2(_GLF_FUZZED(((-532.944 - 42.60) + -16.42)), _GLF_FUZZED(-1447.5821)), vec2((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch)[0], (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch)[1]), bvec2(true, true))), max(false ? _GLF_FUZZED((vec2(-8.3, _GLF_IDENTITY(-3511.8674, mix(float(_GLF_IDENTITY(-3511.8674, (true ? _GLF_IDENTITY(-3511.8674, clamp(-3511.8674, -3511.8674, -3511.8674)) : _GLF_FUZZED(1.9)))), float(_GLF_FUZZED((- -6709.4621))), bool(false)))) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch, false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))), mix(float(_GLF_FUZZED(-9935.7384)), float(1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))), bool(true))))))) : injectionSwitch)))).y, mix(float(_GLF_FUZZED(731.918)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch, mix(vec2(_GLF_FUZZED(((-532.944 - 42.60) + -16.42)), _GLF_FUZZED(-1447.5821)), vec2((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch)[0], (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch)[1]), bvec2(true, true))), max(false ? _GLF_FUZZED((vec2(-8.3, _GLF_IDENTITY(-3511.8674, mix(float(_GLF_IDENTITY(-3511.8674, (true ? _GLF_IDENTITY(-3511.8674, clamp(-3511.8674, -3511.8674, -3511.8674)) : _GLF_FUZZED(1.9)))), float(_GLF_FUZZED((- -6709.4621))), bool(false)))) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch, false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))), mix(float(_GLF_FUZZED(-9935.7384)), float(1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))), bool(true))))))) : injectionSwitch)))).y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(_GLF_IDENTITY((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))))), (_GLF_IDENTITY((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(_GLF_IDENTITY(9.5, (_GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(-3.1)), bool(false)))) / 1.0), 1.0 * (_GLF_IDENTITY(9.5, _GLF_IDENTITY(max(9.5, 9.5), mix(float(_GLF_FUZZED((false ? -5.5 : -4118.4726))), float(max(9.5, 9.5)), bool(true)))))))), vec2(_GLF_IDENTITY(vec4((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, mix(float(_GLF_IDENTITY(9.5, clamp(9.5, _GLF_IDENTITY(9.5, (false ? _GLF_FUZZED(-5.6) : 9.5)), _GLF_IDENTITY(9.5, max(9.5, 9.5))))), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(max(9.5, 9.5), float(float(_GLF_IDENTITY(max(9.5, 9.5), _GLF_IDENTITY(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), min(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))))), 0.0, cos(0.0)), (_GLF_IDENTITY(vec4((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, mix(float(_GLF_IDENTITY(9.5, clamp(9.5, _GLF_IDENTITY(9.5, (false ? _GLF_FUZZED(-5.6) : 9.5)), _GLF_IDENTITY(9.5, max(9.5, 9.5))))), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(max(9.5, 9.5), float(float(_GLF_IDENTITY(max(9.5, 9.5), _GLF_IDENTITY(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), min(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))))), 0.0, cos(0.0)), mix(vec4((vec4((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, mix(float(_GLF_IDENTITY(9.5, clamp(9.5, _GLF_IDENTITY(9.5, (false ? _GLF_FUZZED(-5.6) : 9.5)), _GLF_IDENTITY(9.5, max(9.5, 9.5))))), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(max(9.5, 9.5), float(float(_GLF_IDENTITY(max(9.5, 9.5), _GLF_IDENTITY(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), min(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))))), 0.0, cos(0.0)))[0], (vec4((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, mix(float(_GLF_IDENTITY(9.5, clamp(9.5, _GLF_IDENTITY(9.5, (false ? _GLF_FUZZED(-5.6) : 9.5)), _GLF_IDENTITY(9.5, max(9.5, 9.5))))), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(max(9.5, 9.5), float(float(_GLF_IDENTITY(max(9.5, 9.5), _GLF_IDENTITY(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), min(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))))), 0.0, cos(0.0)))[1], (vec4((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, mix(float(_GLF_IDENTITY(9.5, clamp(9.5, _GLF_IDENTITY(9.5, (false ? _GLF_FUZZED(-5.6) : 9.5)), _GLF_IDENTITY(9.5, max(9.5, 9.5))))), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(max(9.5, 9.5), float(float(_GLF_IDENTITY(max(9.5, 9.5), _GLF_IDENTITY(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), min(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))))), 0.0, cos(0.0)))[2], _GLF_FUZZED(8.4)), vec4(_GLF_FUZZED(-47.75), _GLF_FUZZED(vec4(6.5, -803.096, -5.2, -3.4).q), _GLF_FUZZED(424.337), (vec4((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, mix(float(_GLF_IDENTITY(9.5, clamp(9.5, _GLF_IDENTITY(9.5, (false ? _GLF_FUZZED(-5.6) : 9.5)), _GLF_IDENTITY(9.5, max(9.5, 9.5))))), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(max(9.5, 9.5), float(float(_GLF_IDENTITY(max(9.5, 9.5), _GLF_IDENTITY(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), min(float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat3x4(max(9.5, 9.5), 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))))), 0.0, cos(0.0)))[3]), bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))) - vec2(0.0, 0.0))) : injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))))), (_GLF_IDENTITY((vec2(-8.3, -3511.8674) / vec2(_GLF_IDENTITY(3.2, _GLF_IDENTITY(float(mat3x4(3.2, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (float(mat3x4(3.2, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(9.5, (_GLF_IDENTITY(9.5, clamp(9.5, 9.5, 9.5))) / 1.0), 1.0 * (_GLF_IDENTITY(9.5, _GLF_IDENTITY(max(9.5, 9.5), mix(float(_GLF_FUZZED((false ? -5.5 : -4118.4726))), float(max(9.5, 9.5)), bool(true)))))))), vec2(vec4((vec2(-8.3, -3511.8674) / _GLF_IDENTITY(vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(9.5, _GLF_IDENTITY(max(9.5, 9.5), float(float(max(9.5, 9.5)))))))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec2(3.2, _GLF_IDENTITY(9.5, _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(9.5, _GLF_IDENTITY(max(9.5, 9.5), float(float(max(9.5, 9.5))))))))))), 0.0, cos(0.0))))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))))) : injectionSwitch) / exp(vec2(0.0, 0.0))), max(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), mix(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(-9.9)), vec2((vec2(-8.3, -3511.8674))[0], (vec2(-8.3, -3511.8674))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))), (false ? _GLF_FUZZED(vec2(745.064, -4835.0129)) : _GLF_IDENTITY(vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, float(float(9.5))), _GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(13.67)), bool(false))))), 9.5))))))), abs(vec2(1.0, 1.0)) * (vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674), mix(vec2(_GLF_FUZZED(-8.9), _GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_IDENTITY(true, true && (true)) ? _GLF_FUZZED(-9.9) : _GLF_FUZZED(-19.78)))), vec2((vec2(-8.3, -3511.8674))[0], (vec2(-8.3, -3511.8674))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))), (false ? _GLF_FUZZED(vec2(745.064, -4835.0129)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, float(float(9.5))), _GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(13.67)), bool(false))))), 9.5))))))), clamp(vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, float(float(9.5))), _GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(13.67)), bool(false))))), 9.5))))))), vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, float(float(9.5))), _GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(13.67)), bool(false))))), 9.5))))))), vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, float(float(9.5))), _GLF_IDENTITY(9.5, mix(float(9.5), float(_GLF_FUZZED(13.67)), bool(false))))), 9.5))))))))), abs(vec2(1.0, 1.0)) * (vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))))))))) : injectionSwitch, false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))), (_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))) + 0.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(_GLF_IDENTITY(9.5, mix(float(_GLF_FUZZED(-4.7)), float(9.5), bool(true))), 9.5)))), (_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))) + 0.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, float(_GLF_IDENTITY(mat2x3(9.5, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0), _GLF_IDENTITY(mat2x3(mat2x4(mat2x3(9.5, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), transpose(transpose(mat2x3(mat2x4(mat2x3(9.5, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))))))))))))), (_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))), (_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, (_GLF_IDENTITY(9.5, clamp(9.5, 9.5, 9.5))) - 0.0), max(9.5, 9.5))))) + 0.0)) * 1.0)), round(length(normalize(1.0))) * (float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, float(_GLF_IDENTITY(mat2x3(9.5, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0), _GLF_IDENTITY(mat2x3(mat2x4(mat2x3(9.5, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), transpose(transpose(mat2x3(mat2x4(mat2x3(9.5, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))))))))))))), (_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5)))), (_GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(9.5, (_GLF_IDENTITY(9.5, clamp(9.5, 9.5, 9.5))) - 0.0), max(9.5, 9.5))))) + 0.0)) * 1.0)))), float(_GLF_FUZZED(5389.6200)), bool(false)))))))) : injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, 1.0 * (9.5))))))))) : injectionSwitch, max(false ? _GLF_FUZZED((vec2(_GLF_IDENTITY(-8.3, float(mat3x4(-8.3, 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-3.8, -9055.3018, 76.76, -554.759).z), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-503.856)), bvec2(true, false))), false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(-8.3, -3511.8674), (false ? _GLF_FUZZED(exp2(vec2(7404.5390, 8.1))) : vec2(-8.3, -3511.8674))) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch, max(false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))), clamp(_GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, _GLF_IDENTITY(9.5, min(_GLF_IDENTITY(9.5, max(9.5, 9.5)), _GLF_IDENTITY(9.5, mix(float(_GLF_FUZZED(-52.18)), float(9.5), bool(true)))))))))))), _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))), _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, 1.0 * (_GLF_IDENTITY(9.5, max(9.5, 9.5))))))))) : injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / _GLF_IDENTITY(vec2(3.2, 9.5), mat2(1.0) * (vec2(3.2, 9.5))))) : injectionSwitch), (false ? _GLF_FUZZED((_GLF_IDENTITY(vec3(-2817.1514, -2.4, -3504.6052), (vec3(-2817.1514, -2.4, -3504.6052)) * mat3(1.0)) * mat2x3(9.9, -149.519, -41.04, -3.5, 1.6, -8027.2442))) : (false ? _GLF_FUZZED((vec2(-8.3, _GLF_IDENTITY(-3511.8674, min(-3511.8674, -3511.8674))) / vec2(3.2, 9.5))) : injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED((vec2(-8.3, _GLF_IDENTITY(-3511.8674, float(mat4x2(_GLF_IDENTITY(-3511.8674, mix(float(_GLF_FUZZED(float(true))), float(-3511.8674), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), log(1.0), _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), 1.0, abs(log(1.0)), 0.0)))) / vec2(3.2, 9.5))) : injectionSwitch), (_GLF_IDENTITY((false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, 9.5))) : injectionSwitch), min((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), false || (bool(bvec4(! (false), true, true, true))))))) ? _GLF_IDENTITY(_GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, 9.5))), vec2(mat4(_GLF_IDENTITY(_GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, 9.5))), mat2(1.0) * (_GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, 9.5))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, cos(0.0), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED((vec2(-8.3, -3511.8674) / vec2(3.2, _GLF_IDENTITY(9.5, clamp(_GLF_IDENTITY(9.5, min(9.5, 9.5)), 9.5, 9.5))))) : injectionSwitch)))) / vec2(1.0, 1.0))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(! (! ((_GLF_DEAD(false)) || false)), (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)) || false)), _GLF_IDENTITY(bool(bvec3(! (! ((_GLF_DEAD(false)) || false)), false, false)), (bool(bvec3(! (! ((_GLF_DEAD(false)) || false)), false, false))) || false))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec3(true, false, true))) && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.0, -7.1)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(5.3), mix(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(5.3)), bool(true)))), bool(false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], float(vec2((injectionSwitch)[0], 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6968.8405), _GLF_IDENTITY(_GLF_FUZZED(float((mat3x2(-11.50, 19.41, -7.4, -32.11, -591.818, -405.319) != mat3x2(5.1, 5794.7719, -2.9, 5.2, 9648.0369, 99.69)))), (_GLF_FUZZED(float((mat3x2(-11.50, 19.41, -7.4, -32.11, -591.818, -405.319) != mat3x2(5.1, 5794.7719, -2.9, 5.2, 9648.0369, 99.69))))) / 1.0)), bvec2(false, false))).y, false, true, false))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], float(vec2((injectionSwitch)[0], 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6968.8405), _GLF_IDENTITY(_GLF_FUZZED(float((mat3x2(-11.50, 19.41, -7.4, -32.11, -591.818, -405.319) != mat3x2(5.1, 5794.7719, -2.9, 5.2, 9648.0369, 99.69)))), (_GLF_FUZZED(float((mat3x2(-11.50, 19.41, -7.4, -32.11, -591.818, -405.319) != mat3x2(5.1, 5794.7719, -2.9, 5.2, 9648.0369, 99.69))))) / 1.0)), bvec2(false, false))).y, false, true, false)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.8, 6675.2394)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true, false))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.8, 6675.2394)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true, false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.8, 6675.2394)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true, false)))))) || false)))))))))) || false, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, ! (! (true))), false)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))), false))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-74.50)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.8)), float(injectionSwitch.x), bool(true)))) + 0.0) < injectionSwitch.y)), false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))), injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) && true))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.4, 863.325)) : injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-17.08 * -7045.3618))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true, true, false))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.9))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, false || (true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(-99.58)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(false), true, true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, false, true)), false)), (bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, false, true)), false))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0))))) * mat2(1.0)))).x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0))))) * mat2(1.0)))).x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(log(1.0), 0.0, 1.0, 0.0))))) * mat2(1.0)))).x > injectionSwitch.y)), false))))))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-93.17)), bool(false)))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(vec3(-9952.7012, 1.2, 72.28).b), _GLF_FUZZED(8.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))), max(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)), clamp(min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(21.39)), bool(false)))))), (injectionSwitch) / vec2(1.0, 1.0)))))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - log(vec2(1.0, 1.0)))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(7180.6409)), vec2(_GLF_FUZZED(4.4), ((injectionSwitch))[1]), bvec2(false, true))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))]), vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(-0.7)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y)))) && true)) && true))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-2.7, -8.3, false)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4349.3314), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.6) : 1.0))), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, -706.231)) : injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y)))), bool(bool((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), max((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), float(mat3((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-4338.9077, -10.11).r)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), float(float(injectionSwitch.x)))), bool(true))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x : _GLF_IDENTITY(_GLF_FUZZED(-485.293), (false ? _GLF_FUZZED(fma(894.409, 5.1, -652.087)) : _GLF_FUZZED(-485.293))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(-485.293)) : _GLF_FUZZED(-823.668)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))))) < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-2.7, -8.3, false)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4349.3314), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.6) : 1.0))), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, -706.231)) : injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y)))), bool(bool((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), max((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), float(mat3((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-4338.9077, -10.11).r)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), float(float(injectionSwitch.x)))), bool(true))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x : _GLF_IDENTITY(_GLF_FUZZED(-485.293), (false ? _GLF_FUZZED(fma(894.409, 5.1, -652.087)) : _GLF_FUZZED(-485.293))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(-485.293)) : _GLF_FUZZED(-823.668)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))))) < injectionSwitch.y)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-2.7, -8.3, false)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4349.3314), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.6) : 1.0))), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, -706.231)) : injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y)))), bool(bool((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), max((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), float(mat3((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-4338.9077, -10.11).r)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), float(float(injectionSwitch.x)))), bool(true))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x : _GLF_IDENTITY(_GLF_FUZZED(-485.293), (false ? _GLF_FUZZED(fma(894.409, 5.1, -652.087)) : _GLF_FUZZED(-485.293))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(-485.293)) : _GLF_FUZZED(-823.668)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))))) < injectionSwitch.y)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-2.7, -8.3, false)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4349.3314), _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.6) : 1.0))), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, -706.231)) : injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))) < injectionSwitch.y)))), bool(bool((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), max((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), float(mat3((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-4338.9077, -10.11).r)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), float(float(injectionSwitch.x)))), bool(true))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x : _GLF_IDENTITY(_GLF_FUZZED(-485.293), (false ? _GLF_FUZZED(fma(894.409, 5.1, -652.087)) : _GLF_FUZZED(-485.293))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-485.293)), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(-485.293)) : _GLF_FUZZED(-823.668)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-485.293))))) < injectionSwitch.y)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))) && true))))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)).y)))), bool(bvec2(((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-865.781, -29.37)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(-259.962, 734.670))))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && true)))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4022.3432) : injectionSwitch.x)) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true))))), true)))), false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))))))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))))))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))))))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) * 1u)), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u)))) | 0u), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) * 1u)), min(subgroup_size, subgroup_size)), ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u)))) | 0u), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) * 1u)), min(subgroup_size, subgroup_size)), ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u)))) | 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) * 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) * 1u)), 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), min(subgroup_size, subgroup_size)), ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), _GLF_IDENTITY(((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)))), (((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))))) / 1u) - 0u)))) | 0u), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) | (0u))) | (0u))) * 1u)), min(subgroup_size, subgroup_size)), ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u)))) | _GLF_IDENTITY(0u, (0u) / 1u))) / 1u)) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true, false))) && true)), true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0), (mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))) && true)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, sqrt(0.0), 1.0, exp(0.0), exp(0.0), 0.0)))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat4(injectionSwitch, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0))))).y))))))
    return;
   return;
  }
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))).x;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.x = num_workgroup, _GLF_IDENTITY(0u ^ (GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.x = num_workgroup), (0u ^ (GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.x = num_workgroup)) / 1u));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mix(vec3((vec3(injectionSwitch.x, 1.0, 0.0))[0], _GLF_FUZZED(70.65), _GLF_FUZZED(-32.74)), vec3(_GLF_FUZZED((- -262.305)), (vec3(injectionSwitch.x, 1.0, 0.0))[1], (vec3(injectionSwitch.x, 1.0, 0.0))[2]), bvec3(false, true, true))))) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z = workgroup_id, (GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z = workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size, (GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size) - uvec3(0u, 0u, 0u)).z * GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u) + GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.z;
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.y = _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), max(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.z + 1) % _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u)) ^ 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size) * uvec4(1u, 1u, 1u, 1u)), ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w)))))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), max((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uvec4(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u, 1u)))), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), uint(_GLF_IDENTITY(uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), 1u, 1u), (uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) + uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w)))))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), max((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uvec4(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u, 1u)))), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), uint(_GLF_IDENTITY(uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), 1u, 1u), (uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) + uvec3(0u, 0u, 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w)))))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), max((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uvec4(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u, 1u)))), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), uint(_GLF_IDENTITY(uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), 1u, 1u), (uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) + uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w)))))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), max((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uvec4(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u, 1u)))), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), uint(_GLF_IDENTITY(uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), 1u, 1u), (uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) + uvec3(0u, 0u, 0u)))))))))))) << 0u) | 0u)) ^ 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)), 1u))), uvec3(0u, 0u, 0u) ^ (uvec3((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w))), min((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size))).w))))), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), uint(_GLF_IDENTITY(uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), 1u, 1u), (uvec3((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w), 1u, 1u)) + uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))))))) << 0u) | 0u)) ^ 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), clamp(1u, 1u, 1u))))), ~ (~ (uvec3((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u, ~ _GLF_IDENTITY((~ ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, min(0u, 0u)))), 0u + (_GLF_IDENTITY((~ ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u))), 0u ^ ((~ ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))))))) ^ 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, cos(0.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-0.2, -0.8, 250.558, -47.35).q)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, -9.1)))), injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, -9.1)))), injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, -9.1)))), injectionSwitch)).x, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, -9.1)))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, -9.1)))), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(1591.3399))))) || false), true, true), true))), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
        return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.y], ~ (~ (_GLF_IDENTITY(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.y], (buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.y]) / 1u)))), 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.2))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.2))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), min(float(mat3x2(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), float(mat3x2(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), (true ? injectionSwitch.y : _GLF_FUZZED(4.2))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, true, true))))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false))))))))))))))))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.x = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.z % _GLF_IDENTITY(2, _GLF_IDENTITY(0, (0) | (0)) ^ (2))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6801.4396)), vec2(_GLF_FUZZED((- -5424.5392)), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.5) : injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-619.812 + (115.184)))), bool(false))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-619.812 + (115.184)))), bool(false))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(532.581), mix(_GLF_IDENTITY(float(_GLF_FUZZED(532.581)), (float(_GLF_FUZZED(532.581))) / sqrt(1.0)), float(_GLF_FUZZED(-824.480)), bool(false))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.53))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(532.581) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.53)))), 1.0 * (_GLF_IDENTITY((false ? _GLF_FUZZED(532.581) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.53)))), ((false ? _GLF_FUZZED(532.581) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.53))))) * 1.0)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(532.581) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.53))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(39.19), _GLF_FUZZED(-246.919)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), bvec2(true, true))).y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false)))))))))), true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : injectionSwitch.y)), injectionSwitch.y))), true, true, false)))))))))), true))))) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(vec2(865.492, -60.63)) : vec2(injectionSwitch))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))) / cos(tan(vec2(0.0, 0.0)))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y))))))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(vec2(865.492, -60.63)) : vec2(injectionSwitch))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))) / cos(tan(vec2(0.0, 0.0)))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y))))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(vec2(865.492, -60.63)) : vec2(injectionSwitch))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))) / cos(tan(vec2(0.0, 0.0)))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y)))))))))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.x], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))) | (64), min((_GLF_IDENTITY(64, min(64, 64))) | (64), (_GLF_IDENTITY(64, min(64, 64))) | (64)))), _GLF_IDENTITY((64) | 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY((64) | 0, min(_GLF_IDENTITY((64) | 0, ((64) | 0) >> 0), (64) | 0)), min(_GLF_IDENTITY((64) | 0, min(_GLF_IDENTITY((64) | 0, ((64) | 0) >> 0), (64) | 0)), _GLF_IDENTITY(_GLF_IDENTITY((64) | 0, min(_GLF_IDENTITY((64) | 0, ((64) | 0) >> 0), (64) | 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((64) | 0, min(_GLF_IDENTITY((64) | 0, ((64) | 0) >> 0), (64) | 0)), 0)), (int(ivec2(_GLF_IDENTITY((64) | 0, min(_GLF_IDENTITY((64) | 0, ((64) | 0) >> 0), (64) | 0)), 0))) | (int(ivec2(_GLF_IDENTITY((64) | 0, min(_GLF_IDENTITY((64) | 0, ((64) | 0) >> 0), (64) | 0)), 0))))))), _GLF_IDENTITY((64) | 0, ((64) | 0) | ((64) | 0)), _GLF_IDENTITY((64) | 0, clamp((64) | 0, (64) | 0, _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) << 0) | 0, int(ivec2((64) | 0, 0)))))))), 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true), true))), true, true))))))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) + 0.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) + 0.0), true))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.6), _GLF_FUZZED(5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 0.0))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5175.3093)), bool(false)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5175.3093)), bool(false)))))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), false || (! (false))))), false, _GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0)))), float(_GLF_FUZZED(-597.077)), bool(false))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -4.1))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, log(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)))) * 1.0))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))))))), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / cos(log(vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0), mix(vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(-7.8)), vec2((((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))[0], (((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))[1]), bvec2(true, true))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / cos(log(vec2(1.0, 1.0)))).y))))) || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, true)), true, false, false))))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch.x, 0.0)), max(mat2(1.0) * (vec2(injectionSwitch.x, 0.0)), mat2(1.0) * (vec2(injectionSwitch.x, 0.0))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(11.80)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size.y], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.x)), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.x, 0u ^ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_13readsubgroup_idsubgroup_local_idsubgroup_size.x)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), 0 | (_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) / 1)))) - 0)), 4, _GLF_IDENTITY(4, (4) * 1)), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, _GLF_IDENTITY(4, (4) * 1)), max(clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, _GLF_IDENTITY(4, (4) * 1)), clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, _GLF_IDENTITY(4, (4) * 1)))), clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, _GLF_IDENTITY(4, (4) * 1))))), (4) ^ 0), 64, 4);
}
