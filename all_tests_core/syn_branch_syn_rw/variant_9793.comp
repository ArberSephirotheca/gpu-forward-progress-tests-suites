#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))
    {
     case 0:
     case 55:
     case 58:
     case 12:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 29:
     vec2(-6.4, 0.8);
     case 22:
     {
      for(ivec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[73]; (false && true); mat3(2209.5940, -2303.4634, -41.51, 291.221, -6051.4062, 26.36, -69.83, -2.0, -8799.0342))
       {
        ivec3 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
        for(        mat3x2(-20.45, -760.479, -7300.5896, 1235.3283, -905.810, 8.3);
 false; (mat3x2(mat3x4(mat4x2(-5.0, 98.46, 7653.5244, 3095.8826, -5.8, -2250.0614, -48.69, -578.663))) - mat3x2(245.406, 4971.1473, -0.5, -0.5, -50.19, 108.140)))
         {
          ;
          true;
          mat4(0.6, 1519.2128, 4.1, -2953.1769, 37.21, 65.88, -6160.9568, 4.8, -35.02, -2775.3568, 6.6, -607.187, 0.9, -85.67, -2.5, -9.3);
          bool _GLF_SWITCH_0_5v;
          reflect(ldexp(vec2(1.7, 68.71), ivec2(-23983, 9327)), vec2(21.61, 25.85));
          mat3x4(70.70, -3180.8211, 623.302, 263.452, -99.62, 793.576, 2.1, -4.8, -2.1, -8423.0790, 6.5, 5842.7601);
          ;
          mat2 _GLF_SWITCH_0_6v;
         }
        ;
        vec4(-3.7, 0.5, -6.8, 8.9);
        for(        floatBitsToUint(vec4(8593.6907, -3299.3271, 186.101, -918.188));
 false; mat3x2(mat4x3(-1.6, 1.9, 9228.7039, 1274.3325, 8.3, -6310.9382, -8.0, -6.0, -38.85, 14.54, 934.824, 7.9)))
         {
          ivec4 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v[75], _GLF_SWITCH_0_9v;
          exp(vec3(662.048, -14.30, -1.1));
          ;
          ;
          mat3x2(mat2x3(-8.0, 49.83, 8.8, -7.4, -25.95, 33.44));
          mat2(mat3(9.4, -5078.1481, -53.25, 1.6, -77.18, 8.4, -2979.1493, -980.560, 0.3));
          float _GLF_SWITCH_0_10v[88];
          uint _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[86];
         }
        mat4x3(mat3(-4530.7208, 2.3, -117.132, 9525.8669, 958.826, -286.122, 7.9, -9.5, -4.6));
        -4.5;
        for(        vec4(-6055.2816, 9060.7635, 3.5, -7.7);
 (true ? true : true); bvec4(false, false, true, false))
         {
          int _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
          mat2x4 _GLF_SWITCH_0_17v;
          int _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
          bvec3(true, true, true);
          mat4x3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
         }
       }
      {
       switch(_GLF_SWITCH(0))
        {
         case 18:
         bvec2(false, false);
         case 0:
         if(false)
          {
           (mat2(-0.4) - mat2(-2813.9210, -166.393, 4.2, -5.8));
           ivec3 _GLF_SWITCH_0_22v[88], _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
           transpose(mat2(67.96, -6.6, 403.385, 813.695));
           bvec4 _GLF_SWITCH_0_25v;
           mat4x3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
          }
         case 93:
         case 31:
         (- mat2x3(-4.4, -7.5, -501.188, 85.11, 833.891, -8799.8875));
         case 5:
         if(false)
          {
           mat3x4 _GLF_SWITCH_0_28v;
           ;
           bvec2(true, false);
           greaterThanEqual(ivec3(42560, -97766, 28119), ivec3(62342, 77357, -21562));
           num_workgroup;
           (uvec3(183811u, 60953u, 76445u) - virtual_gid);
           mat4x2 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
           (mat4x3(8.8, -9.5, -634.057, 6348.7158, 2819.0093, 794.120, -75.31, 734.474, -3.5, 4.0, 5.7, -9359.9455) * unpackUnorm4x8(next_virtual_gid));
           ivec4 _GLF_SWITCH_0_31v;
          }
         if(true)
          {
           ivec3 _GLF_SWITCH_0_32v[4], _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 25:
             ivec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
             case 0:
             case 11:
             case 23:
             mat3x4 _GLF_SWITCH_0_35v;
             case 27:
             mat4x2 _GLF_SWITCH_0_36v[5];
             case 33:
             mat3(-139.207, -91.07, 11.02, 2824.9943, -4452.3180, 57.30, 6733.7074, -1.9, 99.38);
             uvec2(189127u, 79517u);
             bvec3 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v[14], _GLF_SWITCH_0_39v;
             case 49:
             bool _GLF_SWITCH_0_40v[52];
             break;
             case 21:
             mat2x4(mat3(-9.4, 3.7, 68.06, -3389.2771, -2.5, -41.94, -9206.9011, -0.0, -173.858));
             default:
             1;
            }
          }
         case 45:
         case 60:
         subgroup_id;
         while(false)
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             mat2x3 _GLF_SWITCH_0_41v[71], _GLF_SWITCH_0_42v[43];
             case 93:
             case 13:
             case 55:
             case 26:
             mat2 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[20], _GLF_SWITCH_0_45v;
             case 82:
             (+ mat2x3(24.71, -3117.9838, 3043.9439, 4.8, 4.6, 4088.6899));
             (uvec4(23905u, 76478u, 189983u, 122681u) ^ (false ? num_workgroup : subgroup_base));
             case 60:
             exp2(vec2(327.270, 8.8));
             case 61:
             case 22:
             case 39:
             vec3(-4.8, -9.9, 86.07);
             break;
             case 73:
             ivec3(floatBitsToInt(-133.560), 47623, -1638);
             case 56:
             vec4 _GLF_SWITCH_1_0v[49], _GLF_SWITCH_1_1v;
             default:
             1;
            }
          }
         break;
         case 69:
         mat4 _GLF_SWITCH_1_0v[2];
         default:
         1;
        }
      }
      mat2x4(613.574, -849.246, 20.06, -1.5, 7.0, -9727.5062, -575.627, 4.6);
      bvec2(false, false);
      if(true)
       {
        switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | 0)))
         {
          case 0:
          case 31:
          case 95:
          case 71:
          case 30:
          case 92:
          case 34:
          case 39:
          case 97:
          float _GLF_SWITCH_0_46v;
          break;
          case 70:
          uvec4(170675u, 110254u, 152840u, 177646u);
          case 50:
          clamp(vec3(2003.8822, 9.6, -8.2), vec3(1151.7568, 9.2, -78.47), (mat2x3(-8506.1594, -288.538, -0.1, 7.3, -3.6, -2.8) * injectionSwitch));
          default:
          1;
         }
       }
      else
       {
        vec3(73.33, 56.81, -3.6);
        for(ivec4 _GLF_SWITCH_0_47v[65]; false; 81.20)
         {
          mat2(2.7, -9664.6844, 6449.3845, -2.1);
          vec4 _GLF_SWITCH_0_48v[13], _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v[51];
          vec2(-6673.0298, 973.743).r;
          log(vec3(-38.44, -77.00, 442.514));
          ;
          findMSB(ivec2(-59540, 51406));
          mat2(-807.797, -8879.7407, -7.9, 98.63);
         }
        while((uvec4(169466u, 62257u, 155272u, 174814u) != uvec4(126941u, 166521u, 80063u, 17734u)))
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 36:
            (true ? mat3x2(-548.021, -2.4, 940.539, -4.5, -359.903, -71.15) : mat3x2(-9.3, -8389.9584, -752.790, -8.0, -7.2, -0.4));
            case 0:
            case 20:
            case 56:
            case 69:
            case 1:
            case 57:
            switch(_GLF_SWITCH(0))
             {
              case 81:
              mat4x2(mat4x3(-486.256, 8.5, 66.51, -6451.0109, 46.73, -213.231, 4.2, -921.501, -856.864, 4.3, 1355.8356, -50.56));
              case 0:
              float _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v;
              case 4:
              mat2x4 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[54], _GLF_SWITCH_0_55v;
              mat2x4(8.1, -125.788, 105.880, -2.8, 1.4, -5737.0470, -1687.7307, 2.7);
              bvec3 _GLF_SWITCH_0_56v[84], _GLF_SWITCH_0_57v;
              case 11:
              mat4 _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v;
              float _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v[85], _GLF_SWITCH_0_63v[35];
              notEqual(injectionSwitch, (injectionSwitch / inversesqrt(_GLF_SWITCH_0_52v)));
              case 22:
              mat3x4(-9.7, -3.8, -359.436, -9039.5697, 3.0, -9.2, -3.2, 651.226, 51.74, -520.630, -5.4, -9679.6267);
              (ivec3(-19337, -79376, 16311) >> -59246);
              break;
              case 28:
              ivec2(71400, 46330);
              case 43:
              vec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
              default:
              1;
             }
            break;
            default:
            1;
           }
         }
        mat4x3(-66.91, -33.68, 0.7, 267.059, -48.87, 1740.6075, -4451.7387, 8.4, 173.442, -53.47, 7.6, -5.8);
        for(        (vec4(-992.354, -475.039, -478.048, 42.56) / vec4(-437.329, 750.004, -0.7, 32.82));
 false; (uvec4(174983u, 85423u, 131422u, 152944u) & (subgroup_id ++)))
         {
          ;
          int _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v;
          (vec2(-19.60, -4.4) * mat4x2(-68.75, -2125.2398, 88.35, -1844.5373, -48.39, -5.3, 9.2, -7.8));
          (max(ivec4(-31561, 35019, -57173, 74738), (mat3x4(-4562.8596, -636.785, -2.5, -91.41, 68.67, -0.1, 562.651, 43.81, -7.1, 4.3, -7.5, 64.13) , ivec4(97755, 47192, -17359, -85634))) << atomicAdd(_GLF_SWITCH_0_66v, 71630));
          ivec2(-90428, 82919);
          bitfieldInsert(ivec3(-22104, 19700, -38557), ivec3(41362, -16787, 71832), _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v);
          ;
          vec4(50.47, 1.7, 1063.4362, 43.83);
         }
        uvec4 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v[99];
        mat3x2(2.8, 72.61, 4535.5357, -39.46, -4.1, -7330.8191);
       }
      ivec2(-30963);
     }
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 28:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     default:
     1;
    }
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
