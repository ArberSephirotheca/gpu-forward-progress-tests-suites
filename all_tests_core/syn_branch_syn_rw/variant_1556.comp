#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 vec2 _f0;
 uvec2 _f1;
 uvec3 _f2;
 uvec2 _f3;
 uvec2 _f4;
 ivec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 uint _f1;
 _GLF_struct_2 _f2;
 int i;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 mat3 _f0;
 bool _f1;
 bvec2 _f2;
 ivec3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupSize, mat3(1.0), true, bvec2(true), ivec3(1));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | (_GLF_struct_replacement_0.subgroup_size))))) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_0.subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * _GLF_struct_replacement_0.subgroup_size)), (~ ((subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | 0u))), (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_0.subgroup_size), max(~ (subgroup_id * _GLF_struct_replacement_0.subgroup_size), ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))) | 0u))), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_0.subgroup_size), max(~ (subgroup_id * _GLF_struct_replacement_0.subgroup_size), ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))) | 0u)))) | _GLF_IDENTITY(0u, 1u * (0u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | 0u)) << 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u, (1u ^ 1u)))) % _GLF_struct_replacement_0.subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), (max(buf[virtual_gid], buf[virtual_gid])) << 0u)), buf[virtual_gid])), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | (subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_id))))) < _GLF_struct_replacement_0.subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), float(_GLF_FUZZED(-2484.0734)), bool(false))) : _GLF_FUZZED(-3.9))))))
    {
     case 14:
     if(_GLF_DEAD(false))
      return;
     if(false)
      {
       ;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       (~ read);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (false))), true)))))))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(false)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         {
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          mat3x2(mat2x3(-10.21, -4.2, 68.33, _GLF_IDENTITY(_GLF_IDENTITY(-0.4, min(_GLF_IDENTITY(-0.4, (-0.4) * 1.0), -0.4)), clamp(-0.4, -0.4, -0.4)), -12.01, -0.9));
          mat3x2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
          injectionSwitch;
          _GLF_SWITCH_0_1v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          bvec3 _GLF_SWITCH_0_2v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(true, false || (true)))), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true)), true, true)))));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          mat3x4(_GLF_IDENTITY(-8130.6740, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(-8130.6740, (-8130.6740) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))), min(_GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))), _GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))), min(_GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))), _GLF_FUZZED(_GLF_IDENTITY(-347.104, mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false)))))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * 1.0)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(-8130.6740, (-8130.6740) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-347.104, (-347.104) + log(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), mix(float(-347.104), float(_GLF_FUZZED(25.52)), bool(false))))), bool(false))), float(_GLF_FUZZED(8.3)), bool(false)))), 6.5, -641.093, -981.694, 5.4, -313.245, 951.011, 53.63, 74.31, _GLF_IDENTITY(-4.3, clamp(-4.3, -4.3, -4.3)), -5753.2134, 166.107);
          (mat2x3(-302.499, -620.638, -1.8, -9.5, -7.5, -80.03) == mat2x3(83.30, 94.50, -1740.1548, -3.4, 487.012, 6.1));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, true && ((false) && true)))))) && true)))
             return;
            return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-4.6))) > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
            return;
           }
          float _GLF_SWITCH_0_3v[85];
         }
         if(_GLF_DEAD(false))
          return;
         _GLF_IDENTITY(lessThanEqual(uvec2(175317u, 181613u), uvec2(130929u, 174809u)), _GLF_IDENTITY(bvec2(bvec2(lessThanEqual(uvec2(175317u, 181613u), uvec2(130929u, 174809u)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(lessThanEqual(uvec2(175317u, 181613u), uvec2(130929u, 174809u)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(lessThanEqual(uvec2(175317u, 181613u), _GLF_IDENTITY(uvec2(130929u, 174809u), (uvec2(130929u, 174809u)) | (uvec2(0u, 0u) | uvec2(0u, 0u)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(lessThanEqual(uvec2(175317u, 181613u), _GLF_IDENTITY(uvec2(130929u, 174809u), (uvec2(130929u, 174809u)) | (uvec2(0u, 0u) | uvec2(0u, 0u)))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(lessThanEqual(uvec2(175317u, 181613u), _GLF_IDENTITY(uvec2(130929u, 174809u), (uvec2(130929u, 174809u)) | (uvec2(0u, 0u) | uvec2(0u, 0u)))))))), false), true))), true)))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.1, -4.3)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.1, -4.3)))).x > injectionSwitch.y))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, bool(bvec2(((! (false))) || false, false))))))), false || (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, bool(bvec2(((! (false))) || false, false))))))), true && (bool(bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, bool(bvec2(((! (false))) || false, false))))))))))), false || (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ((! (false))) || false)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(true, false || (true)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, true)))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(false, ! (! (false)))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, ! (! (false))) || ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, true)))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, true)))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, true)))))) || false))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), ! (! (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, true)))))) || false)))) || false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))) || false))))
          return;
         {
          if(_GLF_DEAD(false))
           return;
          uint _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
          float _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[33];
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))))
           return;
          ;
         }
         if(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           workgroup_size;
          }
         {
          if(_GLF_DEAD(false))
           return;
          uvec4(106780u, 117109u, 177849u, 161271u);
          mat3x2(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0) * (_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(_GLF_IDENTITY(6777.8017, clamp(6777.8017, 6777.8017, 6777.8017)), -33.48, -38.72)))), min(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (vec3(6777.8017, -33.48, -38.72)), mat3(1.0) * (vec3(6777.8017, -33.48, -38.72)))), (_GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))), max((_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))), min((_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))), (_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))))))), clamp((_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))), (_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), vec3(vec3(vec3(6777.8017, -33.48, -38.72))))))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), clamp(vec3(6777.8017, -33.48, -38.72), vec3(6777.8017, -33.48, -38.72), vec3(6777.8017, -33.48, -38.72)))) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))), (true ? (_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), min(_GLF_IDENTITY(vec3(6777.8017, -33.48, -38.72), (vec3(6777.8017, -33.48, -38.72)) - vec3(0.0, 0.0, 0.0)), vec3(6777.8017, -33.48, -38.72)))) : _GLF_FUZZED(vec3(-6.0, -24.25, 9.9)))))), min(mat3(1.0) * (vec3(6777.8017, -33.48, -38.72)), mat3(1.0) * (vec3(6777.8017, -33.48, -38.72))))) - vec3(0.0, 0.0, 0.0))).z);
          ivec2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false))
            return;
          }
         {
          if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          _GLF_IDENTITY(bitCount(ivec2(-71273, 14047)), (bitCount(ivec2(-71273, 14047))) >> ivec2(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, int(int(0))), 1))), 0));
          if(_GLF_DEAD(false))
           return;
          mat2x4 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          31273;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true))))), bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))))))))
           return;
          ivec2 _GLF_SWITCH_0_14v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-28.06) : injectionSwitch.x)), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))
           return;
          if(_GLF_DEAD(false))
           return;
          greaterThanEqual(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), log(vec2(9.5, 9435.8099)));
          if(_GLF_DEAD(false))
           return;
          mat4x3(-5912.5185, 2834.9991, -1.0, -519.612, 5.8, 4.0, -355.952, 89.66, 64.63, 212.457, -16.35, _GLF_IDENTITY(3173.6657, 0.0 + (3173.6657)));
          uvec2(140392u, 9697u);
          ivec3(-40732, -86415, -21031);
          ivec2 _GLF_SWITCH_0_15v;
         }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           bitfieldExtract(uvec4(36614u, 96869u, 185277u, 20142u), -15950, -41826);
           mat2x4(mat3x2(mat4x2(_GLF_IDENTITY(-0.2, mix(float(_GLF_IDENTITY(-0.2, mix(float(-0.2), float(_GLF_FUZZED(vec4(-7.4, 61.50, -5487.1231, 2.7).y)), bool(false)))), float(_GLF_FUZZED((364.632))), bool(false))), 63.56, _GLF_IDENTITY(-7.6, _GLF_IDENTITY(float(mat3x4(-7.6, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6565.8724))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat3x4(-7.6, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-3.6)), bool(false)))), 7.2, -10.01, _GLF_IDENTITY(-14.82, (-14.82) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.8, -398.943)));
           if(_GLF_DEAD(false))
            return;
           ;
           vec4(-5.4, _GLF_IDENTITY(-7.0, clamp(-7.0, _GLF_IDENTITY(-7.0, clamp(-7.0, -7.0, -7.0)), -7.0)), 8330.3222, 3.8);
           bool _GLF_SWITCH_0_16v;
           vec4 _GLF_SWITCH_0_17v;
           uvec4(111317u, 176108u, 35005u, 26284u);
          }
         else
          {
           bool _GLF_SWITCH_0_18v[82], _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[75];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           mat3x2(-5.0, _GLF_IDENTITY(_GLF_IDENTITY(4.4, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) ? _GLF_IDENTITY(4.4, min(4.4, 4.4)) : _GLF_FUZZED(float(-43980)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4.4, (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), _GLF_IDENTITY(bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), true, true)), true && (bool(bvec3(bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), true, true)))))))) ? _GLF_IDENTITY(4.4, min(4.4, 4.4)) : _GLF_FUZZED(float(-43980)))), max(_GLF_IDENTITY(4.4, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(4.4, min(4.4, 4.4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4.4, min(4.4, 4.4)), min(_GLF_IDENTITY(4.4, min(4.4, 4.4)), _GLF_IDENTITY(4.4, min(4.4, 4.4)))), _GLF_IDENTITY(4.4, min(4.4, 4.4)), _GLF_IDENTITY(4.4, min(4.4, 4.4)))) : _GLF_FUZZED(float(-43980)))), _GLF_IDENTITY(4.4, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9020.9629)), vec2(_GLF_FUZZED(72.13), (injectionSwitch)[1]), bvec2(false, true)))))) / vec2(1.0, 1.0)).x < injectionSwitch.y), true)))) ? _GLF_IDENTITY(4.4, min(4.4, 4.4)) : _GLF_FUZZED(float(-43980)))))), _GLF_IDENTITY(4.4, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) ? _GLF_IDENTITY(4.4, min(4.4, 4.4)) : _GLF_FUZZED(float(-43980)))))), -399.985, 96.05, -0.6, 46.88)[1];
           mat3 _GLF_SWITCH_0_21v[67], _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[67];
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         {
          if(_GLF_DEAD(false))
           return;
          uvec2 _GLF_SWITCH_0_24v[46];
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          outerProduct(vec2(2.8, _GLF_IDENTITY(1782.2630, (1782.2630) + 0.0)), normalize(injectionSwitch));
          min(uvec2(100139u, 86098u), atomicXor(subgroup_local_id, virtual_gid));
          vec4(609.118, -1112.0826, -5.1, 2.2);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          vec3 _GLF_SWITCH_0_25v[83], _GLF_SWITCH_0_26v[90];
          int _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
          mat2x4(67.46, 1.7, _GLF_IDENTITY(_GLF_IDENTITY(-3.7, min(-3.7, -3.7)), min(_GLF_IDENTITY(_GLF_IDENTITY(-3.7, min(-3.7, -3.7)), float(vec2(_GLF_IDENTITY(-3.7, min(-3.7, -3.7)), 1.0))), _GLF_IDENTITY(-3.7, min(-3.7, -3.7)))), 662.494, 2.2, -8.6, -2.3, -1346.3138);
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), max(vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4x2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))))).y))))
           return;
         }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       for(       ivec2(-64335, -79994);
 false; mat3x2(_GLF_IDENTITY(-6.7, mix(float(_GLF_IDENTITY(-6.7, max(-6.7, _GLF_IDENTITY(-6.7, (false ? _GLF_FUZZED(11.41) : -6.7))))), float(_GLF_FUZZED(71.82)), bool(false))), -19.40, 3.3, -9.4, -22.63, -1732.2019))
        {
         if((-94970 >= 28597))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           mat3x2 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[62], _GLF_SWITCH_0_31v;
           ivec2(-18748, _GLF_IDENTITY(68102, (68102) ^ 0));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           uvec3(161434u, 117827u, 61067u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           mat3x4 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v[91];
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            break;
           (-1.7 + mat3x4(-680.669, 8.8, 8.6, 1.2, -18.63, 57.80, -406.456, -2753.0141, 7.6, -7.5, -1.1, 3.0));
           if(_GLF_DEAD(false))
            continue;
           bool _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
           ;
           if(_GLF_DEAD(false))
            break;
           bvec3(false, true, true);
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
          return;
         {
          float _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           return;
         }
         {
          mat4x3(-3557.6057, _GLF_IDENTITY(_GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(4.8))), float(mat3(_GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(4.8))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(-5.3, (false ? _GLF_FUZZED((4.4 * -9105.1619)) : _GLF_IDENTITY(-5.3, (true ? -5.3 : _GLF_FUZZED(4.2))))), -5.6, 3.8, 5166.5861, 9.7, 2035.0875, -5.4, 426.764, -4.8, -46.92);
          bvec3 _GLF_SWITCH_0_39v[44], _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v[26];
          if(_GLF_DEAD(false))
           continue;
         }
         mat4(5213.0793, -88.46, 366.720, -1.1, 5221.8516, -0.0, 7.0, 6.9, 5721.9543, _GLF_IDENTITY(-524.767, max(_GLF_IDENTITY(_GLF_IDENTITY(-524.767, 0.0 + (_GLF_IDENTITY(-524.767, (-524.767) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((-524.767), clamp((-524.767), _GLF_IDENTITY((-524.767), (_GLF_IDENTITY((-524.767), ((-524.767)) / 1.0)) - 0.0), (-524.767))) / 1.0), _GLF_IDENTITY(-524.767, mix(float(-524.767), float(_GLF_FUZZED(74.07)), bool(false))))), -3904.4450, -1.8, 94.29, 4.4, 8.5, -0.7);
         bvec4(true, true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))));
         if(_GLF_DEAD(false))
          continue;
         ivec4(51938, 3633, -47712, 54202);
         if(_GLF_DEAD(false))
          break;
         if(true)
          {
          }
         else
          {
           ivec2 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false, true))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if((-65.63 < -79.13))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              break;
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           bvec3 _GLF_SWITCH_0_45v[54];
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), ! (! (true))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))));
           mat2 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           bool _GLF_SWITCH_0_48v;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
            break;
           vec4(529.556, 210.039, -98.27, -5.4);
           exp2(_GLF_IDENTITY(vec3(-8629.1464, -7424.7207, -7287.6347), min(_GLF_IDENTITY(vec3(-8629.1464, -7424.7207, -7287.6347), max(vec3(-8629.1464, _GLF_IDENTITY(-7424.7207, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-7424.7207, 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x2(-7424.7207, 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0 * (float(_GLF_IDENTITY(mat3x2(-7424.7207, 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x2(-7424.7207, 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))), -7287.6347), vec3(-8629.1464, -7424.7207, _GLF_IDENTITY(-7287.6347, _GLF_IDENTITY(mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(vec2(76.51, -417.993).g))), mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(51.60)), float(-7287.6347), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < injectionSwitch.y)))))))))))), vec3(-8629.1464, -7424.7207, -7287.6347))));
           (_GLF_SWITCH_0_48v ? ivec4(95882, _GLF_IDENTITY(-63446, _GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-72450) : (0))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), min(int(ivec4(0, 0, 0, 0)), int(ivec4(0, 0, 0, 0))))))) ^ (_GLF_IDENTITY(-63446, int(ivec4(-63446, 1, 1, 0))))), -10840, 13590) : ivec4(-55626, 29487, 39179, -48741));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           _GLF_SWITCH_0_47v;
          }
         for(vec4 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v; (_GLF_IDENTITY(uvec3(16076u, 174427u, 94185u) == (_GLF_IDENTITY(uvec3(99070u, 3051u, 146791u), (uvec3(99070u, 3051u, 146791u)) - uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(bitfieldInsert(workgroup_base, workgroup_size, 53438, -39833), min(bitfieldInsert(workgroup_base, workgroup_size, 53438, -39833), bitfieldInsert(workgroup_base, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 53438, -39833)))), (uvec3(16076u, 174427u, 94185u) == (uvec3(99070u, 3051u, 146791u) << bitfieldInsert(workgroup_base, workgroup_size, 53438, -39833))) || false)); _GLF_SWITCH_0_50v)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           mat2x4 _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v;
           uvec2(49173u, 158694u);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              break;
             return;
            }
           ivec4(4856, 94677, -96529, -90452);
           (ivec2(41120, 69717) / ivec2(-61367, 7500));
           _GLF_IDENTITY(ivec3(_GLF_IDENTITY(26758, 0 ^ (_GLF_IDENTITY(26758, int(_GLF_IDENTITY(ivec2(26758, 0), ivec2(0, 0) | (ivec2(26758, 0))))))), 50290, -86043), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(26758, 0 ^ (_GLF_IDENTITY(26758, int(_GLF_IDENTITY(ivec2(26758, 0), ivec2(0, 0) | (ivec2(26758, 0))))))), 50290, -86043), max(ivec3(_GLF_IDENTITY(26758, 0 ^ (_GLF_IDENTITY(26758, int(_GLF_IDENTITY(ivec2(26758, 0), ivec2(0, 0) | (ivec2(26758, 0))))))), 50290, -86043), ivec3(_GLF_IDENTITY(26758, 0 ^ (_GLF_IDENTITY(26758, int(_GLF_IDENTITY(ivec2(26758, 0), ivec2(0, 0) | (ivec2(26758, 0))))))), 50290, -86043)))) + ivec3(0, 0, 0));
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           mat3 _GLF_SWITCH_0_55v[39], _GLF_SWITCH_0_56v;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           bvec3(true, true, true);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           mat4x2(-9.2, 449.985, 541.507, -9.3, -54.38, -975.641, -953.451, -30.25);
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       {
        for(        vec3(4.9, -36.39, -9.4);
 ((++ subgroup_local_id) >= workgroup_size); vec3(-9.7, -7.9, 3.7))
         {
          if(_GLF_DEAD(false))
           return;
          (subgroup_local_id);
          bvec2 _GLF_SWITCH_0_57v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           break;
          uvec4 _GLF_SWITCH_0_58v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          mat2x4 _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v[36];
          if(_GLF_DEAD(false))
           continue;
         }
        for(mat2x4 _GLF_SWITCH_0_61v[89], _GLF_SWITCH_0_62v[95], _GLF_SWITCH_0_63v; (mat3(-462.231, 3501.9094, 3.6, _GLF_IDENTITY(5509.9432, max(5509.9432, 5509.9432)), _GLF_IDENTITY(-61.75, (_GLF_IDENTITY(-61.75, mix(float(_GLF_FUZZED(-0.7)), float(-61.75), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 2.4, -23.96, -6795.3672, 3.2) != mat3(619.672, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-5.2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-5.2, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))), _GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))))), clamp(_GLF_IDENTITY(-5.2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, _GLF_IDENTITY(min(-5.2, -5.2), (min(-5.2, -5.2)) / 1.0)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), _GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))), _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), (true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91)) - 0.0), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))), _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))), _GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))))))), _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))), _GLF_IDENTITY(-5.2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), min(true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91), true ? _GLF_IDENTITY(-5.2, min(-5.2, -5.2)) : _GLF_FUZZED(-36.91))))))), 6918.2578, _GLF_IDENTITY(-9.6, (true ? -9.6 : _GLF_FUZZED(8395.8942))), -979.253, 3.8, 5.1, _GLF_IDENTITY(3396.4429, clamp(3396.4429, 3396.4429, 3396.4429)))); vec2(-4.0, -2.7))
         {
          _GLF_IDENTITY(uvec3(182848u, _GLF_IDENTITY(49911u, (49911u) | (49911u)), 118000u), (uvec3(182848u, _GLF_IDENTITY(49911u, (49911u) | (49911u)), 118000u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)));
          if(_GLF_DEAD(false))
           return;
          (bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            continue;
           }
          ;
          injectionSwitch;
         }
       }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     case 0:
     case 64:
     case 36:
     case 42:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 98:
     _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1u, _GLF_struct_2(_GLF_struct_1(vec2(1.0), uvec2(1u), uvec3(1u), uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(57590u, 181426u)) : _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))))))), uvec2(1u))), uvec2(1u))), ivec4(1), bvec3(true))), 0);
     if(_GLF_DEAD(false))
      return;
     case 24:
     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) ^ (82213 & 0)));
     break;
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(_GLF_IDENTITY(int(4), (int(4)) / 1))), 64, 4);
  }
}
