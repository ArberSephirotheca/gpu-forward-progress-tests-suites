#version 460
struct _GLF_struct_19 {
 uint _f0;
} ;

struct _GLF_struct_20 {
 uint workgroup_size;
 bool _f0;
 _GLF_struct_19 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 mat2 _f1;
 mat2x4 _f2;
 bool _f3;
 vec2 _f4;
 int _f5;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 mat4x2 _f1;
 uint _f2;
 vec3 _f3;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 mat2x3 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 bool _f1;
 uint num_workgroup;
 mat4x2 _f2;
 _GLF_struct_17 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 mat2x4 _f1;
 vec2 _f2;
 bvec2 _f3;
 mat2x4 _f4;
 mat3x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 int _f1;
 bvec3 _f2;
 bool _f3;
 uvec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_11 {
 uint subgroup_size;
 uint _f0;
 _GLF_struct_9 _f1;
 ivec2 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 ivec3 _f1;
 ivec4 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 vec2 _f1;
 bvec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_5 {
 int _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 bvec3 _f1;
 bvec3 _f2;
 uvec3 _f3;
 uvec2 _f4;
 uvec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 vec2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 bvec4 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 bvec4 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat3 _f1;
 bool _f2;
 ivec2 _f3;
 uint _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 float _f1;
 mat2x4 _f2;
 mat4 _f3;
 mat2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 _GLF_struct_1 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_3 {
 uint subgroup_local_id;
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(bvec4(true), _GLF_struct_8(mat3(1.0), vec2(1.0), _GLF_struct_4(uvec2(1u), bvec3(true), bvec3(true), uvec3(1u), uvec2(1u), uvec3(1u), ivec2(1)), _GLF_struct_5(1, bvec3(true)), _GLF_struct_6(vec4(1.0), vec2(1.0), bvec3(true), ivec4(1)), bvec4(true), _GLF_struct_7(uvec3(1u), ivec3(1), ivec4(1), mat2x3(1.0), mat4x3(1.0), mat3x2(1.0))), mat2(1.0), bvec4(true), _GLF_struct_11(gl_SubgroupSize, 1u, _GLF_struct_9(mat3(1.0), 1, bvec3(true), true, uvec4(1u), mat3x4(1.0)), ivec2(1), _GLF_struct_10(mat2x4(1.0), mat2x4(1.0), vec2(1.0), bvec2(true), mat2x4(1.0), mat3x2(1.0), mat2(1.0))));
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(gl_SubgroupInvocationID, _GLF_struct_2(_GLF_struct_0(ivec2(1), 1.0, mat2x4(1.0), mat4(1.0), mat2(1.0), vec2(1.0)), mat4(1.0), _GLF_struct_1(mat2x4(1.0), mat3(1.0), true, ivec2(1), 1u, bvec3(true)), uvec4(1u)));
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(mat2x3(1.0), true, gl_NumWorkGroups.x, mat4x2(1.0), _GLF_struct_17(vec2(1.0), _GLF_struct_13(bvec2(true), mat4x2(1.0), 1u, vec3(1.0)), _GLF_struct_14(ivec4(1), mat2(1.0), mat2x4(1.0), true, vec2(1.0), 1), _GLF_struct_15(ivec4(1)), mat2x3(1.0), _GLF_struct_16(vec3(1.0), mat3x4(1.0), bvec4(true), uvec3(1u), bvec4(true), mat4x2(1.0))), mat2x3(1.0));
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(gl_WorkGroupSize.x, true, _GLF_struct_19(1u), uvec2(1u));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_20.workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_12._f4.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_3.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % _GLF_struct_replacement_12._f4.subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((_GLF_struct_replacement_3.subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
