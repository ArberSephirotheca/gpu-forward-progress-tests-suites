#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(3.7, -651.643, 4421.2836, 0.2))) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4515.2714))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 1.0, 0.0, 1.0)), mat2(mat3x2(transpose(mat2(1.0, 1.0, 0.0, 1.0)))))))), sin(0.0), 0.0)), 0.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), max(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0), transpose(transpose(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0))))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), sin(0.0), 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(6.9)) : 0.0)))), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), max(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)))), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)), 0.0)), 0.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), max(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)))), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), max(vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(623.106))))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), 0.0, 0.0))))))))).x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))) || false)))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), uint(uvec4(workgroup_size * workgroup_id, 1u, 1u, 1u))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, 1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u))))), 0u, 1u))) - 0u)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), clamp(uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 1u), (false ? _GLF_FUZZED(uvec3(130700u, 103436u, 84613u)) : _GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((_GLF_IDENTITY(0u, (0u) - ((72421u + 91738u) & 0u)))) / 1u) | (0u)))), 1u), (uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 1u)) ^ uvec3(0u, 0u, 0u))))), uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(workgroup_size * workgroup_id, 0u, 1u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (uvec3(workgroup_size * workgroup_id, 0u, 1u)), (~ (uvec3(workgroup_size * workgroup_id, 0u, 1u))) * uvec3(1u, 1u, 1u))))))))), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))) | 0u), ~ (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 1u))), 1u))) | 0u), max(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 0u, 1u))) | 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size * workgroup_id, 0u, 1u))))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup))) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), _GLF_IDENTITY((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), max(uint(uvec2(1u, 1u)), _GLF_IDENTITY(uint(uvec2(1u, 1u)), (true ? uint(uvec2(1u, 1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id)))))) | 0u)))))))))))), _GLF_IDENTITY(uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | 0u), 1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | 0u), 1u)), (true ? uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u))), 1u)) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, num_workgroup, num_workgroup))), 0u | (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | 0u), 1u)), (true ? uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u))), 1u)) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, num_workgroup, num_workgroup))), (false ? _GLF_FUZZED(subgroup_id) : (true ? _GLF_IDENTITY(uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | 0u), 1u)), (true ? uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u))), 1u)) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, num_workgroup, num_workgroup))))))))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) | (uvec3(workgroup_size, 0u, 0u))), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) | (uvec3(workgroup_size, 0u, 0u))), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) | (uvec3(workgroup_size, 0u, 0u))), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) | (uvec3(workgroup_size, 0u, 0u))), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) | (uvec3(workgroup_size, 0u, 0u))), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) + 0u)))) * workgroup_id, 0u, 1u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) | (uvec3(workgroup_size, 0u, 0u))), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, 1u)))), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), max(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, 0u | (0u)), 1u))) | 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)))))) * workgroup_id, 0u, 1u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, _GLF_IDENTITY(0u, 0u | (0u)), 1u))), 0u | ((uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))))) | 0u))) / 1u))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), (uvec3(10096u, 102421u, 28185u) & uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), (uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))) ^ uvec3(0u, 0u, 0u)))))) | 0u), ~ (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))), (_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) - 0u)) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), max(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), _GLF_IDENTITY((uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))), min((uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))))) | 0u), _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 0u, 1u))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), 0u, 1u))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), ~ (~ (_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u)))), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - (76452u & 0u)), (_GLF_IDENTITY(1u, (1u) - (76452u & 0u))) * 1u))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u)))))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) - (76452u & 0u)))), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u), 1u, 1u, 0u)))))))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), _GLF_IDENTITY((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY(uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u)))))), (0u | 0u), 1u)), (true ? _GLF_IDENTITY(uint(uvec3((uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(77551u))))))) - 0u)) >> ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u), 1u)), (true ? uint(uvec3((_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))), ~ (~ (uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (0u | 0u), 1u)) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, num_workgroup, num_workgroup))))) | 0u), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (workgroup_size)), 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, 1u), min(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(workgroup_size, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 0u), (uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), ((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) ^ 0u)) >> 0u)), 0u, 0u)) * uvec3(1u, 1u, 1u)))) << 0u)) * workgroup_id, 0u, 1u)))))), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) | 0u), max(_GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u), _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) | 0u))), _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)), 1u)), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, 0u, 1u))) | 0u))) / 1u))))) - 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 1))) / 1)) % subgroup_size), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) << 0u)), 1u * (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) << 0u))))))), uint(uvec3(_GLF_IDENTITY(~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) << 0u)), 1u * (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) << 0u))))))), (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) << 0u)), 1u * (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) << 0u)))))))) >> 0u), 0u, 0u))))))))))) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u), (false ? _GLF_FUZZED(subgroup_base) : ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) | 0, (true ? (1) | 0 : _GLF_FUZZED(ivec4(-70666, -61097, 72602, -13020)[3]))), (1) | 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true) || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(false, (false) || false)), bvec2(bvec4(bvec2(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(false, (false) || false)), false, false))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && (false))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.2, -6.5)) : injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(333.924)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, false || (false))))), (true && (_GLF_IDENTITY(false, false || (false)))) || false)), bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.91)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.91)), bool(false)))) && true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (false ? _GLF_FUZZED(3187) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) | (_GLF_IDENTITY(4, min(4, 4))))))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
