#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(injectionSwitch, 1.0))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) & uvec3(30786u, 156665u, 64112u))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false))))))))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, 881.631)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid]))) | (buf[virtual_gid])), 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec4(! (true), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))))) ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 16200, -92020)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0), 0.0 + (max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)))))), injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) >> 0u) | _GLF_IDENTITY((workgroup_size), max(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size)))))), 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))), workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(-92020, clamp(-92020, -92020, _GLF_IDENTITY(-92020, _GLF_IDENTITY((-92020) | (_GLF_IDENTITY(-92020, clamp(-92020, -92020, -92020))), ((-92020) | (_GLF_IDENTITY(_GLF_IDENTITY(-92020, clamp(-92020, -92020, -92020)), (_GLF_IDENTITY(-92020, clamp(-92020, -92020, -92020))) / (1 & 1)))) / 1)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, _GLF_IDENTITY(16200, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) ^ 0)))) | (16200)), -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, _GLF_IDENTITY(16200, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3905), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(3905), clamp(_GLF_FUZZED(3905), _GLF_FUZZED(3905), _GLF_IDENTITY(_GLF_FUZZED(3905), ~ (~ (_GLF_FUZZED(3905)))))), 1))), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(3905), (false ? _GLF_FUZZED(44699) : _GLF_FUZZED(3905))), 0, 1))) : _GLF_IDENTITY(16200, 1 * (16200)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3905), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(3905), clamp(_GLF_FUZZED(3905), _GLF_FUZZED(3905), _GLF_IDENTITY(_GLF_FUZZED(3905), ~ (~ (_GLF_FUZZED(3905)))))), 1))), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(3905), (false ? _GLF_FUZZED(44699) : _GLF_FUZZED(3905))), 0, 1))) : _GLF_IDENTITY(16200, 1 * (16200))) | (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3905), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(3905), clamp(_GLF_FUZZED(3905), _GLF_FUZZED(3905), _GLF_IDENTITY(_GLF_FUZZED(3905), ~ (~ (_GLF_FUZZED(3905)))))), 1))), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(3905), (false ? _GLF_FUZZED(44699) : _GLF_FUZZED(3905))), 0, 1))) : _GLF_IDENTITY(16200, 1 * (16200)))))), _GLF_IDENTITY(-92020, _GLF_IDENTITY(~ (~ (-92020)), max(~ (~ (-92020)), ~ (_GLF_IDENTITY(~ (-92020), 0 | (~ (-92020))))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), bool(bvec4(! (true), true, false, false))))) ? atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 2) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), workgroup_size, 16200, -92020)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), min(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))))))))), min(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), workgroup_size, 16200, -92020)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), min(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))))))))), _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), workgroup_size, 16200, -92020)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), min(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020))), (0u ^ (_GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_size, 16200, -92020)))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.2) : 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(92.09)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), uvec3(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, -92020)), 0u ^ (_GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_size, 16200, _GLF_IDENTITY(_GLF_IDENTITY(-92020, (-92020) | (_GLF_IDENTITY(-92020, (true ? -92020 : _GLF_FUZZED(clamp(19998, -45281, 22725)))))), ~ (~ (-92020))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)))))))))))))))) * 1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))) == 0)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, min((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, ((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u) | ((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, min((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u, ((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u) | ((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) / 1u))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, cos(0.0), 1.0), transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, cos(0.0), 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, cos(0.0), 1.0) : _GLF_FUZZED(mat2x3(1838.6988, 21.54, -4.8, -32.31, 976.420, 3511.7578)))))))))))) * determinant(mat2(1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))))))))), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(false, (false) || false))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))), true, true), _GLF_IDENTITY(false, (false) || false))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))), true, true), _GLF_IDENTITY(false, (false) || false))), false)))))))), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-23.08))) > injectionSwitch.y), true, true), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-709.972)), vec2(_GLF_FUZZED(768.269), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.2)), bool(false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (true ? min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.3), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], max((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1]))), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(118.973)), bvec2(true, false))), mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-64.28, 64.74)))))).y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true), true)))), false, true)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, ((64) << 0) - 0)), 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(708.827)), float(_GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))), false))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ((_GLF_IDENTITY(false, (false) && true)) && true) && true)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-103.590), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-25.87)), bvec2(true, false))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-103.590), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-25.87)), bvec2(true, false))).y))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), (bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.6), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.6)), bvec2(true, false))).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
