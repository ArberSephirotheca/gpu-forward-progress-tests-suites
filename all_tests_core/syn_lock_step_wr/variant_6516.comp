#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), bool(bvec2(! (bool(bvec4(false, false, false, true))), true)))))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(66.71, -7.4)) : injectionSwitch)).y)) && (false)), true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((! (! (bool(bvec4(false, false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((! (! (bool(bvec4(false, false, false, true))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), true && ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), true && ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true)), bool(bvec3(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec4(false, false, false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), true && ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), true && ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true)), bool(bvec3(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec4(false, false, false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), true && ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))), true && ((_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true)), bool(bvec3(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec4(false, false, false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true), false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), _GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), false, false, true)), false || (bool(bvec4((bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), false, false, true))))) || false), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((! (! (bool(bvec4(false, false, false, true))))), true && (_GLF_IDENTITY((! (! (bool(bvec4(false, false, false, true))))), ((! (! (bool(bvec4(false, false, false, true)))))) || false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), _GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), false, false, true)), false || (bool(bvec4((bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))), false, false, true))))) || false), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), _GLF_IDENTITY((! (! (bool(bvec4(false, false, false, true))))), true && (_GLF_IDENTITY((! (! (bool(bvec4(false, false, false, true))))), ((! (! (bool(bvec4(false, false, false, true)))))) || false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))))) && true), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, false, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(false, false, false, true)), false), false), bvec3(bvec3(bvec3(bvec2(bool(bvec4(false, false, false, true)), false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(false, false, false, true)), false), false), bvec3(bvec3(bvec3(bvec2(bool(bvec4(false, false, false, true)), false), false))))), false, true))))))), false || (! (bool(bvec4(false, false, false, true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), (float(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) - 0.0)))))))))), bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)), false, true, true))))), false || (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true))), ! (! (bool(bvec4(false, false, false, true)))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), false || (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, true)))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))) || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), (! (! (bool(bvec4(false, false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0))) * mat4(1.0))), clamp(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0))) * mat4(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0))) * mat4(1.0))), max(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0))) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0))) * mat4(1.0))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), sqrt(cos(0.0)), 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(0.0))) * mat4(1.0)))))).y))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_IDENTITY(true, true && (true)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), true))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), bool(bvec4(! (! (bool(bvec4(false, false, false, true)))), true, false, false)))) || _GLF_IDENTITY(false, bool(bool(false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, false))))))) || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, true)))), (! (! (bool(bvec4(false, false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) && true))))), (! (! (bool(bvec4(false, false, false, true))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), false || (! (bool(bvec4(false, false, false, true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))))), false)))))), bool(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true), false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false, false, true)), true))), ! (! (bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false)))))))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true)))))))))))) || false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(826.179)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-761.865))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-761.865))) > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-761.865))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-761.865))) > injectionSwitch.y)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-587.620)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 1)), 0 | (int(ivec4(1, 0, 0, 1)))))))])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) | (uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) | (uint(workgroup_base))))))))) / 1u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))) ^ 0u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))) ^ 0u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))) ^ 0u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))) ^ 0u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((uint(workgroup_base)), (_GLF_IDENTITY((uint(workgroup_base)), 0u + ((uint(workgroup_base))))) - 0u) | (uint(workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(workgroup_base)), (_GLF_IDENTITY((uint(workgroup_base)), 0u + ((uint(workgroup_base))))) - 0u) | (uint(workgroup_base)), (_GLF_IDENTITY((uint(workgroup_base)), (_GLF_IDENTITY((uint(workgroup_base)), 0u + ((uint(workgroup_base))))) - 0u) | (uint(workgroup_base))) >> 0u)) ^ 0u))))) / 1u) + subgroup_id * subgroup_size) / 1u)) / 1u) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))), _GLF_IDENTITY(max(~ (~ (virtual_gid)), ~ (~ (virtual_gid))), (max(~ (~ (virtual_gid)), ~ (~ (virtual_gid)))) | (max(~ (~ (virtual_gid)), ~ (~ (virtual_gid))))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))), clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(~ (~ (virtual_gid)), ~ (~ (virtual_gid))))))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ 0u, (virtual_gid) ^ 0u, (virtual_gid) ^ 0u))))), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))), (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << 0u)) - 0u), ~ (~ (virtual_gid)))), (_GLF_IDENTITY(~ (~ (virtual_gid)), max(~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)) >> 0u))), ~ (~ (virtual_gid))))) - 0u)))), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), max(~ (~ (virtual_gid)), ~ (~ (virtual_gid)))), max(_GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), 0u + (~ (~ (virtual_gid)))), ~ (~ (virtual_gid)))), _GLF_IDENTITY(~ (~ (virtual_gid)), max(~ (~ (virtual_gid)), ~ (~ (virtual_gid))))))))), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(~ (~ (virtual_gid)), ~ (~ (virtual_gid))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))), uint(uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(~ (~ (virtual_gid)), ~ (~ (virtual_gid))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))), 0u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)), clamp(_GLF_IDENTITY((uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)), ((uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u))) | uvec4(0u, 0u, 0u, 0u)))), (uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)), (uvec4(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u, 1u)))) / ((_GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)) << _GLF_IDENTITY(uvec4(4u), uvec4(4u)), (_GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)) << _GLF_IDENTITY(uvec4(4u), uvec4(4u)), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))))) << uvec4(0u, 0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) ^ 0u)))))), min((_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid))))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)))))), ~ (~ (virtual_gid))))), (1u | 1u))), clamp(uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))))), (1u | 1u))), uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))))), (1u | 1u))), uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))))), (1u | 1u)))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u))))))), (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))), clamp(min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ (0u ^ 0u))))), ~ (~ (virtual_gid))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (virtual_gid)), _GLF_IDENTITY((~ (~ (virtual_gid))), ((~ (~ (virtual_gid)))) << 0u) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))), (min(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), uint(uvec4(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid))))) >> 0u))), ~ (~ (virtual_gid)))) - 0u), min(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))), ~ (~ (virtual_gid))))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))) >> 0u)], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], read, _GLF_IDENTITY(4, (4) | 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
