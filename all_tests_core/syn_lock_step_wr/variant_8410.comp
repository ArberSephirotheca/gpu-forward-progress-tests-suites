#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -53887)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), true)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true))))))), true, false, false)))))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(0, int(int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) || false))), true && (! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))), (_GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! (_GLF_IDENTITY((false), ((false)) && true))) && true))))), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))) || false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.37)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0)), bool(true))))) < injectionSwitch.y)), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 1.0, 1.0)))))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) && true));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, true)))))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) >> 0u);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(7.5), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(float(mat2x4(_GLF_FUZZED(7.5), length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, length(vec2(0.0, 0.0))))))), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))) + 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(958.606) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * mat2(1.0), transpose(transpose((mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * mat2(1.0))))))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (float(_GLF_FUZZED(7.5))) - 0.0), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5))))))))), float(_GLF_FUZZED(429.685)), bool(false))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))), float(_GLF_FUZZED(-490.041)), bool(false))) + 0.0))) - 0.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8235.0442) : float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.5)), bool(false)))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((20.67 / -1883.6917))), float(0.0), bool(true))))), float(_GLF_FUZZED(503.481)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(4610.5237)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, 1.0 * (7.5)))), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-279.213, 1651.7160, -7.9), (smoothstep(-279.213, 1651.7160, -7.9)) / 1.0)), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8235.0442) : float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.5)), bool(false)))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((20.67 / -1883.6917))), float(0.0), bool(true))))), float(_GLF_FUZZED(503.481)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(4610.5237)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, 1.0 * (7.5)))), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-279.213, 1651.7160, -7.9), (smoothstep(-279.213, 1651.7160, -7.9)) / 1.0))), float(_GLF_FUZZED(-134.950)), bool(false)))))), float(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED(958.606) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * mat2(1.0), transpose(transpose((mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * mat2(1.0))))))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (float(_GLF_FUZZED(7.5))) - 0.0), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5))))))))), float(_GLF_FUZZED(429.685)), bool(false))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))), float(_GLF_FUZZED(-490.041)), bool(false))) + 0.0))) - 0.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8235.0442) : float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.5)), bool(false)))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((20.67 / -1883.6917))), float(0.0), bool(true))))), float(_GLF_FUZZED(503.481)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(4610.5237)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, 1.0 * (7.5)))), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-279.213, 1651.7160, -7.9), (smoothstep(-279.213, 1651.7160, -7.9)) / 1.0)), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8235.0442) : float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.5)), bool(false)))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((20.67 / -1883.6917))), float(0.0), bool(true))))), float(_GLF_FUZZED(503.481)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(4610.5237)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, 1.0 * (7.5)))), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-279.213, 1651.7160, -7.9), (smoothstep(-279.213, 1651.7160, -7.9)) / 1.0))), float(_GLF_FUZZED(-134.950)), bool(false)))))), (false ? _GLF_FUZZED(81.07) : (false ? _GLF_FUZZED(958.606) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * mat2(1.0), transpose(transpose((mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sin(0.0), length(0.0), 1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * mat2(1.0))))))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (float(_GLF_FUZZED(7.5))) - 0.0), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5)))))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, 7.5)), min(_GLF_IDENTITY(7.5, max(7.5, 7.5)), _GLF_IDENTITY(7.5, max(7.5, 7.5))))))))), float(_GLF_FUZZED(429.685)), bool(false))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))), float(_GLF_FUZZED(-490.041)), bool(false))) + 0.0))) - 0.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8235.0442) : float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.5)), bool(false)))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((20.67 / -1883.6917))), float(0.0), bool(true))))), float(_GLF_FUZZED(503.481)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(4610.5237)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, 1.0 * (7.5)))), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-279.213, 1651.7160, -7.9), (smoothstep(-279.213, 1651.7160, -7.9)) / 1.0)), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8235.0442) : float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.5)), bool(false)))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((20.67 / -1883.6917))), float(0.0), bool(true))))), float(_GLF_FUZZED(503.481)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(4610.5237)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, 1.0 * (7.5)))), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-279.213, 1651.7160, -7.9), (smoothstep(-279.213, 1651.7160, -7.9)) / 1.0))), float(_GLF_FUZZED(-134.950)), bool(false)))))))), 0.0, 1.0, determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), (false ? _GLF_FUZZED(-85.49) : _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), (false ? _GLF_FUZZED(958.606) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(float(mat4x3(float(_GLF_FUZZED(7.5)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, exp(sin(0.0)), 1.0, 1.0, sqrt(0.0), 0.0)), (true ? float(mat4x3(float(_GLF_FUZZED(7.5)), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, exp(sin(0.0)), 1.0, 1.0, sqrt(0.0), 0.0)) : _GLF_FUZZED(337.035)))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(23.85), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-75.44)), bvec2(true, false)))) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), (_GLF_IDENTITY(_GLF_FUZZED(7.5), (_GLF_FUZZED(7.5)) - _GLF_ZERO(0.0, injectionSwitch.x))) + abs(0.0))), bool(false)))) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(2245u))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, max(7.5, 7.5)))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, min(7.5, 7.5)))), bool(false)))), mix(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))), max(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))), 1.0 * (float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))), float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))), float(_GLF_FUZZED(-490.041)), bool(false))) + 0.0))) - 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0)), float(_GLF_FUZZED(503.481)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0)), float(_GLF_FUZZED(503.481)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0)), float(_GLF_FUZZED(503.481)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))))) : _GLF_FUZZED(smoothstep(-279.213, 1651.7160, -7.9)))))) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), true && (bool(false)))), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), min(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), (false ? _GLF_FUZZED(958.606) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, min((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, (true ? (injectionSwitch.x) + 0.0 : _GLF_FUZZED(-57.49))))))), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))) + 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, (true ? 7.5 : _GLF_FUZZED(4.3))))), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), max((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_IDENTITY(_GLF_FUZZED(7.5), (_GLF_FUZZED(7.5)) - 0.0), _GLF_FUZZED(7.5)))), float(mat2(float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_IDENTITY(_GLF_FUZZED(7.5), (_GLF_FUZZED(7.5)) - 0.0), _GLF_FUZZED(7.5)))), 1.0, sin(0.0), 1.0))), bool(false)))) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7.5, max(7.5, _GLF_IDENTITY(7.5, min(7.5, 7.5)))), max(7.5, 7.5)))), bool(false)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))), float(_GLF_FUZZED(-490.041)), bool(false))) + 0.0))) - 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), min(_GLF_IDENTITY(float(_GLF_FUZZED(7.5)), max(float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(float(_GLF_FUZZED(7.5)), mix(float(_GLF_FUZZED(-0.0)), float(float(_GLF_FUZZED(7.5))), bool(true))))), float(_GLF_FUZZED(7.5)))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.5, (_GLF_IDENTITY(7.5, (false ? _GLF_FUZZED(-2.9) : 7.5))) / sqrt(1.0)))), bool(false)))))), log(1.0) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-5.5, -34.33, -659.709, -37.31)) : mat2(1.0))) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))))))))) / 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), (false ? _GLF_FUZZED(floor(-4.4)) : mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(7.5), max(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5)))), bool(false)))))) + 0.0)), float(_GLF_FUZZED(503.481)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), float(_GLF_FUZZED((vec4(0.5, -3100.7545, -5.6, 0.0) + 97.25).z)), bool(false))))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), float(_GLF_FUZZED((vec4(0.5, -3100.7545, -5.6, 0.0) + 97.25).z)), bool(false))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bool(false))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(_GLF_IDENTITY(false, bool(bool(false))))))))) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))) : _GLF_FUZZED(smoothstep(-279.213, 1651.7160, -7.9)))))) > injectionSwitch.y))), true, false, false)))) || false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-85486)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) & (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), ((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) & (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(vec3(-4434.8263, 3.6, -8.7).z) : _GLF_ONE(1.0, injectionSwitch.y)))) | 1)) - 0))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
    }
  }
 else
  {
  }
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), 4, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (64)), 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), uint(uvec4(virtual_gid, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)))), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))) / 1u)], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : atomicLoad(buf[virtual_gid], 4, 64, 2)))))) / 1u, ((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 2)) / 1u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)), ~ (~ (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)), ~ (~ (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)), ~ (~ (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : atomicLoad(buf[virtual_gid], 4, 64, 2)))))) << 0u)) / 1u, ((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (64))), 64)))), 2)) / 1u)))))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : atomicLoad(buf[virtual_gid], 4, 64, 2)))))) / 1u, _GLF_IDENTITY(((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))), max(_GLF_IDENTITY(((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))), max(_GLF_IDENTITY(((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))), uint(uvec2(((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))), 1u))), ((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))))), ((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u)) / 1u, (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u))))))))))) / 1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, 64)), 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id)))) - 0u))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))))))), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))) / 1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, 64)), 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(bitfieldReverse(workgroup_id)))))) - 0u))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, 64, 2)) >> 0u)))))))))), 0u ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_id))))], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(72249) : 64)), 2)) >> 0u)))) / 1u)))));
 subgroupBarrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4011.5367)), float(injectionSwitch.y), bool(true)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4011.5367)), float(injectionSwitch.y), bool(true)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
