#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z = _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u))), ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z = _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u)))), ~ (~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), min(uint(uint(subgroup_id)), uint(uint(subgroup_id))))), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u)))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y)))), true))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base)).z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base)).z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base)).z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base)).z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base)).z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.z) >> 0u)))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec2(true && (! (_GLF_WRAPPED_IF_TRUE(true))), false)))))), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                break;
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       else
        {
        }
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bvec4(! (_GLF_WRAPPED_LOOP(false)), false, true, false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), true && (! (_GLF_WRAPPED_LOOP(false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), false, false)))) || false))));
       if(_GLF_DEAD(false))
        break;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)));
 do
  {
   for(int _injected_loop_counter = (9830 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), true, false, false)))), true && (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8127.6616)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, false)))))))))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, false, false))))))), true, false, false)))), true && (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), false, false)))))))))) || false)) || false) || false)) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.x = num_workgroup;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.x;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))) && true)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, log(1.0), 0.0, 1.0))), log(1.0), 0.0, 1.0))))) > injectionSwitch.y)))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size), ~ (~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)))))), (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) * subgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) >> 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) + 0u)))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) * 1u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (true ? GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id : _GLF_FUZZED(uvec4(131360u, 54719u, 17463u, 56292u)))).w * subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)))))) | _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size), (true ? (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) : _GLF_FUZZED(num_workgroup)))) - 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) >> 0u) * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) * 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, _GLF_IDENTITY(uint(uint(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), ~ (~ (_GLF_IDENTITY(uint(uint(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), uint(uvec4(uint(uint(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), 0u, 0u, 1u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)), max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) >> 0u) * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) * 1u), 1u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) * subgroup_size))))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) >> 0u) * subgroup_size))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) / (0u ^ 1u))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 0u, 0u))) / 1u)), (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)))) * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) ^ 0u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)).w) >> 0u) * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)))) * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) ^ 0u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)).w) >> 0u) * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)))) * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size) ^ 0u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)).w) >> 0u) * subgroup_size))) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size))) : _GLF_FUZZED(workgroup_base))))) * 1u)));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) >> 0u), (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, abs(1.0)), (mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, abs(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, min((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, min((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(min(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, min((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, min((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.w) / 1u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 ^ (0)) | _GLF_IDENTITY((1), min((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - (-65912 & 0))) | (_GLF_IDENTITY(1, max(1, 1))))), (1))))))) % subgroup_size), uint(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))), min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 1u))))))), 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (26036u & 0u))), ((subgroup_local_id + 1) % subgroup_size))), 0u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED((workgroup_id --))))), uint(5u))), 1u)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) + 0.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    return;
   do
    {
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = next_virtual_gid;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(1.8))))), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && _GLF_IDENTITY(true, true && (true)))), false)))))), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))))))) && true)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))))))) && true)), false), false, true)))))))), true, false), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), false)))))), true, false), false)), true)), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 6941.2776)), _GLF_FUZZED(45.28)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))), bool(bvec3(_GLF_IDENTITY((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))), true && ((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))))), true, false)))), (! (_GLF_IDENTITY((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))), bool(bvec3(_GLF_IDENTITY((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))), true && ((bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), false, true))))), true, false))))) || false)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY((! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), ((! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))) && true)) && true)), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), false, true))), true && ((bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), false, true))))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 0.0, 1.0, cos(abs(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))).y)), false, true)))))) && true)), false)))))), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(87.90, -256.910)) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).y)), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bool(bvec4(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false)), bool(bvec4(bool(bvec4(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false)), false, false, true))))) || false), (bool(! (! (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, true)))))) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)), false), true, false)))))))), true, false), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (bool(! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((9151.0135 * 0.5))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false, true)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || (_GLF_IDENTITY(! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), bool(bvec2(! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), true))))))), (bool(! (! (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))), false, true)))))) && true)), false)))))), true, false), false)), true)), true)))))), false, true, true))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))))) || false)) || false), true, false), false)))), true, true, false)))) || false)) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0))))).x < injectionSwitch.y) && true)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (_GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), bool(bvec3(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), true, true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), false, true)), false || (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) && true)))))))))), true, false), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false)))), false, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-8.5, 4994.4759, -4840.8154, 1.5).y)), bool(false))) < injectionSwitch.y)), false, true)))), bool(bvec3(! (! (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false, true)))), true, true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), true, false, false))))))))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3918.7105))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec3(! (! (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))))))), true, false)))), false, true)))), true, true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))))), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))), true)), ! (_GLF_IDENTITY(! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))), true))), (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))), true)))) && true)))))), ! (! (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), true, false, false))))))))), true, false), false))))) || false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))) && true)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true)), (bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true))) || false))))))), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true)), (bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true))) || false))))))), true, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true)), (bool(bvec3(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false, true))) || false))))))), true, false), false)), false)))))))), true, true, false)))) || false)) && true))), bool(bvec3((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))) || false)), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.y) / 1.0))), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, true))), false || ((bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, true))))), bool(bvec2((bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true))))), false, true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false, false)))))))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), false)))), true, true, false)))) || false)) && true))), true, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), true, true)))))))), false, true)))))), true, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), true && (! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)))))))), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))), true && (! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))))))))) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), false))))))))))), true, true, false)))) || false)) && true))), bool(bvec3((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), true))), true))))))), false, false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) || false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3.7)), _GLF_FUZZED(-5934.3792)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(76.54, 106.849)) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(76.54, 106.849)) : injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))).y)), false, true)))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), true && (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))), true)))))), true, false), false)))), true, true, false)))) || false)) && true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), true, true)))))))), false, true)))))), true, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), true && (! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)))))))), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))), true && (! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))))))))) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))), false || ((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))))), true, false), false))))), true))), false))))))))))), true, true, false)))) || false)) && true))), bool(bvec3((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true), true))), true))))))), false, false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))), (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))) || false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3.7)), _GLF_FUZZED(-5934.3792)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(76.54, 106.849)) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(76.54, 106.849)) : injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))).y)), false, true)))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), true && (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))), true)))))), true, false), false)))), true, true, false)))) || false)) && true))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), (! (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))))) || false))))) && true), true, false, true)))))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x], uint(_GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
    }
   else
    {
    }
  }
 else
  {
  }
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) | 0))), 64, 2), ~ (~ (atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u | _GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (virtual_gid))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_base, atomicLoad(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), -17683, -70871, -32818), 165994u)) : _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), (~ (virtual_gid)))))) << 0u)], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2)))), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 0u))), _GLF_IDENTITY(4, 0 | (4)), 64, 2), ~ (~ (atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u | (~ (virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_base, atomicLoad(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) >> 0u, ((_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED((56717u | workgroup_id))))) >> 0u) + 0u)), -17683, -70871, -32818), 165994u)) : _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), (~ (virtual_gid)))))) << 0u)], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2))))) << 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.y = read;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, min(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base)).y, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u), uint(3u))) | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.y), ((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.y)) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.y, uint(uvec3(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_base.y, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) - 0u)), 1u)))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 << _GLF_IDENTITY(int(8), int(8)))), _injected_loop_counter))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))) < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4((false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7724.2503) : injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))))) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) && true))))))
          return;
        }
       subgroupBarrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 & 61834); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))) ^ 0, ((_GLF_IDENTITY(4, (4) | (4))) ^ 0) | 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(0, (0) | (0)), 0)))) | (4))) ^ 0), (false ? _GLF_FUZZED(-4644) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), max((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))))) ^ 0), 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), max((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))))) ^ 0), 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0)))))) - 0)))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)) : _GLF_FUZZED(49768))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
}
