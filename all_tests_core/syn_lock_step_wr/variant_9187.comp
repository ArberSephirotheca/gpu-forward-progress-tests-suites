#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true && (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), true && (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true && (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))), (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED((-9.0 * (-814.723)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u), (false ? _GLF_FUZZED((workgroup_id >> 60839u)) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec4(max(subgroup_size, subgroup_size), 0u, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base)))), (uvec4(max(subgroup_size, subgroup_size), 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false, true, false))), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false, true, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false))))), false, true, false))), true, true))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0))) * exp(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat4x3(float(mat2x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), (true ? _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0) : _GLF_FUZZED(-15.51))))))), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))), true, false, false)))), false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false, ! (! (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false, ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false) || false)))), (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false, ! (! (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false, ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) || false) || false))))) && true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, (true) || false))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true)), false, false)))), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), vec3(mat2((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0), 0.0))), _GLF_IDENTITY(vec3(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(3.4, -449.966, 97.76))))) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0), vec3(mat2((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), 0.0))), 1.0)), max(vec3(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0), vec3(mat2((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0), 0.0))), 1.0)), vec3(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0), vec3(mat2((_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))) / vec3(1.0, 1.0, 1.0), 0.0))), 1.0)))))))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), max(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), vec4(injectionSwitch[1], 0.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), max(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), vec4(injectionSwitch[1], 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), max(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), vec4(injectionSwitch[1], 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), max(vec4(injectionSwitch[1], 0.0, 1.0, 0.0), vec4(injectionSwitch[1], 0.0, 1.0, 0.0))))))))), 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0)))))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)))).x > injectionSwitch.y)), false, false))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)))))).x > injectionSwitch.y)), false, false))))), false, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))) | 0u))) + ((subgroup_local_id + 1) % subgroup_size), 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), uint(_GLF_IDENTITY(uint(~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), ~ (~ (_GLF_IDENTITY(uint(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), (true ? (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) : _GLF_FUZZED(virtual_gid)))), (uint(~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (workgroup_base)))))) ^ 0u))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))) - 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))))), 0u | ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (injectionSwitch), 1.0, 1.0, 1.0, 1.0), mat3x2(mat3x2(mat3x2(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (injectionSwitch), 1.0, 1.0, 1.0, 1.0))))), mix(vec2(_GLF_FUZZED(159.031), (vec2(_GLF_IDENTITY(mat3x2(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (injectionSwitch), 1.0, 1.0, 1.0, 1.0), mat3x2(mat3x2(mat3x2(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (injectionSwitch), 1.0, 1.0, 1.0, 1.0))))))[1]), vec2((vec2(_GLF_IDENTITY(mat3x2(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (injectionSwitch), 1.0, 1.0, 1.0, 1.0), mat3x2(mat3x2(mat3x2(false ? _GLF_FUZZED(vec2(8.2, 113.366)) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, 1.0, 1.0))))))[0], _GLF_FUZZED(-822.500)), bvec2(true, false))))))) * vec2(1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(23343))), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(23343), 0 | (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(23343), clamp(_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(23343), max(true ? 4 : _GLF_FUZZED(23343), true ? 4 : _GLF_FUZZED(23343))), true ? 4 : _GLF_FUZZED(23343), true ? 4 : _GLF_FUZZED(23343))))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(23343))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-40.09), _GLF_FUZZED(-350.997)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(22.47)), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, false)))))), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(22.47)), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, false)))))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(22.47)), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, false)))))), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(22.47)), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, false))))))) - vec2(0.0, 0.0))))))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(23825u)), (true ? _GLF_FUZZED(float(_GLF_IDENTITY(23825u, (false ? _GLF_FUZZED(workgroup_id) : 23825u)))) : _GLF_FUZZED(trunc(5.2))))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(injectionSwitch.y))), clamp(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)))).x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0)))).x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0)))).x < injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))) || false, false, false, false)), ! (! (bool(bvec4((! (_GLF_DEAD(false))) || false, false, false, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
    barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(read)))) / 1u), (virtual_gid) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) ^ 0u, ~ (~ (_GLF_IDENTITY((virtual_gid) ^ 0u, ((virtual_gid) ^ 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u)) / uvec2(1u, 1u)))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), min(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(read)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), min(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(read)), uint(uvec4((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), min(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(read)), 1u, 0u, 0u))), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), min(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(read)), _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), min(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(read)), 0u | ((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), min(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(read)))))))) / 1u), (_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))), 0u)))) ^ 0u), _GLF_IDENTITY(1u, uint(uint(1u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) ^ 0u), 1u)) / uvec2(1u, 1u))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) * 1u) + 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(virtual_gid, (virtual_gid) + _GLF_IDENTITY(0u, (0u) | (0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid))) ^ 0u), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 1u)))))), ~ (~ (uvec3(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, 1u)), min(_GLF_IDENTITY(uint(uvec3(uint(6u), 1u, 1u)), (uint(uvec3(uint(6u), 1u, 1u))) | (uint(uvec3(uint(6u), 1u, 1u)))), uint(uvec3(uint(6u), 1u, 1u)))))))))))))) / uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))), (~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))), (~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))), (~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))), (false ? _GLF_FUZZED(9380u) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))))) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))))))), 1u, 1u), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))), (false ? _GLF_FUZZED(9380u) : _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))), (~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))) << 0u)), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))))) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u))))))))), 1u, 1u)) | 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (1u)))))), _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) | 0u))), (virtual_gid))) ^ 0u), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) | 0u))), (virtual_gid))) ^ 0u), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) | 0u))), (virtual_gid))) ^ 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(((virtual_gid)), (_GLF_IDENTITY(((virtual_gid)), 0u ^ (((virtual_gid))))) ^ 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ((virtual_gid)) | 0u))), (virtual_gid))) ^ 0u)) ^ 0u), 1u), min(uvec2(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(packHalf2x16(vec2(-8.6, 89.33)))))))) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, max((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, ((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u), ~ (~ (((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u)))) : _GLF_FUZZED(read))))), min(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(packHalf2x16(vec2(-8.6, 89.33)))))))) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, max((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, ((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u), ~ (~ (((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u)))) : _GLF_FUZZED(read))))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(packHalf2x16(vec2(-8.6, 89.33)))))))) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, max((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u, ((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u), ~ (~ (((_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u)))) : _GLF_FUZZED(read))))))))))) ^ 0u), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), (virtual_gid) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u)), 1u))) ^ 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (7u))) | (7u))), uint(7u))) / 1u)))), 1u))) ^ 0u, (_GLF_IDENTITY((virtual_gid), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u)), 1u), max(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u)), 1u), uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u)), 1u))))) ^ 0u) | (_GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u)), 1u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, ~ (~ (0u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED((subgroup_local_id + _GLF_IDENTITY(read, uint(uint(read))))) : _GLF_IDENTITY(7u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_size))))) ^ (7u))))))) / 1u)), 1u))) ^ 0u, (_GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))) / 1u)), 1u))) ^ 0u) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / 1u)), 1u))) ^ 0u), 1u * (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uvec4(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / 1u)), 1u))) ^ 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), uint(uvec4(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))) + ((virtual_gid))), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / 1u)), max(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / 1u)), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / 1u))) - 0u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) / 1u)))), 1u))) ^ 0u)))))) | (0u | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))))), 1u)) << uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u)) - 0u)) >> 0u))))), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, uint(uint(0u)))), 1u)) / _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) + 0u)), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), 1u, 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(6285u, 76725u)) : uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u), 1u, 1u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) / 1u)) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), clamp(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u))))))))))), clamp(false ? _GLF_FUZZED(uvec2(6285u, 76725u)) : uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u), 1u, 1u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) / 1u)) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), clamp(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u))))))))))), false ? _GLF_FUZZED(uvec2(6285u, 76725u)) : uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u), 1u, 1u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) / 1u)) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), clamp(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u))))))))))), false ? _GLF_FUZZED(uvec2(6285u, 76725u)) : uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u), 1u, 1u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) / 1u)) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(uvec2(0u, 0u), 1u, 1u), clamp(uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u), uvec4(uvec2(0u, 0u), 1u, 1u)))))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, (_GLF_IDENTITY((virtual_gid) ^ 0u, ((virtual_gid) ^ 0u) | 0u)) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((subgroup_id ^ workgroup_size)) : virtual_gid))))))) ^ 0u), 1u)) / uvec2(1u, 1u), ~ (_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((subgroup_id ^ workgroup_size)) : virtual_gid))))))) ^ 0u), 1u)) / uvec2(1u, 1u)), (~ ((uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((subgroup_id ^ workgroup_size)) : virtual_gid))))))) ^ 0u), 1u)) / uvec2(1u, 1u))) - uvec2(0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min(_GLF_IDENTITY((1u) + 0u, max((1u) + 0u, (1u) + 0u)), (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min((1u) + 0u, (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid))) ^ 0u)))), (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min(_GLF_IDENTITY((1u) + 0u, max((1u) + 0u, (1u) + 0u)), (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min((1u) + 0u, (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid))) ^ 0u)))), max((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min(_GLF_IDENTITY((1u) + 0u, max((1u) + 0u, (1u) + 0u)), (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min((1u) + 0u, (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid))) ^ 0u)))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min(_GLF_IDENTITY((1u) + 0u, max((1u) + 0u, (1u) + 0u)), (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min((1u) + 0u, (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid))) ^ 0u)))), ((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min(_GLF_IDENTITY((1u) + 0u, max((1u) + 0u, (1u) + 0u)), (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, min((1u) + 0u, (1u) + 0u))) : _GLF_FUZZED(next_virtual_gid))) ^ 0u))))) / uvec2(1u, 1u))))) | uvec2(0u, 0u)) / uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, 0u ^ (1u)))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (((_GLF_IDENTITY(1u, 0u ^ (1u)))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), max(~ (_GLF_IDENTITY(1u, min(1u, 1u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))), 1u))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), (virtual_gid) ^ 0u), 1u)) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec4((virtual_gid), 0u, 1u, 1u))) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u)) / uvec2(_GLF_IDENTITY(1u, uint(uint(1u))), 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u)) / uvec2(1u, 1u))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u)) / uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))))), (~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))))))), 1u)) / uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.6)), float(0.0), bool(true))), injectionSwitch.x)))), min((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))) | (~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, (1u ^ 1u) | ((virtual_gid) ^ 0u))), 1u)) / uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))))))))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(1u, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))), _GLF_IDENTITY(bool(bvec4(bool(bool(true)), false, true, false)), bool(bvec3(bool(bvec4(bool(bool(true)), false, true, false)), true, true))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false))))), false || (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) || false)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) + 0u) : _GLF_FUZZED(next_virtual_gid))))) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), max(~ (_GLF_IDENTITY(1u, min(1u, 1u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))), 1u))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)) + 0u), (virtual_gid) ^ 0u), 1u)) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u)) / uvec2(_GLF_IDENTITY(1u, uint(uint(1u))), 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, (true ? (virtual_gid) ^ 0u : _GLF_FUZZED(packUnorm2x16(injectionSwitch))))), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u)) / uvec2(1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / _GLF_IDENTITY(1u, 0u | (1u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u), _GLF_IDENTITY(0u, (0u) | 0u)))), 1u), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u)) / uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))))))) >> 0u) ^ 0u))))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
