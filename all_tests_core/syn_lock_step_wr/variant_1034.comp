#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sin(0.0), 0.0, sqrt(0.0), abs(1.0), exp(0.0), 1.0, 1.0))), _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED((473.355 * -62.33))), float(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(3.9) : cos(0.0)))), bool(true))), _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), max(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mix(float(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-707.367)), bool(false))))), 1.0, 1.0))).y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), true, false)))))), sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(5.0))))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, sqrt(exp(0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / round(length(normalize(1.0)))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), 1.0)), mix(vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(reflect(-6635.2960, -481.249)) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))) - 0.0), 1.0)))))[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false)), (false ? _GLF_FUZZED(-13.29) : mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), 1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), _GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + log(1.0)) : _GLF_FUZZED(9.2))), 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), 1.0)))[1]))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), 1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7038.6825)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, sin(0.0))))))), 1.0)) * mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((4.3 + -5.7) / 835.900)), _GLF_FUZZED(-8.3)), bvec2(false, false)))) : (vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))), (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))), mix(float(_GLF_FUZZED(52.91)), float(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), bool(true))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(321.662)), bool(false))))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))))), 1.0)) * mat2(1.0)))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))))))[0], _GLF_FUZZED(5.3)), bvec2(true, false))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((5.9))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.0)), bool(false))))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8098.5297, min(-8098.5297, -8098.5297)))), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), float(_GLF_FUZZED(-154.660)), bool(false))))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-1.3))), 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * abs(1.0)), sin(0.0)), vec4(mat4(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * abs(1.0)), sin(0.0)), vec4(mat2(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * abs(1.0)), sin(0.0))))), determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)))))))), 1.0)), mix(vec2(_GLF_FUZZED(float(false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), clamp(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(roundEven(-2.9)) : sin(0.0))), 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), clamp(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0)), min(float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0) + (0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0 + (0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))) - 0.0))), 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-8098.5297)), max(float(_GLF_FUZZED(-8098.5297)), _GLF_IDENTITY(float(_GLF_FUZZED(-8098.5297)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-8098.5297)), clamp(float(_GLF_FUZZED(-8098.5297)), float(_GLF_FUZZED(-8098.5297)), float(_GLF_FUZZED(-8098.5297)))), float(_GLF_FUZZED(-8098.5297)))))), bool(false))), sin(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(_GLF_IDENTITY(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), mix(vec4((vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))[0], _GLF_FUZZED(float((180632u << 178878u))), _GLF_FUZZED(5645.4719), _GLF_FUZZED(8.4)), vec4(_GLF_FUZZED(5698.5354), (vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))[1], (vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))[2], (vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), min(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), clamp(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (true ? float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) : _GLF_FUZZED(-703.193))))), 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, sin(0.0)), mix(vec4((vec4(0.0, 0.0, 1.0, sin(0.0)))[0], (vec4(0.0, 0.0, 1.0, sin(0.0)))[1], (vec4(0.0, 0.0, 1.0, sin(0.0)))[2], (vec4(0.0, 0.0, 1.0, sin(0.0)))[3]), vec4(_GLF_FUZZED(0.4), _GLF_FUZZED(-17.35), _GLF_FUZZED(229.651), _GLF_FUZZED(6.8)), bvec4(false, false, false, false)))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6519.9226)), float(1.0), bool(true)))), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, sin(0.0)), mix(vec4((vec4(0.0, 0.0, 1.0, sin(0.0)))[0], (vec4(0.0, 0.0, 1.0, sin(0.0)))[1], _GLF_FUZZED(6.7), _GLF_FUZZED(9.7)), vec4(_GLF_FUZZED(-6.8), _GLF_FUZZED(-8.5), (vec4(0.0, 0.0, 1.0, sin(0.0)))[2], (vec4(0.0, 0.0, 1.0, sin(0.0)))[3]), bvec4(false, false, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), (_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0)))))) + 0.0), max(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(76.23) : 0.0)), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(76.23) : 0.0)), 1.0)), float(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(76.23) : 0.0)), 1.0))))), 0.0))))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), clamp(_GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(70816u))), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true))), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (sin(0.0))))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))))))))), 1.0)))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-71040)))]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), injectionSwitch.y), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec3(-9657.2706, 22.56, 264.628))) : 0.0)), 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(7.2)) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(7.2)) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-8098.5297)), bool(false))), sin(0.0))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), min(dot(vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3463.6003) : 1.0)), injectionSwitch.y), 0.0, 1.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(0.0)))))))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0)))[0], _GLF_FUZZED(5.3)), bvec2(true, false))).y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(bool(bvec4(false, false, true, true)), false, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(degrees(vec4(693.425, -25.78, _GLF_IDENTITY(-5212.3163, clamp(-5212.3163, -5212.3163, -5212.3163)), 19.12))) : vec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-831.291)), bool(false))), 1.0, 0.0)), 0.0))))) > injectionSwitch.y)), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), false || ((_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false))))))), (bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true))), true && (! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false), true && (! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true))), true && (! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false), true && (! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true))), true && (! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false), true && (! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true))), true && (! (bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), true, true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false), true && (! ((bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))))))))), false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7613.2728)))), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true)), bvec2(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true)), bvec2(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true))))))), false), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true)), bvec2(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true)), bvec2(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true))))))), false), true)))), true, true)))), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, true, false)))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))), true))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))), (! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))))), true, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true)))))))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))), ! (! ((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))) && true)), bool(bvec3(! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))), ! (! ((! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))) && true)), true, true))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true))))))))))))), true, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), uvec2(0u, 0u) | (uvec2(workgroup_id, 1u))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ (workgroup_size)), ((~ (workgroup_size))) ^ 0u)) * workgroup_id), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id)), (~ ((_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ (workgroup_size)), 0u ^ ((~ (workgroup_size))))) * workgroup_id))) >> 0u))), ((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id)) / 1u))), uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), (~ (~ (workgroup_size * workgroup_id))) / 1u)), 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), ((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id)) / 1u))), uint(uvec4(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | 0u) * workgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : 1u, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : 1u, uint(_GLF_IDENTITY(uvec2(false ? _GLF_FUZZED(num_workgroup) : 1u, 1u), max(uvec2(false ? _GLF_FUZZED(num_workgroup) : 1u, 1u), uvec2(false ? _GLF_FUZZED(num_workgroup) : 1u, 1u))))), false ? _GLF_FUZZED(num_workgroup) : 1u, false ? _GLF_FUZZED(num_workgroup) : 1u)))), 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id), ((_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) << 0u)), ((~ (workgroup_size))) >> 0u)) * workgroup_id)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id), ((_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) << 0u)), ((~ (workgroup_size))) >> 0u)) * workgroup_id)) / 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id), ((_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) << 0u)), ((~ (workgroup_size))) >> 0u)) * workgroup_id)) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id), ((_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) << 0u)), ((~ (workgroup_size))) >> 0u)) * workgroup_id)) / 1u)))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), ((~ (workgroup_size * workgroup_id))) | _GLF_IDENTITY(((~ (workgroup_size * workgroup_id))), min(_GLF_IDENTITY(((~ (workgroup_size * workgroup_id))), clamp(((~ (workgroup_size * workgroup_id))), ((~ (workgroup_size * workgroup_id))), ((~ (workgroup_size * workgroup_id))))), ((~ (workgroup_size * workgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) >> 0u)))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 0u))))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_size)))) >> 0u) * workgroup_id, ~ (~ (workgroup_size * workgroup_id))), 0u, 1u, 0u)))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) - 0u), _GLF_FUZZED(workgroup_size))) : workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_size)))) >> 0u) * workgroup_id, ~ (~ (workgroup_size * workgroup_id))), 0u, 1u, 0u)))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) - 0u), _GLF_FUZZED(workgroup_size))) : workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), false, true, false))), false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), max(uint(subgroup_id), uint(subgroup_id)))), _GLF_IDENTITY((uint(uint(subgroup_id))) + 0u, ((uint(uint(subgroup_id))) + 0u) | 0u))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(0.0))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.0, 358.429).st) : injectionSwitch)).y))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.0, 358.429).st) : injectionSwitch)).y))))))) && true), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.0, 358.429).st) : injectionSwitch)).y))))))) && true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false || (false))), true, true)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), ! (! (bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))))), true, false))), true), true, true))))))), true, true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1739.7232), _GLF_FUZZED(-7.3)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-666.475)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(mat2x3(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0)))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(mat2x3(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0)))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, sqrt(1.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0), (mat4(injectionSwitch.y, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-774.546) : 0.0)), 0.0, 0.0, 0.0, 0.0)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true), false)))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bool(false || (_GLF_DEAD(false))))), bool(bvec4(false || (_GLF_DEAD(false)), false, true, true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec4(false || (_GLF_DEAD(false)), false, true, true))))))), (! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec4(false || (_GLF_DEAD(false)), false, true, true)))))))) || false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) + determinant(mat3(0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u + (workgroup_base + subgroup_base), min(0u + (workgroup_base + subgroup_base), 0u + (workgroup_base + subgroup_base)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / _GLF_IDENTITY(1u, ~ (~ (1u))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-6910))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (true ? buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))] : _GLF_FUZZED((bvec3(false, true, true) , next_virtual_gid)))), buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))])), 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), bool(bvec4(bool(bvec2(bool(false), true)), true, true, false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), _GLF_IDENTITY((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false || ((bool(bvec3(true, _GLF_IDENTITY(false, false || (false)), true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3((injectionSwitch), _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)))))[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-735.161))), _GLF_FUZZED(-4.8)), vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), bvec2(false, true))).y))))))))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), _GLF_IDENTITY((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), _GLF_IDENTITY((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, false || (false)), true)), bool(bool(bool(bvec3(true, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bvec2(true, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, _GLF_IDENTITY(true, ! (! (true)))))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(true, false, true)), _GLF_IDENTITY((bool(bvec3(true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), _GLF_IDENTITY((bool(bvec3(true, false, true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || _GLF_IDENTITY(_GLF_IDENTITY(((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(((bool(bvec3(true, false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((bool(bvec3(true, false, true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (! (((bool(bvec3(true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))) && true))))))), (bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-736.643, -8.7)))).y)), true, false))) || false)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
}
