#version 460
struct _GLF_struct_14 {
 uvec4 _f0;
 mat2x3 _f1;
 mat4 _f2;
 mat4 _f3;
 mat2x4 _f4;
 mat2x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 vec3 _f1;
 mat2x3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 bvec4 _f1;
 bvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 mat3x2 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 vec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 int _f0;
 uvec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 vec4 _f1;
 float _f2;
 mat4x2 _f3;
 mat4x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_5 {
 bool _f0;
 bvec2 _f1;
 bvec2 _f2;
 vec3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_4 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_11 _f3;
 bvec2 _f4;
 _GLF_struct_15 _f5;
 uint subgroup_size;
 uint _f6;
} ;

struct _GLF_struct_1 {
 bool _f0;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 int _f1;
 int _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat2x4 _f1;
 mat4 _f2;
 mat4x2 _f3;
 _GLF_struct_0 _f4;
 _GLF_struct_1 _f5;
 bvec2 _f6;
 uint subgroup_id;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat2x3 _f1;
 vec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(ivec2(1), mat2x4(1.0), mat4(1.0), mat4x2(1.0), _GLF_struct_0(mat2x4(1.0), 1, 1), _GLF_struct_1(true), bvec2(true), gl_SubgroupID), mat2x3(1.0), vec4(1.0));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_4(uvec2(1u), mat4x2(1.0)), _GLF_struct_7(_GLF_struct_5(true, bvec2(true), bvec2(true), vec3(1.0), bvec4(true)), _GLF_struct_6(mat3x2(1.0), vec4(1.0), 1.0, mat4x2(1.0), mat4x3(1.0), mat3x2(1.0))), _GLF_struct_9(vec2(1.0), 1.0, _GLF_struct_8(1, uvec3(1u), mat4x2(1.0)), mat3(1.0)), _GLF_struct_11(_GLF_struct_10(mat4(1.0), ivec4(1), mat2x3(1.0), bvec3(true), vec2(1.0), mat3x2(1.0))), bvec2(true), _GLF_struct_15(_GLF_struct_12(bvec4(true), bvec4(true), bvec2(true), vec4(1.0)), _GLF_struct_13(vec3(1.0), vec3(1.0), mat2x3(1.0), uvec3(1u)), mat3x2(1.0), _GLF_struct_14(uvec4(1u), mat2x3(1.0), mat4(1.0), mat4(1.0), mat2x4(1.0), mat2x3(1.0), mat3x4(1.0))), gl_SubgroupSize, 1u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_16.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
