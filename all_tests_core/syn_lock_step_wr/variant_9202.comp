#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 bvec4 _f0;
} ;

struct _GLF_struct_29 {
 mat3x2 _f0;
 bvec2 _f1;
 uvec4 _f2;
 bvec3 _f3;
 uvec4 _f4;
 vec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_28 {
 ivec4 _f0;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
 _GLF_struct_30 _f5;
} ;

struct _GLF_struct_25 {
 mat3 _f0;
 bvec3 _f1;
 bvec2 _f2;
 uint _f3;
 mat2x4 _f4;
 mat4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_24 {
 mat2x3 _f0;
 int _f1;
 bool _f2;
 bvec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 ivec4 _f1;
 mat2x4 _f2;
 float _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_32 {
 uint workgroup_id;
 mat4x2 _f0;
 _GLF_struct_26 _f1;
 ivec4 _f2;
 _GLF_struct_31 _f3;
} ;

struct _GLF_struct_22 {
 ivec3 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_21 {
 ivec4 _f0;
} ;

struct _GLF_struct_19 {
 float _f0;
 mat4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
 uvec2 _f1;
 vec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 mat3x4 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_15 {
 float _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_13 {
 uint _f0;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 int _f1;
 bool _f2;
 mat4x2 _f3;
 vec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uint workgroup_size;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 mat3x4 _f1;
 _GLF_struct_16 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 int _f1;
 uvec3 _f2;
 mat3 _f3;
 bvec3 _f4;
 uvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 float _f1;
 mat4x3 _f2;
 mat2x4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 mat2x3 _f1;
 _GLF_struct_9 _f2;
 uint subgroup_id;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat4 _f1;
 int _f2;
 uvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 uvec2 _f1;
 bvec3 _f2;
 bvec4 _f3;
 vec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 float _f1;
 mat4x2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec4 _f1;
 mat3 _f2;
 vec4 _f3;
 mat3x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
 mat2x3 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 _GLF_struct_3 _f1;
 float _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat4x3(1.0), _GLF_struct_3(_GLF_struct_0(mat4(1.0), ivec4(1)), _GLF_struct_1(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.4) : 1.0)))), ivec2(1), mat2x3(1.0), _GLF_struct_2(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(57229, -4482, 52485, 43523)) : ivec4(1))), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + log(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mat3x4(1.0), ivec3(1))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-4333.4837) : 1.0), (false ? _GLF_FUZZED(45.45) : (false ? _GLF_FUZZED(-4333.4837) : 1.0))))), float(_GLF_FUZZED(693.907)), bool(false))), _GLF_struct_5(_GLF_struct_4(mat4(1.0), uvec2(1u), bvec3(true), bvec4(true), vec4(1.0), _GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), clamp(false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u)))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(74268u, (74268u) << 0u), 99234u)) : uvec2(1u), clamp(false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(74268u, 99234u)), min(_GLF_FUZZED(uvec2(74268u, 99234u)), _GLF_IDENTITY(_GLF_FUZZED(uvec2(74268u, 99234u)), (true ? _GLF_FUZZED(uvec2(74268u, 99234u)) : _GLF_FUZZED((+ uvec2(167051u, 95973u))))))) : uvec2(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || ((! (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(74268u, 99234u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(uvec2(74268u, 99234u))), max(~ (_GLF_FUZZED(uvec2(74268u, 99234u))), ~ (_GLF_FUZZED(uvec2(74268u, 99234u))))))) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), clamp(false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u), false ? _GLF_FUZZED(uvec2(74268u, 99234u)) : uvec2(1u))))))), uvec2(1u)))), 1.0, mat4x2(1.0), vec2(1.0)), _GLF_struct_7(_GLF_struct_6(uvec2(1u), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), (true ? mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)) : _GLF_FUZZED(mat4(-6.1, 5.5, 6811.1447, 568.428, -169.764, 85.91, 68.62, 281.681, 4614.4819, 20.90, 363.275, 522.041, 795.299, 7.5, 1.0, -9.3)))) : _GLF_FUZZED(mat4(-666.712, -710.349, -3071.7796, 24.32, 57.29, -14.67, 2.7, 1.5, 602.497, -5.2, -5545.4138, 9.4, 1.5, 8176.5968, -5623.2574, -8587.3177))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(1.0)) - _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4083.7879))), 0.0)), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(629.165, 62.02, -2301.4993, 1.8, -92.67, _GLF_IDENTITY(648.662, (_GLF_IDENTITY(648.662, max(648.662, 648.662))) * 1.0), -7.2, -843.734, 14.18, -4257.7698, 2.2, -87.20, _GLF_IDENTITY(-8516.3380, max(-8516.3380, -8516.3380)), 7.1, 448.411, -2.4)), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(629.165, 62.02, -2301.4993, 1.8, -92.67, _GLF_IDENTITY(648.662, (_GLF_IDENTITY(648.662, max(648.662, 648.662))) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)))), -7.2, -843.734, 14.18, -4257.7698, 2.2, -87.20, _GLF_IDENTITY(-8516.3380, max(-8516.3380, -8516.3380)), 7.1, 448.411, -2.4))), transpose(transpose(transpose(_GLF_FUZZED(mat4(629.165, 62.02, -2301.4993, 1.8, -92.67, _GLF_IDENTITY(648.662, (_GLF_IDENTITY(648.662, max(648.662, 648.662))) * 1.0), -7.2, -843.734, 14.18, -4257.7698, 2.2, -87.20, _GLF_IDENTITY(-8516.3380, max(-8516.3380, -8516.3380)), 7.1, 448.411, -2.4)))))))) : _GLF_IDENTITY(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, abs(0.0), log(sqrt(1.0)), sqrt(0.0))), min(float(mat2(0.0, abs(0.0), log(sqrt(1.0)), sqrt(0.0))), float(mat2(0.0, abs(0.0), log(sqrt(1.0)), sqrt(0.0)))))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(392.812))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) + (_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.5, (false ? _GLF_IDENTITY(_GLF_FUZZED(-80.76), mix(float(_GLF_FUZZED(-80.76)), float(_GLF_FUZZED(((4987.1641) - 9036.2069))), bool(false))) : _GLF_IDENTITY(-4.5, max(-4.5, -4.5)))))), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0))))) * mat4(1.0)))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 0.0, 0.0, sin(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, abs(1.0)))), injectionSwitch.x))))), (true ? float(mat2x3(1.0, 0.0, 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(3.9)))), 1.0)), 1.0, 1.0, 1.0, 1.0)), 1, _GLF_IDENTITY(uvec3(1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) >> uvec3(0u, 0u, 0u))))), uvec4(1u))), _GLF_struct_10(_GLF_struct_8(mat2x3(1.0), 1.0, mat4x3(1.0), mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(36793)))))), mat2x3(1.0), _GLF_struct_9(mat3x2(1.0), 1, _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)), bvec3(true), uvec3(1u), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2(mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(mat2(mat2(1.0)), (false ? _GLF_FUZZED(mat2(14.82, -383.108, -1.8, -3.5)) : mat2(mat2(1.0))))))))), gl_SubgroupID));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 0.0, 0.0, tan(length(0.0))))).y, (injectionSwitch.x > injectionSwitch.y) || false))) && true), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), ! (! (bool(bvec2(! (! (false)), true)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), true && (bool(bool((_GLF_IDENTITY(false, ! (! (false))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_20(_GLF_struct_18(uvec2(1u), uvec2(1u), vec4(1.0), 1u), _GLF_struct_19(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, _GLF_IDENTITY(-33.29, min(-33.29, _GLF_IDENTITY(-33.29, min(-33.29, _GLF_IDENTITY(-33.29, mix(float(-33.29), float(_GLF_FUZZED(7.2)), bool(false))))))), -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))))))) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, _GLF_IDENTITY(9.0, (9.0) - 0.0), 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + log(1.0))) / 1.0), 1.0 * (1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0)), ((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))), ((false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false))))))) * mat4(1.0)))))) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) * mat4(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, _GLF_IDENTITY(-33.29, min(-33.29, _GLF_IDENTITY(-33.29, min(-33.29, _GLF_IDENTITY(-33.29, mix(float(-33.29), float(_GLF_FUZZED(7.2)), bool(false))))))), -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))))))) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, _GLF_IDENTITY(9.0, (9.0) - 0.0), 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + log(1.0))) / 1.0), 1.0 * (1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0)), ((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))), ((false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false))))))) * mat4(1.0)))))) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) * mat4(1.0))), (false ? _GLF_FUZZED(mat4(-38.61, -1562.7324, 3.5, 8.6, 558.997, -8615.6999, -399.398, -80.71, -6.8, 511.898, 6.0, -7.7, 7.1, -6.2, -1.2, 8554.8064)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, _GLF_IDENTITY(-33.29, min(-33.29, _GLF_IDENTITY(-33.29, min(-33.29, _GLF_IDENTITY(-33.29, mix(float(-33.29), float(_GLF_FUZZED(7.2)), bool(false))))))), -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), clamp(_GLF_IDENTITY(1.0 * (1.0), max(_GLF_IDENTITY(1.0 * (1.0), (1.0 * (1.0)) * 1.0), _GLF_IDENTITY(1.0 * (1.0), 1.0 * (1.0 * (1.0))))), 1.0 * (1.0), 1.0 * (1.0))))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, _GLF_IDENTITY(89.32, min(89.32, 89.32)), -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))))))) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))))), (false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, _GLF_IDENTITY(9.0, (9.0) - 0.0), 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + log(1.0))) / 1.0), 1.0 * (1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, _GLF_IDENTITY(-9.8, clamp(-9.8, -9.8, -9.8)), -3.0)), ((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, -1.2, -404.249, 356.699, -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))), ((false ? _GLF_FUZZED((9883.7669 + mat4(-604.507, _GLF_IDENTITY(-1.2, mix(float(-1.2), float(_GLF_FUZZED(-608.835)), bool(false))), -404.249, _GLF_IDENTITY(356.699, 0.0 + (356.699)), -370.181, 88.54, -70.66, 7142.7257, 8.2, 9.0, 6.4, -33.29, -53.27, 89.32, -9.8, -3.0))) : mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-8.8)), bool(false))))))) * mat4(1.0)))))) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) * mat4(1.0)))))) * mat4(1.0)), ivec4(1))), _GLF_struct_21(ivec4(1)), mat3x4(1.0), _GLF_struct_22(ivec3(1), gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.5, -2727.7131)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(! (false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(38.74, _GLF_IDENTITY(-3642.5606, max(-3642.5606, -3642.5606)))) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / exp(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))) && true)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_14(_GLF_struct_12(vec3(1.0), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))))), (_GLF_IDENTITY(0, min(0, 0))) >> (-32758 & 0)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(22661), min(_GLF_IDENTITY(_GLF_FUZZED(22661), min(_GLF_FUZZED(22661), _GLF_FUZZED(22661))), _GLF_FUZZED(22661))))), (1) - 0))), 0 ^ (clamp(~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(22661), min(_GLF_IDENTITY(_GLF_FUZZED(22661), min(_GLF_FUZZED(22661), _GLF_FUZZED(22661))), _GLF_FUZZED(22661))))), (1) - 0)))))))), true, mat4x2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), vec3(1.0), vec4(1.0)), gl_WorkGroupSize.x, _GLF_struct_13(1u)), mat3x4(1.0), _GLF_struct_16(uvec3(1u), _GLF_struct_15(1.0, mat3x4(1.0))), _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false)), _GLF_IDENTITY(true, ! (! (true))), true)), false || (bool(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false)), true, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0))), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0)))))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0))), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.1)))) - 0.0), exp(0.0))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(73.30)))), float(_GLF_FUZZED(-4858.4960)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(gl_WorkGroupID.x, mat4x2(1.0), _GLF_struct_26(_GLF_struct_24(mat2x3(1.0), 1, true, bvec3(true), ivec2(1)), ivec4(1), mat2x4(1.0), 1.0, _GLF_struct_25(mat3(1.0), bvec3(true), bvec2(true), 1u, mat2x4(1.0), mat4(1.0), mat4(1.0))), ivec4(1), _GLF_struct_31(_GLF_struct_27(mat2x3(1.0), ivec2(1), mat4x2(1.0), uvec3(1u)), mat3x4(1.0), ivec3(1), _GLF_struct_28(ivec4(1)), _GLF_struct_29(mat3x2(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false)))), true, false)))), uvec4(1u), bvec3(true), uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u)))))), vec4(1.0), mat4(1.0)), _GLF_struct_30(bvec4(true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, true)), false || (bool(bvec2((false) || false, _GLF_IDENTITY(true, (true) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(bool(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec4(bvec2(bool(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false, true)))))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_17._f0.workgroup_size * _GLF_struct_replacement_32.workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_struct_replacement_17._f0.workgroup_size * _GLF_struct_replacement_32.workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), cos(0.0), 0.0, 1.0), mat2(_GLF_IDENTITY(1.0, float(mat3(1.0, abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * (mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.4))) : _GLF_FUZZED(3.1)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.4))) : _GLF_FUZZED(3.1)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.4))) : _GLF_FUZZED(3.1)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), bool(true))) : _GLF_FUZZED(487.626))), cos(0.0), 0.0, 1.0), mat2(1.0) * (mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0), mat2(1.0) * (mat3x2((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0))))), clamp(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0), mat2(1.0) * (mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7563.7933)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0), mat2(1.0) * (mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0)))), vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), 0.0, 1.0), mat2(1.0) * (mat3x2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.0, 8025.8469)) : injectionSwitch))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0))))), clamp(vec2(_GLF_IDENTITY(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0)))))), vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0), mat2(1.0) * (mat3x2((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), max(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), (false ? _GLF_FUZZED((mat4x2(-2.4, 49.96, 8385.4438, -88.06, 99.34, -8192.8938, -2.7, 1.8) * vec4(2.0, -2729.2452, -77.59, 94.74))) : _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), 0.0, 1.0))))))), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), vec2(mat3x2(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 1.0, 1.0))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(60.41)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && _GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))) || false))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && _GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && _GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && _GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), ! (! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && _GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED((-519.301 / 342.473))), float(log(1.0)), bool(true))), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))), clamp(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), mix(float(_GLF_FUZZED((-519.301 / 342.473))), float(log(1.0)), _GLF_IDENTITY(bool(true), (bool(true)) || false))), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))), clamp(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.6)), bool(false)))), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(1.0) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (mat3(injectionSwitch, abs(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0))))))))).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))), true, true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_11._f5.subgroup_id, clamp(_GLF_struct_replacement_11._f5.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_11._f5.subgroup_id, max(_GLF_struct_replacement_11._f5.subgroup_id, _GLF_struct_replacement_11._f5.subgroup_id)), _GLF_struct_replacement_11._f5.subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_11._f5.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + _GLF_struct_replacement_11._f5.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_struct_replacement_11._f5.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_struct_replacement_11._f5.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + _GLF_struct_replacement_11._f5.subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | (0u)), 0u))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(int(6.7)) : 1, int(ivec2(false ? _GLF_FUZZED(int(6.7)) : 1, 1)))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), (true ? vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(4.4, 0.5))))).y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(701.710), _GLF_FUZZED(3499.5486)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
