#version 460
struct _GLF_struct_9 {
 mat2x4 _f0;
 mat2 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_8 {
 uint num_workgroup;
 mat2x4 _f0;
} ;

struct _GLF_struct_6 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 float _f0;
 uvec2 _f1;
 vec3 _f2;
 bvec3 _f3;
 mat2x3 _f4;
 uvec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 float _f1;
} ;

struct _GLF_struct_7 {
 int _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 vec2 _f3;
 ivec2 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 vec2 _f1;
 uint _f2;
 _GLF_struct_8 _f3;
 ivec3 _f4;
 ivec3 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 bvec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_7(1, _GLF_struct_4(mat2x3(1.0), 1.0), _GLF_struct_5(1.0, uvec2(1u), vec3(1.0), bvec3(true), mat2x3(1.0), uvec3(1u), vec3(1.0)), vec2(1.0), ivec2(1), _GLF_struct_6(1u)), vec2(1.0), 1u, _GLF_struct_8(gl_NumWorkGroups.x, mat2x4(1.0)), ivec3(1), ivec3(1), _GLF_struct_10(_GLF_struct_9(mat2x4(1.0), mat2(1.0), mat2x3(1.0), uvec4(1u), bvec3(true)), uvec3(1u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(mat2x3(1.0), bvec2(true), mat2x3(1.0)), _GLF_struct_1(uvec2(1u))), workgroup_base + subgroup_base + subgroup_local_id);
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 2);
 subgroupBarrier();
 atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], read, 4, 64, 4);
}
