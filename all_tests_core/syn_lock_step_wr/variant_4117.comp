#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(false, (false) || false) || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-243.823, -3.8)) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))[0], _GLF_FUZZED(-157.788)), vec2(_GLF_FUZZED(_GLF_IDENTITY(3.3, clamp(_GLF_IDENTITY(3.3, sqrt(1.0) * (3.3)), 3.3, 3.3))), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(4.4)), bool(false))) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)) + (injectionSwitch)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(2.0) : (injectionSwitch)[0])), _GLF_FUZZED(1.1)), vec2(_GLF_FUZZED((1.9)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) ^ 0u)))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), (true ? _GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) : _GLF_FUZZED(subgroup_local_id))))))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true, false)))))))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ _GLF_IDENTITY((1u ^ 1u), _GLF_IDENTITY(max(_GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(1u, 1u * (1u)) ^ 1u)), min(max(_GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(1u, 1u * (1u)) ^ 1u)), max(_GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(1u, 1u * (1u)) ^ 1u))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec2(4, 1))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), vec2(mat3x2(vec2(mat3x4(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), mix(vec2(_GLF_FUZZED(-62.88), _GLF_FUZZED(-9.7)), vec2((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))[0], (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))))).y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-389.329) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-296.905)), float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(true))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(0.2) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-65.76)), vec2(_GLF_FUZZED(-96.71), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[1]), bvec2(false, true))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-85.78, -5387.1227)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.4), float(mat3x4(_GLF_FUZZED(7.4), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-38.98)), bvec2(true, false)))))), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))), (clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0)))) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-65.76)), vec2(_GLF_FUZZED(-96.71), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[1]), bvec2(false, true))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-85.78, -5387.1227)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.4), float(mat3x4(_GLF_FUZZED(7.4), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-38.98)), bvec2(true, false)))))), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))), (clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0)))) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-65.76)), vec2(_GLF_FUZZED(-96.71), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[1]), bvec2(false, true))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-85.78, -5387.1227)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.4), float(mat3x4(_GLF_FUZZED(7.4), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-38.98)), bvec2(true, false)))))), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))), (clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0)))) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-65.76)), vec2(_GLF_FUZZED(-96.71), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[1]), bvec2(false, true))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-85.78, -5387.1227)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.4), float(mat3x4(_GLF_FUZZED(7.4), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-38.98)), bvec2(true, false)))))), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))), (clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0)))) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-65.76)), vec2(_GLF_FUZZED(-96.71), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[1]), bvec2(false, true))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-85.78, -5387.1227)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.4), float(mat3x4(_GLF_FUZZED(7.4), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-38.98)), bvec2(true, false)))))), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))), (clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0)))) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-65.76)), vec2(_GLF_FUZZED(-96.71), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))[1]), bvec2(false, true))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-85.78, -5387.1227)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.4), float(mat3x4(_GLF_FUZZED(7.4), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-38.98)), bvec2(true, false)))))), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), min(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0))), (clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0)), vec2(vec3(injectionSwitch, 1.0)))) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (vec2(vec3(injectionSwitch, 1.0))) * mat2(1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0))))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (vec2(vec3(injectionSwitch, 1.0))) * mat2(1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0))))))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, 0.0)), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((2.0)), _GLF_FUZZED(float(true))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(mat2x3((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((2.0)), _GLF_FUZZED(float(true))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), mat2(1.0) * (vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-838.160)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))))))), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(-4.8)), bool(false)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(vec2(mat3x4(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(sqrt(0.0)), cos(0.0))), vec2(vec4(vec2(mat3x4(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(sqrt(0.0)), cos(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(vec2(mat3x4(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(sqrt(0.0)), cos(0.0))), vec2(vec4(vec2(mat3x4(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(sqrt(0.0)), cos(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), (_GLF_IDENTITY(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(vec2(mat3x4(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(sqrt(0.0)), cos(0.0))), vec2(vec4(vec2(mat3x4(clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(sqrt(0.0)), cos(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))))) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), ((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), clamp((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))))))))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2(_GLF_FUZZED(-9975.6712), _GLF_FUZZED(vec3(-3557.6717).z)), vec2((vec2(vec3(injectionSwitch, 1.0)))[0], (vec2(vec3(injectionSwitch, 1.0)))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mat3(1.0) * (vec3(injectionSwitch, 1.0)))), vec2(vec3(injectionSwitch, 1.0))))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED((- -4120.7519)), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0)), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))).y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-296.905)), float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))).y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-83.08, 3254.7570)))) : _GLF_FUZZED(vec2(0.2, 9.3)))).x > injectionSwitch.y)), true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))))))))))), false || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))) && true))))) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3280.6519)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) ^ 0u) | (~ (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u | (~ (virtual_gid))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))))))], _GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, (_GLF_IDENTITY(read, uint(uvec2(read, 0u)))) | (read)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
