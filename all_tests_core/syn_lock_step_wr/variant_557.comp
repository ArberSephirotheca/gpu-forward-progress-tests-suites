#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 ivec4 _f1;
 bvec3 _f2;
 float _f3;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 mat2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 ivec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 uvec3 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 vec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 bvec4 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 uint subgroup_size;
 _GLF_struct_9 _f1;
 ivec4 _f2;
 _GLF_struct_14 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 float _f1;
 ivec4 _f2;
 int _f3;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 bvec2 _f1;
 uint _f2;
 ivec3 _f3;
 vec4 _f4;
 uvec3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 mat3 _f1;
 mat4x2 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 _GLF_struct_4 _f1;
 uint num_workgroup;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], mix(float(_GLF_FUZZED(9.1)), float((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0]), bool(true))), _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED((- 2790.9933)), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true)))) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-5576.4599))) / _GLF_IDENTITY(1.0, (1.0) + 0.0)), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(589.084)))), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], mix(float(_GLF_FUZZED(9.1)), float((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0]), bool(true))), _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED((- 2790.9933)), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true)))) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-5576.4599))) / _GLF_IDENTITY(1.0, (1.0) + 0.0)), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(589.084)))), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))))), (clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], mix(float(_GLF_FUZZED(9.1)), float((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0]), bool(true))), _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED((- 2790.9933)), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true)))) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-5576.4599))) / _GLF_IDENTITY(1.0, (1.0) + 0.0)), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(589.084)))), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], mix(float(_GLF_FUZZED(9.1)), float((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0]), bool(true))), _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED((- 2790.9933)), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true)))) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-5576.4599))) / _GLF_IDENTITY(1.0, (1.0) + 0.0)), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(589.084)))), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))))))).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))))).x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))), mix(vec2((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))))[0], _GLF_FUZZED((+ float(true)))), vec2(_GLF_FUZZED(-1.9), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))))[1]), bvec2(false, true)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0)))), max(vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0)))), vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0)))))))) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), (vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9))) / vec2(1.0, 1.0)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))))).x > injectionSwitch.y)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (false ? _GLF_FUZZED(683.887) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-118.313)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), (tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + (injectionSwitch)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch), vec2(vec2(_GLF_IDENTITY(tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch), vec2(mat2x4(tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))))).x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), min(tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (0.0) / 1.0), 0.0)) + (injectionSwitch))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (0.0) / 1.0), 0.0)) + (injectionSwitch))) : _GLF_FUZZED(vec2(-83.83, -6.8))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(36.01, mix(float(36.01), float(_GLF_FUZZED(-304.217)), bool(false)))), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))), mix(vec2((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))))[0], _GLF_FUZZED((+ float(true)))), vec2(_GLF_FUZZED(-1.9), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(12.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 1.0, 1.0)))), bvec2(true, true))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9)), bvec2(false, _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch))))[1]), bvec2(false, true)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))))), 1.0)), vec2(1.0, 1.0) * (vec2(vec3(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))))), 1.0)))))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) * vec2(1.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.1), min(_GLF_FUZZED(-5.1), _GLF_FUZZED(-5.1))), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(932.823) : 0.0))) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(37039))), bool(false))), 0.0, 0.0, sin(tan(0.0)))), max(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0))), transpose(transpose(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-5.1), _GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), min((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), (true ? (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) : _GLF_FUZZED(injectionSwitch)))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec3(bvec3(bvec2(false, true), false)))))))), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(tan(0.0)))))))) + (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) * 1.0) / 1.0), 0.0)) + _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) + (injectionSwitch)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(36.01, max(36.01, 36.01))), _GLF_FUZZED(-4.9)), (vec2(_GLF_FUZZED(36.01), _GLF_FUZZED(-4.9))) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0)), 1.0)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-11.46) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), (0.0) / 1.0), 0.0)) + (injectionSwitch)))))).x > injectionSwitch.y)) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), true && ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))), (injectionSwitch.x < injectionSwitch.y)), false))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), clamp(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y))))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat3x4(1.0), gl_SubgroupSize, _GLF_struct_9(mat3(1.0), bvec4(true), _GLF_struct_7(mat2x4(1.0), mat2x3(1.0), uvec4(1u), bvec2(true)), _GLF_struct_8(vec2(1.0), vec2(1.0), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))) * mat4(1.0)))), ivec4(1), _GLF_struct_14(_GLF_struct_10(vec4(1.0), ivec4(1), mat3(1.0)), _GLF_struct_11(mat4x3(1.0), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-158.537) : 1.0))), vec3(1.0)), uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), _GLF_struct_12(mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0)))), 1.0))), ivec4(1), bvec3(true), 1.0), _GLF_struct_13(ivec4(1), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(false ? _GLF_FUZZED(55981) : _GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))), max(~ (~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))), ~ (~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0)))))), (false ? _GLF_FUZZED(55981) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) << 0), ~ (~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))))) + 0))))))), mat2x3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(uvec2(1u), _GLF_struct_4(_GLF_struct_1(1u, bvec2(true), 1u, ivec3(1), vec4(1.0), uvec3(1u), ivec4(1)), mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat4x2(1.0), _GLF_struct_2(mat3x2(1.0), _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))), _GLF_struct_3(mat3x4(1.0)), uvec3(1u)), gl_NumWorkGroups.x, _GLF_struct_5(mat4x3(1.0), 1.0, ivec4(1), 1));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y)))))))).y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(-3109.8104, vec2(-75.06, -7405.3154))))), mix(vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.4)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), 1.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), 1.0))).x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), 1.0))).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) || false))) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)))), true, true)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((false) || false))))), (_GLF_IDENTITY(false, (false) || false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, false))) || false)))), true, true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7395.6015))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), 1.0, 0.0, 0.0, abs(0.0)), (false ? _GLF_FUZZED(mat3(5.9, 2.3, 5.9, -61.73, -2.4, -5.4, 4.5, 4834.6199, -3.3)) : mat3(injectionSwitch.x, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, abs(0.0)))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(-5878.1659)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch * distance(vec4(7.7, 3.5, -62.85, 962.596), vec4(-0.2, -830.933, 0.7, -4719.3590)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-5255.8407 + -1.9))), vec2(_GLF_FUZZED(-46.56), (injectionSwitch)[1]), bvec2(false, true))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))), true, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0)), (true ? float(mat2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(76.34)))), ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))), true, false))))), true, true)))))))) || false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6713.5248, -5754.8893)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), ! (! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y)))), true && (! (((! (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y)))), true && (! (((! (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))))), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y)))), true && (! (((! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y)))))))) && true)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((! (((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((! (((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), true && ((! (((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), true, false, false)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y)))), true && (! (((! (injectionSwitch.x > injectionSwitch.y)))))))) && true)))) || false))))))), false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), true, false, false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(false, false, false)))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_15.subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(bool(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(mat4(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9722.0718))), 0.0, 1.0, 1.0, 1.0, 0.0)))))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(floor(-5810.4287))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (bool(injectionSwitch.x > injectionSwitch.y))), (! (! (bool(injectionSwitch.x > injectionSwitch.y)))) && true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (! (false)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1199.2636)), bvec2(true, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1199.2636)), bvec2(true, false))).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(ivec3(1), workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_15.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_15.subgroup_size, (true ? _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_15.subgroup_size, uint(uint((subgroup_local_id + 1) % _GLF_struct_replacement_15.subgroup_size))) : _GLF_FUZZED(workgroup_base)))) ^ 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), false, false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), false, false, false)))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), false, false, false))))) && true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), false, false, false)))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))), false, false, false))))) && true), true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true, true)))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true, true)))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true, true))))) || false), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true, true)))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true, true))))) || false), false, true, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)), (float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(80.31) : abs(0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), 1.0)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)), (float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(80.31) : abs(0.0)))) / 1.0), min(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(80.31) : abs(0.0)))) / 1.0), _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(80.31) : abs(0.0)))) / 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3914.1608) : 0.0)), 0.0))) / 1.0)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)), (float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(80.31) : abs(0.0)))) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0))) / 1.0)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(max(injectionSwitch[0], injectionSwitch[0]), min(max(injectionSwitch[0], injectionSwitch[0]), max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.0)), bool(false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | _GLF_IDENTITY((4), ~ (~ ((4)))), 1, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(-87312))), 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))), int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))))))) * 1, clamp((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))), int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))))))) * 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))), int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))))))) * 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))), int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))))))) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))), int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))))))) * 1)))) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), int(ivec3((4) | (4), 1, 0)))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), bool(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 9.3))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), false))))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), bool(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))) || false))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
