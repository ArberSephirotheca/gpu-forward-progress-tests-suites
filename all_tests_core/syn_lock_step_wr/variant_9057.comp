#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! _GLF_IDENTITY(((false)), false || (((false)))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.4) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(6301.8445)) : injectionSwitch.y)))), injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false)), true && (bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)), (bool(bvec4(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(-6055.5395)))), 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, determinant(mat2(0.0, sqrt(1.0), 0.0, 0.0))))) < injectionSwitch.y)), true, true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))), true, true)), true), bvec2(bvec3(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true), false)))))), true && ((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))), true, true)), true), bvec2(bvec3(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true), false))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(-6055.5395)))), 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, determinant(mat2(0.0, sqrt(1.0), 0.0, 0.0))))) < injectionSwitch.y)), true, true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), true), bvec2(bvec3(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true), false)))))), true && ((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(181.497)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))))), true, true)), true), bvec2(bvec3(bvec2(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true), false))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(143.990, 959.124).y)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), (gl_WorkGroupSize))), (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) | (gl_WorkGroupSize)), gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(14384u, 169272u, 148430u))), (false ? _GLF_FUZZED(uvec3(61301u, 41903u, 11100u)) : (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(14384u, 169272u, 148430u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupSize), min(uvec3(0u, 0u, 0u) | (gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(uaddCarry(subgroup_id, subgroup_size, num_workgroup))) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED((mat3x2(5.1, -850.848, -101.887, -4272.1487, 8769.5287, 495.406) , _GLF_IDENTITY(uvec3(180110u, 155244u, 116552u), (true ? uvec3(180110u, 155244u, 116552u) : _GLF_FUZZED(uvec3(106279u, 111703u, 198948u)))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(14384u, 169272u, 148430u))), (false ? _GLF_FUZZED(uvec3(61301u, 41903u, 11100u)) : (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(14384u, 169272u, 148430u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) + 0u)))) / 1u), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), (uvec3(0u)) - uvec3(0u, 0u, 0u))))) | (gl_WorkGroupSize), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), min(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) >> 0)], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(uaddCarry(subgroup_id, subgroup_size, num_workgroup))) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(uaddCarry(subgroup_id, subgroup_size, num_workgroup))) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(uaddCarry(subgroup_id, subgroup_size, num_workgroup))) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(uvec3(uvec3(7u)))))))) + uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED((mat3x2(5.1, -850.848, -101.887, -4272.1487, 8769.5287, 495.406) , _GLF_IDENTITY(uvec3(180110u, 155244u, _GLF_IDENTITY(116552u, (_GLF_IDENTITY(116552u, ~ (~ (116552u)))) | 0u)), (true ? uvec3(180110u, 155244u, 116552u) : _GLF_FUZZED(uvec3(106279u, 111703u, 198948u)))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))) >> uvec3(0u, 0u, 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (gl_WorkGroupSize))))))).x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(0u, (0u) ^ 0u))) * 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(false, (false) && true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(false, (false) && true)) && true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true), bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true), true, true))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true), bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true), true, true)))))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true)))))), (false) && true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (false) && true)), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true))))), ! (! (false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (false) && true)), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_IDENTITY(false, ! (! (false))))), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true)))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), bool(bool(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, (true) || false)), true, true)), true && (bool(bvec3(! (_GLF_IDENTITY(true, (true) || false)), true, true))))))), ! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), true, false))) && true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bool(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, ! (! (((true)) && true))))), ! (! (! (_GLF_IDENTITY((true), ((true)) && true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)) && true, ! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (false) && true)) && true, ! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-898.647)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true, ! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))))))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (false) && true)), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true)))))))))), false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), bool(bool(_GLF_IDENTITY((false) && true, true && ((false) && true)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)), (_GLF_IDENTITY(false, (false) && true)) && true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)), false), bvec2(bvec3(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(true, bool(bool(true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(true, bool(bool(true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(true, bool(bool(true))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(true, bool(bool(true))))), false, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(true, bool(bool(true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))), false), true)))))))))), false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), clamp(uint(uvec3(workgroup_base, 0u, 0u)), uint(uvec3(workgroup_base, 0u, 0u)), uint(uvec3(workgroup_base, 0u, 0u))))))), min(workgroup_base, workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, false))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, (_GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid)))))) << 0u) ^ 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid))))), max(~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid))))), ~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid)))))))) << 0u) ^ 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid))))), max(~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid))))), ~ (~ (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : (virtual_gid)))))))) << 0u) ^ 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / ((1u | 1u) | 0u)))], (false ? _GLF_FUZZED(subgroup_base) : buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u) << 0u, (true ? (virtual_gid) << 0u : _GLF_FUZZED(subgroup_id)))) >> 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid])), (buf[virtual_gid]) * (1u ^ _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY(0u, (0u) / 1u)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, true)), (bool(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, true))) || false))) || false))))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u))), (buf[virtual_gid]) * (1u ^ 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((0.2 * 5.3)), _GLF_FUZZED(75.22)), bvec2(false, false))).y))), ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid])), (buf[virtual_gid]) * (1u ^ _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false)) ? _GLF_FUZZED(virtual_gid) : buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), clamp(virtual_gid, virtual_gid, virtual_gid)))) << 0u)))])), (buf[virtual_gid]) * (1u ^ 0u))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid], ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]))))), (buf[virtual_gid]) * (1u ^ 0u))) - 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) + 0u) * (1u ^ 0u))) - 0u))) / 1u, ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]), 0u ^ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]))), uint(uvec3(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]), 0u ^ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]))), uint(uvec3(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid]), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) / 1u))))) * 1u)), (buf[virtual_gid]) * (1u ^ 0u))) - 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(virtual_gid) : buf[virtual_gid])), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)]) >> 0u)) / 1u)) * (1u ^ 0u))) - 0u))) / 1u) | 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(11408) : 0))) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(84345) : 0)) ^ (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(0, (0) >> 0) + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(84345) : 0)) ^ (_GLF_IDENTITY(64, max(64, 64)))), min(_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(84345) : 0)) ^ (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(84345) : 0)) ^ (_GLF_IDENTITY(64, max(64, 64)))))))), int(int(_GLF_IDENTITY(64, 0 ^ (64))))))), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), (int(ivec3(2, 1, 0))) | (int(ivec3(2, 1, 0)))))) ^ 0), (_GLF_IDENTITY(2, (2) ^ (0 ^ 0))) << 0))), min(~ (~ (_GLF_IDENTITY(2, (2) << 0))), ~ (~ (_GLF_IDENTITY(2, (2) << 0)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), vec2(_GLF_FUZZED(-22.49), _GLF_FUZZED(0.8)), bvec2(false, false))).x, abs(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), vec2(_GLF_FUZZED(-22.49), _GLF_FUZZED(0.8)), bvec2(false, false))).x)) > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-870.442), (vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))[1]), bvec2(false, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(_GLF_IDENTITY(mat4x3(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), vec3(injectionSwitch, 1.0))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true, false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, true && (false)))))))))), bool(bool(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, false))))))), true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, true && (false)))))))))), bool(bool(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, false))))))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, true && (false)))))))))), bool(bool(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, false))))))), true, false))))), false))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), false)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)))))))), bool(bool(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (true))) && true), true, false))))))), true, false)))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))))), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(6.2), max(_GLF_FUZZED(6.2), _GLF_FUZZED(6.2)))), mix(float(_GLF_FUZZED(-35.23)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(6.2), max(_GLF_FUZZED(6.2), _GLF_FUZZED(6.2)))), mix(float(_GLF_FUZZED(-8.2)), float(float(_GLF_IDENTITY(_GLF_FUZZED(6.2), max(_GLF_FUZZED(6.2), _GLF_FUZZED(6.2))))), bool(true)))), bool(true))), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0)))).x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true, true, false)))))))), bool(bool(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bool(! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true, false))))))), true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x2(min(injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.6) : injectionSwitch.y)))))), false || (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.6) : injectionSwitch.y))))))))))), true, false)))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(-600.298)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(191.911)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-19.13), mix(float(_GLF_FUZZED(639.361)), float(_GLF_FUZZED(-19.13)), bool(true)))), bool(false))), mix(float(_GLF_FUZZED(191.911)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(-600.298)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y)), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(191.911)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-19.13)), bool(false))), mix(float(_GLF_FUZZED(191.911)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1308.8141), _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1308.8141), _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
