#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) && true) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_IDENTITY(false, false || (false))))) || false)) && true)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), uint(uvec4((workgroup_size), (1u | 1u), (1u | 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 0u)) + 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 0u), clamp(uvec3(subgroup_id * subgroup_size, 0u, 0u), uvec3(subgroup_id * subgroup_size, 0u, 0u), uvec3(subgroup_id * subgroup_size, 0u, 0u))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), subgroup_id * subgroup_size))))) << 0u)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | (subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u, 1u)))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (_GLF_IDENTITY(uint(subgroup_size), 0u ^ (uint(subgroup_size))))))), clamp(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), min(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size))), uint(subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(_GLF_IDENTITY(uint(subgroup_size), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), uint(uvec4(uint(subgroup_size), 1u, 0u, 1u))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uint(subgroup_size))), (~ (uint(uint(subgroup_size)))) / 1u), uint(uvec2(_GLF_IDENTITY(~ (uint(uint(subgroup_size))), min(~ (_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(uint(uint(subgroup_size)), uint(uint(subgroup_size)), uint(uint(subgroup_size)))), _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) - 0u), uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))), uint(uint(subgroup_size))), (true ? clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(uint(uint(subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) - 0u), subgroup_size, subgroup_size)))), uint(uint(subgroup_size)))), _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) - 0u), uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))), min(uint(subgroup_size), uint(subgroup_size)))))), uint(uint(subgroup_size))) : _GLF_FUZZED(packHalf2x16(vec2(1173.9823, -492.776))))))), ~ (uint(uint(subgroup_size))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)).x, injectionSwitch.x)), injectionSwitch.x))))))))))) >> 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY(max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), min(_GLF_IDENTITY(max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) >> 0u), _GLF_IDENTITY(max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (false ? _GLF_FUZZED(num_workgroup) : max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))))))), 1u * (0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(uint(uint(subgroup_size)), 0u | (uint(uint(subgroup_size))))))))))), 0u ^ ((_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY(max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), min(_GLF_IDENTITY(max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) >> 0u), _GLF_IDENTITY(max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (false ? _GLF_FUZZED(num_workgroup) : max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))))))), 1u * (0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(uint(uint(subgroup_size)), 0u | (uint(uint(subgroup_size))))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), 0u | (uint(uint(subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), uint(uint((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), (true ? uint(uint(subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), min((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) - 0u), 1u * (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uint(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))), max(~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 1u * (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (~ ((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))) - 0u)) + 0u)))), ~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) | 0u), _GLF_IDENTITY(1u * (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(24967u) : subgroup_size))) | 0u)))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))), (clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(24967u) : subgroup_size))) | 0u)))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))) | (clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(24967u) : subgroup_size))) | 0u)))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), ((0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) << 0u) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), ((0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) << 0u) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))) ^ 0u))) | (1u * (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(uint(subgroup_size)), 0u), (uvec2(0u, 0u) | uvec2(0u, 0u)) ^ (uvec2(uint(uint(subgroup_size)), 0u)))), min(uint(_GLF_IDENTITY(uvec2(uint(uint(subgroup_size)), 0u), (uvec2(0u, 0u) | uvec2(0u, 0u)) ^ (uvec2(uint(uint(subgroup_size)), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(uint(subgroup_size)), 0u), (uvec2(0u, 0u) | uvec2(0u, 0u)) ^ (uvec2(uint(uint(subgroup_size)), 0u))))))))), 1u * (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))), max((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), 1u * (0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), min((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 1u * (_GLF_IDENTITY(0u, (0u) + 0u) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(subgroup_size), uint(_GLF_IDENTITY(uvec2(uint(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec2(uint(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uint(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uint(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))))))))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u, 1u)))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (uint(subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), min(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size))), uint(subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(uvec4(uint(subgroup_size), 1u, 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(uvec4(uint(subgroup_size), 1u, 0u, 1u)))), max((_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(uvec4(uint(subgroup_size), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(uvec4(uint(subgroup_size), 1u, 0u, 1u))))))) | 0u)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_size))), uint(uvec2(_GLF_IDENTITY(~ (uint(uint(subgroup_size))), min(~ (_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(uint(uint(subgroup_size)), uint(uint(subgroup_size)), uint(uint(subgroup_size)))), _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) - 0u), uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))), uint(uint(subgroup_size))))), ~ (uint(uint(subgroup_size))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))))))) >> 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))))))))), (0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), ~ (~ (subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))))))))))))) << 0u), 1u * (0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(_GLF_IDENTITY(uint(subgroup_size), min(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED(virtual_gid))), uint(subgroup_size))))) | (_GLF_IDENTITY(uint(uint(subgroup_size)), 0u | (uint(uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u, 0u)))))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), 0u | (uint(uint(subgroup_size)))))), ((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) - 0u), 1u * (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uint(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))), max(~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), subgroup_size, subgroup_size)), uint(uint(subgroup_size)))), 1u * (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) + 0u)))), ~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), min(_GLF_IDENTITY(uint(uint(subgroup_size)), 0u + (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) - 0u))), uint(uint(subgroup_size)))))), ((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) | 0u), _GLF_IDENTITY(1u * (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) | (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), (1u * (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), 0u + (_GLF_IDENTITY(uint(subgroup_size), 0u | (uint(subgroup_size)))))))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) | (1u * (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) - (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))))))) * 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size))))))), (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) >> 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u) * (0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))), max((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))), 1u * (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 1u * (0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), clamp(uint(subgroup_size), uint(subgroup_size), uint(subgroup_size)))))))))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))))), (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(48.92)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) | (_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) / 1)) | (_GLF_IDENTITY(0, (0) / 1))) | ((_GLF_IDENTITY(0, (0) / 1)) | (_GLF_IDENTITY(0, (0) / 1))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(998.388)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), true && (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), true && (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))))), false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.y : _GLF_FUZZED(-6597.3120)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sin(0.0))))) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-0.8)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false, false), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(false, true && (false))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(false, true && (false))))), false)))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}
