#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(81109u, 93371u, 163131u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))), (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(81109u, 93371u, 163131u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u & (137985u * 41226u)))), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))))) >> uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))), min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (mat3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (subgroup_id * subgroup_size) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, false)))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) / 1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) / 1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.1)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(454.056) : float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bool(false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0)))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec2(1, 1)))), 0u ^ (uint(1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(1))) | (0u ^ (uint(1))), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (0u ^ (uint(1))) | (0u ^ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), _GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0))))))) : _GLF_FUZZED(clamp(workgroup_size, next_virtual_gid, subgroup_local_id)))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u ^ (uint(1))))), 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))), (_GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), uint(uint(_GLF_IDENTITY(0u ^ (uint(1)), 0u ^ (_GLF_IDENTITY(0u ^ (uint(1)), max(0u ^ (uint(1)), 0u ^ (uint(1)))))))))) | (0u ^ (uint(1))))) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (uint(1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-71700 - 44743)) : _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))), 0u ^ (uint(1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) >> 0u), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_size) : uint(1)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))), (false ? _GLF_FUZZED(workgroup_base) : (0u ^ (uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))))) | (0u ^ (uint(1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), clamp(0u ^ (uint(1)), 0u ^ (uint(1)), _GLF_IDENTITY(0u ^ (uint(1)), (false ? _GLF_FUZZED(workgroup_id) : 0u ^ (uint(1))))))) << (189944u & 0u))) | (0u ^ (uint(1))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))), ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))))) | ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) * 1u))) | (0u ^ (uint(1))))))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ (uint(1)), (0u ^ (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))))) | (0u ^ (uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) - ivec3(0, 0, 0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uint(uint(1))), _GLF_IDENTITY((uint(uint(uint(1)))), ((uint(uint(uint(1))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))) | _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))))) ^ (uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(1))) + 0u, clamp((0u ^ (uint(1))) + 0u, (0u ^ (uint(1))) + 0u, (0u ^ (uint(1))) + 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0)))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec2(1, 1)))), 0u ^ (uint(1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(1))) | (0u ^ (uint(1))), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (0u ^ (uint(1))) | (0u ^ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), _GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0))))))) : _GLF_FUZZED(clamp(workgroup_size, next_virtual_gid, subgroup_local_id)))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u ^ (uint(1))))), 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))), (_GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), uint(uint(_GLF_IDENTITY(0u ^ (uint(1)), 0u ^ (_GLF_IDENTITY(0u ^ (uint(1)), max(0u ^ (uint(1)), 0u ^ (uint(1)))))))))) | (0u ^ (uint(1))))) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (uint(1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-71700 - 44743)) : _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))), 0u ^ (uint(1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) >> 0u), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_size) : uint(1)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))), (false ? _GLF_FUZZED(workgroup_base) : (0u ^ (uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))))) | (0u ^ (uint(1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), clamp(0u ^ (uint(1)), 0u ^ (uint(1)), _GLF_IDENTITY(0u ^ (uint(1)), (false ? _GLF_FUZZED(workgroup_id) : 0u ^ (uint(1))))))) << (189944u & 0u))) | (0u ^ (uint(1))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))), ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))))) | ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) * 1u))) | (0u ^ (uint(1))))))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ (uint(1)), (0u ^ (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))))) | (0u ^ (uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) - ivec3(0, 0, 0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uint(uint(1))), _GLF_IDENTITY((uint(uint(uint(1)))), ((uint(uint(uint(1))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))) | _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))))) ^ (uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(1))) + 0u, clamp((0u ^ (uint(1))) + 0u, (0u ^ (uint(1))) + 0u, (0u ^ (uint(1))) + 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0)))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec2(1, 1)))), 0u ^ (uint(1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(1))) | (0u ^ (uint(1))), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? (0u ^ (uint(1))) | (0u ^ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), _GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0))))))) : _GLF_FUZZED(clamp(workgroup_size, next_virtual_gid, subgroup_local_id)))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u ^ (uint(1))))), 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))), (_GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), uint(uint(_GLF_IDENTITY(0u ^ (uint(1)), 0u ^ (_GLF_IDENTITY(0u ^ (uint(1)), max(0u ^ (uint(1)), 0u ^ (uint(1)))))))))) | (0u ^ (uint(1))))) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (uint(1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-71700 - 44743)) : _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))), 0u ^ (uint(1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) >> 0u), (0u ^ (uint(1))) | (0u ^ (uint(1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_size) : uint(1)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))), (false ? _GLF_FUZZED(workgroup_base) : (0u ^ (uint(_GLF_IDENTITY(1, clamp(1, 1, 1))))))) | (0u ^ (uint(1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), (_GLF_IDENTITY(0u ^ (uint(1)), clamp(0u ^ (uint(1)), 0u ^ (uint(1)), _GLF_IDENTITY(0u ^ (uint(1)), (false ? _GLF_FUZZED(workgroup_id) : 0u ^ (uint(1))))))) << (189944u & 0u))) | (0u ^ (uint(1))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))), ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1))))))) | ((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) | (0u ^ (uint(1)))))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) * 1u))) | (0u ^ (uint(1))))))))), min(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ (uint(1)), (0u ^ (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))))) | (0u ^ (uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) - ivec3(0, 0, 0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uint(uint(1))), _GLF_IDENTITY((uint(uint(uint(1)))), ((uint(uint(uint(1))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))) | _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))))) ^ (uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ (uint(1)), _GLF_IDENTITY((0u ^ (uint(1))) + 0u, clamp((0u ^ (uint(1))) + 0u, (0u ^ (uint(1))) + 0u, (0u ^ (uint(1))) + 0u)))))))))), (true ? _GLF_IDENTITY(uint(1), 0u ^ _GLF_IDENTITY((uint(1)), ((uint(1))) / (1u | 0u))) : _GLF_FUZZED(virtual_gid))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 0), (ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 0)) + ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 0), (ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 0)) + ivec3(0, 0, 0)))) | 0)), ~ (~ (2))))) + _GLF_IDENTITY(0u, (0u) >> 0u)), min(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], ~ (~ (buf[virtual_gid]))), buf[virtual_gid])) : _GLF_FUZZED((num_workgroup * workgroup_base)))), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) << 0)))), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(2, ~ (~ (2))))) + _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 ^ (64)), 2), (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))) + _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)) * (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (64))) | (64)), 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) + 0u), buf[virtual_gid]), (_GLF_IDENTITY(max(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) + 0u), buf[virtual_gid]), 0u + (max(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) + 0u), buf[virtual_gid])))) << 0u)), 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))) + _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false))))), true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)) > injectionSwitch.y))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
