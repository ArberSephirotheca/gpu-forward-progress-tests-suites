#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uint workgroup_base;
 mat2 _f0;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat4 _f1;
 uvec3 _f2;
 uint _f3;
 bvec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 mat4 _f1;
 mat4x3 _f2;
 uint subgroup_base;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat4x2 _f1;
 uint _f2;
 vec2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat4x3 _f1;
 uint _f2;
 uvec3 _f3;
 uint _f4;
 bvec4 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_9 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec3 _f1;
 mat3 _f2;
 mat3x2 _f3;
 uint num_workgroup;
 uvec3 _f4;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 bvec3 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat3 _f1;
 _GLF_struct_2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) || false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1783.3387))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), tan(log(_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), log(vec2(1.0, 1.0)) + (vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), tan(log(1.0)), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(562.650) : _GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0))))))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))).x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), tan(log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0))), 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), log(vec2(1.0, 1.0)) + (vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), tan(_GLF_IDENTITY(log(1.0), (log(1.0)) / cos(0.0))), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(562.650) : _GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), normalize(1.0), normalize(1.0))), normalize(1.0))))))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))).x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) || false)), bool(bool(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)))))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec2(1), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_struct_2(mat3x4(1.0), _GLF_struct_0(1u, _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-329.475)), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-81.35, -6.8), (true ? vec2(-81.35, -6.8) : _GLF_FUZZED(vec2(-209.001, 5062.7566))))) : (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x))), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), ((1u)) ^ (0u | 0u)))) / 1u)), uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) + uvec3(0u, 0u, 0u)), uvec3(1u))), uvec3(1u)), (max(uvec3(1u), uvec3(1u))) | (max(uvec3(1u), uvec3(1u))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), uvec3(1u)), (max(uvec3(1u), uvec3(1u))) | (max(uvec3(1u), uvec3(1u))))), 1u))))))), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-63.26) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.37)), bool(false))))), 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, exp(0.0))), (float(mat3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(sin(2.0)))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, exp(0.0)))) - 0.0)), 1.0))))), (_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-5.7, 6615.3303, -5.4)) : vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 0.0))))) / determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3(-8469.4913, 40.96, -94.10, -2.4, 1.5, 23.30, 1.8, 44.77, 415.544)) : _GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-27.38)), float(length(vec3(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY((length(vec3(0.0, 0.0, 0.0))), max((length(vec3(0.0, 0.0, 0.0))), (length(vec3(0.0, 0.0, 0.0))))) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(-963.850))))))))), mat3x2(1.0), gl_NumWorkGroups.x, uvec3(1u)), bvec3(true), _GLF_struct_1(ivec3(1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3((_GLF_DEAD(false)), true, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))))), 0u ^ (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), max(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / (1u & 1u)), (workgroup_size))), _GLF_IDENTITY(0u, 1u * (0u)) + (~ (workgroup_size)))), max(_GLF_IDENTITY((~ (workgroup_size)), (true ? (~ (workgroup_size)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((~ (workgroup_size)), ((~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), min(uint(uint(workgroup_size)), uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_size, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(workgroup_size, 1u, 0u, 1u))), (uvec4(workgroup_size, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_size, 1u, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(workgroup_size, 1u, 0u, 1u)), (~ (uvec4(workgroup_size, 1u, 0u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))), (uvec4(workgroup_size, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))) ^ 0u))) | (workgroup_size))))))), 0u, 1u, (0u & 75744u))), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), min(uint(uint(workgroup_size)), uint(uint(workgroup_size))))), 0u, 1u, (0u & 75744u)))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), min(uint(uint(workgroup_size)), uint(uint(workgroup_size))))), 0u, 1u, (0u & 75744u))), (uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), min(uint(uint(workgroup_size)), uint(uint(workgroup_size))))), 0u, 1u, (0u & 75744u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) ^ 0u))) | (~ (workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) | (~ (workgroup_size))))), 0u ^ (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ (workgroup_size))), (~ (workgroup_size)) | (~ (workgroup_size)))))))) / 1u), (true ? _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? workgroup_size : _GLF_FUZZED(workgroup_id)))), ((workgroup_size)) + 0u))))) : _GLF_FUZZED(subgroup_size))) * workgroup_id, mat2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true) || false, ((_GLF_IDENTITY(false, false || (false))) || false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true) || false, ((_GLF_IDENTITY(false, false || (false))) || false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), bool(bvec3((_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! (_GLF_IDENTITY(! (! (false)), bool(bool(! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), false || ((! _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))))))) || false)) && true)))) && true)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(min(-423.797, float(false))))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6882.3892)), float(_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(mat2x4(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6882.3892)), float(_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(mat2x4(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6882.3892)), float(_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(mat2x4(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6882.3892)), float(_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x4(mat2x4(mat2x4(float(_GLF_FUZZED(6882.3892)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)))), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))) / 1.0)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))), vec3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))[2]), vec3(_GLF_FUZZED((-1362.1657)), _GLF_FUZZED(-0.7), _GLF_FUZZED(-356.976)), bvec3(false, false, false))), 1.0, determinant(mat2(0.0, 0.0, 0.0, sqrt(0.0))), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))[0], (vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))[2]), vec3(_GLF_FUZZED((-1362.1657)), _GLF_FUZZED(-0.7), _GLF_FUZZED(-356.976)), bvec3(false, false, false))), 1.0, determinant(mat2(0.0, 0.0, 0.0, sqrt(0.0))), 0.0))))))), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1783.5440), _GLF_FUZZED((+ 1.3))), vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(_GLF_IDENTITY(mat3x2(((injectionSwitch))[0], 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (true ? mat3x2(((injectionSwitch))[0], 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(mat3x2(7.5, -1.6, -2.2, 9766.6223, 7579.1006, 8410.2685)))))), ((injectionSwitch))[1]), bvec2(true, true))) - vec2(0.0, 0.0)).x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))) / 1.0)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(mat3(1.0), mat4x3(1.0), 1u, uvec3(1u), 1u, bvec4(true), _GLF_struct_4(vec4(1.0), ivec2(1))), _GLF_struct_9(_GLF_struct_6(1u, mat4x2(1.0), 1u, vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.3)), mix(float(float(_GLF_FUZZED(-7.3))), float(_GLF_FUZZED((+ -0.6))), bool(false))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_struct_7(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.3)), float(1.0), bool(true))))), 1.0))), transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))))), mat4(1.0), mat4x3(1.0), subgroup_id * subgroup_size), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (true), (! (true)) || false))), mat4(1.0), uvec3(1u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), vec4(_GLF_IDENTITY(1.0, (1.0) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 1.0))))), _GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))))), vec3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false), false))), true))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_11.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_10._f1._f1.subgroup_base, (_GLF_struct_replacement_10._f1._f1.subgroup_base) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-2397.4330), (true ? injectionSwitch.y : _GLF_FUZZED(-2397.4330)) - 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_11.workgroup_base, _GLF_IDENTITY(max(_GLF_struct_replacement_11.workgroup_base, _GLF_struct_replacement_11.workgroup_base), uint(uint(max(_GLF_struct_replacement_11.workgroup_base, _GLF_struct_replacement_11.workgroup_base))))) + _GLF_struct_replacement_10._f1._f1.subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size)))) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), false || _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, bool(bvec4((_GLF_IDENTITY(false, true && (false))) || false, true, _GLF_IDENTITY(false, ! (! (false))), false)))), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), false, false)))), ! (! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), false, false)))), (! ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))) && true)))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), false, false)))), (! ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), false, false)))), (! ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))) && true)), ((_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), false, false)))), (! ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))) && true))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, true, true)), true && (bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))), true, true, true))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), true && (! ((_GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))), (uint(1)) / 1u), 0u), (uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u)) | uvec2(0u, 0u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_FUZZED(-9.1)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), 0u + (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u))), (~ (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(virtual_gid, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) / 1u)))))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec2(ivec2((64), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))))) | (64), _GLF_IDENTITY(((64) | (64)) << 0, min(_GLF_IDENTITY(((64) | (64)) << 0, (true ? _GLF_IDENTITY(((64) | (64)) << 0, clamp(((64) | (64)) << 0, ((64) | (64)) << 0, ((64) | (64)) << 0)) : _GLF_FUZZED(60689))), _GLF_IDENTITY(((64) | (64)) << 0, ~ (~ (((64) | (64)) << 0))))))), (true ? _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec2(ivec2((64), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (64), ((64) | (64)) << 0)), (0 | (_GLF_IDENTITY(_GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec2((64), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec2(ivec2((64), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (64), ((64) | (64)) << 0))) ^ (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(70805))))), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
