#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, false, true))), ! (! ((bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, false, true)))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))), true && (((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! ((_GLF_IDENTITY(false, true && (false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! ((_GLF_IDENTITY(false, true && (false))))))))), false, true)))))))))), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))), true && (((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! ((_GLF_IDENTITY(false, true && (false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! ((_GLF_IDENTITY(false, true && (false))))))))), false, true)))))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))), true && (((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bool(bool(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))) && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! ((_GLF_IDENTITY(false, true && (false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! ((_GLF_IDENTITY(false, true && (false))))))))), false, true))))))))))))), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(1.0, sqrt(0.0)))) * (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-684.342)))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))), bool(bvec4(_GLF_DEAD(false), false, false, true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), (bool(bvec4(_GLF_DEAD(false), false, false, true))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) || false))), bool(bool(! (! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) || false)))))))), true)))))), true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), 1.0))))))))), (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), max(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0))))))))), mix(float(_GLF_FUZZED(-3.6)), float(float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))), bool(true))))), mix(float(_GLF_FUZZED(9.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), 1.0))))))))), (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), max(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0))))))))), mix(float(_GLF_FUZZED(-3.6)), float(float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))), bool(true))))), min(_GLF_IDENTITY(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), 1.0))))))))), (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), max(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0))))))))), mix(float(_GLF_FUZZED(-3.6)), float(float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))), bool(true))))), _GLF_IDENTITY(float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), 1.0))))))))), (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), max(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0)))))), vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), log(1.0) + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 0.0)))), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true)))))) / 1.0), 0.0, 0.0)), 1.0, 1.0))))))))), mix(float(_GLF_FUZZED(-3.6)), float(float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))), bool(true)))))))), bool(true)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0)))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))))) / 1.0))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4131.1712)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)))), bool(true))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0)))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))))) / 1.0))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4131.1712)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)))), bool(true)))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true, true))))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true, true))))) || false))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)))), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, true)))))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, exp(0.0))), (vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, exp(0.0)))) / vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x))), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x))), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x))), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))) || (false))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), clamp(vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))), vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))), vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), vec2(_GLF_FUZZED(-45.98), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763))), (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-4493.6763)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-231.124)), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, (false ? _GLF_FUZZED(num_workgroup) : 0u ^ 0u))), max((0u ^ 0u), (0u ^ 0u)))), (((_GLF_IDENTITY(0u, (0u) + 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))), uint(4u))), uint(4u))) * (0u))))) - 0u) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((0u ^ 0u), max((0u ^ 0u), (0u ^ 0u)))), (((_GLF_IDENTITY(0u, (0u) + 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))) * (0u))))) - _GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY((0u ^ 0u), max((0u ^ 0u), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | (0u ^ 0u)))))))), (((_GLF_IDENTITY(0u, (0u) + 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))) * (0u), clamp(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))) * (0u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))) * (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))) * (0u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))) * (0u))))))) - 0u) | 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupSize), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupSize), (uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupSize), (uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(166864u, 190693u, 95139u))))))) - uvec3(0u, 0u, 0u))) << uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)))), _GLF_IDENTITY(0u, 0u | (0u)))).x), (_GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)) ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))))))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)) : _GLF_FUZZED(uvec3(89790u, 176671u, 172747u)))).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uint(gl_WorkGroupSize.x)), (uint(uint(gl_WorkGroupSize.x))) | (uint(uint(gl_WorkGroupSize.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uint(gl_WorkGroupSize.x)), _GLF_IDENTITY((uint(uint(gl_WorkGroupSize.x))), ((uint(uint(gl_WorkGroupSize.x)))) | 0u) | (uint(uint(gl_WorkGroupSize.x)))))) >> 0u))) ^ (0u | _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u)))) | ((gl_WorkGroupSize.x))) - 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, false)))), true)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), false, true))), ! (! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), false, true))), false || (! (bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), false, true))))))))))), false, true)))), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), true)), true, true))))), _GLF_IDENTITY(false, true && (false)), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool((false)), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bool((false)), true)))), false, false))))))), true, true))))), false, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false))))), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool((false)), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bool((false)), true)))), false, false))))))), true, true))))), false, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false))))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool((false)), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bool((false)), true)))), false, false))))))), true, true))))), false, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false))))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))), true)), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))))), false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec2(bvec2(bvec2(bool((false)), true))))), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec2(bvec2(bvec2(bool((false)), true))))), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool((false)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool((false)), true)), bvec2(bvec2(bvec2(bvec2(bool((false)), true))))), bvec2(bvec4(bvec2(bvec2(bool((false)), true)), true, true))))), false, false))))))))))), true, false)), true))))))))) || false), ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, round(length(normalize(cos(vec2(0.0, 0.0))))), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 1u, 1u))) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true)))))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))))), ! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0)))))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))) << 0u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), (true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) : _GLF_FUZZED(85598u))) - 0u)))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (1))) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)), 0u | (min((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)) + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))) + 0u)), ((subgroup_local_id + 1) % subgroup_size)), 0u | (min(((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, 1)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) / 1u)) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))) + 0u)), ((subgroup_local_id + 1) % subgroup_size)), 0u | (min(((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, 1)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) / 1u)) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))) + 0u)), ((subgroup_local_id + 1) % subgroup_size)), 0u | (min(((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, 1)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) / 1u)) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))) + 0u)), ((subgroup_local_id + 1) % subgroup_size)), 0u | (min(((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, 1)))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) / 1u)) >> 0u)))) ^ 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))], (buf[virtual_gid]) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 0u))), (0u & 106244u) ^ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 0u))))))), 0u ^ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u)))))), ((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u))))))) | 0u) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u)))))), ((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u))))))) | 0u) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u)))))), ((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) | (uvec2(buf[virtual_gid], 0u))))))) | 0u) : _GLF_FUZZED(subgroup_local_id)))) / 1u)) ^ 0u)))), _GLF_IDENTITY(4, (0 ^ 0) | (4)), 64, _GLF_IDENTITY(2, (2) ^ 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 1))), int(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))) : _GLF_FUZZED(-7496))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 1))), int(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))) : _GLF_FUZZED(-7496))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 1))), int(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))) : _GLF_FUZZED(-7496))))))), 64, 4);
}
