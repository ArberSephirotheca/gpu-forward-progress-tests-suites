#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) || false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), (! (! (bool(_GLF_DEAD(false))))) && true)), true)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), (! (! (bool(_GLF_DEAD(false))))) && true)), true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(662.025) : 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)), 1.0, 0.0, tan(determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9846.8115)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-33.42)), vec2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], 1.0 * ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0])), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-1.5, -485.931)) : _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y)))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, -40.28)) : injectionSwitch)).y)))))) || false)), true, true)))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2555.8891), _GLF_FUZZED((- -4161.3389))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))) << uvec3(0u, 0u, 0u))), ((uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) + (gl_NumWorkGroups))[2], ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, ~ (~ (2)))], (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups[2]))) | (_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)))))))[2], (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))[2]) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], max(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec4(gl_NumWorkGroups[2], 1u, 1u, 1u)))) / 1u), gl_NumWorkGroups[2]))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups[2], max(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec4(gl_NumWorkGroups[2], 1u, 1u, 1u)))) / 1u), gl_NumWorkGroups[2])))))) ^ 0u)) >> 0u)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[2], (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[2])), (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[2], (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups[2]))) / 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) >> 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) >> _GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) >> 0u), (min((_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) >> _GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) >> 0u)) ^ 0u))))))) - 0u), (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))[2])) | (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]) >> 0u)), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), max(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))) << _GLF_IDENTITY(0u, (0u) >> 0u)))), min((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(4582u, 82147u, 147407u))))[2]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))[_GLF_IDENTITY(2, (2) - 0)], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(97120u, 26924u, 8657u)))), gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 1u)), (uvec3(uvec4(gl_NumWorkGroups, 1u))) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 1u)), (uvec3(uvec4(gl_NumWorkGroups, 1u))) / uvec3(1u, 1u, 1u))))), gl_NumWorkGroups))[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), min(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-26927))))))), (false ? _GLF_FUZZED(-46418) : _GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-26927)))))))))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))))[_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 ^ (2)), 2))))]))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[2], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[2])), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))))))))[2])))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), 0u + (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))), false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (true ? 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2]) : _GLF_FUZZED(subgroup_size)))))))) >> _GLF_IDENTITY(0u, ~ (~ (0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[_GLF_IDENTITY(2, (2) ^ (0 | 0))]))), min((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (max(gl_NumWorkGroups, gl_NumWorkGroups))))))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))))) / uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))[2])), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5))))))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ ((2)), 0 ^ (~ ((2)))))))) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((bvec2(true, true) , 179053u)) : 1u)), 1u))))[2]))) ^ 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), 0u + (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups))[_GLF_IDENTITY(2, min(2, 2))]))))), uint(uvec3((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2], _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), ((uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) << 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) ^ 0u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) ^ 0u))))) | (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) ^ 0u))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))[2])), (1u ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])) : _GLF_FUZZED(165020u))), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))))) >> 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), ~ (~ (gl_NumWorkGroups)))[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))[2]))), min((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * (uvec3(1u, 1u, 1u) | uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(1u, (1u) - 0u), 1u))), gl_NumWorkGroups))[2], (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * (uvec3(1u, 1u, 1u) | uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(1u, (1u) - 0u), 1u))), gl_NumWorkGroups))[2]) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) ^ 0)], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) << 0u)), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((2) - (0 << _GLF_IDENTITY(int(5), int(5))), ((2) - (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(78170) : _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(5), int(5)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))))[2]), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))))[2])))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (max(gl_NumWorkGroups, gl_NumWorkGroups)))))[2])))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))), ~ (~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))) >> 0u))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), min(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), min(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), min(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))), min((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), clamp(_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), gl_NumWorkGroups)) * uvec3(1u, 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups), max(gl_NumWorkGroups, gl_NumWorkGroups)))) | (max(gl_NumWorkGroups, gl_NumWorkGroups))))[2]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), 0u + (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (false ? _GLF_FUZZED(187891u) : 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[_GLF_IDENTITY(2, ~ (~ (2)))], clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[_GLF_IDENTITY(2, ~ (~ (2)))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[_GLF_IDENTITY(2, ~ (~ (2)))], (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[_GLF_IDENTITY(2, ~ (~ (2)))]) * (1u & 1u)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[_GLF_IDENTITY(2, ~ (~ (2)))])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2]), clamp((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2]), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2]), 0u | ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2]), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2]))))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))) : _GLF_FUZZED(bitfieldExtract(subgroup_id, -62797, -88930)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) / 1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u + (0u)) : _GLF_FUZZED(packHalf2x16(vec2(-5187.3787, -8.9))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups[2])), 0u))), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), gl_NumWorkGroups)), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[_GLF_IDENTITY(2, min(2, 2))]), 0u | ((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[2]))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(27239u, 99537u, 175494u).rbg)))[2])))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (true ? uvec3(gl_NumWorkGroups) : _GLF_FUZZED((uvec3(57796u, 190727u, 115218u))))))) / uvec3(1u, 1u, 1u))), gl_NumWorkGroups))[2])))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), max((false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))))) | 0u))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(80847) : 2))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), uint(uvec3(0u, 1u, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) | 0)], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), min((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))[2]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) | _GLF_IDENTITY((0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[2])), ((0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))[2]))) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[_GLF_IDENTITY(2, 0 | (2))])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(uvec3(uvec3(gl_NumWorkGroups)))))), gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY((2) - (0 << _GLF_IDENTITY(int(5), int(5))), ((2) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(46869)))), int(5)))) | 0))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[2], (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[2]))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)))))[2]), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)))))[2])) ^ 0u)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))], clamp(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))], gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), min((_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))[2], uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u)))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, 0 + (2)))), 2)), 2))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 0u)))[2])) + 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))[2], uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u)))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, 0 + (2)))), 2)), 2))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 0u)))[2])) + 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))[2], uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))) / 1u)))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])) | (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, 0 + (2)))), 2)), 2))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 0u)))[2])) + 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))))[2]))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-5420)))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))) >> _GLF_IDENTITY(0u, (0u) >> 0u), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))))[2]))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-5420)))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))))[2]))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-5420)))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(5), int(5))))], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))))[2]))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))), (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-5420)))], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups[2], 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, (0u) >> 0u)))) << (0u ^ 0u))) / (1u ^ 0u))))))), _GLF_IDENTITY((~ (gl_NumWorkGroups[2])) - 0u, (_GLF_IDENTITY((~ (gl_NumWorkGroups[2])) - 0u, ((~ (gl_NumWorkGroups[2])) - 0u) << 0u)) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(132886u, 187711u, 141633u)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(132886u, 187711u, 141633u))))) + uvec3(0u, 0u, 0u))[2])) - 0u))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), exp(0.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / round(length(normalize(vec2(1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))))) ? 1.0 : _GLF_FUZZED(34.97))), min(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(34.97))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(34.97))))), 1.0)), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * (_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat2x4(injectionSwitch, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-7979.7714)), float(injectionSwitch.x), bool(true)))), 1.0 * (min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(-7979.7714)), float(injectionSwitch.x), bool(true)))))))), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(5389.3699, -0.6, 5692.7085, -36.96, -2.6, 28.56, 3.3, -6.5, -1.7))) : 0.0))), exp(0.0))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0), (mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(5389.3699, -0.6, 5692.7085, -36.96, -2.6, 28.56, 3.3, -6.5, -1.7))) : 0.0))), exp(0.0))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(6.0)), vec2(_GLF_FUZZED(-3.4), (vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6095.0124)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(refract(-5.0, 8.2, 22.71)) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))), 1.0, 1.0)))[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(false, true), false, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) && true)), true)))))))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), exp(0.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / round(length(normalize(vec2(1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))))) ? 1.0 : _GLF_FUZZED(34.97))), min(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(34.97))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(34.97))))), 1.0)), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * (_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat2x4(injectionSwitch, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-7979.7714)), float(injectionSwitch.x), bool(true)))), 1.0 * (min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x)), 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(-7979.7714)), float(injectionSwitch.x), bool(true)))))))), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(5389.3699, -0.6, 5692.7085, -36.96, -2.6, 28.56, 3.3, -6.5, -1.7))) : 0.0))), exp(0.0))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0), (mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(5389.3699, -0.6, 5692.7085, -36.96, -2.6, 28.56, 3.3, -6.5, -1.7))) : 0.0))), exp(0.0))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(6.0)), vec2(_GLF_FUZZED(-3.4), (vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6095.0124)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(refract(-5.0, 8.2, 22.71)) : 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))), 1.0, 1.0)))[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(false, true), false, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) && true)), true)))))))).x : _GLF_FUZZED(-50.17))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, round(length(normalize(1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(607.160))), 0.0, 1.0, 1.0, abs(0.0), sqrt(0.0))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, false || (true)))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(607.160))), 0.0, 1.0, 1.0, abs(0.0), sqrt(0.0))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, false || (true)))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) && true)))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u))) | (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u)))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u))) / 1u)), _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | 0u))).x), 1u * ((gl_WorkGroupID.x))), 1u))) | 0u)), ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupID.x))) | 0u))))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u))) | (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u)))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u))) / 1u)), _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | 0u))).x), 1u * ((gl_WorkGroupID.x))), 1u))) | 0u)), ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupID.x))) | 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u))) | (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u)))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), 1u, 1u))) / 1u)), _GLF_IDENTITY((gl_WorkGroupID.x), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | 0u))).x), 1u * ((gl_WorkGroupID.x))), 1u))) | 0u)), ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupID.x))) | 0u))))))))) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -38.91))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) || false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(vec3(57.66, -51.05, 67.73).y))) > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)), min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), min(subgroup_size, subgroup_size))) | 0u)), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), min(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), next_virtual_gid)), 1u * (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))))))) - _GLF_IDENTITY(0u, min(0u, 0u)))) - 0u, min((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))))) - 0u)) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))) - 0u), uint(uvec3(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))) - 0u), (1u ^ 0u), 0u)))) - 0u)), max((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u, _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, ((next_virtual_gid) - 0u) - 0u))) - 0u, max((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - _GLF_IDENTITY(0u, (0u) - 0u))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, ((next_virtual_gid) - 0u) - 0u))) - 0u, max((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - _GLF_IDENTITY(0u, (0u) - 0u))) : _GLF_FUZZED(subgroup_id))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u, ((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, (_GLF_IDENTITY((next_virtual_gid) - 0u, ((next_virtual_gid) - 0u) | (_GLF_IDENTITY((next_virtual_gid) - 0u, ((next_virtual_gid) - 0u) << 0u)))) * 1u))) - 0u) / 1u)))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), (_GLF_IDENTITY(num_workgroup, uint(uvec2(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), 0u)))) + 0u))))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0)) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0)))) : _GLF_FUZZED(-51346))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0)) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0)))) : _GLF_FUZZED(-51346))))), (int(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0)) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))))) - 0)))) : _GLF_FUZZED(-51346)))))) * 1)) << 0))), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (! (true))) ? 64 : _GLF_FUZZED(_GLF_IDENTITY(-1845, _GLF_IDENTITY(int(int(-1845)), int(ivec3(int(int(-1845)), 0, 0))))))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)))), _GLF_IDENTITY(4, (4) >> 0));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), (true ? vec3(injectionSwitch.y, 1.0, 0.0) : _GLF_FUZZED(vec3(7.7, -62.70, -769.215)))))), injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) ^ 0u), 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0)), (false ? _GLF_FUZZED(83812) : int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0))))) * (0), (1 * (0)) | (_GLF_IDENTITY(1 * (0), min(1 * (0), 1 * (0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0)), (false ? _GLF_FUZZED(83812) : int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0))))) * (0), (1 * (0)) | (_GLF_IDENTITY(1 * (0), min(1 * (0), 1 * (0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0)), (false ? _GLF_FUZZED(83812) : int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0))))) * (0), (1 * (0)) | (_GLF_IDENTITY(1 * (0), min(1 * (0), 1 * (0)))))), int(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0)), (false ? _GLF_FUZZED(83812) : int(ivec3(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (0 ^ 1), 0))))) * (0), (1 * (0)) | (_GLF_IDENTITY(1 * (0), min(1 * (0), 1 * (0)))))), 0))))))))), int(ivec2(max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (1 * (0)) | (1 * (0))))), 1)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec2(_GLF_IDENTITY(int(1), int(1)), 0)))) >> _GLF_IDENTITY(int(1), int(1))))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) << 0)) | 0), int(ivec2(4, 0))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(-45497) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(4, (4) << 0))), int(_GLF_IDENTITY(ivec2(4, 0), max(ivec2(4, 0), ivec2(4, 0))))))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false)))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)) && true)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
