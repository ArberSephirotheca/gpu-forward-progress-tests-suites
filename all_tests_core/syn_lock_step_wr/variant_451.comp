#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(85203u, 175990u, 75992u)), (true ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(85203u, 175990u, 75992u)), (_GLF_FUZZED(uvec3(85203u, 175990u, 75992u))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(171964u, 87785u, 137502u)))) : gl_NumWorkGroups))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 1.0, 1.0))), injectionSwitch[1])))).x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), uvec3(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-497.178) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0u))))), (false ? _GLF_FUZZED(uvec3(31227u, 167664u, 72522u)) : uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), 0.0)), injectionSwitch.x))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), ((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(-6.6))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec3(1u, 1u, 1u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))) | uvec3(0u, 0u, 0u))))))))) * uvec3(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u, 1u)))).x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))) * 1u))), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))), 0u ^ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))))) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(9.9)), bool(false)))), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true))))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), float(mat4x3(exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), exp(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), sqrt(exp(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true))))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), float(mat4x3(exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), exp(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), sqrt(exp(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, sqrt(exp(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0))))), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), mix(float(_GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(1.0)), bool(false))), 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, sqrt(abs(0.0))))), 0.0)), mix(float(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(9.9)), bool(false)))), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true))))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), float(mat4x3(exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), exp(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, max((1.0) * 1.0, (1.0) * 1.0))), 1.0, 1.0)), sqrt(exp(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true))))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), float(mat4x3(exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), exp(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), sqrt(exp(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, sqrt(exp(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0))))), 0.0))))) / vec2(1.0, 1.0)).y))))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
        break;
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), ! (! (false || (_GLF_WRAPPED_LOOP(false)))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), ! (! (false || (_GLF_WRAPPED_LOOP(false)))))) || false)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY(false, (false) || false) || (_GLF_WRAPPED_LOOP(false)))))) || false))) && true))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, false)))) || false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (! (true))))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), false || ((! (true))))) && true) && true)), true && (bool(_GLF_IDENTITY(! (true), (! (true)) && true))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! _GLF_IDENTITY((_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))), ((_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true))))))))) && true))))), (! (true)) && true)), true && (bool(_GLF_IDENTITY(! (true), (! (true)) && true)))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), true, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), true, false))))) && true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (! (! (true))))), ! (! (bool(bool(! (! (! (true))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool(bool(! (! (! (true))))), ! (! (bool(bool(! _GLF_IDENTITY((! (! (true))), ! (! ((! (! (true)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))), ! (! _GLF_IDENTITY((bool(bool(! (! (! (true)))))), true && (_GLF_IDENTITY((bool(bool(! (! (! (true)))))), false || ((bool(bool(! (! (! (true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, false, _GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), false || ((! (true))))) && true) && true)), true && (bool(_GLF_IDENTITY(! (true), (! (true)) && true))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! _GLF_IDENTITY((_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))), ((_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true))))))))) && true))))), (! (true)) && true)), true && (bool(_GLF_IDENTITY(! (true), (! (true)) && true)))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), true, false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))), false), true, false))))) && true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (! (! (true))))), ! (! (bool(bool(! (! (! (true))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool(bool(! (! (! (true))))), ! (! (bool(bool(! _GLF_IDENTITY((! (! (true))), ! (! ((! (! (true)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))), ! (! _GLF_IDENTITY((bool(bool(! (! (! (true)))))), true && (_GLF_IDENTITY((bool(bool(! (! (! (true)))))), false || ((bool(bool(! (! (! (true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)), true && (bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))), (! (true)) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false))))), true && (bool(_GLF_IDENTITY(! (true), (! (true)) && true))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)), true && (bool(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))) && true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bool(! (! (! (true))))), false || (bool(bool(! (! (! (true))))))))), (! (_GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bool(! (! (! (true))))), false || (bool(bool(! (! (! (true)))))))))) && true))), _GLF_IDENTITY(bool(bool(! (! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (! (true))))), true && (_GLF_IDENTITY(bool(bool(! (! (! (true))))), true && (_GLF_IDENTITY(bool(bool(! (! (! (true))))), ! (! (bool(bool(! (! (! (true)))))))))))), ! (! (bool(bool(! (! (! (true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (! (true))))) && true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)) || false)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(tan(0.0)), 1.0, 0.0, 0.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, exp(tan(0.0)), 1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(tan(0.0)), 1.0, 0.0, 0.0, 1.0))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / abs(vec2(1.0, 1.0))).x) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, cos(0.0)))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), false || _GLF_IDENTITY(((true)), bool(_GLF_IDENTITY(bvec2(((true)), false), bvec2(bvec4(bvec2(((true)), false), false, false))))))) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, (true) && true) && (! (true))), true))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), (bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))) || false), bool(bool(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true)))), (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false))))))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(length(384.623)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0, 1.0, exp(tan(0.0)), 1.0, 0.0, 0.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, exp(tan(0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), transpose(transpose(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(tan(0.0)), 1.0, 0.0, 0.0, 1.0))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), false || ((true)))) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (true))), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))))), true)))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true))))))))), true, false, false))))))))))), false || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat3(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), 0.0), (mat3(0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat3(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(tan(0.0)), 1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4x3(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0))), 1.0, 0.0, 0.0, 1.0))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))), (true ? vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))) : _GLF_FUZZED(vec2(-2.7, -8.6))))))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), false || ((true)))) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec4((true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), true && (! (true))), true))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))), false))))))))) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true))))))))), true, false, false))))))))))))), false))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec3(! ((true)), false, false))))) || false)), _GLF_IDENTITY(true, false || (true)) && (! (true))), true)), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec3(! ((true)), false, false))))) || false)), _GLF_IDENTITY(true, false || (true)) && (! (true))), true)), true)))))), (! ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec3(! ((true)), false, false))))) || false)), _GLF_IDENTITY(true, false || (true)) && (! (true))), true)), true))))))) && true))), (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)), ! (! (bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true))))))))), _GLF_IDENTITY(true, ! (! (true))))), true)))))) && _GLF_IDENTITY(true, (true) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))), true && (! (true))), true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), true && (! ((true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true)))))), true && (! ((true))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), false || (! ((true)))), true && (! ((true))))))))))), true && (! (true))), _GLF_IDENTITY(true, (true) && true)))))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))), true && (! (true))), true)))), ! (! (! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), true && (! ((true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true)))))), true && (! ((true))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), false || (! ((true)))), true && (! ((true))))))))))), true && (! (true))), _GLF_IDENTITY(true, (true) && true))))))))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(bvec4(bvec3((true), true, false), true))))), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(bvec4(bvec3((true), true, false), true))))), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true))))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))))), (! ((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))))))) && true)))))))) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), false || ((true)))) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false)))), false || (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false)))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), true && (true && (! (true))))), true), true))))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, (true) && true) && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))))))))))))))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true))))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))))))))))))))) && true), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && _GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true))))), true), true))))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), true)), false || (bool(bvec2((true), true))))), true && (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), (_GLF_IDENTITY(! (true), true && (! (true)))) && true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), true && (! (true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (! (true))), false || (bool(true && (! (true)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(true && (! (true))), false || (bool(true && (! (true)))))), true))))), true), true)))))))))))))))))))) && true)) || false))))))) && true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1))))) | 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1))))) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1))))) | 0))), max(~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1))))) | 0))), ~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1))))) | 0))))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), ~ (~ (int(1))))) | 0))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false), (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * (_GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(-439.346)))) / 1.0))))) - 0.0)))))), bool(bool((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * (_GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(-439.346)))) / 1.0))))) - 0.0)))))))))))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(90.10) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), float(vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))))).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true))) && (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.4)), bool(false)))) / 1.0)))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-36.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! ((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))) || false))))))), bool(bool(! ((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))) || false))))))))))) && true))))), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), sqrt(1.0))), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), sqrt(1.0)))) + 0.0)), mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, 0.0 + (0.0)), sin(0.0), sqrt(1.0), 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), cos(0.0)))).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-942.146))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))))) || false)))))), false, _GLF_IDENTITY(true, ! (! (true))), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), sqrt(1.0))), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), sqrt(1.0)))) + 0.0)), mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, 0.0 + (0.0)), sin(0.0), sqrt(1.0), 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), cos(0.0)))).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-942.146))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))))) || false)))))), false, _GLF_IDENTITY(true, ! (! (true))), false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), sqrt(1.0))), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), sqrt(1.0)))) + 0.0)), mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, 0.0 + (0.0)), sin(0.0), sqrt(1.0), 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), cos(0.0)))).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-942.146))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))))) || false)))))), false, _GLF_IDENTITY(true, ! (! (true))), false))))), false, true, false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(163877u, (_GLF_IDENTITY(163877u, min(163877u, 163877u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_size)))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(163877u, (_GLF_IDENTITY(163877u, min(163877u, 163877u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_size)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), 0u, 1u))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED((workgroup_size - 198870u)))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), ~ (~ (subgroup_local_id))) + 1) % subgroup_size), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))) + 1) % subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)), max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) / (1u & 1u)))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) * 1u)))))) / (_GLF_IDENTITY(1u, (1u) | (1u)) & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) * 1u)))))) / (_GLF_IDENTITY(1u, (1u) | (1u)) & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), ~ (~ ((false ? _GLF_FUZZED(workgroup_id) : false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) * 1u)))))) / (_GLF_IDENTITY(1u, (1u) | (1u)) & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))))) : _GLF_FUZZED(num_workgroup)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))) * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) + 1)) + 0u) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size)), 0u + (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))))) + 1), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) << 0u) % subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 1))), ((subgroup_local_id + 1)) << 0u) % subgroup_size)), _GLF_IDENTITY(0u + (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : 0u + (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size))))))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size))))))) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 1u, 0u)), min(uint(uvec4(subgroup_size, 1u, 1u, 0u)), uint(uvec4(subgroup_size, 1u, 1u, 0u)))))) * 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) : workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), max(~ ((subgroup_id)), ~ ((subgroup_id)))))) / 1u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) / (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) & 1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)) : _GLF_FUZZED(112570u), 0u | (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)) : _GLF_FUZZED(_GLF_IDENTITY(112570u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(112570u, 0u)), max(uint(uvec2(112570u, 0u)), uint(uvec2(112570u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec2(112570u, 0u)), (uint(uvec2(112570u, 0u))) | (uint(uvec2(112570u, 0u)))), uint(uvec2(112570u, 0u)), uint(uvec2(112570u, 0u)))))), min(true ? _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)) : _GLF_FUZZED(_GLF_IDENTITY(112570u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(112570u, 0u)), max(uint(uvec2(112570u, 0u)), uint(uvec2(112570u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec2(112570u, 0u)), (uint(uvec2(112570u, 0u))) | (uint(uvec2(112570u, 0u)))), uint(uvec2(112570u, 0u)), uint(uvec2(112570u, 0u)))))), true ? _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)) : _GLF_FUZZED(_GLF_IDENTITY(112570u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(112570u, 0u)), max(uint(uvec2(112570u, 0u)), uint(uvec2(112570u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec2(112570u, 0u)), (uint(uvec2(112570u, 0u))) | (uint(uvec2(112570u, 0u)))), uint(uvec2(112570u, 0u)), uint(uvec2(112570u, 0u))))))))))))], 4, 64, 0);
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false)) || false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))) || false, false), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))) || false, false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))) || false, false), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false), false))), true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))) || false, false), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))) || false, false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))) || false, false), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false), false))), true, false))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_DEAD(false))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))) || false, false), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))) || false, false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))) || false, false), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false), false))), true, false))))), false))), false)))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
